SECTION: Addressing the Readout Problem in Quantum Differential Equation Algorithmswith Quantum Scientific Machine Learning

Quantum differential equation solvers aim to prepare solutions as-qubit quantum states over a fine grid ofpoints, surpassing the linear scaling of classical solvers. However, unlike classically stored vectors of solutions, the readout of exact quantum states poses a bottleneck due to the complexity of tomography. Here, we show that the readout problem can be addressed with quantum learning tools where we focus on distilling the relevant features.
Treating outputs of quantum differential equation solvers as quantum data, we demonstrate that low-dimensional output can be extracted using a measurement operator adapted to detect relevant features.
We apply this quantum scientific machine learning approach to classify solutions for shock wave detection and turbulence modeling in scenarios where data samples come directly from quantum differential equation solvers. We show that the basis chosen for performing analysis greatly impacts classification accuracy. Our work opens up the area of research where quantum machine learning for quantum datasets is inherently required.

Introduction.—Extending the algorithmic toolbox and potential application areas ofquantum computing(QC) represents an ongoing challenge for the community[1,2]. There has been significant progress in the domain of materials science[3,4,5,6], high-energy physics[7,8], and chemistry[9,10,11,12], with potential applications in the pharmaceutical industry[13,14]. Financial analysis[15,16]and optimization[17]have also attracted attention. While in each case there are hard instances to calculate, the largest workload of high-performance computing comes from solving differential equations (computational fluid dynamics and alike), reaching exascale[18,19,20]. This makes scientific computing an important target area for quantum algorithmic speed-up[21].

Motivated by the proposals for quantum linear solvers and the HHL algorithm[22,23], variousQC-based solvers forpartial differential equationshave been developed[24,25,26,27,28,29], and expanded to linear combination of unitaries (LCU)-based solvers[30,31], quantum signal processing (QSP)-based solvers[32,33], adiabatic approaches[34,35,36], quantum lattice Boltzmann methods[37,38,39,40,41,42], and quantum iterative solvers[43,44,45,46,47]. One important feature of all these methods is that they solve aquantumversion of the linear equations problem (and correspondingPDEs), where the resulting solution is a quantum state of a-qubit register.
Reading out the full classical solution from these quantum states with tomography techniques in general scales exponentially with system size, making it prohibitive[48]. Shadow tomography is an appropriate technique for some cases but for generic solutions toPDEs, the quantum states can be entangled and complicated to process with a large shadow norm[49,50,51]. This represents the readout problem for quantum linear algebra algorithms[52]. While noted early on and discussed in the original HHL paper[22], the proposed mitigation to the readout problem is in measuringsome-local observable. This implies an understanding of what shall be measured. In fact, measuring certain observables can remove the exponential quantum advantage gained from inverting thePDE[53]. Extracting quantities such as principal components or high-order statistics can be done efficiently[54]but do not always correspond to the required information. Therefore, the readout problem represents an open challenge for useful scientific computing on quantum devices.

QML aims to build tailored quantum circuits for analyzing data on quantum computers[52,55]. Over the years the target ofquantum machine learning(QML) evolved from reaching a computational advantage in analyzing Big Data[56,57,58], being a distant goal due to the classical data loading bottleneck[59,60], to the optimization-based search of optimal measurement strategies in feature spaces[61,62,63]. Based on adaptive circuit compilation, potential benefits ofQMLmodel building include largely increased model expressivity[62,64,65]and quantum-native sampling that favors generative modeling[66,67,68,69,70,71,72]. Applied to the domain of scientific computing, quantum scientific machine learning (QuaSciML) has emerged as a subfield ofQMLfor solving problems based on differential equations via physics-informed modeling[73,74,75,76,77,78,79]. For models based on parametrized measurements this, by design, relaxes strict conditions for reading out the solutions and handling nonlinear terms[73,69]. HoweverQML-based modeling meets hurdles in the variational search, as trainability competes with expressivity[80].

While overcoming barren plateaus[81,82]remains a challenge addressed from different angles[83,84,85,86,87], one mode of operation has emerged as a prime beneficiary—whenQMLis applied toquantumdata[88,89]. Quantum data represents states (density operators) prepared on quantum devices and supplied for QML-based processing (e.g. classification). This naturally favors QML in cases where shadow tomography is not applicable[87], and offers drastically improved generalization[88,90,91,92,93,94,95]. However, how to get and distribute quantum data sets from physical experiments remains a puzzle.

In this work, we propose to address the readout problem of quantum differential equation solvers by using them as a source of quantum data. We demonstrate how aQuaSciMLworkflow can be adopted for classifying quantum solutions fromPDEsolvers, and learning relevant features (unlike plotting full solutions). Specifically, we show results from twoCFDproblems: the classification of wave solutions obtained from the Burgers equation, and flow regimes from the Navier-Stokes equations. These results show howQuaSciMLcan extract relevant information, build a problem-specific measurement operator, and highlight the influence of the chosen basis when analyzing solutions.

We note that within the field ofCFD,machine learning(ML) for classification is successfully adopted, motivating the exploration ofQuaSciMLcapabilities. For example,convolutional neural networkswere applied to enhance turbulence modeling by distinguishing between laminar and turbulent flow regimes[96,97]as well as being used for identifying shock wave refractions in magnetohydrodynamics[98]. This provides a way of automatically detecting points at which the solutions of the underlyingPDEsbecome unsteady, improving the robustness ofCFDpipelines. Despite these benefits,MLis limited to working with classical data (PDE solutions), and QuaSciML opens a route for analyzing large-scaleCFDproblems on ever-increasing grids.

Quantum Scientific Machine Learning.—\AcSciML integrates data-driven models with physics-informed numerical methods to efficiently solve complex equations[99,100,101]. SolvingPDEswithscientific machine learning(SciML) requires learning a modelto extract a solutiongiven data[73,102,77,103]. This process can get a speed-up from quantumPDEsolvers[104,32,103,44], where the solutions are stored as quantum states,. Thus, we arrive at the bottleneck where reading out full-grid solutions is difficult.

Addressing the readout problem requires building an efficient model to learn from quantum data, and identifying a few relevant features from complicated states. Let us thus describe theQuaSciMLworkflow for extracting information. Consider an input spacerepresenting the set ofquantum solutions at a grid of pointsobtained from a quantumPDEsolver and an output spacewherein classification labels are mapped. Note that the solution to thePDEis dependent on the boundary conditions and physical variables of the underlying system, which ultimately influences the class thatis assigned to.

QuaSciML models can be described formally following the idea of probabilistic concepts[105]. A conceptrepresents a function that maps input datato associated measured outcomessuch that. Within the context of QML, a probabilistic concept represents a quantum model that accounts for the probabilistic nature of measurements. The goal is to learn from quantum data, assigning a concept to data stored in the Hilbert space such that. This framework is used for developing a learning concept that is based upon parameterized quantum models. The learning algorithm seeks to minimize a loss functionto construct a hypothesis, parameterized by, that approximates the true concept. The hypothesis can be developed through a variational approach or by employing a physics-informed approach that selects the optimal hypothesis from a set of measured observables representing the concept[106,95].

The workflow of howQuaSciMLcan be used within the wider context of a quantumCFDpipeline is shown in Fig.1. In terms of the quantum readout problem, the solutions (quantum states) from a quantumPDEsolver can be directly passed into aQuaSciMLmodel for concept learning. The model then utilizes a parameterizedquantum neural network(QNN) circuitto extract key local and global characteristics from the quantum states. One suitable choice here is thequantum convolutional neural network(QCNN) architecture[107,84,108,109,110,92,111,112], which is trainable and enables a local readout. We also note that QCNNs can be treated in the measure-first form without variational training on QC in the adaptive way[87,113], but as we work on quantum data there is still a need to identify an optimal quantum readout. Upon completing the training stage, the model learns to distinguish features such that the optimal hypothesisis selected to later make informative predictions with regards to the underlying system modeled by thePDEs. In terms of quantum advantage, it has been shown thatQMLmodels can learn from exponentially fewer quantum experiments when compared with the number required by classical models[114]. The goal is to establishQuaSciMLmodels that achieve high performance for PDE solutions at growing.

The aim is to perform classification on quantum data usingQNNs, optimizing a layered quantum circuitthat informs the choice of hypothesis, for constructing a sharp decision boundary. The model output is a binary label that describesCFDsimulation solutions, e.g. the type of wave detected or the category of flow behavior, without needing to directly extract information from the quantum state solutions. In particular, optimized models containing problem-specific characteristics are proposed that help to inform the decision boundary and enhance the model’s accuracy through the loss minimization,.

Oftentimes, the optimal basis used for solvingPDEsdiffers from the optimal basis used for learning from quantum data. In this sense, the quantum dataobtained from a quantumPDEsolver may benefit from a basis change when uploaded to the quantum architecture used for classification. Different architectures for learning can benefit from basis changes as there can be preferred bases for performing analysis (e.g. momentum space analysis for translationally invariant solutions), influencing the ability of the model to learn the optimal concept. In composing quantum models for classification, considerations are made with regards to the basis (real space vs. Fourier space), the circuit architecture (deep-learning inspired neural networks[115]vs. convolutional neural networks[107,90,92]), the introduction of a coarse-grained representation as well as commonMLcharacteristics like the hypothesis function and optimization strategy. Here, coarse-graining refers to concentrating on part of the solution by discarding part of a register. This reduces the complexity of states to be analyzed, helping to focus on relevant macro features (e.g. vortices or flow trends). Thequantum Fourier transform(QFT) is used conveniently to convert the quantum data from the real space to the Fourier space[69,48]with ancircuit. Coarse-graining is applied afterwards to half of the register to reduce the dimensionality of the data while retaining high-frequency components of the solutions. The modified quantum data set is then fed into the model for training.

Results.—This section presents the application of theQuaSciMLprotocol for the purposes of binary classification. The results demonstrate the training and testing of two different quantum architectures to distinguish two fluid phenomena relevant toCFD, namely shock wave detection and turbulence modeling. For simplicity in exhibiting how the quantum readout classification is performed, the solutions used for training and testing are obtained from classical simulations. These solutions are converted into quantum states and used as inputs to theQuaSciMLmodels. The results from the analysis presented here are the same as if the quantum data inputs were measured directly from a noiseless quantumPDEsolver without any classical processing. Therefore, the quantum datarepresent the vectors encoding the quantum statePDEsolutions in a given basis.

The first problem considersshock wave detectionfrom solving the one-dimensional Burgers equation. This is a nonlinearPDEthat describes the propagation of waves in fluid dynamics and can be used to model various physical phenomena such as turbulence and acoustic wave propagation. The Burgers equation is given by

whererepresents the diffusivity of the medium. For this particular problem, the goal is to classify wave solutions into either shock waves or steady waves. These solutionsare shown in Fig.2(a-b), where each solution represents a wave profile drawn at different snapshot times. The state space is composed ofsolutions;steady wave solutions andshock wave solutions. These solutions are obtained from the analytical solution to the Burgers equation using similarity transformations. Additional white noise has been added to these solutions to increase the intricacy of the profiles and subsequently enhance the complexity of the learning task.

To perform the wave behavior classification, the labeled solution set is randomly split into a training and testing set. The solutions are uploaded into quantum states using amplitude encoding, where each state is represented byqubits. The model for this problem uses adeep quantum neural network(DQNN)[115]of depth 4 with an optimization procedure that consists of 300 gradient descent iterations at a learning rate of 0.05 and a hypothesis function given by the Paulimeasurement. The learning concept is therefore built from the hypothesis. The result in Fig.2(c) shows the accuracy of the trained model for three scenarios that consider the basis choice and the influence of coarse-graining. The number of samples refers to the number of randomly selected wave solutions drawn from the original data set for training the model, while accuracy indicates how effectively the model predicts outcomes for the entire data set.

Given the nature of this problem, it makes sense to solve the underlying differential equation in real space, as discontinuities in the solution could lead to Gibbs phenomena when using a Fourier-based approach. However, when it comes to extracting features of quantum solutions for classification, real space might not be the most suitable basis for learning.
The optimal model uses a Fourier basis and a coarse-grained representation, which is shown to consistently achieveaccuracy. This optimized model was then applied to the full data set when split into atraining andtesting set. The confusion matrix as applied to the test set is shown in Fig.2(d). The optimal model achieves a perfect accuracy of, significantly outperforming both the real space model, which reaches only, and the Fourier space model without coarse-graining, which achieves. This highlights that bespoke trained models can enable efficient readout.

The second problem considersturbulence modelingand the solutions of two-dimensional Navier-Stokes equations. This is a set of nonlinearPDEsthat describe the motion of viscous fluid flows and can be used to model various phenomena including turbulence and aerodynamics. For this particular problem, the goal is to classify the flow around a cylinder into either the laminar or turbulent regime. This is modeled by the Navier-Stokes equation,

whererespectfully represent the fluid’s velocity, density, pressure, and viscosity.

The geometry of the setup is shown in Fig.3(a), representing the flow around a cylinder. It considers the scattering of a horizontal inbound flow about a cylinder with velocity profiles modeled in the-plane. The two flow classes are distinguishable by their velocity profile characteristics; for laminar flows, profiles are smooth and linear while for turbulent flows, profiles are chaotic and exhibit the von Kármán vortex street phenomena. These physical features are most apparent at later stages of the flow along the-axis, corresponding to the late-time dynamics after the flow has fully developed. To ensure that the model effectively captures these distinct dynamics, the input data is limited to the late-time behavior of the flow. This is achieved by truncating the velocity solutions to the finalof the flow, as indicated by the bounding box in Fig.3(a). To reduce the dimensionality of the input data and save on computational processing time, each truncated solution is further subsampled over the coarse grid. All these steps are readily implemented for quantum data by selecting relevant qubits in the quantum register and keeping track of indexing and significant bits.

The multi-dimensional nature of this problem requires encoding quantum data from grid-based inputs, necessitating that both the circuit and the model be designed to accommodate this. When uploading the solutions into quantum states with amplitude encoding, the late-time subsampled velocity arraysare split across two registers. The relative quantum states are structured as

where the basis statestores the column index corresponding to the-register and basis statestores the row index corresponding to the-register. Then, two independentQNNsare applied; one on the top register and one on the bottom register. This circuit is named the double-QNN, with each network having distinct trainable parameters. The quantum circuit used to implement this strategy is given in Fig.3(b), shown specifically for QCNNs[107,84,92].

Analyzing the correlation between the-register and the-register is an effective strategy for forming the decision boundary and devising a physics-informed hypothesis. This can be measured using covariance, where laminar solutions are expected to have a low value (approaching zero), while turbulent solutions are likely to show a non-zero value. The covariance with respect to two operatorsandwhen measured across two different registers is given by

The operatoris measured from the top of the first register and the operatoris measured from the top of the second register, as shown in Fig.3(b). A quantum model constructed with concept learning is particularly well-suited to this problem due to the architecture’s inherent ability to detect entanglement, which is crucial for analyzing correlations between different registers.

A subset of velocity solutions for different geometries and flows is shown in Fig.4(a). Each solution represents a snapshot of the flow profile drawn at different times. The state space is composed ofsolutions;laminar flow andturbulent flow solutions. These solutions are obtained with a lattice Boltzmann simulation that considers a combination of different cylinder diameters, cylinder locations along the-axis, and variations in the collision timescale. We note that many other approaches can be adopted and here we specifically concentrate on the analysis part rather than solving. Each complete solution presented corresponds to a quantum state usingqubits. However, after truncating the late-time dynamics of the solution, the required number of qubits is reduced to. Upon further subsampling over the coarse grid, the solutions are ultimately encoded onto two registers using a total ofqubits.

To perform the flow behavior classification, the labeled solution set is randomly split intotraining andtesting sets. The solutions correspond to quantum states with amplitude-encoded solutions that are truncated and subsampled. The model for this problem considers theQCNN[107]as the underlying architecture for the double-QNN. It incorporates a hyperbolic tangent activation function, where the parametersandare used to shift and scale the input data appropriately. The loss function is given by the covariance of the Pauliand Paulioperators with an optimization procedure that consists ofgradient descent iterations using the parameter-shift rule at a learning rate of. The learning concept is therefore built from the hypothesis. The result in Fig.4(b) shows the accuracy of the trained model using a real basis, summarized over four randomly chosen seeds. As before, the number of samples refers to the number of randomly selected velocity solutions drawn from the original data set for training the model, while accuracy indicates how effectively the model predicts outcomes for the entire data set. The average confusion matrix as applied to the test set from ten randomly chosen seeds is shown in Fig.4(c). The same analysis was performed on the model when evaluated in the Fourier basis. TheQFTcircuit was invoked separately on theandregisters before applying the double-QCNNarchitecture. The accuracy of the trained model and average confusion matrix are shown, respectively, in Fig.4(d) and Fig.4(e). Although the real space model achieves a higher average accuracy ofcompared with the Fourier space model of, the Fourier space model demonstrates greater stability with minimal variance in the results. The higher accuracy for the real space model makes it suitable for applications needing more precise predictions, while the Fourier space model’s stability renders it more reliable in situations demanding consistent performance. In addition, the Fourier model performs better with a smaller number of samples, suggesting that the generalization and the onset of overfitting behavior differ between the two models. Overall, the optimal choice of basis for training the model will be influenced by the trade-off between accuracy, precision, and sample size.

Conclusions.—We have shown that quantum scientific machine learning can be used as a tool for addressing the readout problem from quantum PDE solvers. By learning hypotheses as measurement operators from quantum data, one can bypass the need for computationally intensive post-processing of classical solutions extracted (e.g. tomographically) from quantum solvers.
Low-dimensional output can be obtained from quantum data using models based onQNNsin the form of classification labels, representing relevant solution features, with tailored circuit architectures doing this efficiently.

The QuaSciML tools were applied toCFDproblems of shock wave detection and turbulence modeling in scenarios where data samples come directly from quantumPDEsolvers. We find that the proposed approach can achieve perfect scores for shockwave detection and high accuracy () for turbulent flow detection at high test/train split ratios. We note that the success of learning depends on problem-specific characteristics and the chosen basis. Well-crafted choices in the problem representation can also considerably reduce the required resources.

Our work opens up the area of research whereQuaSciMLis inherently required as a quantum-enhanced post-processing step.
The solutions obtained from quantum differential equation solvers will provide an abundance of quantum data (particularly, when fault-tolerant QC is available) that can be meaningfully classified.
Extracting insights from these quantum solutions is a fundamental research question that we begin addressing here, with a long-term pursuit of efficient learning protocols.

Acknowledgment.—This work was supported by Siemens Industry Software NV.

SECTION: References