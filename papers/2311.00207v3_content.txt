SECTION: Magmaw: Modality-Agnostic Adversarial Attacks onMachine Learning-Based Wireless Communication Systems

Machine Learning (ML) has been instrumental in enabling joint transceiver optimization by merging all physical layer blocks of the end-to-end wireless communication systems. Although there have been a number of adversarial attacks on ML-based wireless systems,
the existing methods do not provide a comprehensive view including multi-modality of the source data, common physical layer protocols, and wireless domain constraints. This paper proposes Magmaw,a novel wireless attack methodologycapable of generating universal adversarial perturbations for any multimodal signal transmitted over a wireless channel. We further introduce new objectives for adversarial attacks on downstream applications. We adopt the widely-used defenses to verify the resilience of Magmaw.
For proof-of-concept evaluation, we build a real-time wireless attack platform using a software-defined radio system.
Experimental results demonstrate that Magmaw causes significant performance degradation even in the presence of strong defense mechanisms.Furthermore, we validate the performance of Magmaw in two case studies: encrypted communication channel and channel modality-based ML model. Our code is available athttps://github.com/juc023/Magmaw.

SECTION: IIntroduction

Next-generation (NextG) networks promise to support ultra-reliable and low-latency communication for rapidly evolving wireless devices[29]. Emerging networks are thus challenged to establish new features (e.g., adaptive coding and enhanced modulation) to overcome rapidly changing channel conditions and to achieve more efficient use of spectrum[102,63].
Machine Learning (ML) overcomes this barrier by revolutionizing the entire wireless network protocol stack[67].

Recent research[19]introduces joint source-channel coding (JSCC), an end-to-end wireless communication system leveraging deep neural networks (DNNs) for both transmitter and receiver. This ML approach jointly optimizes source and channel coding in a cross-layer framework to handle diverse and challenging channel conditions.
To effectively cope with the multipath fading effects, the JSCC-encoded data can be further modulated into continuous signal waveforms through orthogonal frequency division multiplexing (OFDM)[99].
The DNN models for JSCC are tailored to specific modalities (e.g., texts, images, etc.), so as to convey semantic information more accurately than traditional communication systems (seesectionII-B).
The advantages of such ML-based communication systems are increasingly recognized by standardization bodies such as the Third Generation Partnership Project (3GPP)[84].Industry leaders, such as Apple[70], Huawei[88], Nokia Bell Labs[7], Qualcomm[64], and ZTE[51]are also investigating AI-native 6G communications. NVIDIA has established an ML-based, GPU-accelerated communication signal processing framework[39]for 6G applications. These developments underscore the growing consensus that ML-based wireless communications will play a crucial role in shaping the future of 6G technology.

Unfortunately, ML is vulnerable to adversarial attacks[77,16], where small, imperceptible changes to input can yield substantial changes in the model’s output.
The susceptibility of the models to adversarial examples raises serious concerns for the safety of ML adoption in NextG.

Traditional jamming or overshadowing attacks[93,97,76,30]have been dedicated to developing a malicious RF device to disrupt legitimate wireless communications. However, these approaches typically rely on high-power transmissions to cause large-scale disruptions in the spectrum, leading spectrum owners to respond swiftly.
Highly effective attacks that use low signal strengths are missing in this literature.

There have been recent works on small signal manipulations designed to target ML-based wireless systems[13,60,48,40,55].
However, they make unrealistic assumptions about the attacker’s capabilities. For example, even though JSCC has a modality-specific structure, they assume that only a single modality (e.g., one-hot vector message or image) is wirelessly communicated. They also assume that the adversary knows which modality is sent by the transmitter.
In practice, the above assumptions are not valid for the following reasons: 1) the transmitter typically incorporates data from all modalities into the data blocks and then sends them to the receiver; 2) if the adversary wants to recognize the modality of the signal, it needs to have access to the target ML model that carries out JSCC, and this is not always feasible, and 3) even if the adversary can detect the modality, high latency occurs until perturbations are generated and added to the victim signal.

We propose Magmaw, a new hardware-driven wireless attack framework that creates universal adversarial perturbations (UAPs) to subvert ML-based wireless systems. We show for the first time that modulated multimodal data can be perturbed by adversaries, resulting in failure to restore the original data as well as subversion of downstream services. We consider examples of downstream services such as video classification (VC), which analyzes human activity from video, and audio-visual event recognition (AVE) which predicts the event label based on representations over multiple input modalities.
Magmaw can cause significant disruptions or threaten user safety in quality-sensitive applications, e.g., remote surgery[4]and autonomous driving[37], as illustrated in Figure1. Emerging applications (e.g., XR[49]) would suffer even more from the corruption of multiple input modalities.

Magmaw must address four main design challenges.Firstly, we assume that the adversary lacks prior knowledge about the data’s modality and the exact channel model. Additionally, the attacker’s ability to adjust its transmit signal pattern effectively depends on knowing the channel matrix between the sender and receiver ().
However, sincevaries due to factors like link distance, mobility, and environment, not having this information makes crafting an effective attack challenging.
We solve the above challenges by designing a perturbation generator model (PGM) trained to create input- and channel-agnostic perturbations on surrogate wireless models. We adopt an ensemble learning approach that utilizes surrogate multimodal JSCC models to learn UAPs.

Secondly, previous attacks[13,60,48,40,55]do not consider that the input signal can be adjusted by physical layer protocols (seesectionII-C). They only focus on the scenarios where the adversary has prior knowledge of the protocol’s full setup. In a practical scenario, the attacker does not know the constellation mapping or how the OFDM system assigns the complex symbols to multiple subcarriers.It is possible to design an attacker that recognizes the protocol from the transmitted signals[73]. However, since wireless protocols change rapidly depending on the channel state, the analyzed output quickly becomes obsolete. A protocol-agnostic attack is required.We address this challenge by incorporating multiple controllable parameters inside the ensemble learning to optimize perturbations generalizable across all modulated data.

Thirdly, an adversarial wireless device may not be precisely synchronized with a legitimate transmitter or receiver in the time or frequency domain, reducing the effectiveness of perturbations.
We address de-synchronization issues between the adversarial device and the legitimate transmitter/receiver using our offline training procedure. Specifically, we train the PGM using time shift and phase rotation functions, ensuring that UAPs remain effective even with varying offsets.

Finally, previous studies[13,55]are vulnerable to adaptive defenses. For instance, a perturbation detector[94]can exploit traces of perturbations to predict whether the input is perturbed. This is because their perturbations are overly rigid and lacking in variability due to overfitting[35]. To craft robust and diverse perturbations, we introduce a discriminator and diversity loss to regularize the learning process explicitly.

After integrating the above solutions, we implement Magmaw on the software-defined radio platform and validate its attack feasibility, as shown in AppendixA. Our experiments show that Magmaw degrades the Peak Signal-to-Noise Ratio (PSNR) by up to 8.04dB and 8.29dB for image and video transmission, respectively, where PSNR is a representative image quality score. For speech transmission, Magmaw prevents receivers from recognizing the speech content, increasing the mean square error (MSE) by up to 3.91compared to baseline attacks. Furthermore, Magmaw reduces the bilingual evaluation understudy (BLEU) score to 0.338 points for text transmission, indicating that the received text exhibits significant semantic errors and grammatical inaccuracies. Notably, we achieve up to 91.2attack success rate on the downstream tasks.
In our case study, we establish an encryption-based secure image transmission and prove that Magmaw leads to a reduction of up to 5.88dB in PSNR.We also evaluate Magmaw with channel modality-based ML models. Magmaw introduces up tomore error in the ML results than the baseline.

In summary, we make the following contributions:

We introduce Magmaw,a novel wireless attack frameworkimplemented over software-defined radio against ML-based multimodal communication systems and underlying downstream applications.

We adopt an ensemble learning on a set of surrogate JSCCs to craft our UAP input- and protocol-agnostic, i.e., oblivious to the modality, constellation, coding rate, OFDM specifications, and channel conditions.

We evaluate Magmaw against various defense techniques, including adaptive ones. Extensive results from case studies further show Magmaw’s efficacy.

SECTION: IIBackground

SECTION: II-AWireless Communication Systems

Current communication standards (e.g., 4G LTE[3], IEEE 802.11 family[41], 5G NR[50]) follow separate source and channel coding designs and require independent optimization of each component. The source encoder transforms the source data into the embedded source bits. The channel encoder adds redundancy to the transmitted signal, allowing the receiver to correct errors caused by noise. However, these conventional systems suffer from dramatic performance degradation due to the cliff effect where the receiver’s error correction algorithm cannot recover the transmitted data if channel conditions are worse than a certain threshold[19].

ML-driven wireless systems aim to train a robust JSCC encoder and decoder on wireless channels infused with channel conditions similar to the physical world. The JSCC encoder directly maps the source to complex-valued symbols, and the JSCC decoder recovers its estimate directly from the noisy channel output. To adopt the widely used wireless standards, the JSCC models can be concatenated with OFDM to increase the spectral efficiency and reduce the multipath channel effects[99]. Since multipath fading channels and OFDM blocks can be represented as differentiable layers, ML-based wireless systems are trained end-to-end.As such, JSCC can be built without modifying standard radio hardware (e.g., field test 6G with JSCC on 4G LTE[85]). Furthermore, ML-based wireless communication can significantly save channel bandwidth costs compared to conventional systems while achieving the same end-to-end wireless transmission performance[100].

SECTION: II-BModality-Specific JSCC Models

Existing JSCC systems[99,83,89,91]adopt modality-specific structures, with each modality requiring a specialized approach for accurate symbol recovery at the receiver.
We consider four state-of-the-art JSCC models for image[99], video[83], speech[89], and text transmission[91].
Figure2depicts the commonly used structures for each modality.
The image JSCC is trained to minimize distortion on a frame-by-frame basis. The video JSCC leverages spatiotemporal similarities between successive frames to remove the redundancy. To achieve this, the video JSCC adopts the temporal coding structure, which clusters each consecutive sequence of pictures into a group of pictures (GOP). Each frame within the GOP is entered into the video JSCC in coding order rather than display order. This means that the video JSCC encoder compresses frames in a specific order.
For a total offrames included in the GOP, the coding order of each frame is determined by the mapping function, where.
On the other hand, speech signals contain speaker characteristics such as speech rate and tone. The attention mechanism[89]is utilized for speech JSCC to identify the essential features to help accurately recover speech signals at the receiver. The text JSCC is designed to precisely encode context information and cope with semantic distortion based on Transformers[82]. The text features recovered by the receiver are decoded into the text sentence through a greedy decoder[86]. A cross-entropy loss[47]is used to understand semantic meaning while maximizing system capacity.

SECTION: II-CPhysical Layer Protocols

Modulation.Wireless standards commonly adopt QPSK, 16-QAM, and 64-QAM to map bits to complex symbols[90]. Therefore, the JSCC-encoded data are mapped to elements in a two-dimensional finite constellation diagram.An adaptive modulation scheme can change the modulation type to balance reliability and spectral efficiency. For example,[2]changes the modulation
based on the threshold of the channel state to meet the bit error rate (BER) requirement.

OFDM.To achieve high spectral efficiency, the OFDM transmitter may assign modulated symbols arbitrarily to the subcarriers rather than in a fixed order. Therefore, each subcarrier carries symbol vectors with a different distribution.

Coding Rate.Adaptive encoding is essential to guarantee the reliability of wireless communications[92]. The JSCC encoder estimates the available bandwidth based on the channel state and employs adaptive algorithms to choose an optimal coding rate for efficient real-time streaming.

SECTION: IIIRelated Work

: a channel matrix between the sender and the receiver; ✓: the item is supported;WB: White Box.

RT: Robust Training (Adversarial Training, Defensive Distillation, and Randomized Smoothing);PS: Perturbation Subtraction;PD: Perturbation Detection;OD: Oracle Defense.

: the attack can compromise the defense;: the defense was considered, but the attack was ineffective.;: not mentioned in the paper.

SECTION: III-AConventional Wireless Attacks

Jamming Attacks.RF jamming transmits radio signals indiscriminately across a range of frequencies, causing interference and disrupting communication. Jamming can be broadly categorized as active jamming and reactive jamming[93,62]. Active jamming continuously emits powerful interference signals, but its continuous operation leaves detectable traces, making it vulnerable to defensive techniques[93]. Reactive jamming[52]adjusts its jamming behavior according to observed signals in the environment. It remains silent when the channel is idle but initiates high-power signal transmission upon detecting activity on the channel.
The drawback of these approaches is that spectrum owners may promptly detect the presence of an attack and respond accordingly.

Overshadowing Attacks.Cellular networks are vulnerable to overshadowing attacks[87]. Recent works[97,30]can force the victims to receive the attacker’s symbols/subframes by sending high-powered signals to a base station. However, the adversary must have the capability to receive and decode the messages transmitted by the victim. These attacks typically require signal strengths ranging from -3.4dB to +3dB over the benign signal[30].
Since the adversary’s signal strength is comparable to or even stronger than the legitimate signals, it becomes easier for the legitimate nodes to identify the attack.

SECTION: III-BAdversarial Attacks on Computer Vision Domains

Adversarial ML has been studied to analyze the robustness of the model across multiple areas, such as image classification[22,65], speech recognition[6], activity recognition[20,26], video compression[24,25], etc.
Most studies provide an attacker with the capabilities to perform a man-in-the-middle attack where he/she intercepts data in the middle and then injects small perturbations. These are not physically feasible and only expose theoretical vulnerabilities. As the demand for physically feasible attacks grows, recent studies[42,56,71]define practical approaches so that attacks can be realized in the real world. SLAP[56]applies a projector to superimpose light onto an object, causing the model to misclassify the object. Compared to wireless domains, physical attacks in vision domains are less susceptible to signal distortion and have relatively fewer domain constraints.

SECTION: III-CAdversarial Attacks on Wireless Domains

There are two types of target wireless systems: (1) wireless networking, which concentrates on efficient dataflow management between networked devices,
and (2) wireless communication and sensing for restoring and analyzing radio signals at the physical layer.
In this paper, we focus on the second point.

Attackers targeting wireless networking seek to deceive the ML-based network devices into making wrong decisions (e.g., for resource allocation). Certain attacks[57,43]operated in a white-box setting with complete knowledge of the target ML model. In contrast, Apruzzeseet al.[9]devised a realistic threat model by assuming a constrained attacker and demonstrated their performance across various ML systems.

When attacking wireless communication and sensing, it is crucial to design physically realizable perturbations.
TableIsummarizes existing attacks in two categories: offline attacks and online attacks. Offline attacks are impractical as they allow attackers unlimited access to inputs and models. Online attacks address this by adding UAPs to victim signals.
Several works[68,44]studied methods for crafting UAPs against radio signal classifiers but aimed to identify theoretical vulnerabilities rather than design physically feasible attacks.
Flowerset al.[32]identified victim’s transmissions by sniffing the signal strength of the target channel, but sniffing does not provide an accurate time offset due to latency and cannot reveal the modality and wireless protocol.Bahramaliet al.[13]adopted a generative model to produce diverse UAPs, but they made the unrealistic assumption that the target system sends only one-hot vector messages[61]. Their attacks are evaluated individually on each physical layer component rather than on an end-to-end system.
RAFA[55]designed a practically feasible UAP in a limited-knowledge setting. They solely target the publicly-known preambles, so their attacks are not applicable to JSCC which transmits unknown data symbols. In addition, the JSCC-encoded data are modulated by various protocols (e.g., modulation, coding rate, and OFDM). Furthermore, due to the lack of diversity in its perturbations, RAFA can be directly mitigated by the adaptive defense with high accuracy (seesectionIX-B).Additionally, a recent study[46]attacked wireless sensing systems by assuming that an adversary could install malicious firmware on the victim transmitter and change pilot packets. However, we are interested in a more realistic scenario where an adversarial signal is injected into the target channel.

SECTION: IVThreat Model

SECTION: IV-AAttack Scenario

Magmaw is targeted towards radio signals created by front-end sources that are used to transmit the multimodal source to back-end user(s). The attacker deploys commercial off-the-shelf (COTS) hardware (e.g., software-defined radios) to send the attack signals. We focus on vulnerabilities unique to ML in wireless environments, leading to the failure of the receiver’s JSCC decoder to correctly decode the received packet. Note that we exclude the jamming effect[62], a brute-force solution that disrupts all communication within the medium.

Multiple transmitters and receivers can share the spectrum. As described in AppendixA, the standard Wi-Fi protocol ensures only one device uses the wireless channel at a time within a cell to avoid collision. Magmaw can thus inject adversarial signals to target different transmitter-receiver pairs sequentially.
Magmaw can also be positioned in a selective attack[10]that only targets a specific wireless device, leaving other devices unaffected. Specifically, Magmaw can identify the victim by sniffing the MAC address in the packet, and launch the attack whenever the victim device transmits the packet. Please note that all the above cases are equivalent to applying Magmaw’s adversarial perturbation to a single transmitter-receiver pair (as shown in Appendix Figure22).

SECTION: IV-BAdversary’s Goal

Magmaw aims to transmit well-crafted perturbations over the target wireless channel to prevent legitimate receivers from recovering the source data and performing target downstream tasks.
To ensure stealthiness, Magmaw sends adversarial signals with a small magnitude. As a result, the victim cannot differentiate between adversarial perturbations and natural noise from wireless channels. Following the previous studies[13,69], we utilize a perturbation-to-signal ratio (PSR) metric to compare the power of the perturbation at the receiver with the received legitimate signal power. The PSR is set to be [-20,-10] dB[13,69]so that the perturbation is not distinguishable from the expected natural noise in the channel.

SECTION: IV-CAdversary’s Capability and Knowledge

We envision a constrained attacker[8]with limited knowledge of ML-based wireless systems as described below.

Wireless System.We assume that the adversary has no prior knowledge about the ML model architecture/parameters, but knows the category of target models (e.g., autoencoder which is the de facto model for JSCC)
and the physical layer techniques being used (e.g., OFDM modulation which is specified in the communication standard).This is a realistic assumption for the following reasons: 1) standard documentation usually describes the core technology and is open to the public, and 2)specialized operations (seesectionII-B)for each modality have already been widely known in the ML community. The adversary trains surrogate ML-based JSCC models using a large amount of publicly available data.Note that the attacker cannot access the target JSCC model or observe the output.

Knowledge about Input and Protocols.We assume that the adversary does not know the modality and the constellation mapping method due to the following reasons: 1) all the application-layer source data, regardless of modalities, need to multiplex the transmitter radio and wireless channel, 2) the transmitter can adapt several types of modulation techniques according to channel conditions. Additionally, the JSCC model can dynamically adjust the coding rate in real time based on the current channel conditions, so the adversary has no prior knowledge about the number of OFDM symbols encoded by the JSCC model in the transmitted signal.
However, we assume that the adversary can refer to the possible coding rates specified in the standards documents. Lastly, we do not assume that the adversary knows how the transmitter maps the OFDM symbol to the subcarriers.

Target Wireless Channel.We consider a real-world attack scenario where the attacker cannot have access to the channel matrix between the transmitter and the receiver, i.e.,. In addition, we do not assume that the adversary is synchronized with either the transmitter or the receiver, leading
to random time and frequency offsets. Furthermore, we assume that the attacker can determine the carrier frequency used by the targeted channel. The attacker can overhear the victim’s signals by arbitrarily adjusting its waveform bandwidth and carrier frequency using a software-defined radio[53,103].

Attacker’s Wireless Channel.The attacker employs a single antenna to send the adversarial signal. We denote the channel matrix for the attacker as.
According to the Wi-Fi protocol, the receiver periodically sends beacons to wireless devices within the range[14]. An attacker can overhear this transmission and estimate the channel matrix from the receiver to itself. Due to the principle of reciprocity, this channel is the same as. In contrast to recent work[55], we relax the assumption that the adversary knows the exact channel matrix between the attacker and the receiver. We make a weaker assumption that the adversary has limited information,
i.e., the distribution of the channel between the attacker and the receiver.

SECTION: VSystem Model

Figure3illustrates the core processing blocks in the victim communication link along with the Magmaw attacker.

ML-based Transmitter.We consider OFDM-based JSCC over a multipath fading channel withpaths. The multimodal data are transmitted usingOFDM symbols withOFDM subcarriers. Note thathas different values depending on the modality and the coding rate. For channel estimation, the sender transmits a preamble (according to the wireless communication standards) on the subcarriers. We denote the source data aswith modalityat time step, wheredenote the image, video, speech, and text, respectively. We describe a JSCC encoder for processing a modalitywith a given coding rateand modulation schemeas a function, whereis the transmitter’s
reference frame buffer used for the video JSCC, as depicted in Figure2(b). We definecontaining the previously decoded frameas:

Recall thatis a function that finds the coding order of the-th image in the given GOP structure.=when=1. This is because the first frame is coded by the image JSCC. Note thatis reconstructed as the output of a video JSCC decoder that takes encoded video sequenceas input.is the coding rate to control the number of symbols.

Then, a constellation mappermoves symbols to the nearest points in a finite constellation diagram. The modulated symbol,, can then be obtained as:

Without loss of generality, we assume the target transmitter/receiver uses a single antenna following the 802.11a/g/n Wi-Fi standard[90]. We splitinto a number of signal vectors with dimension of. Afterwards, an OFDM transmitter allocates divided signals on each subcarrier. Each OFDM symbol passes through an inverse discrete Fourier transform (IFFT), then a cyclic prefix (CP) is added and transmitted to the receiver over a multipath fading channel.

ML-based Receiver.The receiver obtains the complex-valued symbols from the channel output by removing the CP and applying FFT with an OFDM receiver. The received signal of the-th subcarrier in the-th OFDM symbol is given by:

whereis the frequency-domain channel matrix, which is a diagonal matrix, andis the frequency-domain AWGN matrix.

Given the FFT output of the pilot signals, the channel estimation and equalization are performed to compensate the channel-induced transformation. We adopt a least squares (LS) algorithm to predict the channel state information. After equalizing all of the divided signals with the channel equalizer, we quantize the phase and amplitude of the signal on each subcarrier with. Finally, we employ the decoderto reconstruct an estimateof the original signal. We express the entire process after OFDM receiver as follows:

whereis the receiver’s decoded frame buffer for the video JSCC.=, where=when=1.=for other modalities. For simplicity, we denote all processes after the OFDM receiver as.

SECTION: VIAttack Construction

The framework of Magmaw is illustrated in Figure3.
Our attack methodology follows a hardware/algorithm co-design to ensure Magmaw is robust against various signal distortions.

SECTION: VI-AOur Attack Formulation

General Attack Formulation.Our adversary aims to find an input-agnostic perturbation, with a magnitude bounded by the attacker’s power budget. Whenis injected into the victim wireless channel, the receiver obtains the frequency-domain channel outputas:

whereandrepresent the frequency-domain perturbed response and the adversarial perturbation at the-th subcarrier of the-th OFDM symbol, respectively.is the channel matrix between the attacker and the receiver. The attacker can obtainby leveraging channel reciprocity. However, the attacker does not have access to the target wireless system and therefore does not know modality, modulation scheme,,, and JSCC models.One method to address such a lack of knowledge is to utilize a set of surrogate models with different configurations (i.e.,and diverse channel matrix.Specifically, we seek to generatefrom a set of surrogate JSCC models, train UAPs using ensemble learning, and transfer the learned UAPs to the target system.
During this offline UAP training, we randomly samplefrom multipath fading model to makechannel-agnostic.

Using Equation (4), the receiver in the surrogate model then feeds this perturbed signalto the remaining physical layer elements to reconstruct the source with modalityas:

whereis the perturbed decoded frame buffer to be used in the video JSCC model.=, where=when=1.=for other modalities.

As mentioned before, we aim to find the adversarial signals in alimited-knowledge setting (sectionIV-C). A representative way to handle this is to exploit the fact that adversarial examples exhibit good transferability between different ML models[59,55,13]. By adopting the attack transferability, we first train a surrogate JSCC model for each modality using publicly available datasets that have different distributions from the target model’s training data. Then we use an ensemble learning approach to find a modality-agnostic adversarial perturbationby solving the following optimization problem:

whereis a set of all wireless signals that can be created by physical layer elements.is the loss function of ML-based JSCC model whenis sampled from.

However, this attack formulation is not suitable for making the UAPs physically realizable for the following reasons. First, having a singleas the UAP allows the receiver to estimate the perturbation signal using OFDM pilot signals, resulting in low robustness and persistence of adversarial attacks. Second, the adversary has no prior knowledge of the number of OFDM symbols in the target signal and thus is unable to defineas a matrix of the same size as the transmitted signal. Third, the video JSCC model has a network structure that forms a temporal chain between all video frames within the same GOP, so the model encodes current source data based on previous encoding results. This constructs the inter-frame dependency within a video sequence and it should be considered in crafting the UAPs. Fourth, the adversary does not know the distribution of the channel inputs carried by each OFDM subcarrier. Finally, when the perturbation signal overlaps with the benign signal, time or phase offsets may occur.

Practical Attack Formulation.To address the problem of Equation (7), we construct a Perturbation Generator Model (PGM)that generates a UAP signal by receiving a
random triggerat time step. We adopt a ResNet-based generator[28]. The adversary changesand injects a new perturbation signal into the target channel each time. Compared with using a singleas the UAP, the adversary creates an extremely large set of perturbations, which makes it difficult for the receiver to predict the perturbations. The following equation holds for frequency-domain complex-valued symbols at the receiver in the attacker’s surrogate models:

wheredenotes a UAP which containsdata symbols. Since the attacker does not know the number of target symbols,may not be equal to. We define a novel transformation functionwhich enables the PGM-generated wireless signals to model the distribution of real wireless data.
The transformation function consists of several steps: 1) symbol extension model, 2) symbol shuffling model, 3) time rotation, and 4) frequency rotation.
The symbol extension model concatenates multiple PGM-generated perturbations such that the symbol-extended perturbations can perturb all OFDM symbols of the target radio signal. The symbol shuffling model makes our attack robust against unknown target symbols by randomly shuffling symbols between the OFDM subcarriers of the adversarial signal. The time and phase rotation changes the offset of the adversarial signal during offline training so that the adversarial signals are agnostic to random time and phase shifts in the real world.
We also incorporate the power normalization into the transformation to make Magmaw undetectable from natural noise. The wireless properties controlled by the transformation function are parameterized with. Figure3shows all the modules included in the transformation function. With the help of, the PGM can be optimized to produce the perturbation signals that are resilient to real-world transformations. InsectionVI-B, we explain the internal mechanisms of.

We define an optimization problem to train the PGM that generates a hardware-implementable perturbation signal as:

whereis a set containing all radio signals that can be generated by the surrogate ML models. The perturbed signals at the receiver are computed from Equation (6). We use mean-squared error (MSE) loss as the distortion function. We train the PGM to maximize distortion on a frame-by-frame basis for the image JSCC model. For the video JSCC model, we consider the inter-frame dependency between adjacent frames as the sum of the distortions over all frames within the GOP. This allows the PGM to adapt to any GOP without the need to reconfigure the attack. As for speech, we transform the speech data into a one-dimensional vector via the deframing functionbefore the loss is calculated.
Since the text JSCC model completes sentence restoration by sequentially finding the probabilities that words will appear with a greedy decoder, we use a cross-entropy lossbetween the predicted sentenceand the ground truth sentence.

Downstream Attack Formulation.Figure3depicts downstream tasks appended to the wireless communication pipeline. We consider two ML models as examples: 1) VC and 2) AVE. Letdenote a discriminant function for the receiver’s downstream task. After the receiver demodulates incoming perturbed signals into data, the discriminant function takes the dataand outputs a probability distribution over a setof class labels. Note that the VC takes a video clipconsisting ofconsecutive frames and the AVE receivesas two inputs. A classifier for task,, pointsto the class with the maximum probability:, whereis the probability of the perturbed input belonging to a specific class.
We define a lossto subvert classifiers:

wheredenotes the reconstructed data when there is no attack.and. The attack succeeds when. With the ensemble learning, we find UAPs that maximizefor the surrogate model with different architectures from the target model. We then fool the downstream services by
transferring the attacks calculated from the surrogate model to the target model.

Stealthy Attack Formulation.Existing works[13,55]have a problem that an adaptive defender can devise an anomaly classifier[94]that identifies the attacks by analyzing the perturbation’s statistical behavior. To enforce the generator to produce undetectable perturbations, we explicitly regularize our PGM with the discriminative loss[34]:

whereis a discriminator[38]that distinguishes clean signals from perturbed signals. We aim to minimizefor forcing our PGM to explore the latent space and discover robust adversarial examples. To guarantee that the PGM properly produces the diversified perturbation, we utilize the diversity sensitive loss[28]:

whereandare two different random latent codes.

Unified Attack Formulation.Finally, we integrate all losses into the objective function so that UAPs generated by the PGM can perturb wireless communication and downstream services simultaneously. Specifically, our goal is to solve the following objective function:

where,, andweigh the relative importance of each term and. PGM generates a perturbation conditioned on the latent code and multiple controllable parameters of the wireless protocols, whiletries to distinguish between perturbed and clean signals.

In Algorithm1, we outline the training process.Please refer tosectionVII-Afor the parameters selected in the experiment.Our goal is to train the PGMthat generates UAPs to subvert ML-based JSCC models. We ensemble outputs of multimodal JSCC models to find generalizable adversarial signals that can transfer between modalities and protocols. The ML model used for training is a surrogate model that is different from the target model. We utilize the transformation functionto change the outputs of PGM to practically feasible adversarial signals. At each training iteration, the algorithm selects a batch from the training datasetwith a different distribution from the training dataset of the target model.We ensure that the PGM learns effective UAPs leveraging ensemble learning, which integrates a set of JSCC models with different. The loss values derived from each JSCC model are jointly backpropagated to optimize the PGM using the Adam optimizer[45].As a result, we solve four technical challenges described insectionI: (1) multi-modality and unknown, (2) unknown protocols, (3) de-synchronization, and (4) susceptibility to adaptive defense.

SECTION: VI-BDesign of Our Transformation Function

To cope with challenging real-world scenarios, the adversary should craft input-agnostic UAP signals regardless of synchronization with the legitimate receiver. The transformation functionhelps PGM learn to produce perturbations with a distribution similar to that of adversarial signals that can be realized in the real environment.
Therefore, our adversarial signals are agnostic to 1) inconsistency of the number of data symbols between the benign signal and the adversarial signal, 2) unknown symbol allocation across the OFDM subcarriers, 3) time misalignment, and 4) unknown phase rotation. We additionally include a power regularization for undetectability. The modules included in the transformation function are shown in Figure3and detailed below.

Symbol Extension Model.The number of OFDM symbols varies greatly depending on the modality and coding rate. Furthermore, the coding rate of the JSCC encoder determines the amount of data compressed. In an online attack, the modality and coding rate are unknown. This leads the adversary to make the attack signal invariant to the number of OFDM symbols contained in the target signal.
As the information about the coding rate is publicly available (seesectionIV-C), we can find the maximum value of.As shown in Figure4, we concatenate the PGM-generated signal multiple times through functionsuch thatis equal to the maximum value of, whereis a parameter to adjust the number of symbols.Hence, our symbol-extended perturbations can perturb all symbols of the target signal without prior knowledge of the target signal’s symbol count.
Then, we ensure that the concatenated perturbations achieve high generalizability for multiple coding rates. In Algorithm1, we randomly select the coding ratefor each training epoch.

Symbol Shuffling Model.Previous works[40,55]make the assumption that the adversary knows how the target wireless system allocates symbols to each subcarrier. This is infeasible in practice, because standard wireless communications often randomize the allocation to prevent consecutive repetition of the same symbols.
Our adversary aims to make a subcarrier-invariant perturbation that is universally applicable to any symbol distribution of subcarriers. We define a functionthat randomly shuffles the symbols assigned to the subcarrier based on a seed,as shown in Figure5. Consequently, we train the PGM to generate the attack signal that is robust to the unknown symbol distribution across OFDM subcarriers.

Time and Frequency Rotation.Due to time and frequency misalignment, a random phase rotation occurs in each OFDM subcarrier. In order to enforce our perturbation to learn shift-invariant properties, we employ a phase rotation functionfrom the previous approaches[69,13,55], whereandare time difference and phase offset between the benign signal and the adversarial perturbation, respectively.

Power Normalization.is a power normalization function that adjusts the perturbation signal according to, which is the upper bound on the attacker’s signal power. We follow the existing power remapping function[13]to preserve the power constraint of the perturbations as follows:

wherePSR is the ratio of the power of the attack signal to the power of the victim signal.is defined as, whereis the time-domain signal in Equation (3).is the output of the symbol extension and symbol shuffling models.

Transformation Function.Consequently, we obtain the converted perturbation signal transmitted from the-th subcarrier of the-th OFDM symbol through the
transformation functionas follows:

Here, the transformation function is controlled by various parameters.

SECTION: VI-CHardware Implementation

Figure6shows real-world attack scenarios in which the attacker (red device) sends a perturbation signal to the receiver. To thoroughly study radio signal propagation, we classify the physical environment into Line Of Sight (LoS) or NLoS (Non Line of Sight) between the transmitter and receiver. We obtain the experimental results from both Tx-Rx scenarios and then indicate the distribution of the results. We further showcase the difference in efficiency for each scenario insectionVII-D.

Target Wireless System.We first implement the ML-based wireless communication system depicted in Figure3through USRP B210, a software-defined radio widely used in designing wireless communication systems. We drive the USRP B210 using GNURadio software package[18]that provides a graphical programming interface for configuring transceivers and allows us to model the customized blocks. The transmitter and receiver consist of a USRP B210 and a Linux laptop, respectively, and they communicate through a single antenna, where the carrier frequency is set to 2.4 GHz. The number of cyclic prefixes and subcarriersis 16 and 64, respectively. Of the 64 subcarriers, 48 are used to carry symbols for ML-based JSCC, 4 of which are used for pilot symbols.

Attack System.We build an adversarial transmitter using a USRP N310 device with a single antenna and a Linux desktop.
We randomly move the antenna to collect 2000 random realizations of the channelbetween the adversarial transmitter and receiver. Following the previous work[13], we set the range of PSR to [-20,-10] dB. To perform the UAP attack, we adopt surrogate models with different architectures and parameters from the target wireless communication system and the downstream classifier. We train the PGM offline according to the Algorithm1. The hyperparametersare all set to 1.

SECTION: VIIAttack Evaluation

SECTION: VII-AExperimental Setup

ML Models.We consider four state-of-the-art JSCC models that deliver multimodal data over the wireless channel and re-implement them based on several open-source resources[99,91]. In Appendix TableIII, we show the surrogate JSCC models111We also evaluate how less similar surrogate models affect the attack performance in the supplementary document[1]..We use constellation mapping schemesadopted in wireless standards and coding rateschosen from existing literature. The coding rate is computed as channel usage per source[99].Note that each JSCC model has different model weights based on the variations ofand.

Downstream Tasks.We also consider scenarios where the receiver applies the demodulated data to ML-based downstream services, such as VC and AVE. For the VC task, we benchmark three state-of-the-art models, namely, I3D[23], SlowFast[31]and TPN[96]. As a benchmark model for a multimodal task, we choose the AVE proposed by[79]. Appendix TableIVdepicts surrogate models to craft transferable attacks.

Dataset.We choose popular multimodal datasets to train and evaluate JSCC models. For training the image and video JSCC models, we adopt the Vimeo90K dataset[95], which is widely used in evaluating image and video processing tasks. To facilitate efficient training, the video sequences are cropped to a resolution of. We then evaluate the image and video JSCC models using the UCF-101 dataset[75].
For the speech JSCC model, we use the speech dataset from Edinburgh DataShare[81], which contains more than 10,000 training data and 800 test data with a sampling rate of 16 KHz. We truncate the speech sample sequence to have 128 frames with a frame length of 128 after framing. For the text JSCC model, we select the proceedings of the European Parliament, which includes about 2 million sentences and 53 million words. We pre-process the dataset to have sentence lengths between 4 and 30 words. We then split it into training and test sets. We also select widely used datasets as benchmarks to evaluate VC and AVE downstream tasks. We adopt the UCF-101 human activity dataset[75]to verify Magmaw on the VC model. For evaluating the AVE model, we adopt the audio-visual event dataset[78]which contains 4,143 video clips with 28 events.

Evaluation Metrics.We use evaluation metrics that effectively reflect the semantic information of each modality. In the image and video domains, we select the PSNR as the representative picture quality measurement. In the speech domain, the MSE reflects the quality of the received speech. For the text domain, the BLEU score[15]is widely used to compare the difference between the original sentence and the reconstructed one. We measure the experimental results from the two Tx-Rx scenarios (see Figure6), and then plot the distribution of the results in the figure. We use the black dotted line as the quality threshold for each experimental result, indicating that the result below it is not properly restored, which can pose a serious threat to back-end users.

Baseline Attacks.We compare Magmaw with four types of baseline attacks: (1) Random Attack, (2) Vanilla UAP Attack, (3) Sync-Free UAP Attack, and (4)One-hot Vector Modality-based (OVM) UAP Attack[13]. We design the random attack to transmit randomly sampled Gaussian noise into the air. It resembles classic jamming, as Gaussian jamming is widely used[33]. The vanilla UAP is an entry-level attack where multi-modality, protocol, and synchronization are not considered in crafting perturbations. The sync-free UAP attacker knows the perturbation undergoes time and phase shifts and tries to exploit such knowledge to devise shift-invariant attacks.Following previous work[13], OVM UAP is trained with a dataset consisting of one-hot vector messages.For downstream tasks, we compare Magmaw to random and white-box attacks.

SECTION: VII-BAttacks against Multimodal JSCC

Analysis of Magmaw.Figure7presents the reconstruction performance of the ML-based wireless transmission systems under adversarial attacks. We sweep PSR from -20dB to -10dB with steps of 2dB. We compare the performance of Magmaw to that of the baseline attacks. As shown in Figure7, Magmaw dramatically deteriorates the performance metrics in the range of all PSRs. Note that “no attack” shows the original performance of the benign model. When applying the adversarial attacks on the image JSCC model, the PSNR drops by up to 8.04dB. For the video JSCC model, PSNR is lowered by 8.29dB on average by Magmaw. We see that the video model is more vulnerable to our adversarial signals than the image JSCC model. The main reason is that the video JSCC model encodes the current frame based on the previously decoded frame, thus propagating the reconstruction distortion to the next frame. For the speech model, we find that Magmaw degrades MSE loss by 3.91 times more than the baseline. We also observe that the BLEU score of the text JSCC model drops to a minimum of 0.338 points under Magmaw.

Comparison with Baselines.As depicted in Figure7, Magmaw outperforms the baselines by a large margin. Against the image JSCC model, Magmaw lowers PSNR by up to 5.68dB more than the vanilla UAP attack and up to 4.85dB more than the sync-free UAP attack.We see that OVM UAP attacks have similar results to random attacks.Without considering the multi-modality, wireless protocols, and vulnerabilities of the model, the evaluated baselines cannot critically hurt the JSCC.

Attack Visualization.As shown in Figure8, we visualize the attack effect on the multimodal data reconstruction at the receiver. As seen, the JSCC decoder fails to retain semantic information. Specifically, the restored images and videos have noise-like artifacts, which dramatically reduce the users’ quality of experience (QoE). Furthermore, the user cannot hear the speaker’s voice in a speech sequence due to noticeable noise. The text JSCC decoder generates sentences with incorrect grammar and context, so the user cannot understand the sender’s message.In Figure9, we present the differences in complex-valued symbols before and after the attack. We observe that Magmaw’s low PSR results in minimal changes to the original signal. Additionally, as shown in Figure10, the variation in channel state information (CSI) due to perturbation is extremely low.

Analysis of Modulation.In Appendix Figure20, we further demonstrate the attack results of Magmaw for different constellation mapping methods. We confirm that Magmaw severely degrades the performance of JSCC models regardless of constellation type. As 64-QAM has slightly higher recovery performance than other modulations (16-QAM, QPSK) in all modalities, we confirm that the higher order of the modulation helps to increase the robustness.

SECTION: VII-CAttacks against Downstream Tasks

Analysis of Magmaw.We evaluate the accuracy of each classifier when Magmaw is directed to a downstream classifier. Then, we provide a comparison with other baseline attacks. Figure11shows the attack results for the video classifiers I3D[23], SlowFast[31], and TPN[96]and the audio-visual event classifier AVE[79]. We compare the performance of Magmaw to white-box and random attack scenarios. We see that the changes made in random attacks are not optimized to subvert the model. In the white-box attack scenario, the attacker has complete knowledge of the classification model. Figure11presents the accuracy of each baseline for different PSRs. As shown, transmitting randomly sampled perturbations performs very poorly compared to Magmaw. As our attack consistently achieves comparable attack performance compared to the white-box attacks, we confirm that our UAP signals are successfully transferable to unseen downstream models. Specifically, Magmaw achieves an average attack success rate of 81.6, which is only 8.7lower on average than white-box attacks.

Analysis of Modulation.To analyze the influence of different constellation mapping techniques on the downstream tasks, we illustrate the attack results on the downstream classifiers when different constellation mapping methods are applied to ML-based wireless communication systems in Appendix Figure20. Although 64-QAM can increase accuracy slightly more than other modulations, we observe that our protocol-agnostic attack defeats all modulation techniques.

Analysis of Targeted Attacks.We investigate targeted UAPs aimed at flipping the prediction of inputs to a target class. To accomplish this, we define the loss function as below:

whereis a target class. We train the PGM by replacingin Equation (13). Targeted attacks gain success if and only if.
As shown in Figure12, the targeted UAPs achieve up to 82accuracy in AVE when PSR is -10dB.
Compared to untargeted UAPs, the fooling ratio is relatively low because it is more challenging to trick the predictions of all samples into a specific class[101].

SECTION: VII-DAblation Study

Impact of Multi-Modality.To understand the importance, we study the transferability of adversarial perturbations between different modalities. For each modality, we learn a modality-specific perturbation signal and then conduct an experiment in which we inject the learned perturbation into the radio signals of other modalities. As shown in Figure13(a), we see that the lack of learning generalized adversarial features limits both the cross-modal and cross-model transferability.

Effect of Modulation.To verify the effectiveness of protocol-agnostic attacks, we conduct an ablation study on attacking JSCC without considering the constellation mapping method. As shown in Figure13(b), eliminating knowledge of the physical layer protocol has a significant impact on the effectiveness of the attack. We enable the transferability of adversarial examples by creating diverse modulated signals.

Impact of Tx-Rx Placement.Each Tx-Rx scenario has different amounts of multipath because the power via the LoS path is stronger than power via the reflection path. To investigate the influence of multipath, we first compare the performance of JSCC in the two scenarios when there is no attack. As shown in Figure14(a), we see that the NLoS path makes the interference issue in wireless communication, reducing the performance of JSCC by 5. We then inject our perturbations into the channel to analyze the effect of the NLoS path. As shown in Figure14(b), we confirm that Magmaw is effective regardless of the location of Tx-Rx. A slight decrease in attack performance when the Tx/Rx path is NLoS is due to the degradation of the original performance of JSCC.

SECTION: VIIIResiliency to Defense

The defense performance depends on what information the defender knows about the attack formulation. FromsectionVIII-AtosectionVIII-C, we present multiple expert defenders who know the PGM’s model architecture, the channel distribution between the attacker and the receiver, and attack mechanisms illustrated in Algorithm1. InsectionVIII-D, we test Magmaw against an oracle defender who knows every detail about Magmaw.

SECTION: VIII-AAdversarial Training

The defender aims to obtain a robust ML-based JSCC model for each modality to protect the physical layer from the Magmaw. Since we assume that the defender knows the model architecture of the PGM, adversarial training extends the training dataset to include all adversarial examples and then trains a JSCC model on the augmented dataset. Algorithm2shows detailed steps of our adversarial training. We refer to the target JSCC models as, and denote the PGM as, which is identical to the attacker’s model architecture but with different model parameters.
The defender trains an ML-based JSCC model by selecting a
batch from the training datasetand generating the adversarial signals controlled by several parameters of the transformation function. We then expand the training dataset to include all adversarial examples and train the model on the augmented training dataset.

ML-based Wireless System.We validate Magmaw against the ML-based wireless communication systems, whose resiliency has been improved by adversarial training. As shown in Figure15(a), incorporating adversarial examples inside the model training process results in a lower ability to restore source data even if the underlying victim model is not attacked. Moreover, we observe that adversarial training cannot protect ML-based wireless communication from Magmaw. The reason is that the JSCC model has to be trained on a huge set of perturbations that the defender generates with PGM. Yet it is not feasible for the defender to train JSCC models that are resilient to all possible perturbations. Another reason is that the defender uses a PGM with different parameters from the attacker’s model, so the distribution of adversarial signals generated by the two models is different.

Downstream Tasks.Figure15(b) shows the accuracy of the downstream models trained by adversarial training. Adversarial training significantly reduces the accuracy of benign models, hindering their applicability. We observe that Magmaw still achieves a high attack success rate even though the benign model undergoes adversarial training. This is because training a model that is universally robust to different types of perturbed signals, while being able to correctly classify input data, is a fundamentally challenging problem.

SECTION: VIII-BPerturbation Signal Subtraction

This defense scheme can be performed at the physical layer before the signal is passed through the OFDM receiver. Defenders aim to mitigate the effects of perturbations and reconstruct the originally transmitted signal. As we assume that the defender has knowledge of Magmaw’s model architecture, the receiver generates a perturbation signal via the defender’s PGM and then subtracts it from the received wireless signal.

ML-based Wireless System.The defense results are summarized in Figure15(a). We observe that the source data restored by each JSCC model is more degraded than before the defense. This is because the cancellation of the adversarial signal fails and further amplifies the power of the perturbation. Even if the defender knows the structure of the PGM, the defender cannot generate exactly the same perturbation signal if the model parameters of the PGM are different.

Downstream Tasks.As shown in Figure15(b), applying perturbation signal subtraction reduces the accuracy of the downstream services by an average of 3.6. We see that the defender cannot increase the accuracy of the downstream classifier by simply subtracting an estimate of the perturbation. The accuracy of the classifier tends to depend heavily on the quality of the input source.

SECTION: VIII-CAdversarial Perturbation Detection

We define an input-level detection that aims to correctly find adversarially manipulated signals at the receiver side. The underlying hypothesis for this defense follows previous studies[94,98]that show that UAPs may leave signatures observable by ML-based anomaly detection algorithms. Based on this, we design a perturbation detector[74]that acts as a discriminator to distinguish the clean signalfrom the perturbed signal. Leveraging the trace of UAPs, we design the binary classifier as follows. First, we train the detector offline using the training dataset constructed from the defender’s PGM. In the online process, we label the received signals as adversarial attacks when the efficiency of JSCC deteriorates and include them in the training data. Finally, we fine-tune a well-trained model with newly collected data.

Appendix Figure21(a) summarizes the detection accuracy and false positive rate of our perturbation detector. It shows that Magmaw can bypass detection, even though the fine-tuning improves the accuracy of the detector. This is because Magmaw is trained to generate perturbed signals, which are indistinguishable from the clean signal, as shown in Equation (11) and Equation (12). For example, the fine-tuned detector only obtains up to 12accuracy to detect perturbed radio signals in the text transmission. The results in Appendix Figure21(b) have shown the detection rate of the perturbation detector when Magmaw conducted the training without regularization loss. The detector achieves about 75detection rate after fine-tuning. We verify that
ML-based detectors can offer strong generalization capability in distinguishing PGM-generated perturbations. In order to train undetectable and robust UAPs, we should leverage a discriminator to enforce stealthiness.

As shown in TableII, we report the Area Under Curve (AUC) of Receiver Operation Characteristic Curve (ROC) of the perturbation detection. The AUC metric shows the probability that the detector will assign a higher score to a perturbed signal than to a clean signal. We verify that the AUC results are close to the random guess, which means that Magmaw can achieve high undetectability. Another drawback of malware classifiers is that when an attacker changes position, the channel matrix between the attacker and the receiver also changes, requiring the defender to collect new datasets to adapt to the new environment.

SECTION: VIII-DOracle Defender

It is crucial to identify the lower bound of the effectiveness of attacks[21]. We define two strong defenders as follows:

Oracle Defenderknows complete details of Magmaw, including PGM architecture and parameters,,
the time and frequency offsets between Magmaw and receiver, and how Magmaw assigns symbols to OFDM subcarriers.

Oracle Defender without Sync Assumptionis aware of all details except the time/frequency offset. This is practical because otherwise, the receiver has to coordinate with the attacker to estimate the time/frequency offset and convey the information to the defender.

These defenders reconstruct the signal by removing the attack effect from the received wireless signal by utilizing the same perturbations generated by Magmaw.

ML-based Wireless System.The oracle defender can completely neutralize Magmaw, as shown in Figure16. These results are consistent with those reported in[13], which also points out that this defense is impractical.
We further measure defense performance by eliminating the assumption that the attacker and receiver are synchronized. The oracle defense without sync assumption can only reduce the efficiency of Magmaw by up to 21.42. This is because lack of synchronization causes inaccuracies in the results of perturbation removal. See detailed results in Figure16.

Downstream Tasks.We also investigate the adversarial robustness of downstream tasks in the presence of oracle defenders. We verify that addressing synchronization robustness is essential to increasing the effectiveness of the oracle defender. Specifically, without sync assumption, the oracle defender only improved the robustness of the classifier by at most 16.8. Detailed results can be found in Figure16.

SECTION: IXCase Study

SECTION: IX-AAttacks on Encrypted Communication

Encryption schemes are commonly applied in the communication pipeline to protect users’ private data[80]. While the robustness of privacy-preserving communications with ML-based JSCC has not been investigated before, we add the encryption and decryption blocks in image JSCC to examine the impact of Magmaw on secure transmission, and analyze the vulnerability of encrypted signals.

Experiment Design.ML-based JSCC encoder directly maps the source to the complex-valued symbols without converting it to bits. To handle this new feature, public-key encryption with LWE[66]rather than classical AES-based schemes[58]is applied in JSCC[80]. In public-key encryption, any user can send encrypted messages to the receiver using the public key. Thus, we assume that the adversary knows the public key, but does not know the secret key.

Attack Results.Figure17shows the attack results on the secure communication system. We see that the OFDM symbols carrying the ciphertext of the image data are vulnerable to our perturbation signal. Specifically, Magmaw lowers the performance of secure image transmission by up to 5.88dB. This is because the decrypted output of ciphertext operations in LWE is similar to performing plaintext operations on the original plaintext data. By showing that secure communication does not provide adversarial robustness, we promote the need for new defense techniques against Magmaw.

SECTION: IX-BAttacks on ML Systems with Channel States as Input

Standard-defined preambles[17]are widely used in ML-driven wireless systems to obtain the CSI.
We consider two ML models that are also used as target models in RAFA[55]: (a) DLoc[12]performs localization task via CSI received from four fixed access points, and (b) FIRE[54]takes the CSI of the uplink channel as input and then predicts the downlink CSI. It can address the overhead of feedback exchange in the Frequency Domain Duplex (FDD) system.

Experiment Design.In the experiment setup, the sender allocates preamblesto OFDM subcarriers (i.e., 64 subcarriers for 20MHz) and then transmits them to the receiver. Here,denotes the preamble. Since Magmaw injects attack signals into the channel according to Equation (8), the received preamble is. Thus, the receiver acquires the perturbed CSI viaand feeds it into the target ML model.
We re-implement the target models via details provided in their papers, as well as open source[11]and the dataset[72]. We further improve the robustness of DLoc and FIRE through adversarial training proposed by RAFA. For a fair comparison, we utilize surrogate models used in RAFA to train Magmaw.

Attack Results.We compare our attack with RAFA for a comprehensive evaluation. As shown in Figure18(a), DLoc achieves 0.71m and 1.03m localization errors at the 90th and 99th percentile. However, when Magmaw is present, the results go up to 2.7m and 9.8m. We can observe that Magmaw outperforms RAFA byon average. Figure18(b) describes the accuracy of channel estimation by FIRE. The SNR measures the similarity between the estimated downlink channel and the ground truth. We confirm that Magmaw drops the SNR of the predicted channel by 3.8dB more than RAFA. The observed underperformance of RAFA can be due to the lack of consideration for improving the robustness of adversarial attacks during the training. In contrast, Magmaw achieves high robustness by leveraging a discriminator and diversity loss that increases the variability of perturbation patterns.
To provide an intuition of the attack effect, we visualize an example of channel estimation in Figure19.
Figure19(b) shows that Magmaw causes subcarriers to have symbols that are significantly different from the actual symbols.

SECTION: XConclusion and Future Works

We present Magmaw, a novel attack framework to subvert semantic communication for AI-native networks.
Our results show that the Magmaw is feasible in the real world, and can degrade the performance of both wireless communication and downstream tasks simultaneously. Magmaw maintains a high attack success rate by evading several defenses.
In case studies, we evaluate Magmaw on encrypted communication andCSI modality-based models, proving that Magmaw is transferable.

While Magmaw demonstrates great success, the perturbation designed in this work needs to be powered by software-defined radios for flexible generation of the UAPs. Promising future work is to explore new attack methods,
e.g., intelligent reflecting surfaces[27], to induce small adversarial perturbations.
Another area of future research is to establish practical defense techniques to prevent the proposed attacks.

SECTION: Acknowledgement

We thank the NDSS reviewers for their valuable feedback. This work is partially supported by the U.S. Army/Department of Defense award number W911NF2020267 and Google Ph.D. Fellowship.

SECTION: References

SECTION: Appendix AReal-World Experimental Settings

We choose a representative indoor environment, as depicted in Figure22. In this setting, an unidentified adversary transmits an adversarial signal from behind a wall in Line-of-Sight (LoS) between the transmitter (Tx) and receiver (Rx).We also consider the scenario where multiple users share the spectrum. When multiple devices try to transmit data simultaneously, the Wi-Fi protocol allows only one device to transmit to prevent interference between transmitters[36]. There are two main anti-collision mechanisms: (1) carrier sensing and (2) collision avoidance. Before sending the data, a wireless device first listens to the shared medium to determine whether another device is sending signals. The transmitter detects the signal power of the target channel on the shared medium. If the signal power is greater than a threshold, the transmitter stops transmitting packets and waits for a certain amount of time (usually random). The transmitter repeats the above anti-collision process until it determines that the shared medium is clear.
Magmaw disrupts packets whenever a transmitter sends data by continuously sending adversarial signals.