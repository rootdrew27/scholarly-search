INFO:distilroberta-v1_embs_DEBUG:STARTING EMBEDDING PROCESS!

DEBUG:distilroberta-v1_embs_DEBUG:The paper_list has 46 papers.
INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2308.07279v2_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2308.07279v2_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2309.01837v3_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2309.01837v3_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2311.00207v3_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2311.00207v3_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2312.09440v2_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2312.09440v2_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2403.03802v2_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2403.03802v2_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2403.11585v3_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2403.11585v3_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2403.12778v2_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2403.12778v2_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2404.01415v2_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2404.01415v2_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2405.17388v2_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2405.17388v2_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2406.08298v5_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2406.08298v5_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2406.15955v2_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2406.15955v2_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2407.05941v4_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2407.05941v4_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2409.04405v2_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2409.04405v2_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2410.14845v2_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2410.14845v2_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2410.23279v3_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2410.23279v3_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.06091v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.06091v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.06786v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.06786v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.07265v2_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.07265v2_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.09101v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.09101v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.09420v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.09420v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.09598v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.09598v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.09702v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.09702v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.10718v3_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.10718v3_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.11214v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.11214v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.11376v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.11376v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.12028v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.12028v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.12874v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.12874v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.13037v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.13037v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.13321v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.13321v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.13400v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.13400v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.13423v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.13423v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.13520v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.13520v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.13778v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.13778v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.13913v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.13913v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.13929v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.13929v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.13953v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.13953v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.13975v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.13975v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.14040v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.14040v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.14057v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.14057v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.14109v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.14109v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.14172v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.14172v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.14179v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.14179v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.14354v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.14354v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.14392v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.14392v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.14412v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.14412v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.14427v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.14427v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING EMBEDDING PROCESS!

DEBUG:distilroberta-v1_embs_DEBUG:The paper_list has 46 papers.
INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2308.07279v2_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2308.07279v2_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2309.01837v3_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2309.01837v3_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2311.00207v3_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2311.00207v3_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2312.09440v2_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2312.09440v2_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2403.03802v2_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2403.03802v2_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2403.11585v3_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2403.11585v3_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2403.12778v2_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2403.12778v2_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2404.01415v2_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2404.01415v2_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2405.17388v2_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2405.17388v2_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2406.08298v5_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2406.08298v5_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2406.15955v2_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2406.15955v2_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2407.05941v4_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2407.05941v4_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2409.04405v2_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2409.04405v2_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2410.14845v2_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2410.14845v2_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2410.23279v3_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2410.23279v3_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.06091v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.06091v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.06786v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.06786v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.07265v2_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.07265v2_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.09101v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.09101v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.09420v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.09420v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.09598v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.09598v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.09702v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.09702v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.10718v3_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.10718v3_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.11214v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.11214v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.11376v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.11376v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.12028v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.12028v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.12874v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.12874v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.13037v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.13037v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.13321v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.13321v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.13400v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.13400v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.13423v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.13423v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.13520v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.13520v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.13778v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.13778v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.13913v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.13913v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.13929v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.13929v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.13953v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.13953v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.13975v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.13975v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.14040v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.14040v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.14057v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.14057v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.14109v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.14109v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.14172v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.14172v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.14179v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.14179v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.14354v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.14354v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.14392v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.14392v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.14412v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.14412v1_content.txt

INFO:distilroberta-v1_embs_DEBUG:STARTING TO EMBED: 2411.14427v1_content.txt
INFO:distilroberta-v1_embs_DEBUG:END OF FILE - SAVING EMBEDDINGS FOR 2411.14427v1_content.txt

DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=22)
           2	LOAD_CONST(arg=1, lineno=29)
           4	STORE_FAST(arg=2, lineno=29)
           6	LOAD_GLOBAL(arg=0, lineno=30)
           8	LOAD_FAST(arg=0, lineno=30)
          10	LOAD_ATTR(arg=1, lineno=30)
          12	LOAD_CONST(arg=2, lineno=30)
          14	BINARY_SUBSCR(arg=None, lineno=30)
          16	CALL_FUNCTION(arg=1, lineno=30)
          18	GET_ITER(arg=None, lineno=30)
>         20	FOR_ITER(arg=14, lineno=30)
          22	STORE_FAST(arg=3, lineno=30)
          24	LOAD_FAST(arg=2, lineno=31)
          26	LOAD_FAST(arg=0, lineno=31)
          28	LOAD_FAST(arg=3, lineno=31)
          30	BINARY_SUBSCR(arg=None, lineno=31)
          32	LOAD_FAST(arg=1, lineno=31)
          34	LOAD_FAST(arg=3, lineno=31)
          36	BINARY_SUBSCR(arg=None, lineno=31)
          38	BINARY_SUBTRACT(arg=None, lineno=31)
          40	LOAD_CONST(arg=3, lineno=31)
          42	BINARY_POWER(arg=None, lineno=31)
          44	INPLACE_ADD(arg=None, lineno=31)
          46	STORE_FAST(arg=2, lineno=31)
          48	JUMP_ABSOLUTE(arg=11, lineno=31)
>         50	LOAD_GLOBAL(arg=2, lineno=32)
          52	LOAD_METHOD(arg=3, lineno=32)
          54	LOAD_FAST(arg=2, lineno=32)
          56	CALL_METHOD(arg=1, lineno=32)
          58	RETURN_VALUE(arg=None, lineno=32)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=22)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=29)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=2, lineno=29)
DEBUG:numba.core.byteflow:stack ['$const2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=30)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=30)
DEBUG:numba.core.byteflow:stack ['$6load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_ATTR(arg=1, lineno=30)
DEBUG:numba.core.byteflow:stack ['$6load_global.1', '$x8.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=2, lineno=30)
DEBUG:numba.core.byteflow:stack ['$6load_global.1', '$10load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_SUBSCR(arg=None, lineno=30)
DEBUG:numba.core.byteflow:stack ['$6load_global.1', '$10load_attr.3', '$const12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=CALL_FUNCTION(arg=1, lineno=30)
DEBUG:numba.core.byteflow:stack ['$6load_global.1', '$14binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=GET_ITER(arg=None, lineno=30)
DEBUG:numba.core.byteflow:stack ['$16call_function.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=20, stack=('$18get_iter.7',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=20 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi20.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=20 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=20, inst=FOR_ITER(arg=14, lineno=30)
DEBUG:numba.core.byteflow:stack ['$phi20.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=50, stack=(), blockstack=(), npush=0), Edge(pc=22, stack=('$phi20.0', '$20for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=0), State(pc_initial=22 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=50 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_GLOBAL(arg=2, lineno=32)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_METHOD(arg=3, lineno=32)
DEBUG:numba.core.byteflow:stack ['$50load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=32)
DEBUG:numba.core.byteflow:stack ['$52load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=32)
DEBUG:numba.core.byteflow:stack ['$52load_method.1', '$result54.2']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=RETURN_VALUE(arg=None, lineno=32)
DEBUG:numba.core.byteflow:stack ['$56call_method.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=22 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi22.0', '$phi22.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=22 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=22, inst=STORE_FAST(arg=3, lineno=30)
DEBUG:numba.core.byteflow:stack ['$phi22.0', '$phi22.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=31)
DEBUG:numba.core.byteflow:stack ['$phi22.0']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=31)
DEBUG:numba.core.byteflow:stack ['$phi22.0', '$result24.2']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=3, lineno=31)
DEBUG:numba.core.byteflow:stack ['$phi22.0', '$result24.2', '$x26.3']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=BINARY_SUBSCR(arg=None, lineno=31)
DEBUG:numba.core.byteflow:stack ['$phi22.0', '$result24.2', '$x26.3', '$i28.4']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=31)
DEBUG:numba.core.byteflow:stack ['$phi22.0', '$result24.2', '$30binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=3, lineno=31)
DEBUG:numba.core.byteflow:stack ['$phi22.0', '$result24.2', '$30binary_subscr.5', '$y32.6']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=31)
DEBUG:numba.core.byteflow:stack ['$phi22.0', '$result24.2', '$30binary_subscr.5', '$y32.6', '$i34.7']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BINARY_SUBTRACT(arg=None, lineno=31)
DEBUG:numba.core.byteflow:stack ['$phi22.0', '$result24.2', '$30binary_subscr.5', '$36binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=3, lineno=31)
DEBUG:numba.core.byteflow:stack ['$phi22.0', '$result24.2', '$38binary_subtract.9']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BINARY_POWER(arg=None, lineno=31)
DEBUG:numba.core.byteflow:stack ['$phi22.0', '$result24.2', '$38binary_subtract.9', '$const40.10']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=INPLACE_ADD(arg=None, lineno=31)
DEBUG:numba.core.byteflow:stack ['$phi22.0', '$result24.2', '$42binary_power.11']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=STORE_FAST(arg=2, lineno=31)
DEBUG:numba.core.byteflow:stack ['$phi22.0', '$44inplace_add.12']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=JUMP_ABSOLUTE(arg=11, lineno=31)
DEBUG:numba.core.byteflow:stack ['$phi22.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=20, stack=('$phi22.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=20 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=1): {'$phi20.0'},
             State(pc_initial=22 nstack_initial=2): {'$phi22.1'},
             State(pc_initial=50 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi20.0': State(pc_initial=0 nstack_initial=0),
 '$phi22.1': State(pc_initial=20 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi20.0': {('$18get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi22.0': {('$phi20.0', State(pc_initial=20 nstack_initial=1))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi20.0': {('$18get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=1))},
             '$phi22.0': {('$18get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi20.0': {('$18get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.0': {('$18get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi20.0': {('$18get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.0': {('$18get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi20.0': {('$18get_iter.7', State(pc_initial=0 nstack_initial=0))},
 '$phi22.1': {('$20for_iter.2', State(pc_initial=20 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi20.0': '$18get_iter.7'},
             State(pc_initial=20 nstack_initial=1): {'$phi22.1': '$20for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'value': '$const2.0'}), (6, {'res': '$6load_global.1'}), (8, {'res': '$x8.2'}), (10, {'item': '$x8.2', 'res': '$10load_attr.3'}), (12, {'res': '$const12.4'}), (14, {'index': '$const12.4', 'target': '$10load_attr.3', 'res': '$14binary_subscr.5'}), (16, {'func': '$6load_global.1', 'args': ['$14binary_subscr.5'], 'res': '$16call_function.6'}), (18, {'value': '$16call_function.6', 'res': '$18get_iter.7'})), outgoing_phis={'$phi20.0': '$18get_iter.7'}, blockstack=(), active_try_block=None, outgoing_edgepushed={20: ('$18get_iter.7',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=20 nstack_initial=1):
AdaptBlockInfo(insts=((20, {'iterator': '$phi20.0', 'pair': '$20for_iter.1', 'indval': '$20for_iter.2', 'pred': '$20for_iter.3'}),), outgoing_phis={'$phi22.1': '$20for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: (), 22: ('$phi20.0', '$20for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=22 nstack_initial=2):
AdaptBlockInfo(insts=((22, {'value': '$phi22.1'}), (24, {'res': '$result24.2'}), (26, {'res': '$x26.3'}), (28, {'res': '$i28.4'}), (30, {'index': '$i28.4', 'target': '$x26.3', 'res': '$30binary_subscr.5'}), (32, {'res': '$y32.6'}), (34, {'res': '$i34.7'}), (36, {'index': '$i34.7', 'target': '$y32.6', 'res': '$36binary_subscr.8'}), (38, {'lhs': '$30binary_subscr.5', 'rhs': '$36binary_subscr.8', 'res': '$38binary_subtract.9'}), (40, {'res': '$const40.10'}), (42, {'lhs': '$38binary_subtract.9', 'rhs': '$const40.10', 'res': '$42binary_power.11'}), (44, {'lhs': '$result24.2', 'rhs': '$42binary_power.11', 'res': '$44inplace_add.12'}), (46, {'value': '$44inplace_add.12'}), (48, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={20: ('$phi22.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=50 nstack_initial=0):
AdaptBlockInfo(insts=((50, {'res': '$50load_global.0'}), (52, {'item': '$50load_global.0', 'res': '$52load_method.1'}), (54, {'res': '$result54.2'}), (56, {'func': '$52load_method.1', 'args': ['$result54.2'], 'res': '$56call_method.3'}), (58, {'retval': '$56call_method.3', 'castval': '$58return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    result = const(float, 0.0)               ['result']
    $6load_global.1 = global(range: <class 'range'>) ['$6load_global.1']
    $10load_attr.3 = getattr(value=x, attr=shape) ['$10load_attr.3', 'x']
    $const12.4 = const(int, 0)               ['$const12.4']
    $14binary_subscr.5 = getitem(value=$10load_attr.3, index=$const12.4, fn=<built-in function getitem>) ['$10load_attr.3', '$14binary_subscr.5', '$const12.4']
    $16call_function.6 = call $6load_global.1($14binary_subscr.5, func=$6load_global.1, args=[Var($14binary_subscr.5, distances.py:30)], kws=(), vararg=None, varkwarg=None, target=None) ['$14binary_subscr.5', '$16call_function.6', '$6load_global.1']
    $18get_iter.7 = getiter(value=$16call_function.6) ['$16call_function.6', '$18get_iter.7']
    $phi20.0 = $18get_iter.7                 ['$18get_iter.7', '$phi20.0']
    jump 20                                  []
label 20:
    $20for_iter.1 = iternext(value=$phi20.0) ['$20for_iter.1', '$phi20.0']
    $20for_iter.2 = pair_first(value=$20for_iter.1) ['$20for_iter.1', '$20for_iter.2']
    $20for_iter.3 = pair_second(value=$20for_iter.1) ['$20for_iter.1', '$20for_iter.3']
    $phi22.1 = $20for_iter.2                 ['$20for_iter.2', '$phi22.1']
    branch $20for_iter.3, 22, 50             ['$20for_iter.3']
label 22:
    i = $phi22.1                             ['$phi22.1', 'i']
    $30binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$30binary_subscr.5', 'i', 'x']
    $36binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$36binary_subscr.8', 'i', 'y']
    $38binary_subtract.9 = $30binary_subscr.5 - $36binary_subscr.8 ['$30binary_subscr.5', '$36binary_subscr.8', '$38binary_subtract.9']
    $const40.10 = const(int, 2)              ['$const40.10']
    $42binary_power.11 = $38binary_subtract.9 ** $const40.10 ['$38binary_subtract.9', '$42binary_power.11', '$const40.10']
    $44inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$42binary_power.11, static_lhs=Undefined, static_rhs=Undefined) ['$42binary_power.11', '$44inplace_add.12', 'result']
    result = $44inplace_add.12               ['$44inplace_add.12', 'result']
    jump 20                                  []
label 50:
    $50load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$50load_global.0']
    $52load_method.1 = getattr(value=$50load_global.0, attr=sqrt) ['$50load_global.0', '$52load_method.1']
    $56call_method.3 = call $52load_method.1(result, func=$52load_method.1, args=[Var(result, distances.py:29)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.1', '$56call_method.3', 'result']
    $58return_value.4 = cast(value=$56call_method.3) ['$56call_method.3', '$58return_value.4']
    return $58return_value.4                 ['$58return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A1EFAD030>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $6load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $10load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const12.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $14binary_subscr.5 = static_getitem(value=$10load_attr.3, index=0, index_var=$const12.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16call_function.6 = call $6load_global.1($14binary_subscr.5, func=$6load_global.1, args=[Var($14binary_subscr.5, distances.py:30)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $18get_iter.7 = getiter(value=$16call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi20.0 = $18get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block analysis pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A1EFAD030>
DEBUG:numba.core.ssa:on stmt: $20for_iter.1 = iternext(value=$phi20.0)
DEBUG:numba.core.ssa:on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi22.1 = $20for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $20for_iter.3, 22, 50
DEBUG:numba.core.ssa:==== SSA block analysis pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A1EFAD030>
DEBUG:numba.core.ssa:on stmt: i = $phi22.1
DEBUG:numba.core.ssa:on stmt: $30binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $38binary_subtract.9 = $30binary_subscr.5 - $36binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $const40.10 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $42binary_power.11 = $38binary_subtract.9 ** $const40.10
DEBUG:numba.core.ssa:on stmt: $44inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$42binary_power.11, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $44inplace_add.12
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block analysis pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A1EFAD030>
DEBUG:numba.core.ssa:on stmt: $50load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $52load_method.1 = getattr(value=$50load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $56call_method.3 = call $52load_method.1(result, func=$52load_method.1, args=[Var(result, distances.py:29)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58return_value.4 = cast(value=$56call_method.3)
DEBUG:numba.core.ssa:on stmt: return $58return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10load_attr.3': [(<numba.core.ir.Assign object at 0x0000017A1EFC9210>,
                                 0)],
             '$14binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000017A1EFAC280>,
                                     0)],
             '$16call_function.6': [(<numba.core.ir.Assign object at 0x0000017A1EFC9B10>,
                                     0)],
             '$18get_iter.7': [(<numba.core.ir.Assign object at 0x0000017A1EFC95A0>,
                                0)],
             '$20for_iter.1': [(<numba.core.ir.Assign object at 0x0000017A1EFC9DB0>,
                                20)],
             '$20for_iter.2': [(<numba.core.ir.Assign object at 0x0000017A1EFCA8F0>,
                                20)],
             '$20for_iter.3': [(<numba.core.ir.Assign object at 0x0000017A1EFC9FF0>,
                                20)],
             '$30binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000017A1EFCAF50>,
                                     22)],
             '$36binary_subscr.8': [(<numba.core.ir.Assign object at 0x0000017A1EFCB310>,
                                     22)],
             '$38binary_subtract.9': [(<numba.core.ir.Assign object at 0x0000017A1EFCB490>,
                                       22)],
             '$42binary_power.11': [(<numba.core.ir.Assign object at 0x0000017A1EFCB790>,
                                     22)],
             '$44inplace_add.12': [(<numba.core.ir.Assign object at 0x0000017A1EFCB910>,
                                    22)],
             '$50load_global.0': [(<numba.core.ir.Assign object at 0x0000017A1EFC9720>,
                                   50)],
             '$52load_method.1': [(<numba.core.ir.Assign object at 0x0000017A1EFCBC40>,
                                   50)],
             '$56call_method.3': [(<numba.core.ir.Assign object at 0x0000017A1EFCBF70>,
                                   50)],
             '$58return_value.4': [(<numba.core.ir.Assign object at 0x0000017A1EFAC0A0>,
                                    50)],
             '$6load_global.1': [(<numba.core.ir.Assign object at 0x0000017A1EFC8B20>,
                                  0)],
             '$const12.4': [(<numba.core.ir.Assign object at 0x0000017A1EFC9300>,
                             0)],
             '$const40.10': [(<numba.core.ir.Assign object at 0x0000017A1EFCB5E0>,
                              22)],
             '$phi20.0': [(<numba.core.ir.Assign object at 0x0000017A1EFC8E50>,
                           0)],
             '$phi22.1': [(<numba.core.ir.Assign object at 0x0000017A1EFC9CF0>,
                           20)],
             'i': [(<numba.core.ir.Assign object at 0x0000017A1EFCA020>, 22)],
             'result': [(<numba.core.ir.Assign object at 0x0000017A1EFC8EE0>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000017A1EFCB9D0>,
                         22)],
             'x': [(<numba.core.ir.Assign object at 0x0000017A1EFC9810>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000017A1EFC9060>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017A1EF25840>
DEBUG:numba.core.ssa:Fix SSA violator on var result
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1EF24F10>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: result
DEBUG:numba.core.ssa:replaced with: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $6load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $10load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const12.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $14binary_subscr.5 = static_getitem(value=$10load_attr.3, index=0, index_var=$const12.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16call_function.6 = call $6load_global.1($14binary_subscr.5, func=$6load_global.1, args=[Var($14binary_subscr.5, distances.py:30)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $18get_iter.7 = getiter(value=$16call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi20.0 = $18get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1EF24F10>
DEBUG:numba.core.ssa:on stmt: $20for_iter.1 = iternext(value=$phi20.0)
DEBUG:numba.core.ssa:on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi22.1 = $20for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $20for_iter.3, 22, 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1EF24F10>
DEBUG:numba.core.ssa:on stmt: i = $phi22.1
DEBUG:numba.core.ssa:on stmt: $30binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $38binary_subtract.9 = $30binary_subscr.5 - $36binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $const40.10 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $42binary_power.11 = $38binary_subtract.9 ** $const40.10
DEBUG:numba.core.ssa:on stmt: $44inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$42binary_power.11, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result = $44inplace_add.12
DEBUG:numba.core.ssa:replaced with: result.1 = $44inplace_add.12
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1EF24F10>
DEBUG:numba.core.ssa:on stmt: $50load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $52load_method.1 = getattr(value=$50load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $56call_method.3 = call $52load_method.1(result, func=$52load_method.1, args=[Var(result, distances.py:29)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58return_value.4 = cast(value=$56call_method.3)
DEBUG:numba.core.ssa:on stmt: return $58return_value.4
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000017A1EFC8BB0>],
             22: [<numba.core.ir.Assign object at 0x0000017A1EFCAE30>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1EF24F10>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: result = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $6load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $10load_attr.3 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const12.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $14binary_subscr.5 = static_getitem(value=$10load_attr.3, index=0, index_var=$const12.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16call_function.6 = call $6load_global.1($14binary_subscr.5, func=$6load_global.1, args=[Var($14binary_subscr.5, distances.py:30)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $18get_iter.7 = getiter(value=$16call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi20.0 = $18get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1EF24F10>
DEBUG:numba.core.ssa:on stmt: $20for_iter.1 = iternext(value=$phi20.0)
DEBUG:numba.core.ssa:on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi22.1 = $20for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $20for_iter.3, 22, 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1EF24F10>
DEBUG:numba.core.ssa:on stmt: i = $phi22.1
DEBUG:numba.core.ssa:on stmt: $30binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $38binary_subtract.9 = $30binary_subscr.5 - $36binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $const40.10 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $42binary_power.11 = $38binary_subtract.9 ** $const40.10
DEBUG:numba.core.ssa:on stmt: $44inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$42binary_power.11, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='result' stmt=$44inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$42binary_power.11, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 22
DEBUG:numba.core.ssa:idom 20 from label 22
DEBUG:numba.core.ssa:find_def_from_bottom label 20
DEBUG:numba.core.ssa:find_def_from_top label 20
DEBUG:numba.core.ssa:insert phi node result.2 = phi(incoming_values=[], incoming_blocks=[]) at 20
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def result = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 22
DEBUG:numba.core.ssa:incoming_def result.1 = $44inplace_add.12
DEBUG:numba.core.ssa:replaced with: $44inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$42binary_power.11, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: result.1 = $44inplace_add.12
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1EF24F10>
DEBUG:numba.core.ssa:on stmt: $50load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $52load_method.1 = getattr(value=$50load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $56call_method.3 = call $52load_method.1(result, func=$52load_method.1, args=[Var(result, distances.py:29)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='result' stmt=$56call_method.3 = call $52load_method.1(result, func=$52load_method.1, args=[Var(result, distances.py:29)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 50
DEBUG:numba.core.ssa:idom 20 from label 50
DEBUG:numba.core.ssa:find_def_from_bottom label 20
DEBUG:numba.core.ssa:replaced with: $56call_method.3 = call $52load_method.1(result.2, func=$52load_method.1, args=[Var(result.2, distances.py:30)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58return_value.4 = cast(value=$56call_method.3)
DEBUG:numba.core.ssa:on stmt: return $58return_value.4
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	LOAD_DEREF(arg=1, lineno=216)
           4	LOAD_CONST(arg=1, lineno=216)
           6	CALL_FUNCTION(arg=1, lineno=216)
           8	STORE_FAST(arg=2, lineno=216)
          10	LOAD_DEREF(arg=1, lineno=217)
          12	LOAD_FAST(arg=0, lineno=217)
          14	CALL_FUNCTION(arg=1, lineno=217)
          16	STORE_FAST(arg=0, lineno=217)
          18	LOAD_FAST(arg=1, lineno=218)
          20	LOAD_CONST(arg=2, lineno=218)
          22	COMPARE_OP(arg=0, lineno=218)
          24	POP_JUMP_IF_FALSE(arg=50, lineno=218)
          26	LOAD_CONST(arg=3, lineno=219)
          28	STORE_FAST(arg=3, lineno=219)
          30	LOAD_FAST(arg=1, lineno=220)
          32	UNARY_NEGATIVE(arg=None, lineno=220)
          34	STORE_FAST(arg=4, lineno=220)
          36	LOAD_FAST(arg=4, lineno=221)
          38	LOAD_CONST(arg=2, lineno=221)
          40	COMPARE_OP(arg=0, lineno=221)
          42	POP_JUMP_IF_FALSE(arg=25, lineno=221)
          44	LOAD_GLOBAL(arg=0, lineno=222)
          46	RAISE_VARARGS(arg=1, lineno=222)
>         48	LOAD_DEREF(arg=0, lineno=223)
          50	POP_JUMP_IF_FALSE(arg=49, lineno=223)
          52	LOAD_FAST(arg=0, lineno=224)
          54	LOAD_CONST(arg=2, lineno=224)
          56	COMPARE_OP(arg=2, lineno=224)
          58	POP_JUMP_IF_FALSE(arg=39, lineno=224)
          60	LOAD_DEREF(arg=2, lineno=225)
          62	POP_JUMP_IF_FALSE(arg=35, lineno=225)
          64	LOAD_DEREF(arg=2, lineno=226)
          66	RETURN_VALUE(arg=None, lineno=226)
>         68	LOAD_GLOBAL(arg=1, lineno=228)
          70	LOAD_CONST(arg=4, lineno=228)
          72	CALL_FUNCTION(arg=1, lineno=228)
          74	RAISE_VARARGS(arg=1, lineno=228)
>         76	LOAD_FAST(arg=0, lineno=229)
          78	LOAD_CONST(arg=1, lineno=229)
          80	COMPARE_OP(arg=3, lineno=229)
          82	POP_JUMP_IF_FALSE(arg=49, lineno=229)
          84	LOAD_FAST(arg=0, lineno=229)
          86	LOAD_CONST(arg=5, lineno=229)
          88	COMPARE_OP(arg=3, lineno=229)
          90	POP_JUMP_IF_FALSE(arg=49, lineno=229)
          92	LOAD_CONST(arg=2, lineno=230)
          94	RETURN_VALUE(arg=None, lineno=230)
>         96	JUMP_FORWARD(arg=4, lineno=230)
>         98	LOAD_CONST(arg=6, lineno=232)
         100	STORE_FAST(arg=3, lineno=232)
         102	LOAD_FAST(arg=1, lineno=233)
         104	STORE_FAST(arg=4, lineno=233)
>        106	LOAD_FAST(arg=4, lineno=234)
         108	LOAD_CONST(arg=7, lineno=234)
         110	COMPARE_OP(arg=4, lineno=234)
         112	POP_JUMP_IF_FALSE(arg=66, lineno=234)
         114	LOAD_GLOBAL(arg=2, lineno=236)
         116	LOAD_METHOD(arg=3, lineno=236)
         118	LOAD_FAST(arg=0, lineno=236)
         120	LOAD_GLOBAL(arg=4, lineno=236)
         122	LOAD_FAST(arg=1, lineno=236)
         124	CALL_FUNCTION(arg=1, lineno=236)
         126	CALL_METHOD(arg=2, lineno=236)
         128	RETURN_VALUE(arg=None, lineno=236)
>        130	LOAD_FAST(arg=4, lineno=237)
         132	LOAD_CONST(arg=2, lineno=237)
         134	COMPARE_OP(arg=3, lineno=237)
         136	POP_JUMP_IF_FALSE(arg=90, lineno=237)
>        138	LOAD_FAST(arg=4, lineno=238)
         140	LOAD_CONST(arg=1, lineno=238)
         142	BINARY_AND(arg=None, lineno=238)
         144	POP_JUMP_IF_FALSE(arg=78, lineno=238)
         146	LOAD_FAST(arg=2, lineno=239)
         148	LOAD_FAST(arg=0, lineno=239)
         150	INPLACE_MULTIPLY(arg=None, lineno=239)
         152	STORE_FAST(arg=2, lineno=239)
>        154	LOAD_FAST(arg=4, lineno=240)
         156	LOAD_CONST(arg=1, lineno=240)
         158	INPLACE_RSHIFT(arg=None, lineno=240)
         160	STORE_FAST(arg=4, lineno=240)
         162	LOAD_FAST(arg=0, lineno=241)
         164	LOAD_FAST(arg=0, lineno=241)
         166	INPLACE_MULTIPLY(arg=None, lineno=241)
         168	STORE_FAST(arg=0, lineno=241)
         170	LOAD_FAST(arg=4, lineno=237)
         172	LOAD_CONST(arg=2, lineno=237)
         174	COMPARE_OP(arg=3, lineno=237)
         176	POP_JUMP_IF_TRUE(arg=70, lineno=237)
>        178	LOAD_FAST(arg=3, lineno=243)
         180	POP_JUMP_IF_FALSE(arg=96, lineno=243)
         182	LOAD_CONST(arg=8, lineno=243)
         184	LOAD_FAST(arg=2, lineno=243)
         186	BINARY_TRUE_DIVIDE(arg=None, lineno=243)
         188	RETURN_VALUE(arg=None, lineno=243)
>        190	LOAD_FAST(arg=2, lineno=243)
         192	RETURN_VALUE(arg=None, lineno=243)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=214)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=216)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=216)
DEBUG:numba.core.byteflow:stack ['$2load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=216)
DEBUG:numba.core.byteflow:stack ['$2load_deref.0', '$const4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=2, lineno=216)
DEBUG:numba.core.byteflow:stack ['$6call_function.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=217)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=217)
DEBUG:numba.core.byteflow:stack ['$10load_deref.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=217)
DEBUG:numba.core.byteflow:stack ['$10load_deref.3', '$a12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=0, lineno=217)
DEBUG:numba.core.byteflow:stack ['$14call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=218)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=218)
DEBUG:numba.core.byteflow:stack ['$b18.6']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=218)
DEBUG:numba.core.byteflow:stack ['$b18.6', '$const20.7']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=50, lineno=218)
DEBUG:numba.core.byteflow:stack ['$22compare_op.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=26 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=219)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=STORE_FAST(arg=3, lineno=219)
DEBUG:numba.core.byteflow:stack ['$const26.0']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=220)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=220)
DEBUG:numba.core.byteflow:stack ['$b30.1']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=4, lineno=220)
DEBUG:numba.core.byteflow:stack ['$32unary_negative.2']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=221)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=221)
DEBUG:numba.core.byteflow:stack ['$exp36.3']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=221)
DEBUG:numba.core.byteflow:stack ['$exp36.3', '$const38.4']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=25, lineno=221)
DEBUG:numba.core.byteflow:stack ['$40compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=98 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=232)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=100, inst=STORE_FAST(arg=3, lineno=232)
DEBUG:numba.core.byteflow:stack ['$const98.0']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=233)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=104, inst=STORE_FAST(arg=4, lineno=233)
DEBUG:numba.core.byteflow:stack ['$b102.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=44 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=222)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=222)
DEBUG:numba.core.byteflow:stack ['$44load_global.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=48 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=223)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=49, lineno=223)
DEBUG:numba.core.byteflow:stack ['$48load_deref.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=106 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=234)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=234)
DEBUG:numba.core.byteflow:stack ['$exp106.0']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=234)
DEBUG:numba.core.byteflow:stack ['$exp106.0', '$const108.1']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=66, lineno=234)
DEBUG:numba.core.byteflow:stack ['$110compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=52 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=224)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=224)
DEBUG:numba.core.byteflow:stack ['$a52.0']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=224)
DEBUG:numba.core.byteflow:stack ['$a52.0', '$const54.1']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=39, lineno=224)
DEBUG:numba.core.byteflow:stack ['$56compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=96 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=96, inst=JUMP_FORWARD(arg=4, lineno=230)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=114 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=236)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=236)
DEBUG:numba.core.byteflow:stack ['$114load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=236)
DEBUG:numba.core.byteflow:stack ['$116load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=236)
DEBUG:numba.core.byteflow:stack ['$116load_method.1', '$a118.2']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=236)
DEBUG:numba.core.byteflow:stack ['$116load_method.1', '$a118.2', '$120load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=236)
DEBUG:numba.core.byteflow:stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=236)
DEBUG:numba.core.byteflow:stack ['$116load_method.1', '$a118.2', '$124call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=236)
DEBUG:numba.core.byteflow:stack ['$126call_method.6']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=130 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=237)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=237)
DEBUG:numba.core.byteflow:stack ['$exp130.0']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=237)
DEBUG:numba.core.byteflow:stack ['$exp130.0', '$const132.1']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=90, lineno=237)
DEBUG:numba.core.byteflow:stack ['$134compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=178, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=60 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=225)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=35, lineno=225)
DEBUG:numba.core.byteflow:stack ['$60load_deref.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=76 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=229)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=229)
DEBUG:numba.core.byteflow:stack ['$a76.0']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=229)
DEBUG:numba.core.byteflow:stack ['$a76.0', '$const78.1']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=49, lineno=229)
DEBUG:numba.core.byteflow:stack ['$80compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=138 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=238)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=238)
DEBUG:numba.core.byteflow:stack ['$exp138.0']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=BINARY_AND(arg=None, lineno=238)
DEBUG:numba.core.byteflow:stack ['$exp138.0', '$const140.1']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=78, lineno=238)
DEBUG:numba.core.byteflow:stack ['$142binary_and.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=178 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=178, inst=LOAD_FAST(arg=3, lineno=243)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=180, inst=POP_JUMP_IF_FALSE(arg=96, lineno=243)
DEBUG:numba.core.byteflow:stack ['$invert178.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=182, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=64 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=226)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=226)
DEBUG:numba.core.byteflow:stack ['$64load_deref.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=68 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=228)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=228)
DEBUG:numba.core.byteflow:stack ['$68load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=228)
DEBUG:numba.core.byteflow:stack ['$68load_global.0', '$const70.1']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=228)
DEBUG:numba.core.byteflow:stack ['$72call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=84 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=229)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=229)
DEBUG:numba.core.byteflow:stack ['$a84.0']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=229)
DEBUG:numba.core.byteflow:stack ['$a84.0', '$const86.1']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=49, lineno=229)
DEBUG:numba.core.byteflow:stack ['$88compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=146 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=239)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=239)
DEBUG:numba.core.byteflow:stack ['$r146.0']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=239)
DEBUG:numba.core.byteflow:stack ['$r146.0', '$a148.1']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=STORE_FAST(arg=2, lineno=239)
DEBUG:numba.core.byteflow:stack ['$150inplace_multiply.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=154 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=240)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=240)
DEBUG:numba.core.byteflow:stack ['$exp154.0']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=240)
DEBUG:numba.core.byteflow:stack ['$exp154.0', '$const156.1']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=STORE_FAST(arg=4, lineno=240)
DEBUG:numba.core.byteflow:stack ['$158inplace_rshift.2']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=241)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=241)
DEBUG:numba.core.byteflow:stack ['$a162.3']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=241)
DEBUG:numba.core.byteflow:stack ['$a162.3', '$a164.4']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=STORE_FAST(arg=0, lineno=241)
DEBUG:numba.core.byteflow:stack ['$166inplace_multiply.5']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=4, lineno=237)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=172, inst=LOAD_CONST(arg=2, lineno=237)
DEBUG:numba.core.byteflow:stack ['$exp170.6']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=COMPARE_OP(arg=3, lineno=237)
DEBUG:numba.core.byteflow:stack ['$exp170.6', '$const172.7']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=POP_JUMP_IF_TRUE(arg=70, lineno=237)
DEBUG:numba.core.byteflow:stack ['$174compare_op.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=178, stack=(), blockstack=(), npush=0), Edge(pc=138, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=182 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=182, inst=LOAD_CONST(arg=8, lineno=243)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=243)
DEBUG:numba.core.byteflow:stack ['$const182.0']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=243)
DEBUG:numba.core.byteflow:stack ['$const182.0', '$r184.1']
DEBUG:numba.core.byteflow:dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=243)
DEBUG:numba.core.byteflow:stack ['$186binary_true_divide.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=190 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=243)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=192, inst=RETURN_VALUE(arg=None, lineno=243)
DEBUG:numba.core.byteflow:stack ['$r190.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=92 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=230)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=230)
DEBUG:numba.core.byteflow:stack ['$const92.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=138 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=178 nstack_initial=0): set(),
             State(pc_initial=182 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 96: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 96: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 96: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 178: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {'res': '$exp170.6'}), (172, {'res': '$const172.7'}), (174, {'lhs': '$exp170.6', 'rhs': '$const172.7', 'res': '$174compare_op.8'}), (176, {'pred': '$174compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: (), 138: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=178 nstack_initial=0):
AdaptBlockInfo(insts=((178, {'res': '$invert178.0'}), (180, {'pred': '$invert178.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={182: (), 190: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=182 nstack_initial=0):
AdaptBlockInfo(insts=((182, {'res': '$const182.0'}), (184, {'res': '$r184.1'}), (186, {'lhs': '$const182.0', 'rhs': '$r184.1', 'res': '$186binary_true_divide.2'}), (188, {'retval': '$186binary_true_divide.2', 'castval': '$188return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$r190.0'}), (192, {'retval': '$r190.0', 'castval': '$192return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float32)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float32)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 96                   ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 96                   ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 96                   ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 96:
    jump 106                                 []
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' (built-in)>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 178                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    $const172.7 = const(int, 0)              ['$const172.7']
    $174compare_op.8 = exp != $const172.7    ['$174compare_op.8', '$const172.7', 'exp']
    bool176 = global(bool: <class 'bool'>)   ['bool176']
    $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.8', '$176pred', 'bool176']
    branch $176pred, 138, 178                ['$176pred']
label 178:
    bool180 = global(bool: <class 'bool'>)   ['bool180']
    $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$180pred', 'bool180', 'invert']
    branch $180pred, 182, 190                ['$180pred']
label 182:
    $const182.0 = const(float, 1.0)          ['$const182.0']
    $186binary_true_divide.2 = $const182.0 / r ['$186binary_true_divide.2', '$const182.0', 'r']
    $188return_value.3 = cast(value=$186binary_true_divide.2) ['$186binary_true_divide.2', '$188return_value.3']
    return $188return_value.3                ['$188return_value.3']
label 190:
    $192return_value.1 = cast(value=r)       ['$192return_value.1', 'r']
    return $192return_value.1                ['$192return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A20103F10>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10load_deref.3 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const20.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22compare_op.8 = b < $const20.7
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 98
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A20103F10>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const38.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.5 = exp < $const38.4
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A20103F10>
DEBUG:numba.core.ssa:on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block analysis pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A20103F10>
DEBUG:numba.core.ssa:on stmt: $48load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block analysis pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A20103F10>
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block analysis pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A20103F10>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block analysis pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A20103F10>
DEBUG:numba.core.ssa:on stmt: $const108.1 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = exp > $const108.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 130
DEBUG:numba.core.ssa:==== SSA block analysis pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A20103F10>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $120load_global.3 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128return_value.7 = cast(value=$126call_method.6)
DEBUG:numba.core.ssa:on stmt: return $128return_value.7
DEBUG:numba.core.ssa:==== SSA block analysis pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A20103F10>
DEBUG:numba.core.ssa:on stmt: $const132.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $134compare_op.2 = exp != $const132.1
DEBUG:numba.core.ssa:on stmt: bool136 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $136pred, 138, 178
DEBUG:numba.core.ssa:==== SSA block analysis pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A20103F10>
DEBUG:numba.core.ssa:on stmt: $const140.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $142binary_and.2 = exp & $const140.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 154
DEBUG:numba.core.ssa:==== SSA block analysis pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A20103F10>
DEBUG:numba.core.ssa:on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r = $150inplace_multiply.2
DEBUG:numba.core.ssa:on stmt: jump 154
DEBUG:numba.core.ssa:==== SSA block analysis pass on 154
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A20103F10>
DEBUG:numba.core.ssa:on stmt: $const156.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $158inplace_rshift.2
DEBUG:numba.core.ssa:on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1 = $166inplace_multiply.5
DEBUG:numba.core.ssa:on stmt: $const172.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $174compare_op.8 = exp != $const172.7
DEBUG:numba.core.ssa:on stmt: bool176 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $176pred, 138, 178
DEBUG:numba.core.ssa:==== SSA block analysis pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A20103F10>
DEBUG:numba.core.ssa:on stmt: bool180 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $180pred, 182, 190
DEBUG:numba.core.ssa:==== SSA block analysis pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A20103F10>
DEBUG:numba.core.ssa:on stmt: $const182.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $186binary_true_divide.2 = $const182.0 / r
DEBUG:numba.core.ssa:on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
DEBUG:numba.core.ssa:on stmt: return $188return_value.3
DEBUG:numba.core.ssa:==== SSA block analysis pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A20103F10>
DEBUG:numba.core.ssa:on stmt: $192return_value.1 = cast(value=r)
DEBUG:numba.core.ssa:on stmt: return $192return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [(<numba.core.ir.Assign object at 0x0000017A200DEA10>,
                                  0)],
             '$110compare_op.2': [(<numba.core.ir.Assign object at 0x0000017A200FB880>,
                                   106)],
             '$112pred': [(<numba.core.ir.Assign object at 0x0000017A200FBAF0>,
                           106)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x0000017A200FBD30>,
                                    114)],
             '$116load_method.1': [(<numba.core.ir.Assign object at 0x0000017A200FBEB0>,
                                    114)],
             '$120load_global.3': [(<numba.core.ir.Assign object at 0x0000017A20100190>,
                                    114)],
             '$124call_function.5': [(<numba.core.ir.Assign object at 0x0000017A20100490>,
                                      114)],
             '$126call_method.6': [(<numba.core.ir.Assign object at 0x0000017A20100640>,
                                    114)],
             '$128return_value.7': [(<numba.core.ir.Assign object at 0x0000017A20100730>,
                                     114)],
             '$134compare_op.2': [(<numba.core.ir.Assign object at 0x0000017A20100BE0>,
                                   130)],
             '$136pred': [(<numba.core.ir.Assign object at 0x0000017A20100E50>,
                           130)],
             '$142binary_and.2': [(<numba.core.ir.Assign object at 0x0000017A20101360>,
                                   138)],
             '$144pred': [(<numba.core.ir.Assign object at 0x0000017A201015D0>,
                           138)],
             '$150inplace_multiply.2': [(<numba.core.ir.Assign object at 0x0000017A20101A80>,
                                         146)],
             '$158inplace_rshift.2': [(<numba.core.ir.Assign object at 0x0000017A20101FC0>,
                                       154)],
             '$166inplace_multiply.5': [(<numba.core.ir.Assign object at 0x0000017A20102440>,
                                         154)],
             '$174compare_op.8': [(<numba.core.ir.Assign object at 0x0000017A20102920>,
                                   154)],
             '$176pred': [(<numba.core.ir.Assign object at 0x0000017A20102B90>,
                           154)],
             '$180pred': [(<numba.core.ir.Assign object at 0x0000017A20102EF0>,
                           178)],
             '$186binary_true_divide.2': [(<numba.core.ir.Assign object at 0x0000017A20103400>,
                                           182)],
             '$188return_value.3': [(<numba.core.ir.Assign object at 0x0000017A20103550>,
                                     182)],
             '$192return_value.1': [(<numba.core.ir.Assign object at 0x0000017A201038B0>,
                                     190)],
             '$22compare_op.8': [(<numba.core.ir.Assign object at 0x0000017A200DF220>,
                                  0)],
             '$24pred': [(<numba.core.ir.Assign object at 0x0000017A200DF490>,
                          0)],
             '$2load_deref.0': [(<numba.core.ir.Assign object at 0x0000017A200DE470>,
                                 0)],
             '$40compare_op.5': [(<numba.core.ir.Assign object at 0x0000017A200DFEE0>,
                                  26)],
             '$42pred': [(<numba.core.ir.Assign object at 0x0000017A200F8190>,
                          26)],
             '$44load_global.0': [(<numba.core.ir.Assign object at 0x0000017A200DD150>,
                                   44)],
             '$48load_deref.0': [(<numba.core.ir.Assign object at 0x0000017A200DE1A0>,
                                  48)],
             '$50pred': [(<numba.core.ir.Assign object at 0x0000017A200F8370>,
                          48)],
             '$const108.1': [(<numba.core.ir.Assign object at 0x0000017A200FB6D0>,
                              106)],
             '$const132.1': [(<numba.core.ir.Assign object at 0x0000017A20100A30>,
                              130)],
             '$const140.1': [(<numba.core.ir.Assign object at 0x0000017A201011B0>,
                              138)],
             '$const156.1': [(<numba.core.ir.Assign object at 0x0000017A20101E10>,
                              154)],
             '$const172.7': [(<numba.core.ir.Assign object at 0x0000017A20102770>,
                              154)],
             '$const182.0': [(<numba.core.ir.Assign object at 0x0000017A20103130>,
                              182)],
             '$const20.7': [(<numba.core.ir.Assign object at 0x0000017A200DF070>,
                             0)],
             '$const38.4': [(<numba.core.ir.Assign object at 0x0000017A200DFD30>,
                             26)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x0000017A200DE5F0>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x0000017A200DCA30>, 0)],
             'a.1': [(<numba.core.ir.Assign object at 0x0000017A200DED10>, 0),
                     (<numba.core.ir.Assign object at 0x0000017A20102500>,
                      154)],
             'b': [(<numba.core.ir.Assign object at 0x0000017A200DE3B0>, 0)],
             'bool112': [(<numba.core.ir.Assign object at 0x0000017A200FB9D0>,
                          106)],
             'bool136': [(<numba.core.ir.Assign object at 0x0000017A20100D30>,
                          130)],
             'bool144': [(<numba.core.ir.Assign object at 0x0000017A201014B0>,
                          138)],
             'bool176': [(<numba.core.ir.Assign object at 0x0000017A20102A70>,
                          154)],
             'bool180': [(<numba.core.ir.Assign object at 0x0000017A20102DD0>,
                          178)],
             'bool24': [(<numba.core.ir.Assign object at 0x0000017A200DF370>,
                         0)],
             'bool42': [(<numba.core.ir.Assign object at 0x0000017A200F8070>,
                         26)],
             'bool50': [(<numba.core.ir.Assign object at 0x0000017A200F8250>,
                         48)],
             'exp': [(<numba.core.ir.Assign object at 0x0000017A200DF970>, 26),
                     (<numba.core.ir.Assign object at 0x0000017A200FB460>, 98),
                     (<numba.core.ir.Assign object at 0x0000017A20102080>,
                      154)],
             'invert': [(<numba.core.ir.Assign object at 0x0000017A200DF5B0>,
                         26),
                        (<numba.core.ir.Assign object at 0x0000017A200FB190>,
                         98)],
             'r': [(<numba.core.ir.Assign object at 0x0000017A200DE7D0>, 0),
                   (<numba.core.ir.Assign object at 0x0000017A20101B40>, 146)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017A20103F10>
DEBUG:numba.core.ssa:Fix SSA violator on var r
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:first assign: r
DEBUG:numba.core.ssa:replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10load_deref.3 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const20.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22compare_op.8 = b < $const20.7
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const38.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.5 = exp < $const38.4
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $48load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $const108.1 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = exp > $const108.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $120load_global.3 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128return_value.7 = cast(value=$126call_method.6)
DEBUG:numba.core.ssa:on stmt: return $128return_value.7
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $const132.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $134compare_op.2 = exp != $const132.1
DEBUG:numba.core.ssa:on stmt: bool136 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $136pred, 138, 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $const140.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $142binary_and.2 = exp & $const140.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 154
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r = $150inplace_multiply.2
DEBUG:numba.core.ssa:replaced with: r.1 = $150inplace_multiply.2
DEBUG:numba.core.ssa:on stmt: jump 154
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 154
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $const156.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $158inplace_rshift.2
DEBUG:numba.core.ssa:on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1 = $166inplace_multiply.5
DEBUG:numba.core.ssa:on stmt: $const172.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $174compare_op.8 = exp != $const172.7
DEBUG:numba.core.ssa:on stmt: bool176 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $176pred, 138, 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: bool180 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $180pred, 182, 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $const182.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $186binary_true_divide.2 = $const182.0 / r
DEBUG:numba.core.ssa:on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
DEBUG:numba.core.ssa:on stmt: return $188return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $192return_value.1 = cast(value=r)
DEBUG:numba.core.ssa:on stmt: return $192return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000017A20103A30>],
             146: [<numba.core.ir.Assign object at 0x0000017A200DC910>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10load_deref.3 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const20.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22compare_op.8 = b < $const20.7
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const38.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.5 = exp < $const38.4
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $48load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $const108.1 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = exp > $const108.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $120load_global.3 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128return_value.7 = cast(value=$126call_method.6)
DEBUG:numba.core.ssa:on stmt: return $128return_value.7
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $const132.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $134compare_op.2 = exp != $const132.1
DEBUG:numba.core.ssa:on stmt: bool136 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $136pred, 138, 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $const140.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $142binary_and.2 = exp & $const140.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 154
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 146
DEBUG:numba.core.ssa:idom 138 from label 146
DEBUG:numba.core.ssa:find_def_from_bottom label 138
DEBUG:numba.core.ssa:find_def_from_top label 138
DEBUG:numba.core.ssa:insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 138
DEBUG:numba.core.ssa:find_def_from_bottom label 130
DEBUG:numba.core.ssa:find_def_from_top label 130
DEBUG:numba.core.ssa:idom 106 from label 130
DEBUG:numba.core.ssa:find_def_from_bottom label 106
DEBUG:numba.core.ssa:find_def_from_top label 106
DEBUG:numba.core.ssa:idom 0 from label 106
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_bottom label 154
DEBUG:numba.core.ssa:find_def_from_top label 154
DEBUG:numba.core.ssa:insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
DEBUG:numba.core.ssa:find_def_from_bottom label 138
DEBUG:numba.core.ssa:incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:216)], incoming_blocks=[130])
DEBUG:numba.core.ssa:find_def_from_bottom label 146
DEBUG:numba.core.ssa:incoming_def r.1 = $150inplace_multiply.2
DEBUG:numba.core.ssa:incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
DEBUG:numba.core.ssa:replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $150inplace_multiply.2
DEBUG:numba.core.ssa:on stmt: jump 154
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 154
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $const156.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $158inplace_rshift.2
DEBUG:numba.core.ssa:on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1 = $166inplace_multiply.5
DEBUG:numba.core.ssa:on stmt: $const172.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $174compare_op.8 = exp != $const172.7
DEBUG:numba.core.ssa:on stmt: bool176 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $176pred, 138, 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: bool180 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $180pred, 182, 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $const182.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $186binary_true_divide.2 = $const182.0 / r
DEBUG:numba.core.ssa:find_def var='r' stmt=$186binary_true_divide.2 = $const182.0 / r
DEBUG:numba.core.ssa:find_def_from_top label 182
DEBUG:numba.core.ssa:idom 178 from label 182
DEBUG:numba.core.ssa:find_def_from_bottom label 178
DEBUG:numba.core.ssa:find_def_from_top label 178
DEBUG:numba.core.ssa:insert phi node r.4 = phi(incoming_values=[], incoming_blocks=[]) at 178
DEBUG:numba.core.ssa:find_def_from_bottom label 130
DEBUG:numba.core.ssa:find_def_from_top label 130
DEBUG:numba.core.ssa:idom 106 from label 130
DEBUG:numba.core.ssa:find_def_from_bottom label 106
DEBUG:numba.core.ssa:find_def_from_top label 106
DEBUG:numba.core.ssa:idom 0 from label 106
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_bottom label 154
DEBUG:numba.core.ssa:incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
DEBUG:numba.core.ssa:replaced with: $186binary_true_divide.2 = $const182.0 / r.4
DEBUG:numba.core.ssa:on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
DEBUG:numba.core.ssa:on stmt: return $188return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $192return_value.1 = cast(value=r)
DEBUG:numba.core.ssa:find_def var='r' stmt=$192return_value.1 = cast(value=r)
DEBUG:numba.core.ssa:find_def_from_top label 190
DEBUG:numba.core.ssa:idom 178 from label 190
DEBUG:numba.core.ssa:find_def_from_bottom label 178
DEBUG:numba.core.ssa:replaced with: $192return_value.1 = cast(value=r.4)
DEBUG:numba.core.ssa:on stmt: return $192return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var a.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10load_deref.3 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:first assign: a.1
DEBUG:numba.core.ssa:replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const20.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22compare_op.8 = b < $const20.7
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const38.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.5 = exp < $const38.4
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: $48load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: $const108.1 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = exp > $const108.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $120load_global.3 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128return_value.7 = cast(value=$126call_method.6)
DEBUG:numba.core.ssa:on stmt: return $128return_value.7
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: $const132.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $134compare_op.2 = exp != $const132.1
DEBUG:numba.core.ssa:on stmt: bool136 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $136pred, 138, 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
DEBUG:numba.core.ssa:on stmt: $const140.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $142binary_and.2 = exp & $const140.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 154
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $150inplace_multiply.2
DEBUG:numba.core.ssa:on stmt: jump 154
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 154
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
DEBUG:numba.core.ssa:on stmt: $const156.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $158inplace_rshift.2
DEBUG:numba.core.ssa:on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1 = $166inplace_multiply.5
DEBUG:numba.core.ssa:replaced with: a.1.1 = $166inplace_multiply.5
DEBUG:numba.core.ssa:on stmt: $const172.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $174compare_op.8 = exp != $const172.7
DEBUG:numba.core.ssa:on stmt: bool176 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $176pred, 138, 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
DEBUG:numba.core.ssa:on stmt: bool180 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $180pred, 182, 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: $const182.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $186binary_true_divide.2 = $const182.0 / r.4
DEBUG:numba.core.ssa:on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
DEBUG:numba.core.ssa:on stmt: return $188return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: $192return_value.1 = cast(value=r.4)
DEBUG:numba.core.ssa:on stmt: return $192return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000017A200D1DB0>],
             154: [<numba.core.ir.Assign object at 0x0000017A20130490>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10load_deref.3 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const20.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22compare_op.8 = b < $const20.7
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const38.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.5 = exp < $const38.4
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $48load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $const108.1 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = exp > $const108.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $120load_global.3 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 114
DEBUG:numba.core.ssa:idom 106 from label 114
DEBUG:numba.core.ssa:find_def_from_bottom label 106
DEBUG:numba.core.ssa:find_def_from_top label 106
DEBUG:numba.core.ssa:idom 0 from label 106
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:on stmt: $128return_value.7 = cast(value=$126call_method.6)
DEBUG:numba.core.ssa:on stmt: return $128return_value.7
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $const132.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $134compare_op.2 = exp != $const132.1
DEBUG:numba.core.ssa:on stmt: bool136 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $136pred, 138, 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
DEBUG:numba.core.ssa:on stmt: $const140.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $142binary_and.2 = exp & $const140.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 154
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 146
DEBUG:numba.core.ssa:idom 138 from label 146
DEBUG:numba.core.ssa:find_def_from_bottom label 138
DEBUG:numba.core.ssa:find_def_from_top label 138
DEBUG:numba.core.ssa:insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 138
DEBUG:numba.core.ssa:find_def_from_bottom label 130
DEBUG:numba.core.ssa:find_def_from_top label 130
DEBUG:numba.core.ssa:idom 106 from label 130
DEBUG:numba.core.ssa:find_def_from_bottom label 106
DEBUG:numba.core.ssa:find_def_from_top label 106
DEBUG:numba.core.ssa:idom 0 from label 106
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_bottom label 154
DEBUG:numba.core.ssa:incoming_def a.1.1 = $166inplace_multiply.5
DEBUG:numba.core.ssa:replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $150inplace_multiply.2
DEBUG:numba.core.ssa:on stmt: jump 154
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 154
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
DEBUG:numba.core.ssa:on stmt: $const156.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $158inplace_rshift.2
DEBUG:numba.core.ssa:on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 154
DEBUG:numba.core.ssa:idom 138 from label 154
DEBUG:numba.core.ssa:find_def_from_bottom label 138
DEBUG:numba.core.ssa:replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $166inplace_multiply.5
DEBUG:numba.core.ssa:on stmt: $const172.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $174compare_op.8 = exp != $const172.7
DEBUG:numba.core.ssa:on stmt: bool176 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $176pred, 138, 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
DEBUG:numba.core.ssa:on stmt: bool180 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $180pred, 182, 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $const182.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $186binary_true_divide.2 = $const182.0 / r.4
DEBUG:numba.core.ssa:on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
DEBUG:numba.core.ssa:on stmt: return $188return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A20103010>
DEBUG:numba.core.ssa:on stmt: $192return_value.1 = cast(value=r.4)
DEBUG:numba.core.ssa:on stmt: return $192return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var invert
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D21D0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10load_deref.3 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const20.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22compare_op.8 = b < $const20.7
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D21D0>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:first assign: invert
DEBUG:numba.core.ssa:replaced with: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const38.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.5 = exp < $const38.4
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D21D0>
DEBUG:numba.core.ssa:on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D21D0>
DEBUG:numba.core.ssa:on stmt: $48load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D21D0>
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D21D0>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, False)
DEBUG:numba.core.ssa:replaced with: invert.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D21D0>
DEBUG:numba.core.ssa:on stmt: $const108.1 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = exp > $const108.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D21D0>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $120load_global.3 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128return_value.7 = cast(value=$126call_method.6)
DEBUG:numba.core.ssa:on stmt: return $128return_value.7
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D21D0>
DEBUG:numba.core.ssa:on stmt: $const132.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $134compare_op.2 = exp != $const132.1
DEBUG:numba.core.ssa:on stmt: bool136 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $136pred, 138, 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D21D0>
DEBUG:numba.core.ssa:on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
DEBUG:numba.core.ssa:on stmt: $const140.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $142binary_and.2 = exp & $const140.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 154
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D21D0>
DEBUG:numba.core.ssa:on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $150inplace_multiply.2
DEBUG:numba.core.ssa:on stmt: jump 154
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 154
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D21D0>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
DEBUG:numba.core.ssa:on stmt: $const156.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $158inplace_rshift.2
DEBUG:numba.core.ssa:on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $166inplace_multiply.5
DEBUG:numba.core.ssa:on stmt: $const172.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $174compare_op.8 = exp != $const172.7
DEBUG:numba.core.ssa:on stmt: bool176 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $176pred, 138, 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D21D0>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
DEBUG:numba.core.ssa:on stmt: bool180 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $180pred, 182, 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D21D0>
DEBUG:numba.core.ssa:on stmt: $const182.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $186binary_true_divide.2 = $const182.0 / r.4
DEBUG:numba.core.ssa:on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
DEBUG:numba.core.ssa:on stmt: return $188return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A200D21D0>
DEBUG:numba.core.ssa:on stmt: $192return_value.1 = cast(value=r.4)
DEBUG:numba.core.ssa:on stmt: return $192return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x0000017A200D3580>],
             98: [<numba.core.ir.Assign object at 0x0000017A20103C10>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200DCF10>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10load_deref.3 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const20.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22compare_op.8 = b < $const20.7
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200DCF10>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const38.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.5 = exp < $const38.4
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200DCF10>
DEBUG:numba.core.ssa:on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200DCF10>
DEBUG:numba.core.ssa:on stmt: $48load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200DCF10>
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200DCF10>
DEBUG:numba.core.ssa:on stmt: invert.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200DCF10>
DEBUG:numba.core.ssa:on stmt: $const108.1 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = exp > $const108.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200DCF10>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $120load_global.3 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128return_value.7 = cast(value=$126call_method.6)
DEBUG:numba.core.ssa:on stmt: return $128return_value.7
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200DCF10>
DEBUG:numba.core.ssa:on stmt: $const132.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $134compare_op.2 = exp != $const132.1
DEBUG:numba.core.ssa:on stmt: bool136 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $136pred, 138, 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200DCF10>
DEBUG:numba.core.ssa:on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
DEBUG:numba.core.ssa:on stmt: $const140.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $142binary_and.2 = exp & $const140.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 154
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200DCF10>
DEBUG:numba.core.ssa:on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $150inplace_multiply.2
DEBUG:numba.core.ssa:on stmt: jump 154
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 154
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200DCF10>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
DEBUG:numba.core.ssa:on stmt: $const156.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $158inplace_rshift.2
DEBUG:numba.core.ssa:on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $166inplace_multiply.5
DEBUG:numba.core.ssa:on stmt: $const172.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $174compare_op.8 = exp != $const172.7
DEBUG:numba.core.ssa:on stmt: bool176 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $176pred, 138, 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200DCF10>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
DEBUG:numba.core.ssa:on stmt: bool180 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='invert' stmt=$180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 178
DEBUG:numba.core.ssa:idom 130 from label 178
DEBUG:numba.core.ssa:find_def_from_bottom label 130
DEBUG:numba.core.ssa:find_def_from_top label 130
DEBUG:numba.core.ssa:idom 106 from label 130
DEBUG:numba.core.ssa:find_def_from_bottom label 106
DEBUG:numba.core.ssa:find_def_from_top label 106
DEBUG:numba.core.ssa:insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
DEBUG:numba.core.ssa:find_def_from_bottom label 96
DEBUG:numba.core.ssa:find_def_from_top label 96
DEBUG:numba.core.ssa:idom 48 from label 96
DEBUG:numba.core.ssa:find_def_from_bottom label 48
DEBUG:numba.core.ssa:find_def_from_top label 48
DEBUG:numba.core.ssa:idom 26 from label 48
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:incoming_def invert = const(bool, True)
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:incoming_def invert.1 = const(bool, False)
DEBUG:numba.core.ssa:replaced with: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $180pred, 182, 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200DCF10>
DEBUG:numba.core.ssa:on stmt: $const182.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $186binary_true_divide.2 = $const182.0 / r.4
DEBUG:numba.core.ssa:on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
DEBUG:numba.core.ssa:on stmt: return $188return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200DCF10>
DEBUG:numba.core.ssa:on stmt: $192return_value.1 = cast(value=r.4)
DEBUG:numba.core.ssa:on stmt: return $192return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var exp
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103F70>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10load_deref.3 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const20.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22compare_op.8 = b < $const20.7
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103F70>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:first assign: exp
DEBUG:numba.core.ssa:replaced with: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const38.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.5 = exp < $const38.4
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103F70>
DEBUG:numba.core.ssa:on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103F70>
DEBUG:numba.core.ssa:on stmt: $48load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103F70>
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103F70>
DEBUG:numba.core.ssa:on stmt: invert.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:replaced with: exp.1 = b
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103F70>
DEBUG:numba.core.ssa:on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[96, 98])
DEBUG:numba.core.ssa:on stmt: $const108.1 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = exp > $const108.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103F70>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $120load_global.3 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128return_value.7 = cast(value=$126call_method.6)
DEBUG:numba.core.ssa:on stmt: return $128return_value.7
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103F70>
DEBUG:numba.core.ssa:on stmt: $const132.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $134compare_op.2 = exp != $const132.1
DEBUG:numba.core.ssa:on stmt: bool136 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $136pred, 138, 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103F70>
DEBUG:numba.core.ssa:on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
DEBUG:numba.core.ssa:on stmt: $const140.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $142binary_and.2 = exp & $const140.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 154
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103F70>
DEBUG:numba.core.ssa:on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $150inplace_multiply.2
DEBUG:numba.core.ssa:on stmt: jump 154
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 154
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103F70>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
DEBUG:numba.core.ssa:on stmt: $const156.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $158inplace_rshift.2
DEBUG:numba.core.ssa:replaced with: exp.2 = $158inplace_rshift.2
DEBUG:numba.core.ssa:on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $166inplace_multiply.5
DEBUG:numba.core.ssa:on stmt: $const172.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $174compare_op.8 = exp != $const172.7
DEBUG:numba.core.ssa:on stmt: bool176 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $176pred, 138, 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103F70>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
DEBUG:numba.core.ssa:on stmt: bool180 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $180pred, 182, 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103F70>
DEBUG:numba.core.ssa:on stmt: $const182.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $186binary_true_divide.2 = $const182.0 / r.4
DEBUG:numba.core.ssa:on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
DEBUG:numba.core.ssa:on stmt: return $188return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A20103F70>
DEBUG:numba.core.ssa:on stmt: $192return_value.1 = cast(value=r.4)
DEBUG:numba.core.ssa:on stmt: return $192return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x0000017A20103DF0>],
             98: [<numba.core.ir.Assign object at 0x0000017A200DD0F0>],
             154: [<numba.core.ir.Assign object at 0x0000017A20130F10>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10load_deref.3 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const20.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22compare_op.8 = b < $const20.7
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const38.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.5 = exp < $const38.4
DEBUG:numba.core.ssa:find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: $48load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: invert.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp.1 = b
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[96, 98])
DEBUG:numba.core.ssa:on stmt: $const108.1 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = exp > $const108.1
DEBUG:numba.core.ssa:find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
DEBUG:numba.core.ssa:find_def_from_top label 106
DEBUG:numba.core.ssa:insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
DEBUG:numba.core.ssa:find_def_from_bottom label 96
DEBUG:numba.core.ssa:find_def_from_top label 96
DEBUG:numba.core.ssa:idom 48 from label 96
DEBUG:numba.core.ssa:find_def_from_bottom label 48
DEBUG:numba.core.ssa:find_def_from_top label 48
DEBUG:numba.core.ssa:idom 26 from label 48
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:incoming_def exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:incoming_def exp.1 = b
DEBUG:numba.core.ssa:replaced with: $110compare_op.2 = exp.3 > $const108.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $120load_global.3 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128return_value.7 = cast(value=$126call_method.6)
DEBUG:numba.core.ssa:on stmt: return $128return_value.7
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: $const132.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $134compare_op.2 = exp != $const132.1
DEBUG:numba.core.ssa:find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
DEBUG:numba.core.ssa:find_def_from_top label 130
DEBUG:numba.core.ssa:idom 106 from label 130
DEBUG:numba.core.ssa:find_def_from_bottom label 106
DEBUG:numba.core.ssa:replaced with: $134compare_op.2 = exp.3 != $const132.1
DEBUG:numba.core.ssa:on stmt: bool136 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $136pred, 138, 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
DEBUG:numba.core.ssa:on stmt: $const140.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $142binary_and.2 = exp & $const140.1
DEBUG:numba.core.ssa:find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
DEBUG:numba.core.ssa:find_def_from_top label 138
DEBUG:numba.core.ssa:insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 138
DEBUG:numba.core.ssa:find_def_from_bottom label 130
DEBUG:numba.core.ssa:find_def_from_top label 130
DEBUG:numba.core.ssa:idom 106 from label 130
DEBUG:numba.core.ssa:find_def_from_bottom label 106
DEBUG:numba.core.ssa:incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[96, 98])
DEBUG:numba.core.ssa:find_def_from_bottom label 154
DEBUG:numba.core.ssa:incoming_def exp.2 = $158inplace_rshift.2
DEBUG:numba.core.ssa:replaced with: $142binary_and.2 = exp.4 & $const140.1
DEBUG:numba.core.ssa:on stmt: bool144 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $144pred, 146, 154
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $150inplace_multiply.2
DEBUG:numba.core.ssa:on stmt: jump 154
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 154
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
DEBUG:numba.core.ssa:on stmt: $const156.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 154
DEBUG:numba.core.ssa:idom 138 from label 154
DEBUG:numba.core.ssa:find_def_from_bottom label 138
DEBUG:numba.core.ssa:replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp.2 = $158inplace_rshift.2
DEBUG:numba.core.ssa:on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $166inplace_multiply.5
DEBUG:numba.core.ssa:on stmt: $const172.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $174compare_op.8 = exp != $const172.7
DEBUG:numba.core.ssa:find_def var='exp' stmt=$174compare_op.8 = exp != $const172.7
DEBUG:numba.core.ssa:replaced with: $174compare_op.8 = exp.2 != $const172.7
DEBUG:numba.core.ssa:on stmt: bool176 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $176pred, 138, 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
DEBUG:numba.core.ssa:on stmt: bool180 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $180pred, 182, 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: $const182.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $186binary_true_divide.2 = $const182.0 / r.4
DEBUG:numba.core.ssa:on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
DEBUG:numba.core.ssa:on stmt: return $188return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A200D2020>
DEBUG:numba.core.ssa:on stmt: $192return_value.1 = cast(value=r.4)
DEBUG:numba.core.ssa:on stmt: return $192return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=14)
           2	LOAD_GLOBAL(arg=0, lineno=31)
           4	LOAD_ATTR(arg=1, lineno=31)
           6	LOAD_FAST(arg=0, lineno=31)
           8	LOAD_ATTR(arg=2, lineno=31)
          10	LOAD_CONST(arg=1, lineno=31)
          12	BINARY_SUBSCR(arg=None, lineno=31)
          14	LOAD_FAST(arg=1, lineno=31)
          16	BUILD_TUPLE(arg=2, lineno=31)
          18	LOAD_GLOBAL(arg=0, lineno=31)
          20	LOAD_ATTR(arg=3, lineno=31)
          22	LOAD_CONST(arg=2, lineno=31)
          24	CALL_FUNCTION_KW(arg=2, lineno=31)
          26	STORE_FAST(arg=2, lineno=31)
          28	LOAD_GLOBAL(arg=4, lineno=32)
          30	LOAD_METHOD(arg=5, lineno=32)
          32	LOAD_FAST(arg=0, lineno=32)
          34	LOAD_ATTR(arg=2, lineno=32)
          36	LOAD_CONST(arg=1, lineno=32)
          38	BINARY_SUBSCR(arg=None, lineno=32)
          40	CALL_METHOD(arg=1, lineno=32)
          42	GET_ITER(arg=None, lineno=32)
>         44	FOR_ITER(arg=20, lineno=32)
          46	STORE_FAST(arg=3, lineno=32)
          48	LOAD_FAST(arg=0, lineno=34)
          50	LOAD_FAST(arg=3, lineno=34)
          52	BINARY_SUBSCR(arg=None, lineno=34)
          54	LOAD_ATTR(arg=6, lineno=34)
          56	LOAD_CONST(arg=3, lineno=34)
          58	LOAD_CONST(arg=4, lineno=34)
          60	CALL_FUNCTION_KW(arg=1, lineno=34)
          62	STORE_FAST(arg=4, lineno=34)
          64	LOAD_FAST(arg=4, lineno=35)
          66	LOAD_CONST(arg=5, lineno=35)
          68	LOAD_FAST(arg=1, lineno=35)
          70	BUILD_SLICE(arg=2, lineno=35)
          72	BINARY_SUBSCR(arg=None, lineno=35)
          74	STORE_FAST(arg=4, lineno=35)
          76	LOAD_FAST(arg=4, lineno=36)
          78	LOAD_FAST(arg=2, lineno=36)
          80	LOAD_FAST(arg=3, lineno=36)
          82	STORE_SUBSCR(arg=None, lineno=36)
          84	JUMP_ABSOLUTE(arg=23, lineno=36)
>         86	LOAD_FAST(arg=2, lineno=37)
          88	RETURN_VALUE(arg=None, lineno=37)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=14)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=31)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=31)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=31)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=31)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$X6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=31)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=31)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$const10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=31)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$12binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=BUILD_TUPLE(arg=2, lineno=31)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$12binary_subscr.5', '$n_neighbors14.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=0, lineno=31)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$16build_tuple.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_ATTR(arg=3, lineno=31)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$16build_tuple.7', '$18load_global.8']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_CONST(arg=2, lineno=31)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$16build_tuple.7', '$20load_attr.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL_FUNCTION_KW(arg=2, lineno=31)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$16build_tuple.7', '$20load_attr.9', '$const22.10']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=STORE_FAST(arg=2, lineno=31)
DEBUG:numba.core.byteflow:stack ['$24call_function_kw.11']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_GLOBAL(arg=4, lineno=32)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_METHOD(arg=5, lineno=32)
DEBUG:numba.core.byteflow:stack ['$28load_global.12']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=32)
DEBUG:numba.core.byteflow:stack ['$30load_method.13']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_ATTR(arg=2, lineno=32)
DEBUG:numba.core.byteflow:stack ['$30load_method.13', '$X32.14']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=32)
DEBUG:numba.core.byteflow:stack ['$30load_method.13', '$34load_attr.15']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BINARY_SUBSCR(arg=None, lineno=32)
DEBUG:numba.core.byteflow:stack ['$30load_method.13', '$34load_attr.15', '$const36.16']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=CALL_METHOD(arg=1, lineno=32)
DEBUG:numba.core.byteflow:stack ['$30load_method.13', '$38binary_subscr.17']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=GET_ITER(arg=None, lineno=32)
DEBUG:numba.core.byteflow:stack ['$40call_method.18']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=('$42get_iter.19',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi44.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=44 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=44, inst=FOR_ITER(arg=20, lineno=32)
DEBUG:numba.core.byteflow:stack ['$phi44.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=86, stack=(), blockstack=(), npush=0), Edge(pc=46, stack=('$phi44.0', '$44for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=86 nstack_initial=0), State(pc_initial=46 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=86 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=2, lineno=37)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=RETURN_VALUE(arg=None, lineno=37)
DEBUG:numba.core.byteflow:stack ['$knn_indices86.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=46 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi46.0', '$phi46.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=46 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=46, inst=STORE_FAST(arg=3, lineno=32)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$phi46.1']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=0, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi46.0']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=3, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$X48.2']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=BINARY_SUBSCR(arg=None, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$X48.2', '$row50.3']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_ATTR(arg=6, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$52binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_CONST(arg=3, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$54load_attr.5']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_CONST(arg=4, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$54load_attr.5', '$const56.6']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=CALL_FUNCTION_KW(arg=1, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$54load_attr.5', '$const56.6', '$const58.7']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=STORE_FAST(arg=4, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$60call_function_kw.8']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=4, lineno=35)
DEBUG:numba.core.byteflow:stack ['$phi46.0']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_CONST(arg=5, lineno=35)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$v64.9']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=1, lineno=35)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$v64.9', '$const66.10']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=BUILD_SLICE(arg=2, lineno=35)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$v64.9', '$const66.10', '$n_neighbors68.11']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=35)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$v64.9', '$70build_slice.13']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=STORE_FAST(arg=4, lineno=35)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$72binary_subscr.14']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=36)
DEBUG:numba.core.byteflow:stack ['$phi46.0']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=36)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$v76.15']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=3, lineno=36)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$v76.15', '$knn_indices78.16']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=STORE_SUBSCR(arg=None, lineno=36)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$v76.15', '$knn_indices78.16', '$row80.17']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=JUMP_ABSOLUTE(arg=23, lineno=36)
DEBUG:numba.core.byteflow:stack ['$phi46.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=('$phi46.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=1): {'$phi44.0'},
             State(pc_initial=46 nstack_initial=2): {'$phi46.1'},
             State(pc_initial=86 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi44.0': State(pc_initial=0 nstack_initial=0),
 '$phi46.1': State(pc_initial=44 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi44.0': {('$42get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi46.0', State(pc_initial=46 nstack_initial=2))},
             '$phi46.0': {('$phi44.0', State(pc_initial=44 nstack_initial=1))},
             '$phi46.1': {('$44for_iter.2',
                           State(pc_initial=44 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi44.0': {('$42get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi44.0', State(pc_initial=44 nstack_initial=1))},
             '$phi46.0': {('$42get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi46.1': {('$44for_iter.2',
                           State(pc_initial=44 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi44.0': {('$42get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi46.0': {('$42get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi46.1': {('$44for_iter.2',
                           State(pc_initial=44 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi44.0': {('$42get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi46.0': {('$42get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi46.1': {('$44for_iter.2',
                           State(pc_initial=44 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi44.0': {('$42get_iter.19', State(pc_initial=0 nstack_initial=0))},
 '$phi46.1': {('$44for_iter.2', State(pc_initial=44 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi44.0': '$42get_iter.19'},
             State(pc_initial=44 nstack_initial=1): {'$phi46.1': '$44for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$X6.2'}), (8, {'item': '$X6.2', 'res': '$8load_attr.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$8load_attr.3', 'res': '$12binary_subscr.5'}), (14, {'res': '$n_neighbors14.6'}), (16, {'items': ['$12binary_subscr.5', '$n_neighbors14.6'], 'res': '$16build_tuple.7'}), (18, {'res': '$18load_global.8'}), (20, {'item': '$18load_global.8', 'res': '$20load_attr.9'}), (22, {'res': '$const22.10'}), (24, {'func': '$4load_attr.1', 'args': ['$16build_tuple.7', '$20load_attr.9'], 'names': '$const22.10', 'res': '$24call_function_kw.11'}), (26, {'value': '$24call_function_kw.11'}), (28, {'res': '$28load_global.12'}), (30, {'item': '$28load_global.12', 'res': '$30load_method.13'}), (32, {'res': '$X32.14'}), (34, {'item': '$X32.14', 'res': '$34load_attr.15'}), (36, {'res': '$const36.16'}), (38, {'index': '$const36.16', 'target': '$34load_attr.15', 'res': '$38binary_subscr.17'}), (40, {'func': '$30load_method.13', 'args': ['$38binary_subscr.17'], 'res': '$40call_method.18'}), (42, {'value': '$40call_method.18', 'res': '$42get_iter.19'})), outgoing_phis={'$phi44.0': '$42get_iter.19'}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: ('$42get_iter.19',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((44, {'iterator': '$phi44.0', 'pair': '$44for_iter.1', 'indval': '$44for_iter.2', 'pred': '$44for_iter.3'}),), outgoing_phis={'$phi46.1': '$44for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={86: (), 46: ('$phi44.0', '$44for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=46 nstack_initial=2):
AdaptBlockInfo(insts=((46, {'value': '$phi46.1'}), (48, {'res': '$X48.2'}), (50, {'res': '$row50.3'}), (52, {'index': '$row50.3', 'target': '$X48.2', 'res': '$52binary_subscr.4'}), (54, {'item': '$52binary_subscr.4', 'res': '$54load_attr.5'}), (56, {'res': '$const56.6'}), (58, {'res': '$const58.7'}), (60, {'func': '$54load_attr.5', 'args': ['$const56.6'], 'names': '$const58.7', 'res': '$60call_function_kw.8'}), (62, {'value': '$60call_function_kw.8'}), (64, {'res': '$v64.9'}), (66, {'res': '$const66.10'}), (68, {'res': '$n_neighbors68.11'}), (70, {'start': '$const66.10', 'stop': '$n_neighbors68.11', 'step': None, 'res': '$70build_slice.13', 'slicevar': '$70build_slice.12'}), (72, {'index': '$70build_slice.13', 'target': '$v64.9', 'res': '$72binary_subscr.14'}), (74, {'value': '$72binary_subscr.14'}), (76, {'res': '$v76.15'}), (78, {'res': '$knn_indices78.16'}), (80, {'res': '$row80.17'}), (82, {'target': '$knn_indices78.16', 'index': '$row80.17', 'value': '$v76.15'}), (84, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: ('$phi46.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$knn_indices86.0'}), (88, {'retval': '$knn_indices86.0', 'castval': '$88return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    X = arg(0, name=X)                       ['X']
    n_neighbors = arg(1, name=n_neighbors)   ['n_neighbors']
    $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    $8load_attr.3 = getattr(value=X, attr=shape) ['$8load_attr.3', 'X']
    $const10.4 = const(int, 0)               ['$const10.4']
    $12binary_subscr.5 = getitem(value=$8load_attr.3, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$8load_attr.3', '$const10.4']
    $16build_tuple.7 = build_tuple(items=[Var($12binary_subscr.5, utils.py:31), Var(n_neighbors, utils.py:14)]) ['$12binary_subscr.5', '$16build_tuple.7', 'n_neighbors']
    $18load_global.8 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.8']
    $20load_attr.9 = getattr(value=$18load_global.8, attr=int32) ['$18load_global.8', '$20load_attr.9']
    knn_indices = call $4load_attr.1($16build_tuple.7, func=$4load_attr.1, args=[Var($16build_tuple.7, utils.py:31)], kws=[('dtype', Var($20load_attr.9, utils.py:31))], vararg=None, varkwarg=None, target=None) ['$16build_tuple.7', '$20load_attr.9', '$4load_attr.1', 'knn_indices']
    $28load_global.12 = global(numba: <module 'numba' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numba\\__init__.py'>) ['$28load_global.12']
    $30load_method.13 = getattr(value=$28load_global.12, attr=prange) ['$28load_global.12', '$30load_method.13']
    $34load_attr.15 = getattr(value=X, attr=shape) ['$34load_attr.15', 'X']
    $const36.16 = const(int, 0)              ['$const36.16']
    $38binary_subscr.17 = getitem(value=$34load_attr.15, index=$const36.16, fn=<built-in function getitem>) ['$34load_attr.15', '$38binary_subscr.17', '$const36.16']
    $40call_method.18 = call $30load_method.13($38binary_subscr.17, func=$30load_method.13, args=[Var($38binary_subscr.17, utils.py:32)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_method.13', '$38binary_subscr.17', '$40call_method.18']
    $42get_iter.19 = getiter(value=$40call_method.18) ['$40call_method.18', '$42get_iter.19']
    $phi44.0 = $42get_iter.19                ['$42get_iter.19', '$phi44.0']
    jump 44                                  []
label 44:
    $44for_iter.1 = iternext(value=$phi44.0) ['$44for_iter.1', '$phi44.0']
    $44for_iter.2 = pair_first(value=$44for_iter.1) ['$44for_iter.1', '$44for_iter.2']
    $44for_iter.3 = pair_second(value=$44for_iter.1) ['$44for_iter.1', '$44for_iter.3']
    $phi46.1 = $44for_iter.2                 ['$44for_iter.2', '$phi46.1']
    branch $44for_iter.3, 46, 86             ['$44for_iter.3']
label 46:
    row = $phi46.1                           ['$phi46.1', 'row']
    $52binary_subscr.4 = getitem(value=X, index=row, fn=<built-in function getitem>) ['$52binary_subscr.4', 'X', 'row']
    $54load_attr.5 = getattr(value=$52binary_subscr.4, attr=argsort) ['$52binary_subscr.4', '$54load_attr.5']
    $const56.6 = const(str, quicksort)       ['$const56.6']
    v = call $54load_attr.5(func=$54load_attr.5, args=[], kws=[('kind', Var($const56.6, utils.py:34))], vararg=None, varkwarg=None, target=None) ['$54load_attr.5', '$const56.6', 'v']
    $const66.10 = const(NoneType, None)      ['$const66.10']
    $70build_slice.12 = global(slice: <class 'slice'>) ['$70build_slice.12']
    $70build_slice.13 = call $70build_slice.12($const66.10, n_neighbors, func=$70build_slice.12, args=(Var($const66.10, utils.py:35), Var(n_neighbors, utils.py:14)), kws=(), vararg=None, varkwarg=None, target=None) ['$70build_slice.12', '$70build_slice.13', '$const66.10', 'n_neighbors']
    v = getitem(value=v, index=$70build_slice.13, fn=<built-in function getitem>) ['$70build_slice.13', 'v', 'v']
    knn_indices[row] = v                     ['knn_indices', 'row', 'v']
    jump 44                                  []
label 86:
    $88return_value.1 = cast(value=knn_indices) ['$88return_value.1', 'knn_indices']
    return $88return_value.1                 ['$88return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A1F0D74C0>
DEBUG:numba.core.ssa:on stmt: X = arg(0, name=X)
DEBUG:numba.core.ssa:on stmt: n_neighbors = arg(1, name=n_neighbors)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=X, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16build_tuple.7 = build_tuple(items=[Var($12binary_subscr.5, utils.py:31), Var(n_neighbors, utils.py:14)])
DEBUG:numba.core.ssa:on stmt: $18load_global.8 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $20load_attr.9 = getattr(value=$18load_global.8, attr=int32)
DEBUG:numba.core.ssa:on stmt: knn_indices = call $4load_attr.1($16build_tuple.7, func=$4load_attr.1, args=[Var($16build_tuple.7, utils.py:31)], kws=[('dtype', Var($20load_attr.9, utils.py:31))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $28load_global.12 = global(numba: <module 'numba' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numba\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.13 = getattr(value=$28load_global.12, attr=prange)
DEBUG:numba.core.ssa:on stmt: $34load_attr.15 = getattr(value=X, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const36.16 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $38binary_subscr.17 = static_getitem(value=$34load_attr.15, index=0, index_var=$const36.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $40call_method.18 = call $30load_method.13($38binary_subscr.17, func=$30load_method.13, args=[Var($38binary_subscr.17, utils.py:32)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $42get_iter.19 = getiter(value=$40call_method.18)
DEBUG:numba.core.ssa:on stmt: $phi44.0 = $42get_iter.19
DEBUG:numba.core.ssa:on stmt: jump 44
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A1F0D74C0>
DEBUG:numba.core.ssa:on stmt: $44for_iter.1 = iternext(value=$phi44.0)
DEBUG:numba.core.ssa:on stmt: $44for_iter.2 = pair_first(value=$44for_iter.1)
DEBUG:numba.core.ssa:on stmt: $44for_iter.3 = pair_second(value=$44for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi46.1 = $44for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $44for_iter.3, 46, 86
DEBUG:numba.core.ssa:==== SSA block analysis pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A1F0D74C0>
DEBUG:numba.core.ssa:on stmt: row = $phi46.1
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.4 = getitem(value=X, index=row, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54load_attr.5 = getattr(value=$52binary_subscr.4, attr=argsort)
DEBUG:numba.core.ssa:on stmt: $const56.6 = const(str, quicksort)
DEBUG:numba.core.ssa:on stmt: v = call $54load_attr.5(func=$54load_attr.5, args=[], kws=[('kind', Var($const56.6, utils.py:34))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const66.10 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $70build_slice.12 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $70build_slice.13 = call $70build_slice.12($const66.10, n_neighbors, func=$70build_slice.12, args=(Var($const66.10, utils.py:35), Var(n_neighbors, utils.py:14)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: v = getitem(value=v, index=$70build_slice.13, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: knn_indices[row] = v
DEBUG:numba.core.ssa:on stmt: jump 44
DEBUG:numba.core.ssa:==== SSA block analysis pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A1F0D74C0>
DEBUG:numba.core.ssa:on stmt: $88return_value.1 = cast(value=knn_indices)
DEBUG:numba.core.ssa:on stmt: return $88return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000017A1F0C8220>,
                                     0)],
             '$16build_tuple.7': [(<numba.core.ir.Assign object at 0x0000017A1F0F3EB0>,
                                   0)],
             '$18load_global.8': [(<numba.core.ir.Assign object at 0x0000017A1F0D4040>,
                                   0)],
             '$20load_attr.9': [(<numba.core.ir.Assign object at 0x0000017A1F0D41C0>,
                                 0)],
             '$28load_global.12': [(<numba.core.ir.Assign object at 0x0000017A1F0D47C0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x0000017A1F0F34C0>,
                                  0)],
             '$30load_method.13': [(<numba.core.ir.Assign object at 0x0000017A1F0D4940>,
                                    0)],
             '$34load_attr.15': [(<numba.core.ir.Assign object at 0x0000017A1F0D4BE0>,
                                  0)],
             '$38binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000017A1F0C82E0>,
                                      0)],
             '$40call_method.18': [(<numba.core.ir.Assign object at 0x0000017A1F0D50F0>,
                                    0)],
             '$42get_iter.19': [(<numba.core.ir.Assign object at 0x0000017A1F0D51E0>,
                                 0)],
             '$44for_iter.1': [(<numba.core.ir.Assign object at 0x0000017A1F0D53F0>,
                                44)],
             '$44for_iter.2': [(<numba.core.ir.Assign object at 0x0000017A1F0D5510>,
                                44)],
             '$44for_iter.3': [(<numba.core.ir.Assign object at 0x0000017A1F0D5630>,
                                44)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x0000017A1F0F3640>,
                                0)],
             '$52binary_subscr.4': [(<numba.core.ir.Assign object at 0x0000017A1F0F3310>,
                                     46)],
             '$54load_attr.5': [(<numba.core.ir.Assign object at 0x0000017A1F0F3190>,
                                 46)],
             '$70build_slice.12': [(<numba.core.ir.Assign object at 0x0000017A1F0D5EA0>,
                                    46)],
             '$70build_slice.13': [(<numba.core.ir.Assign object at 0x0000017A1F0D5FC0>,
                                    46)],
             '$88return_value.1': [(<numba.core.ir.Assign object at 0x0000017A1F0D6440>,
                                    86)],
             '$8load_attr.3': [(<numba.core.ir.Assign object at 0x0000017A1F0F38E0>,
                                0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x0000017A1F0F3A60>,
                             0)],
             '$const36.16': [(<numba.core.ir.Assign object at 0x0000017A1F0D4D60>,
                              0)],
             '$const56.6': [(<numba.core.ir.Assign object at 0x0000017A1F0F2F50>,
                             46)],
             '$const66.10': [(<numba.core.ir.Assign object at 0x0000017A1EFC9660>,
                              46)],
             '$phi44.0': [(<numba.core.ir.Assign object at 0x0000017A1F0F37F0>,
                           0)],
             '$phi46.1': [(<numba.core.ir.Assign object at 0x0000017A1F0D5330>,
                           44)],
             'X': [(<numba.core.ir.Assign object at 0x0000017A1EFCADA0>, 0)],
             'knn_indices': [(<numba.core.ir.Assign object at 0x0000017A1F0D4640>,
                              0)],
             'n_neighbors': [(<numba.core.ir.Assign object at 0x0000017A1EFC96C0>,
                              0)],
             'row': [(<numba.core.ir.Assign object at 0x0000017A1F0D5900>, 46)],
             'v': [(<numba.core.ir.Assign object at 0x0000017A1EF258A0>, 46),
                   (<numba.core.ir.Assign object at 0x0000017A1F0D6170>, 46)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017A1F0D74C0>
DEBUG:numba.core.ssa:Fix SSA violator on var v
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F0D5A20>
DEBUG:numba.core.ssa:on stmt: X = arg(0, name=X)
DEBUG:numba.core.ssa:on stmt: n_neighbors = arg(1, name=n_neighbors)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=X, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16build_tuple.7 = build_tuple(items=[Var($12binary_subscr.5, utils.py:31), Var(n_neighbors, utils.py:14)])
DEBUG:numba.core.ssa:on stmt: $18load_global.8 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $20load_attr.9 = getattr(value=$18load_global.8, attr=int32)
DEBUG:numba.core.ssa:on stmt: knn_indices = call $4load_attr.1($16build_tuple.7, func=$4load_attr.1, args=[Var($16build_tuple.7, utils.py:31)], kws=[('dtype', Var($20load_attr.9, utils.py:31))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $28load_global.12 = global(numba: <module 'numba' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numba\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.13 = getattr(value=$28load_global.12, attr=prange)
DEBUG:numba.core.ssa:on stmt: $34load_attr.15 = getattr(value=X, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const36.16 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $38binary_subscr.17 = static_getitem(value=$34load_attr.15, index=0, index_var=$const36.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $40call_method.18 = call $30load_method.13($38binary_subscr.17, func=$30load_method.13, args=[Var($38binary_subscr.17, utils.py:32)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $42get_iter.19 = getiter(value=$40call_method.18)
DEBUG:numba.core.ssa:on stmt: $phi44.0 = $42get_iter.19
DEBUG:numba.core.ssa:on stmt: jump 44
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F0D5A20>
DEBUG:numba.core.ssa:on stmt: $44for_iter.1 = iternext(value=$phi44.0)
DEBUG:numba.core.ssa:on stmt: $44for_iter.2 = pair_first(value=$44for_iter.1)
DEBUG:numba.core.ssa:on stmt: $44for_iter.3 = pair_second(value=$44for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi46.1 = $44for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $44for_iter.3, 46, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F0D5A20>
DEBUG:numba.core.ssa:on stmt: row = $phi46.1
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.4 = getitem(value=X, index=row, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54load_attr.5 = getattr(value=$52binary_subscr.4, attr=argsort)
DEBUG:numba.core.ssa:on stmt: $const56.6 = const(str, quicksort)
DEBUG:numba.core.ssa:on stmt: v = call $54load_attr.5(func=$54load_attr.5, args=[], kws=[('kind', Var($const56.6, utils.py:34))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:first assign: v
DEBUG:numba.core.ssa:replaced with: v = call $54load_attr.5(func=$54load_attr.5, args=[], kws=[('kind', Var($const56.6, utils.py:34))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const66.10 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $70build_slice.12 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $70build_slice.13 = call $70build_slice.12($const66.10, n_neighbors, func=$70build_slice.12, args=(Var($const66.10, utils.py:35), Var(n_neighbors, utils.py:14)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: v = getitem(value=v, index=$70build_slice.13, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: v.1 = getitem(value=v, index=$70build_slice.13, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: knn_indices[row] = v
DEBUG:numba.core.ssa:on stmt: jump 44
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F0D5A20>
DEBUG:numba.core.ssa:on stmt: $88return_value.1 = cast(value=knn_indices)
DEBUG:numba.core.ssa:on stmt: return $88return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {46: [<numba.core.ir.Assign object at 0x0000017A1F0D73A0>,
                  <numba.core.ir.Assign object at 0x0000017A1F0D6950>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0D5A20>
DEBUG:numba.core.ssa:on stmt: X = arg(0, name=X)
DEBUG:numba.core.ssa:on stmt: n_neighbors = arg(1, name=n_neighbors)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=X, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $16build_tuple.7 = build_tuple(items=[Var($12binary_subscr.5, utils.py:31), Var(n_neighbors, utils.py:14)])
DEBUG:numba.core.ssa:on stmt: $18load_global.8 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $20load_attr.9 = getattr(value=$18load_global.8, attr=int32)
DEBUG:numba.core.ssa:on stmt: knn_indices = call $4load_attr.1($16build_tuple.7, func=$4load_attr.1, args=[Var($16build_tuple.7, utils.py:31)], kws=[('dtype', Var($20load_attr.9, utils.py:31))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $28load_global.12 = global(numba: <module 'numba' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numba\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.13 = getattr(value=$28load_global.12, attr=prange)
DEBUG:numba.core.ssa:on stmt: $34load_attr.15 = getattr(value=X, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const36.16 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $38binary_subscr.17 = static_getitem(value=$34load_attr.15, index=0, index_var=$const36.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $40call_method.18 = call $30load_method.13($38binary_subscr.17, func=$30load_method.13, args=[Var($38binary_subscr.17, utils.py:32)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $42get_iter.19 = getiter(value=$40call_method.18)
DEBUG:numba.core.ssa:on stmt: $phi44.0 = $42get_iter.19
DEBUG:numba.core.ssa:on stmt: jump 44
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0D5A20>
DEBUG:numba.core.ssa:on stmt: $44for_iter.1 = iternext(value=$phi44.0)
DEBUG:numba.core.ssa:on stmt: $44for_iter.2 = pair_first(value=$44for_iter.1)
DEBUG:numba.core.ssa:on stmt: $44for_iter.3 = pair_second(value=$44for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi46.1 = $44for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $44for_iter.3, 46, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0D5A20>
DEBUG:numba.core.ssa:on stmt: row = $phi46.1
DEBUG:numba.core.ssa:on stmt: $52binary_subscr.4 = getitem(value=X, index=row, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54load_attr.5 = getattr(value=$52binary_subscr.4, attr=argsort)
DEBUG:numba.core.ssa:on stmt: $const56.6 = const(str, quicksort)
DEBUG:numba.core.ssa:on stmt: v = call $54load_attr.5(func=$54load_attr.5, args=[], kws=[('kind', Var($const56.6, utils.py:34))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const66.10 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $70build_slice.12 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $70build_slice.13 = call $70build_slice.12($const66.10, n_neighbors, func=$70build_slice.12, args=(Var($const66.10, utils.py:35), Var(n_neighbors, utils.py:14)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: v.1 = getitem(value=v, index=$70build_slice.13, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='v' stmt=v.1 = getitem(value=v, index=$70build_slice.13, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: knn_indices[row] = v
DEBUG:numba.core.ssa:find_def var='v' stmt=knn_indices[row] = v
DEBUG:numba.core.ssa:replaced with: knn_indices[row] = v.1
DEBUG:numba.core.ssa:on stmt: jump 44
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0D5A20>
DEBUG:numba.core.ssa:on stmt: $88return_value.1 = cast(value=knn_indices)
DEBUG:numba.core.ssa:on stmt: return $88return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4388)
           2	LOAD_GLOBAL(arg=0, lineno=4389)
           4	LOAD_FAST(arg=0, lineno=4389)
           6	LOAD_FAST(arg=1, lineno=4389)
           8	LOAD_DEREF(arg=0, lineno=4389)
          10	CALL_FUNCTION(arg=3, lineno=4389)
          12	RETURN_VALUE(arg=None, lineno=4389)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4388)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4389)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$shape4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$10call_function.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(int32, 2d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($8load_deref.3, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A1F0CA6B0>
DEBUG:numba.core.ssa:on stmt: shape = arg(0, name=shape)
DEBUG:numba.core.ssa:on stmt: dtype = arg(1, name=dtype)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
DEBUG:numba.core.ssa:on stmt: $8load_deref.3 = freevar(retty: array(int32, 2d, C))
DEBUG:numba.core.ssa:on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($8load_deref.3, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $12return_value.5 = cast(value=$10call_function.4)
DEBUG:numba.core.ssa:on stmt: return $12return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x0000017A1F0C8040>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x0000017A1F0C8130>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x0000017A1F0C8370>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x0000017A1F0C85E0>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x0000017A1F0C99C0>,
                        0)],
             'shape': [(<numba.core.ir.Assign object at 0x0000017A1F0C9420>,
                        0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017A1F0CA6B0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=2)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_CONST(arg=1, lineno=2)
           8	BINARY_SUBSCR(arg=None, lineno=2)
          10	LOAD_FAST(arg=0, lineno=2)
          12	LOAD_CONST(arg=2, lineno=2)
          14	BINARY_SUBSCR(arg=None, lineno=2)
          16	LOAD_GLOBAL(arg=1, lineno=2)
          18	LOAD_METHOD(arg=2, lineno=2)
          20	LOAD_CONST(arg=2, lineno=2)
          22	CALL_METHOD(arg=1, lineno=2)
          24	BINARY_ADD(arg=None, lineno=2)
          26	CALL_FUNCTION(arg=2, lineno=2)
          28	GET_ITER(arg=None, lineno=2)
>         30	FOR_ITER(arg=4, lineno=2)
          32	STORE_FAST(arg=4, lineno=2)
          34	LOAD_CONST(arg=1, lineno=3)
          36	STORE_FAST(arg=5, lineno=3)
          38	JUMP_ABSOLUTE(arg=16, lineno=3)
>         40	LOAD_CONST(arg=0, lineno=4)
          42	RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$sched4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$sched4.1', '$const6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4', '$const12.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$16load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL_METHOD(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8', '$const20.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=BINARY_ADD(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$22call_method.10']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL_FUNCTION(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$24binary_add.11']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=GET_ITER(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$26call_function.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=('$28get_iter.13',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi30.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=30 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=30, inst=FOR_ITER(arg=4, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=('$phi30.0', '$30for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=32 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=40 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const40.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0', '$phi32.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=STORE_FAST(arg=4, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$phi32.1']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=STORE_FAST(arg=5, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$const34.2']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=JUMP_ABSOLUTE(arg=16, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=('$phi32.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=32 nstack_initial=2): {'$phi32.1'},
             State(pc_initial=40 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.1': State(pc_initial=30 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2))},
             '$phi32.0': {('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi30.0': {('$28get_iter.13', State(pc_initial=0 nstack_initial=0))},
 '$phi32.1': {('$30for_iter.2', State(pc_initial=30 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$28get_iter.13'},
             State(pc_initial=30 nstack_initial=1): {'$phi32.1': '$30for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sched4.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$sched4.1', 'res': '$8binary_subscr.3'}), (10, {'res': '$sched10.4'}), (12, {'res': '$const12.5'}), (14, {'index': '$const12.5', 'target': '$sched10.4', 'res': '$14binary_subscr.6'}), (16, {'res': '$16load_global.7'}), (18, {'item': '$16load_global.7', 'res': '$18load_method.8'}), (20, {'res': '$const20.9'}), (22, {'func': '$18load_method.8', 'args': ['$const20.9'], 'res': '$22call_method.10'}), (24, {'lhs': '$14binary_subscr.6', 'rhs': '$22call_method.10', 'res': '$24binary_add.11'}), (26, {'func': '$2load_global.0', 'args': ['$8binary_subscr.3', '$24binary_add.11'], 'res': '$26call_function.12'}), (28, {'value': '$26call_function.12', 'res': '$28get_iter.13'})), outgoing_phis={'$phi30.0': '$28get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28get_iter.13',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'iterator': '$phi30.0', 'pair': '$30for_iter.1', 'indval': '$30for_iter.2', 'pred': '$30for_iter.3'}),), outgoing_phis={'$phi32.1': '$30for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 32: ('$phi30.0', '$30for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=2):
AdaptBlockInfo(insts=((32, {'value': '$phi32.1'}), (34, {'res': '$const34.2'}), (36, {'value': '$const34.2'}), (38, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi32.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$const40.0'}), (42, {'retval': '$const40.0', 'castval': '$42return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    sched = arg(0, name=sched)               ['sched']
    X = arg(1, name=X)                       ['X']
    n__neighbors = arg(2, name=n__neighbors) ['n__neighbors']
    knn__indices = arg(3, name=knn__indices) ['knn__indices']
    $2load_global.0 = global(range: <class 'range'>) ['$2load_global.0']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8binary_subscr.3 = getitem(value=sched, index=$const6.2, fn=<built-in function getitem>) ['$8binary_subscr.3', '$const6.2', 'sched']
    $const12.5 = const(int, 1)               ['$const12.5']
    $14binary_subscr.6 = getitem(value=sched, index=$const12.5, fn=<built-in function getitem>) ['$14binary_subscr.6', '$const12.5', 'sched']
    $16load_global.7 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$16load_global.7']
    $18load_method.8 = getattr(value=$16load_global.7, attr=uint8) ['$16load_global.7', '$18load_method.8']
    $const20.9 = const(int, 1)               ['$const20.9']
    $22call_method.10 = call $18load_method.8($const20.9, func=$18load_method.8, args=[Var($const20.9, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.8', '$22call_method.10', '$const20.9']
    $24binary_add.11 = $14binary_subscr.6 + $22call_method.10 ['$14binary_subscr.6', '$22call_method.10', '$24binary_add.11']
    $26call_function.12 = call $2load_global.0($8binary_subscr.3, $24binary_add.11, func=$2load_global.0, args=[Var($8binary_subscr.3, <string>:2), Var($24binary_add.11, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$24binary_add.11', '$26call_function.12', '$2load_global.0', '$8binary_subscr.3']
    $28get_iter.13 = getiter(value=$26call_function.12) ['$26call_function.12', '$28get_iter.13']
    $phi30.0 = $28get_iter.13                ['$28get_iter.13', '$phi30.0']
    jump 30                                  []
label 30:
    $30for_iter.1 = iternext(value=$phi30.0) ['$30for_iter.1', '$phi30.0']
    $30for_iter.2 = pair_first(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.2']
    $30for_iter.3 = pair_second(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.3']
    $phi32.1 = $30for_iter.2                 ['$30for_iter.2', '$phi32.1']
    branch $30for_iter.3, 32, 40             ['$30for_iter.3']
label 32:
    parfor__index_18 = $phi32.1              ['$phi32.1', 'parfor__index_18']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 30                                  []
label 40:
    $const40.0 = const(NoneType, None)       ['$const40.0']
    $42return_value.1 = cast(value=$const40.0) ['$42return_value.1', '$const40.0']
    return $42return_value.1                 ['$42return_value.1']

DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=6445)
           2	LOAD_DEREF(arg=0, lineno=6446)
           4	LOAD_FAST(arg=0, lineno=6446)
           6	CALL_FUNCTION(arg=1, lineno=6446)
           8	RETURN_VALUE(arg=None, lineno=6446)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=6445)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_DEREF(arg=0, lineno=6446)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=6446)
DEBUG:numba.core.byteflow:stack ['$2load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=6446)
DEBUG:numba.core.byteflow:stack ['$2load_deref.0', '$arr4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=6446)
DEBUG:numba.core.byteflow:stack ['$6call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$arr4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$arr4.1'], 'res': '$6call_function.2'}), (8, {'retval': '$6call_function.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    arr = arg(0, name=arr)                   ['arr']
    $2load_deref.0 = freevar(sort_func: <function make_quicksort_impl.<locals>.run_quicksort at 0x0000017A1EFED990>) ['$2load_deref.0']
    $6call_function.2 = call $2load_deref.0(arr, func=$2load_deref.0, args=[Var(arr, arrayobj.py:6445)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$6call_function.2', 'arr']
    $8return_value.3 = cast(value=$6call_function.2) ['$6call_function.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3C91B70>
DEBUG:numba.core.ssa:on stmt: arr = arg(0, name=arr)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(sort_func: <function make_quicksort_impl.<locals>.run_quicksort at 0x0000017A1EFED990>)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_deref.0(arr, func=$2load_deref.0, args=[Var(arr, arrayobj.py:6445)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $8return_value.3 = cast(value=$6call_function.2)
DEBUG:numba.core.ssa:on stmt: return $8return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$2load_deref.0': [(<numba.core.ir.Assign object at 0x0000017AA3C92350>,
                                 0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x0000017AA3C92650>,
                                    0)],
             '$8return_value.3': [(<numba.core.ir.Assign object at 0x0000017AA3C92770>,
                                   0)],
             'arr': [(<numba.core.ir.Assign object at 0x0000017AA3C91930>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA3C91B70>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=200)
           2	LOAD_FAST(arg=0, lineno=202)
           4	LOAD_ATTR(arg=0, lineno=202)
           6	LOAD_CONST(arg=1, lineno=202)
           8	COMPARE_OP(arg=2, lineno=202)
          10	POP_JUMP_IF_FALSE(arg=11, lineno=202)
          12	LOAD_DEREF(arg=0, lineno=203)
          14	LOAD_FAST(arg=0, lineno=203)
          16	CALL_FUNCTION(arg=1, lineno=203)
          18	RETURN_VALUE(arg=None, lineno=203)
>         20	LOAD_GLOBAL(arg=1, lineno=205)
          22	LOAD_METHOD(arg=2, lineno=205)
          24	LOAD_FAST(arg=0, lineno=205)
          26	LOAD_ATTR(arg=3, lineno=205)
          28	LOAD_CONST(arg=0, lineno=205)
          30	LOAD_CONST(arg=2, lineno=205)
          32	BUILD_SLICE(arg=2, lineno=205)
          34	BINARY_SUBSCR(arg=None, lineno=205)
          36	CALL_METHOD(arg=1, lineno=205)
          38	GET_ITER(arg=None, lineno=205)
>         40	FOR_ITER(arg=8, lineno=205)
          42	STORE_FAST(arg=1, lineno=205)
          44	LOAD_DEREF(arg=0, lineno=206)
          46	LOAD_FAST(arg=0, lineno=206)
          48	LOAD_FAST(arg=1, lineno=206)
          50	BINARY_SUBSCR(arg=None, lineno=206)
          52	CALL_FUNCTION(arg=1, lineno=206)
          54	POP_TOP(arg=None, lineno=206)
          56	JUMP_ABSOLUTE(arg=21, lineno=206)
>         58	LOAD_FAST(arg=0, lineno=207)
          60	RETURN_VALUE(arg=None, lineno=207)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=200)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=202)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=202)
DEBUG:numba.core.byteflow:stack ['$A2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=202)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=COMPARE_OP(arg=2, lineno=202)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$const6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=POP_JUMP_IF_FALSE(arg=11, lineno=202)
DEBUG:numba.core.byteflow:stack ['$8compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=12, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=12 nstack_initial=0), State(pc_initial=20 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=12 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_DEREF(arg=0, lineno=203)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=203)
DEBUG:numba.core.byteflow:stack ['$12load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=CALL_FUNCTION(arg=1, lineno=203)
DEBUG:numba.core.byteflow:stack ['$12load_deref.0', '$A14.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=RETURN_VALUE(arg=None, lineno=203)
DEBUG:numba.core.byteflow:stack ['$16call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=20 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=20 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=205)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_METHOD(arg=2, lineno=205)
DEBUG:numba.core.byteflow:stack ['$20load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=205)
DEBUG:numba.core.byteflow:stack ['$22load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_ATTR(arg=3, lineno=205)
DEBUG:numba.core.byteflow:stack ['$22load_method.1', '$A24.2']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=205)
DEBUG:numba.core.byteflow:stack ['$22load_method.1', '$26load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_CONST(arg=2, lineno=205)
DEBUG:numba.core.byteflow:stack ['$22load_method.1', '$26load_attr.3', '$const28.4']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=205)
DEBUG:numba.core.byteflow:stack ['$22load_method.1', '$26load_attr.3', '$const28.4', '$const30.5']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=205)
DEBUG:numba.core.byteflow:stack ['$22load_method.1', '$26load_attr.3', '$32build_slice.7']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=CALL_METHOD(arg=1, lineno=205)
DEBUG:numba.core.byteflow:stack ['$22load_method.1', '$34binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=GET_ITER(arg=None, lineno=205)
DEBUG:numba.core.byteflow:stack ['$36call_method.9']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=40, stack=('$38get_iter.10',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi40.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=40 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=40, inst=FOR_ITER(arg=8, lineno=205)
DEBUG:numba.core.byteflow:stack ['$phi40.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0), Edge(pc=42, stack=('$phi40.0', '$40for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=42 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=207)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=RETURN_VALUE(arg=None, lineno=207)
DEBUG:numba.core.byteflow:stack ['$A58.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=42 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi42.0', '$phi42.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=42 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=42, inst=STORE_FAST(arg=1, lineno=205)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$phi42.1']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_DEREF(arg=0, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi42.0']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=0, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$44load_deref.2']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$44load_deref.2', '$A46.3']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=BINARY_SUBSCR(arg=None, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$44load_deref.2', '$A46.3', '$idx48.4']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=CALL_FUNCTION(arg=1, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$44load_deref.2', '$50binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=POP_TOP(arg=None, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi42.0', '$52call_function.6']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=JUMP_ABSOLUTE(arg=21, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi42.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=40, stack=('$phi42.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=12 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=1): {'$phi40.0'},
             State(pc_initial=42 nstack_initial=2): {'$phi42.1'},
             State(pc_initial=58 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi40.0': State(pc_initial=20 nstack_initial=0),
 '$phi42.1': State(pc_initial=40 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi40.0': {('$38get_iter.10',
                           State(pc_initial=20 nstack_initial=0)),
                          ('$phi42.0', State(pc_initial=42 nstack_initial=2))},
             '$phi42.0': {('$phi40.0', State(pc_initial=40 nstack_initial=1))},
             '$phi42.1': {('$40for_iter.2',
                           State(pc_initial=40 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi40.0': {('$38get_iter.10',
                           State(pc_initial=20 nstack_initial=0)),
                          ('$phi40.0', State(pc_initial=40 nstack_initial=1))},
             '$phi42.0': {('$38get_iter.10',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi42.1': {('$40for_iter.2',
                           State(pc_initial=40 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi40.0': {('$38get_iter.10',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi42.0': {('$38get_iter.10',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi42.1': {('$40for_iter.2',
                           State(pc_initial=40 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi40.0': {('$38get_iter.10',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi42.0': {('$38get_iter.10',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi42.1': {('$40for_iter.2',
                           State(pc_initial=40 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi40.0': {('$38get_iter.10', State(pc_initial=20 nstack_initial=0))},
 '$phi42.1': {('$40for_iter.2', State(pc_initial=40 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=20 nstack_initial=0): {'$phi40.0': '$38get_iter.10'},
             State(pc_initial=40 nstack_initial=1): {'$phi42.1': '$40for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$A2.0'}), (4, {'item': '$A2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$const6.2', 'res': '$8compare_op.3'}), (10, {'pred': '$8compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={12: (), 20: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=12 nstack_initial=0):
AdaptBlockInfo(insts=((12, {'res': '$12load_deref.0'}), (14, {'res': '$A14.1'}), (16, {'func': '$12load_deref.0', 'args': ['$A14.1'], 'res': '$16call_function.2'}), (18, {'retval': '$16call_function.2', 'castval': '$18return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$20load_global.0'}), (22, {'item': '$20load_global.0', 'res': '$22load_method.1'}), (24, {'res': '$A24.2'}), (26, {'item': '$A24.2', 'res': '$26load_attr.3'}), (28, {'res': '$const28.4'}), (30, {'res': '$const30.5'}), (32, {'start': '$const28.4', 'stop': '$const30.5', 'step': None, 'res': '$32build_slice.7', 'slicevar': '$32build_slice.6'}), (34, {'index': '$32build_slice.7', 'target': '$26load_attr.3', 'res': '$34binary_subscr.8'}), (36, {'func': '$22load_method.1', 'args': ['$34binary_subscr.8'], 'res': '$36call_method.9'}), (38, {'value': '$36call_method.9', 'res': '$38get_iter.10'})), outgoing_phis={'$phi40.0': '$38get_iter.10'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ('$38get_iter.10',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=40 nstack_initial=1):
AdaptBlockInfo(insts=((40, {'iterator': '$phi40.0', 'pair': '$40for_iter.1', 'indval': '$40for_iter.2', 'pred': '$40for_iter.3'}),), outgoing_phis={'$phi42.1': '$40for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: (), 42: ('$phi40.0', '$40for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=42 nstack_initial=2):
AdaptBlockInfo(insts=((42, {'value': '$phi42.1'}), (44, {'res': '$44load_deref.2'}), (46, {'res': '$A46.3'}), (48, {'res': '$idx48.4'}), (50, {'index': '$idx48.4', 'target': '$A46.3', 'res': '$50binary_subscr.5'}), (52, {'func': '$44load_deref.2', 'args': ['$50binary_subscr.5'], 'res': '$52call_function.6'}), (56, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ('$phi42.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$A58.0'}), (60, {'retval': '$A58.0', 'castval': '$60return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    A = arg(0, name=A)                       ['A']
    $4load_attr.1 = getattr(value=A, attr=ndim) ['$4load_attr.1', 'A']
    $const6.2 = const(int, 1)                ['$const6.2']
    $8compare_op.3 = $4load_attr.1 == $const6.2 ['$4load_attr.1', '$8compare_op.3', '$const6.2']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, quicksort.py:202),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 20                   ['$10pred']
label 12:
    $12load_deref.0 = freevar(run_quicksort1: <function make_quicksort_impl.<locals>.run_quicksort1 at 0x0000017A1EFED870>) ['$12load_deref.0']
    $16call_function.2 = call $12load_deref.0(A, func=$12load_deref.0, args=[Var(A, quicksort.py:200)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_deref.0', '$16call_function.2', 'A']
    $18return_value.3 = cast(value=$16call_function.2) ['$16call_function.2', '$18return_value.3']
    return $18return_value.3                 ['$18return_value.3']
label 20:
    $20load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$20load_global.0']
    $22load_method.1 = getattr(value=$20load_global.0, attr=ndindex) ['$20load_global.0', '$22load_method.1']
    $26load_attr.3 = getattr(value=A, attr=shape) ['$26load_attr.3', 'A']
    $const28.4 = const(NoneType, None)       ['$const28.4']
    $const30.5 = const(int, -1)              ['$const30.5']
    $32build_slice.6 = global(slice: <class 'slice'>) ['$32build_slice.6']
    $32build_slice.7 = call $32build_slice.6($const28.4, $const30.5, func=$32build_slice.6, args=(Var($const28.4, quicksort.py:205), Var($const30.5, quicksort.py:205)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.6', '$32build_slice.7', '$const28.4', '$const30.5']
    $34binary_subscr.8 = getitem(value=$26load_attr.3, index=$32build_slice.7, fn=<built-in function getitem>) ['$26load_attr.3', '$32build_slice.7', '$34binary_subscr.8']
    $36call_method.9 = call $22load_method.1($34binary_subscr.8, func=$22load_method.1, args=[Var($34binary_subscr.8, quicksort.py:205)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', '$34binary_subscr.8', '$36call_method.9']
    $38get_iter.10 = getiter(value=$36call_method.9) ['$36call_method.9', '$38get_iter.10']
    $phi40.0 = $38get_iter.10                ['$38get_iter.10', '$phi40.0']
    jump 40                                  []
label 40:
    $40for_iter.1 = iternext(value=$phi40.0) ['$40for_iter.1', '$phi40.0']
    $40for_iter.2 = pair_first(value=$40for_iter.1) ['$40for_iter.1', '$40for_iter.2']
    $40for_iter.3 = pair_second(value=$40for_iter.1) ['$40for_iter.1', '$40for_iter.3']
    $phi42.1 = $40for_iter.2                 ['$40for_iter.2', '$phi42.1']
    branch $40for_iter.3, 42, 58             ['$40for_iter.3']
label 42:
    idx = $phi42.1                           ['$phi42.1', 'idx']
    $44load_deref.2 = freevar(run_quicksort1: <function make_quicksort_impl.<locals>.run_quicksort1 at 0x0000017A1EFED870>) ['$44load_deref.2']
    $50binary_subscr.5 = getitem(value=A, index=idx, fn=<built-in function getitem>) ['$50binary_subscr.5', 'A', 'idx']
    $52call_function.6 = call $44load_deref.2($50binary_subscr.5, func=$44load_deref.2, args=[Var($50binary_subscr.5, quicksort.py:206)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.2', '$50binary_subscr.5', '$52call_function.6']
    jump 40                                  []
label 58:
    $60return_value.1 = cast(value=A)        ['$60return_value.1', 'A']
    return $60return_value.1                 ['$60return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3C93D90>
DEBUG:numba.core.ssa:on stmt: A = arg(0, name=A)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const6.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $8compare_op.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: bool10 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, quicksort.py:202),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 12
DEBUG:numba.core.ssa:==== SSA block analysis pass on 12
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3C93D90>
DEBUG:numba.core.ssa:on stmt: $12load_deref.0 = freevar(run_quicksort1: <function make_quicksort_impl.<locals>.run_quicksort1 at 0x0000017A1EFED870>)
DEBUG:numba.core.ssa:on stmt: $16call_function.2 = call $12load_deref.0(A, func=$12load_deref.0, args=[Var(A, quicksort.py:200)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $18return_value.3 = cast(value=$16call_function.2)
DEBUG:numba.core.ssa:on stmt: return $18return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10pred': [(<numba.core.ir.Assign object at 0x0000017AA3CA91B0>,
                          0)],
             '$12load_deref.0': [(<numba.core.ir.Assign object at 0x0000017AA3CA93F0>,
                                  12)],
             '$16call_function.2': [(<numba.core.ir.Assign object at 0x0000017AA3CA96F0>,
                                     12)],
             '$18return_value.3': [(<numba.core.ir.Assign object at 0x0000017AA3CA9810>,
                                    12)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x0000017AA3CA8C10>,
                                0)],
             '$8compare_op.3': [(<numba.core.ir.Assign object at 0x0000017AA3CA8F40>,
                                 0)],
             '$const6.2': [(<numba.core.ir.Assign object at 0x0000017AA3CA8D90>,
                            0)],
             'A': [(<numba.core.ir.Assign object at 0x0000017AA3CA8970>, 0)],
             'bool10': [(<numba.core.ir.Assign object at 0x0000017AA3CA9090>,
                         0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA3C93D90>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=164)
           2	LOAD_DEREF(arg=1, lineno=166)
           4	LOAD_FAST(arg=0, lineno=166)
           6	CALL_FUNCTION(arg=1, lineno=166)
           8	STORE_FAST(arg=1, lineno=166)
          10	LOAD_GLOBAL(arg=0, lineno=168)
          12	LOAD_FAST(arg=0, lineno=168)
          14	CALL_FUNCTION(arg=1, lineno=168)
          16	LOAD_CONST(arg=1, lineno=168)
          18	COMPARE_OP(arg=0, lineno=168)
          20	POP_JUMP_IF_FALSE(arg=14, lineno=168)
          22	LOAD_FAST(arg=1, lineno=169)
          24	RETURN_VALUE(arg=None, lineno=169)
>         26	LOAD_GLOBAL(arg=1, lineno=171)
          28	LOAD_DEREF(arg=3, lineno=171)
          30	LOAD_DEREF(arg=3, lineno=171)
          32	CALL_FUNCTION(arg=2, lineno=171)
          34	BUILD_LIST(arg=1, lineno=171)
          36	LOAD_GLOBAL(arg=2, lineno=171)
          38	BINARY_MULTIPLY(arg=None, lineno=171)
          40	STORE_FAST(arg=2, lineno=171)
          42	LOAD_GLOBAL(arg=1, lineno=172)
          44	LOAD_DEREF(arg=3, lineno=172)
          46	LOAD_GLOBAL(arg=0, lineno=172)
          48	LOAD_FAST(arg=0, lineno=172)
          50	CALL_FUNCTION(arg=1, lineno=172)
          52	LOAD_CONST(arg=2, lineno=172)
          54	BINARY_SUBTRACT(arg=None, lineno=172)
          56	CALL_FUNCTION(arg=2, lineno=172)
          58	LOAD_FAST(arg=2, lineno=172)
          60	LOAD_CONST(arg=3, lineno=172)
          62	STORE_SUBSCR(arg=None, lineno=172)
          64	LOAD_CONST(arg=2, lineno=173)
          66	STORE_FAST(arg=3, lineno=173)
          68	LOAD_FAST(arg=3, lineno=175)
          70	LOAD_CONST(arg=3, lineno=175)
          72	COMPARE_OP(arg=4, lineno=175)
          74	POP_JUMP_IF_FALSE(arg=136, lineno=175)
>         76	LOAD_FAST(arg=3, lineno=176)
          78	LOAD_CONST(arg=2, lineno=176)
          80	INPLACE_SUBTRACT(arg=None, lineno=176)
          82	STORE_FAST(arg=3, lineno=176)
          84	LOAD_FAST(arg=2, lineno=177)
          86	LOAD_FAST(arg=3, lineno=177)
          88	BINARY_SUBSCR(arg=None, lineno=177)
          90	UNPACK_SEQUENCE(arg=2, lineno=177)
          92	STORE_FAST(arg=4, lineno=177)
          94	STORE_FAST(arg=5, lineno=177)
          96	LOAD_FAST(arg=5, lineno=179)
          98	LOAD_FAST(arg=4, lineno=179)
         100	BINARY_SUBTRACT(arg=None, lineno=179)
         102	LOAD_GLOBAL(arg=3, lineno=179)
         104	COMPARE_OP(arg=5, lineno=179)
         106	POP_JUMP_IF_FALSE(arg=125, lineno=179)
>        108	LOAD_FAST(arg=3, lineno=180)
         110	LOAD_GLOBAL(arg=2, lineno=180)
         112	COMPARE_OP(arg=0, lineno=180)
         114	POP_JUMP_IF_TRUE(arg=61, lineno=180)
         116	LOAD_ASSERTION_ERROR(arg=None, lineno=180)
         118	RAISE_VARARGS(arg=1, lineno=180)
>        120	LOAD_DEREF(arg=2, lineno=181)
         122	LOAD_FAST(arg=0, lineno=181)
         124	LOAD_FAST(arg=1, lineno=181)
         126	LOAD_FAST(arg=4, lineno=181)
         128	LOAD_FAST(arg=5, lineno=181)
         130	CALL_FUNCTION(arg=4, lineno=181)
         132	STORE_FAST(arg=6, lineno=181)
         134	LOAD_FAST(arg=5, lineno=183)
         136	LOAD_FAST(arg=6, lineno=183)
         138	BINARY_SUBTRACT(arg=None, lineno=183)
         140	LOAD_FAST(arg=6, lineno=183)
         142	LOAD_FAST(arg=4, lineno=183)
         144	BINARY_SUBTRACT(arg=None, lineno=183)
         146	COMPARE_OP(arg=4, lineno=183)
         148	POP_JUMP_IF_FALSE(arg=98, lineno=183)
         150	LOAD_FAST(arg=5, lineno=185)
         152	LOAD_FAST(arg=6, lineno=185)
         154	COMPARE_OP(arg=4, lineno=185)
         156	POP_JUMP_IF_FALSE(arg=93, lineno=185)
         158	LOAD_GLOBAL(arg=1, lineno=186)
         160	LOAD_FAST(arg=6, lineno=186)
         162	LOAD_CONST(arg=2, lineno=186)
         164	BINARY_ADD(arg=None, lineno=186)
         166	LOAD_FAST(arg=5, lineno=186)
         168	CALL_FUNCTION(arg=2, lineno=186)
         170	LOAD_FAST(arg=2, lineno=186)
         172	LOAD_FAST(arg=3, lineno=186)
         174	STORE_SUBSCR(arg=None, lineno=186)
         176	LOAD_FAST(arg=3, lineno=187)
         178	LOAD_CONST(arg=2, lineno=187)
         180	INPLACE_ADD(arg=None, lineno=187)
         182	STORE_FAST(arg=3, lineno=187)
>        184	LOAD_FAST(arg=6, lineno=188)
         186	LOAD_CONST(arg=2, lineno=188)
         188	BINARY_SUBTRACT(arg=None, lineno=188)
         190	STORE_FAST(arg=5, lineno=188)
         192	JUMP_FORWARD(arg=21, lineno=188)
>        194	LOAD_FAST(arg=6, lineno=190)
         196	LOAD_FAST(arg=4, lineno=190)
         198	COMPARE_OP(arg=4, lineno=190)
         200	POP_JUMP_IF_FALSE(arg=115, lineno=190)
         202	LOAD_GLOBAL(arg=1, lineno=191)
         204	LOAD_FAST(arg=4, lineno=191)
         206	LOAD_FAST(arg=6, lineno=191)
         208	LOAD_CONST(arg=2, lineno=191)
         210	BINARY_SUBTRACT(arg=None, lineno=191)
         212	CALL_FUNCTION(arg=2, lineno=191)
         214	LOAD_FAST(arg=2, lineno=191)
         216	LOAD_FAST(arg=3, lineno=191)
         218	STORE_SUBSCR(arg=None, lineno=191)
         220	LOAD_FAST(arg=3, lineno=192)
         222	LOAD_CONST(arg=2, lineno=192)
         224	INPLACE_ADD(arg=None, lineno=192)
         226	STORE_FAST(arg=3, lineno=192)
>        228	LOAD_FAST(arg=6, lineno=193)
         230	LOAD_CONST(arg=2, lineno=193)
         232	BINARY_ADD(arg=None, lineno=193)
         234	STORE_FAST(arg=4, lineno=193)
>        236	LOAD_FAST(arg=5, lineno=179)
         238	LOAD_FAST(arg=4, lineno=179)
         240	BINARY_SUBTRACT(arg=None, lineno=179)
         242	LOAD_GLOBAL(arg=3, lineno=179)
         244	COMPARE_OP(arg=5, lineno=179)
         246	POP_JUMP_IF_TRUE(arg=55, lineno=179)
>        248	LOAD_DEREF(arg=0, lineno=195)
         250	LOAD_FAST(arg=0, lineno=195)
         252	LOAD_FAST(arg=1, lineno=195)
         254	LOAD_FAST(arg=4, lineno=195)
         256	LOAD_FAST(arg=5, lineno=195)
         258	CALL_FUNCTION(arg=4, lineno=195)
         260	POP_TOP(arg=None, lineno=195)
         262	LOAD_FAST(arg=3, lineno=175)
         264	LOAD_CONST(arg=3, lineno=175)
         266	COMPARE_OP(arg=4, lineno=175)
         268	POP_JUMP_IF_TRUE(arg=39, lineno=175)
>        270	LOAD_FAST(arg=1, lineno=197)
         272	RETURN_VALUE(arg=None, lineno=197)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=164)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=166)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=166)
DEBUG:numba.core.byteflow:stack ['$2load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=166)
DEBUG:numba.core.byteflow:stack ['$2load_deref.0', '$A4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=1, lineno=166)
DEBUG:numba.core.byteflow:stack ['$6call_function.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=168)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=168)
DEBUG:numba.core.byteflow:stack ['$10load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=168)
DEBUG:numba.core.byteflow:stack ['$10load_global.3', '$A12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=168)
DEBUG:numba.core.byteflow:stack ['$14call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=COMPARE_OP(arg=0, lineno=168)
DEBUG:numba.core.byteflow:stack ['$14call_function.5', '$const16.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=POP_JUMP_IF_FALSE(arg=14, lineno=168)
DEBUG:numba.core.byteflow:stack ['$18compare_op.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=22, stack=(), blockstack=(), npush=0), Edge(pc=26, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=22 nstack_initial=0), State(pc_initial=26 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=22 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=1, lineno=169)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=169)
DEBUG:numba.core.byteflow:stack ['$R22.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=26 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_GLOBAL(arg=1, lineno=171)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_DEREF(arg=3, lineno=171)
DEBUG:numba.core.byteflow:stack ['$26load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_DEREF(arg=3, lineno=171)
DEBUG:numba.core.byteflow:stack ['$26load_global.0', '$28load_deref.1']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=CALL_FUNCTION(arg=2, lineno=171)
DEBUG:numba.core.byteflow:stack ['$26load_global.0', '$28load_deref.1', '$30load_deref.2']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=BUILD_LIST(arg=1, lineno=171)
DEBUG:numba.core.byteflow:stack ['$32call_function.3']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_GLOBAL(arg=2, lineno=171)
DEBUG:numba.core.byteflow:stack ['$34build_list.4']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BINARY_MULTIPLY(arg=None, lineno=171)
DEBUG:numba.core.byteflow:stack ['$34build_list.4', '$36load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=STORE_FAST(arg=2, lineno=171)
DEBUG:numba.core.byteflow:stack ['$38binary_multiply.6']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_GLOBAL(arg=1, lineno=172)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_DEREF(arg=3, lineno=172)
DEBUG:numba.core.byteflow:stack ['$42load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_GLOBAL(arg=0, lineno=172)
DEBUG:numba.core.byteflow:stack ['$42load_global.7', '$44load_deref.8']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=0, lineno=172)
DEBUG:numba.core.byteflow:stack ['$42load_global.7', '$44load_deref.8', '$46load_global.9']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=CALL_FUNCTION(arg=1, lineno=172)
DEBUG:numba.core.byteflow:stack ['$42load_global.7', '$44load_deref.8', '$46load_global.9', '$A48.10']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=172)
DEBUG:numba.core.byteflow:stack ['$42load_global.7', '$44load_deref.8', '$50call_function.11']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=BINARY_SUBTRACT(arg=None, lineno=172)
DEBUG:numba.core.byteflow:stack ['$42load_global.7', '$44load_deref.8', '$50call_function.11', '$const52.12']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=172)
DEBUG:numba.core.byteflow:stack ['$42load_global.7', '$44load_deref.8', '$54binary_subtract.13']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=2, lineno=172)
DEBUG:numba.core.byteflow:stack ['$56call_function.14']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_CONST(arg=3, lineno=172)
DEBUG:numba.core.byteflow:stack ['$56call_function.14', '$stack58.15']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=STORE_SUBSCR(arg=None, lineno=172)
DEBUG:numba.core.byteflow:stack ['$56call_function.14', '$stack58.15', '$const60.16']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_CONST(arg=2, lineno=173)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=66, inst=STORE_FAST(arg=3, lineno=173)
DEBUG:numba.core.byteflow:stack ['$const64.17']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=3, lineno=175)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=175)
DEBUG:numba.core.byteflow:stack ['$n68.18']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=COMPARE_OP(arg=4, lineno=175)
DEBUG:numba.core.byteflow:stack ['$n68.18', '$const70.19']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=POP_JUMP_IF_FALSE(arg=136, lineno=175)
DEBUG:numba.core.byteflow:stack ['$72compare_op.20']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=76, stack=(), blockstack=(), npush=0), Edge(pc=270, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=270 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=76 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=3, lineno=176)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=176)
DEBUG:numba.core.byteflow:stack ['$n76.0']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=INPLACE_SUBTRACT(arg=None, lineno=176)
DEBUG:numba.core.byteflow:stack ['$n76.0', '$const78.1']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=STORE_FAST(arg=3, lineno=176)
DEBUG:numba.core.byteflow:stack ['$80inplace_subtract.2']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_FAST(arg=2, lineno=177)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=177)
DEBUG:numba.core.byteflow:stack ['$stack84.3']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=BINARY_SUBSCR(arg=None, lineno=177)
DEBUG:numba.core.byteflow:stack ['$stack84.3', '$n86.4']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=UNPACK_SEQUENCE(arg=2, lineno=177)
DEBUG:numba.core.byteflow:stack ['$88binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=STORE_FAST(arg=4, lineno=177)
DEBUG:numba.core.byteflow:stack ['$90unpack_sequence.7', '$90unpack_sequence.6']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=STORE_FAST(arg=5, lineno=177)
DEBUG:numba.core.byteflow:stack ['$90unpack_sequence.7']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=5, lineno=179)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=179)
DEBUG:numba.core.byteflow:stack ['$high96.9']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=BINARY_SUBTRACT(arg=None, lineno=179)
DEBUG:numba.core.byteflow:stack ['$high96.9', '$low98.10']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_GLOBAL(arg=3, lineno=179)
DEBUG:numba.core.byteflow:stack ['$100binary_subtract.11']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=COMPARE_OP(arg=5, lineno=179)
DEBUG:numba.core.byteflow:stack ['$100binary_subtract.11', '$102load_global.12']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=POP_JUMP_IF_FALSE(arg=125, lineno=179)
DEBUG:numba.core.byteflow:stack ['$104compare_op.13']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=108, stack=(), blockstack=(), npush=0), Edge(pc=248, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=270 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=248 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=270 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=270, inst=LOAD_FAST(arg=1, lineno=197)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=272, inst=RETURN_VALUE(arg=None, lineno=197)
DEBUG:numba.core.byteflow:stack ['$R270.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=248 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=108 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_FAST(arg=3, lineno=180)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_GLOBAL(arg=2, lineno=180)
DEBUG:numba.core.byteflow:stack ['$n108.0']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=COMPARE_OP(arg=0, lineno=180)
DEBUG:numba.core.byteflow:stack ['$n108.0', '$110load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=POP_JUMP_IF_TRUE(arg=61, lineno=180)
DEBUG:numba.core.byteflow:stack ['$112compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=120, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=248 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=248 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=248, inst=LOAD_DEREF(arg=0, lineno=195)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=250, inst=LOAD_FAST(arg=0, lineno=195)
DEBUG:numba.core.byteflow:stack ['$248load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=252, inst=LOAD_FAST(arg=1, lineno=195)
DEBUG:numba.core.byteflow:stack ['$248load_deref.0', '$A250.1']
DEBUG:numba.core.byteflow:dispatch pc=254, inst=LOAD_FAST(arg=4, lineno=195)
DEBUG:numba.core.byteflow:stack ['$248load_deref.0', '$A250.1', '$R252.2']
DEBUG:numba.core.byteflow:dispatch pc=256, inst=LOAD_FAST(arg=5, lineno=195)
DEBUG:numba.core.byteflow:stack ['$248load_deref.0', '$A250.1', '$R252.2', '$low254.3']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=CALL_FUNCTION(arg=4, lineno=195)
DEBUG:numba.core.byteflow:stack ['$248load_deref.0', '$A250.1', '$R252.2', '$low254.3', '$high256.4']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=POP_TOP(arg=None, lineno=195)
DEBUG:numba.core.byteflow:stack ['$258call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=3, lineno=175)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=264, inst=LOAD_CONST(arg=3, lineno=175)
DEBUG:numba.core.byteflow:stack ['$n262.6']
DEBUG:numba.core.byteflow:dispatch pc=266, inst=COMPARE_OP(arg=4, lineno=175)
DEBUG:numba.core.byteflow:stack ['$n262.6', '$const264.7']
DEBUG:numba.core.byteflow:dispatch pc=268, inst=POP_JUMP_IF_TRUE(arg=39, lineno=175)
DEBUG:numba.core.byteflow:stack ['$266compare_op.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=270, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=120 nstack_initial=0), State(pc_initial=270 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=116 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_ASSERTION_ERROR(arg=None, lineno=180)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=118, inst=RAISE_VARARGS(arg=1, lineno=180)
DEBUG:numba.core.byteflow:stack ['$assertion_error116.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=270 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=120 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_DEREF(arg=2, lineno=181)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_FAST(arg=0, lineno=181)
DEBUG:numba.core.byteflow:stack ['$120load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=181)
DEBUG:numba.core.byteflow:stack ['$120load_deref.0', '$A122.1']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=4, lineno=181)
DEBUG:numba.core.byteflow:stack ['$120load_deref.0', '$A122.1', '$R124.2']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=5, lineno=181)
DEBUG:numba.core.byteflow:stack ['$120load_deref.0', '$A122.1', '$R124.2', '$low126.3']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=CALL_FUNCTION(arg=4, lineno=181)
DEBUG:numba.core.byteflow:stack ['$120load_deref.0', '$A122.1', '$R124.2', '$low126.3', '$high128.4']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=STORE_FAST(arg=6, lineno=181)
DEBUG:numba.core.byteflow:stack ['$130call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_FAST(arg=5, lineno=183)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_FAST(arg=6, lineno=183)
DEBUG:numba.core.byteflow:stack ['$high134.6']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=BINARY_SUBTRACT(arg=None, lineno=183)
DEBUG:numba.core.byteflow:stack ['$high134.6', '$i136.7']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=6, lineno=183)
DEBUG:numba.core.byteflow:stack ['$138binary_subtract.8']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=LOAD_FAST(arg=4, lineno=183)
DEBUG:numba.core.byteflow:stack ['$138binary_subtract.8', '$i140.9']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=BINARY_SUBTRACT(arg=None, lineno=183)
DEBUG:numba.core.byteflow:stack ['$138binary_subtract.8', '$i140.9', '$low142.10']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=COMPARE_OP(arg=4, lineno=183)
DEBUG:numba.core.byteflow:stack ['$138binary_subtract.8', '$144binary_subtract.11']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=POP_JUMP_IF_FALSE(arg=98, lineno=183)
DEBUG:numba.core.byteflow:stack ['$146compare_op.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=150, stack=(), blockstack=(), npush=0), Edge(pc=194, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=270 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=150 nstack_initial=0), State(pc_initial=194 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=150 nstack_initial=0), State(pc_initial=194 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=150 nstack_initial=0), State(pc_initial=194 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=150 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_FAST(arg=5, lineno=185)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_FAST(arg=6, lineno=185)
DEBUG:numba.core.byteflow:stack ['$high150.0']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=COMPARE_OP(arg=4, lineno=185)
DEBUG:numba.core.byteflow:stack ['$high150.0', '$i152.1']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=POP_JUMP_IF_FALSE(arg=93, lineno=185)
DEBUG:numba.core.byteflow:stack ['$154compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=158, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=194 nstack_initial=0), State(pc_initial=158 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=194 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_FAST(arg=6, lineno=190)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=196, inst=LOAD_FAST(arg=4, lineno=190)
DEBUG:numba.core.byteflow:stack ['$i194.0']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=COMPARE_OP(arg=4, lineno=190)
DEBUG:numba.core.byteflow:stack ['$i194.0', '$low196.1']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=POP_JUMP_IF_FALSE(arg=115, lineno=190)
DEBUG:numba.core.byteflow:stack ['$198compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=202, stack=(), blockstack=(), npush=0), Edge(pc=228, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=158 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=228 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=158 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=158, inst=LOAD_GLOBAL(arg=1, lineno=186)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=160, inst=LOAD_FAST(arg=6, lineno=186)
DEBUG:numba.core.byteflow:stack ['$158load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=LOAD_CONST(arg=2, lineno=186)
DEBUG:numba.core.byteflow:stack ['$158load_global.0', '$i160.1']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=BINARY_ADD(arg=None, lineno=186)
DEBUG:numba.core.byteflow:stack ['$158load_global.0', '$i160.1', '$const162.2']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_FAST(arg=5, lineno=186)
DEBUG:numba.core.byteflow:stack ['$158load_global.0', '$164binary_add.3']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=CALL_FUNCTION(arg=2, lineno=186)
DEBUG:numba.core.byteflow:stack ['$158load_global.0', '$164binary_add.3', '$high166.4']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=186)
DEBUG:numba.core.byteflow:stack ['$168call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=186)
DEBUG:numba.core.byteflow:stack ['$168call_function.5', '$stack170.6']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=STORE_SUBSCR(arg=None, lineno=186)
DEBUG:numba.core.byteflow:stack ['$168call_function.5', '$stack170.6', '$n172.7']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=LOAD_FAST(arg=3, lineno=187)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=178, inst=LOAD_CONST(arg=2, lineno=187)
DEBUG:numba.core.byteflow:stack ['$n176.8']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=INPLACE_ADD(arg=None, lineno=187)
DEBUG:numba.core.byteflow:stack ['$n176.8', '$const178.9']
DEBUG:numba.core.byteflow:dispatch pc=182, inst=STORE_FAST(arg=3, lineno=187)
DEBUG:numba.core.byteflow:stack ['$180inplace_add.10']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=184, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=228 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=184 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=184, inst=LOAD_FAST(arg=6, lineno=188)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=186, inst=LOAD_CONST(arg=2, lineno=188)
DEBUG:numba.core.byteflow:stack ['$i184.0']
DEBUG:numba.core.byteflow:dispatch pc=188, inst=BINARY_SUBTRACT(arg=None, lineno=188)
DEBUG:numba.core.byteflow:stack ['$i184.0', '$const186.1']
DEBUG:numba.core.byteflow:dispatch pc=190, inst=STORE_FAST(arg=5, lineno=188)
DEBUG:numba.core.byteflow:stack ['$188binary_subtract.2']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=JUMP_FORWARD(arg=21, lineno=188)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=236, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=202 nstack_initial=0), State(pc_initial=228 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=236 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=202 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=202, inst=LOAD_GLOBAL(arg=1, lineno=191)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=204, inst=LOAD_FAST(arg=4, lineno=191)
DEBUG:numba.core.byteflow:stack ['$202load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=LOAD_FAST(arg=6, lineno=191)
DEBUG:numba.core.byteflow:stack ['$202load_global.0', '$low204.1']
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_CONST(arg=2, lineno=191)
DEBUG:numba.core.byteflow:stack ['$202load_global.0', '$low204.1', '$i206.2']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=BINARY_SUBTRACT(arg=None, lineno=191)
DEBUG:numba.core.byteflow:stack ['$202load_global.0', '$low204.1', '$i206.2', '$const208.3']
DEBUG:numba.core.byteflow:dispatch pc=212, inst=CALL_FUNCTION(arg=2, lineno=191)
DEBUG:numba.core.byteflow:stack ['$202load_global.0', '$low204.1', '$210binary_subtract.4']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=LOAD_FAST(arg=2, lineno=191)
DEBUG:numba.core.byteflow:stack ['$212call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=216, inst=LOAD_FAST(arg=3, lineno=191)
DEBUG:numba.core.byteflow:stack ['$212call_function.5', '$stack214.6']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=STORE_SUBSCR(arg=None, lineno=191)
DEBUG:numba.core.byteflow:stack ['$212call_function.5', '$stack214.6', '$n216.7']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=3, lineno=192)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=222, inst=LOAD_CONST(arg=2, lineno=192)
DEBUG:numba.core.byteflow:stack ['$n220.8']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=INPLACE_ADD(arg=None, lineno=192)
DEBUG:numba.core.byteflow:stack ['$n220.8', '$const222.9']
DEBUG:numba.core.byteflow:dispatch pc=226, inst=STORE_FAST(arg=3, lineno=192)
DEBUG:numba.core.byteflow:stack ['$224inplace_add.10']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=228, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=228 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=236 nstack_initial=0), State(pc_initial=228 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=228 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=228, inst=LOAD_FAST(arg=6, lineno=193)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=230, inst=LOAD_CONST(arg=2, lineno=193)
DEBUG:numba.core.byteflow:stack ['$i228.0']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=BINARY_ADD(arg=None, lineno=193)
DEBUG:numba.core.byteflow:stack ['$i228.0', '$const230.1']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=STORE_FAST(arg=4, lineno=193)
DEBUG:numba.core.byteflow:stack ['$232binary_add.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=236, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=236 nstack_initial=0), State(pc_initial=228 nstack_initial=0), State(pc_initial=236 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=236 nstack_initial=0), State(pc_initial=228 nstack_initial=0), State(pc_initial=236 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=236 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=236, inst=LOAD_FAST(arg=5, lineno=179)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=238, inst=LOAD_FAST(arg=4, lineno=179)
DEBUG:numba.core.byteflow:stack ['$high236.0']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=BINARY_SUBTRACT(arg=None, lineno=179)
DEBUG:numba.core.byteflow:stack ['$high236.0', '$low238.1']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=LOAD_GLOBAL(arg=3, lineno=179)
DEBUG:numba.core.byteflow:stack ['$240binary_subtract.2']
DEBUG:numba.core.byteflow:dispatch pc=244, inst=COMPARE_OP(arg=5, lineno=179)
DEBUG:numba.core.byteflow:stack ['$240binary_subtract.2', '$242load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=POP_JUMP_IF_TRUE(arg=55, lineno=179)
DEBUG:numba.core.byteflow:stack ['$244compare_op.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=248, stack=(), blockstack=(), npush=0), Edge(pc=108, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=228 nstack_initial=0), State(pc_initial=236 nstack_initial=0), State(pc_initial=248 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=236 nstack_initial=0), State(pc_initial=248 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=248 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=108 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=22 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=120 nstack_initial=0): set(),
             State(pc_initial=150 nstack_initial=0): set(),
             State(pc_initial=158 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set(),
             State(pc_initial=194 nstack_initial=0): set(),
             State(pc_initial=202 nstack_initial=0): set(),
             State(pc_initial=228 nstack_initial=0): set(),
             State(pc_initial=236 nstack_initial=0): set(),
             State(pc_initial=248 nstack_initial=0): set(),
             State(pc_initial=270 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$A4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$A4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'res': '$A12.4'}), (14, {'func': '$10load_global.3', 'args': ['$A12.4'], 'res': '$14call_function.5'}), (16, {'res': '$const16.6'}), (18, {'lhs': '$14call_function.5', 'rhs': '$const16.6', 'res': '$18compare_op.7'}), (20, {'pred': '$18compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: (), 26: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=22 nstack_initial=0):
AdaptBlockInfo(insts=((22, {'res': '$R22.0'}), (24, {'retval': '$R22.0', 'castval': '$24return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$26load_global.0'}), (28, {'res': '$28load_deref.1'}), (30, {'res': '$30load_deref.2'}), (32, {'func': '$26load_global.0', 'args': ['$28load_deref.1', '$30load_deref.2'], 'res': '$32call_function.3'}), (34, {'items': ['$32call_function.3'], 'res': '$34build_list.4'}), (36, {'res': '$36load_global.5'}), (38, {'lhs': '$34build_list.4', 'rhs': '$36load_global.5', 'res': '$38binary_multiply.6'}), (40, {'value': '$38binary_multiply.6'}), (42, {'res': '$42load_global.7'}), (44, {'res': '$44load_deref.8'}), (46, {'res': '$46load_global.9'}), (48, {'res': '$A48.10'}), (50, {'func': '$46load_global.9', 'args': ['$A48.10'], 'res': '$50call_function.11'}), (52, {'res': '$const52.12'}), (54, {'lhs': '$50call_function.11', 'rhs': '$const52.12', 'res': '$54binary_subtract.13'}), (56, {'func': '$42load_global.7', 'args': ['$44load_deref.8', '$54binary_subtract.13'], 'res': '$56call_function.14'}), (58, {'res': '$stack58.15'}), (60, {'res': '$const60.16'}), (62, {'target': '$stack58.15', 'index': '$const60.16', 'value': '$56call_function.14'}), (64, {'res': '$const64.17'}), (66, {'value': '$const64.17'}), (68, {'res': '$n68.18'}), (70, {'res': '$const70.19'}), (72, {'lhs': '$n68.18', 'rhs': '$const70.19', 'res': '$72compare_op.20'}), (74, {'pred': '$72compare_op.20'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={76: (), 270: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$n76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$n76.0', 'rhs': '$const78.1', 'res': '$80inplace_subtract.2'}), (82, {'value': '$80inplace_subtract.2'}), (84, {'res': '$stack84.3'}), (86, {'res': '$n86.4'}), (88, {'index': '$n86.4', 'target': '$stack84.3', 'res': '$88binary_subscr.5'}), (90, {'iterable': '$88binary_subscr.5', 'stores': ['$90unpack_sequence.6', '$90unpack_sequence.7'], 'tupleobj': '$90unpack_sequence.8'}), (92, {'value': '$90unpack_sequence.6'}), (94, {'value': '$90unpack_sequence.7'}), (96, {'res': '$high96.9'}), (98, {'res': '$low98.10'}), (100, {'lhs': '$high96.9', 'rhs': '$low98.10', 'res': '$100binary_subtract.11'}), (102, {'res': '$102load_global.12'}), (104, {'lhs': '$100binary_subtract.11', 'rhs': '$102load_global.12', 'res': '$104compare_op.13'}), (106, {'pred': '$104compare_op.13'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: (), 248: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$n108.0'}), (110, {'res': '$110load_global.1'}), (112, {'lhs': '$n108.0', 'rhs': '$110load_global.1', 'res': '$112compare_op.2'}), (114, {'pred': '$112compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 120: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'res': '$assertion_error116.0'}), (118, {'exc': '$assertion_error116.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=120 nstack_initial=0):
AdaptBlockInfo(insts=((120, {'res': '$120load_deref.0'}), (122, {'res': '$A122.1'}), (124, {'res': '$R124.2'}), (126, {'res': '$low126.3'}), (128, {'res': '$high128.4'}), (130, {'func': '$120load_deref.0', 'args': ['$A122.1', '$R124.2', '$low126.3', '$high128.4'], 'res': '$130call_function.5'}), (132, {'value': '$130call_function.5'}), (134, {'res': '$high134.6'}), (136, {'res': '$i136.7'}), (138, {'lhs': '$high134.6', 'rhs': '$i136.7', 'res': '$138binary_subtract.8'}), (140, {'res': '$i140.9'}), (142, {'res': '$low142.10'}), (144, {'lhs': '$i140.9', 'rhs': '$low142.10', 'res': '$144binary_subtract.11'}), (146, {'lhs': '$138binary_subtract.8', 'rhs': '$144binary_subtract.11', 'res': '$146compare_op.12'}), (148, {'pred': '$146compare_op.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={150: (), 194: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=150 nstack_initial=0):
AdaptBlockInfo(insts=((150, {'res': '$high150.0'}), (152, {'res': '$i152.1'}), (154, {'lhs': '$high150.0', 'rhs': '$i152.1', 'res': '$154compare_op.2'}), (156, {'pred': '$154compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={158: (), 184: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=158 nstack_initial=0):
AdaptBlockInfo(insts=((158, {'res': '$158load_global.0'}), (160, {'res': '$i160.1'}), (162, {'res': '$const162.2'}), (164, {'lhs': '$i160.1', 'rhs': '$const162.2', 'res': '$164binary_add.3'}), (166, {'res': '$high166.4'}), (168, {'func': '$158load_global.0', 'args': ['$164binary_add.3', '$high166.4'], 'res': '$168call_function.5'}), (170, {'res': '$stack170.6'}), (172, {'res': '$n172.7'}), (174, {'target': '$stack170.6', 'index': '$n172.7', 'value': '$168call_function.5'}), (176, {'res': '$n176.8'}), (178, {'res': '$const178.9'}), (180, {'lhs': '$n176.8', 'rhs': '$const178.9', 'res': '$180inplace_add.10'}), (182, {'value': '$180inplace_add.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={184: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$i184.0'}), (186, {'res': '$const186.1'}), (188, {'lhs': '$i184.0', 'rhs': '$const186.1', 'res': '$188binary_subtract.2'}), (190, {'value': '$188binary_subtract.2'}), (192, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={236: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=194 nstack_initial=0):
AdaptBlockInfo(insts=((194, {'res': '$i194.0'}), (196, {'res': '$low196.1'}), (198, {'lhs': '$i194.0', 'rhs': '$low196.1', 'res': '$198compare_op.2'}), (200, {'pred': '$198compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: (), 228: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=202 nstack_initial=0):
AdaptBlockInfo(insts=((202, {'res': '$202load_global.0'}), (204, {'res': '$low204.1'}), (206, {'res': '$i206.2'}), (208, {'res': '$const208.3'}), (210, {'lhs': '$i206.2', 'rhs': '$const208.3', 'res': '$210binary_subtract.4'}), (212, {'func': '$202load_global.0', 'args': ['$low204.1', '$210binary_subtract.4'], 'res': '$212call_function.5'}), (214, {'res': '$stack214.6'}), (216, {'res': '$n216.7'}), (218, {'target': '$stack214.6', 'index': '$n216.7', 'value': '$212call_function.5'}), (220, {'res': '$n220.8'}), (222, {'res': '$const222.9'}), (224, {'lhs': '$n220.8', 'rhs': '$const222.9', 'res': '$224inplace_add.10'}), (226, {'value': '$224inplace_add.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={228: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=228 nstack_initial=0):
AdaptBlockInfo(insts=((228, {'res': '$i228.0'}), (230, {'res': '$const230.1'}), (232, {'lhs': '$i228.0', 'rhs': '$const230.1', 'res': '$232binary_add.2'}), (234, {'value': '$232binary_add.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={236: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=236 nstack_initial=0):
AdaptBlockInfo(insts=((236, {'res': '$high236.0'}), (238, {'res': '$low238.1'}), (240, {'lhs': '$high236.0', 'rhs': '$low238.1', 'res': '$240binary_subtract.2'}), (242, {'res': '$242load_global.3'}), (244, {'lhs': '$240binary_subtract.2', 'rhs': '$242load_global.3', 'res': '$244compare_op.4'}), (246, {'pred': '$244compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={248: (), 108: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=248 nstack_initial=0):
AdaptBlockInfo(insts=((248, {'res': '$248load_deref.0'}), (250, {'res': '$A250.1'}), (252, {'res': '$R252.2'}), (254, {'res': '$low254.3'}), (256, {'res': '$high256.4'}), (258, {'func': '$248load_deref.0', 'args': ['$A250.1', '$R252.2', '$low254.3', '$high256.4'], 'res': '$258call_function.5'}), (262, {'res': '$n262.6'}), (264, {'res': '$const264.7'}), (266, {'lhs': '$n262.6', 'rhs': '$const264.7', 'res': '$266compare_op.8'}), (268, {'pred': '$266compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={270: (), 76: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=270 nstack_initial=0):
AdaptBlockInfo(insts=((270, {'res': '$R270.0'}), (272, {'retval': '$R270.0', 'castval': '$272return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    A = arg(0, name=A)                       ['A']
    $2load_deref.0 = freevar(make_res: <function make_quicksort_impl.<locals>.make_res at 0x0000017A1EF13D90>) ['$2load_deref.0']
    R = call $2load_deref.0(A, func=$2load_deref.0, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', 'A', 'R']
    $10load_global.3 = global(len: <built-in function len>) ['$10load_global.3']
    $14call_function.5 = call $10load_global.3(A, func=$10load_global.3, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'A']
    $const16.6 = const(int, 2)               ['$const16.6']
    $18compare_op.7 = $14call_function.5 < $const16.6 ['$14call_function.5', '$18compare_op.7', '$const16.6']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    $20pred = call bool20($18compare_op.7, func=bool20, args=(Var($18compare_op.7, quicksort.py:168),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.7', '$20pred', 'bool20']
    branch $20pred, 22, 26                   ['$20pred']
label 22:
    $24return_value.1 = cast(value=R)        ['$24return_value.1', 'R']
    return $24return_value.1                 ['$24return_value.1']
label 26:
    $26load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>) ['$26load_global.0']
    $28load_deref.1 = freevar(zero: 0)       ['$28load_deref.1']
    $30load_deref.2 = freevar(zero: 0)       ['$30load_deref.2']
    $32call_function.3 = call $26load_global.0($28load_deref.1, $30load_deref.2, func=$26load_global.0, args=[Var($28load_deref.1, quicksort.py:171), Var($30load_deref.2, quicksort.py:171)], kws=(), vararg=None, varkwarg=None, target=None) ['$26load_global.0', '$28load_deref.1', '$30load_deref.2', '$32call_function.3']
    $34build_list.4 = build_list(items=[Var($32call_function.3, quicksort.py:171)]) ['$32call_function.3', '$34build_list.4']
    $36load_global.5 = global(MAX_STACK: 100) ['$36load_global.5']
    stack = $34build_list.4 * $36load_global.5 ['$34build_list.4', '$36load_global.5', 'stack']
    $42load_global.7 = global(Partition: <class 'numba.misc.quicksort.Partition'>) ['$42load_global.7']
    $44load_deref.8 = freevar(zero: 0)       ['$44load_deref.8']
    $46load_global.9 = global(len: <built-in function len>) ['$46load_global.9']
    $50call_function.11 = call $46load_global.9(A, func=$46load_global.9, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.9', '$50call_function.11', 'A']
    $const52.12 = const(int, 1)              ['$const52.12']
    $54binary_subtract.13 = $50call_function.11 - $const52.12 ['$50call_function.11', '$54binary_subtract.13', '$const52.12']
    $56call_function.14 = call $42load_global.7($44load_deref.8, $54binary_subtract.13, func=$42load_global.7, args=[Var($44load_deref.8, quicksort.py:172), Var($54binary_subtract.13, quicksort.py:172)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.7', '$44load_deref.8', '$54binary_subtract.13', '$56call_function.14']
    $const60.16 = const(int, 0)              ['$const60.16']
    stack[$const60.16] = $56call_function.14 ['$56call_function.14', '$const60.16', 'stack']
    n = const(int, 1)                        ['n']
    $const70.19 = const(int, 0)              ['$const70.19']
    $72compare_op.20 = n > $const70.19       ['$72compare_op.20', '$const70.19', 'n']
    bool74 = global(bool: <class 'bool'>)    ['bool74']
    $74pred = call bool74($72compare_op.20, func=bool74, args=(Var($72compare_op.20, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None) ['$72compare_op.20', '$74pred', 'bool74']
    branch $74pred, 76, 270                  ['$74pred']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=n, rhs=$const78.1, static_lhs=Undefined, static_rhs=Undefined) ['$80inplace_subtract.2', '$const78.1', 'n']
    n = $80inplace_subtract.2                ['$80inplace_subtract.2', 'n']
    $88binary_subscr.5 = getitem(value=stack, index=n, fn=<built-in function getitem>) ['$88binary_subscr.5', 'n', 'stack']
    $90unpack_sequence.8 = exhaust_iter(value=$88binary_subscr.5, count=2) ['$88binary_subscr.5', '$90unpack_sequence.8']
    $90unpack_sequence.6 = static_getitem(value=$90unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>) ['$90unpack_sequence.6', '$90unpack_sequence.8']
    $90unpack_sequence.7 = static_getitem(value=$90unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>) ['$90unpack_sequence.7', '$90unpack_sequence.8']
    low = $90unpack_sequence.6               ['$90unpack_sequence.6', 'low']
    high = $90unpack_sequence.7              ['$90unpack_sequence.7', 'high']
    $100binary_subtract.11 = high - low      ['$100binary_subtract.11', 'high', 'low']
    $102load_global.12 = global(SMALL_QUICKSORT: 15) ['$102load_global.12']
    $104compare_op.13 = $100binary_subtract.11 >= $102load_global.12 ['$100binary_subtract.11', '$102load_global.12', '$104compare_op.13']
    bool106 = global(bool: <class 'bool'>)   ['bool106']
    $106pred = call bool106($104compare_op.13, func=bool106, args=(Var($104compare_op.13, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None) ['$104compare_op.13', '$106pred', 'bool106']
    branch $106pred, 108, 248                ['$106pred']
label 108:
    $110load_global.1 = global(MAX_STACK: 100) ['$110load_global.1']
    $112compare_op.2 = n < $110load_global.1 ['$110load_global.1', '$112compare_op.2', 'n']
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, quicksort.py:180),), kws=(), vararg=None, varkwarg=None, target=None) ['$112compare_op.2', '$114pred', 'bool114']
    branch $114pred, 120, 116                ['$114pred']
label 116:
    $assertion_error116.0 = global(AssertionError: <class 'AssertionError'>) ['$assertion_error116.0']
    raise $assertion_error116.0              ['$assertion_error116.0']
label 120:
    $120load_deref.0 = freevar(partition: <function make_quicksort_impl.<locals>.partition at 0x0000017A1EFEFA30>) ['$120load_deref.0']
    i = call $120load_deref.0(A, R, low, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_deref.0', 'A', 'R', 'high', 'i', 'low']
    $138binary_subtract.8 = high - i         ['$138binary_subtract.8', 'high', 'i']
    $144binary_subtract.11 = i - low         ['$144binary_subtract.11', 'i', 'low']
    $146compare_op.12 = $138binary_subtract.8 > $144binary_subtract.11 ['$138binary_subtract.8', '$144binary_subtract.11', '$146compare_op.12']
    bool148 = global(bool: <class 'bool'>)   ['bool148']
    $148pred = call bool148($146compare_op.12, func=bool148, args=(Var($146compare_op.12, quicksort.py:183),), kws=(), vararg=None, varkwarg=None, target=None) ['$146compare_op.12', '$148pred', 'bool148']
    branch $148pred, 150, 194                ['$148pred']
label 150:
    $154compare_op.2 = high > i              ['$154compare_op.2', 'high', 'i']
    bool156 = global(bool: <class 'bool'>)   ['bool156']
    $156pred = call bool156($154compare_op.2, func=bool156, args=(Var($154compare_op.2, quicksort.py:185),), kws=(), vararg=None, varkwarg=None, target=None) ['$154compare_op.2', '$156pred', 'bool156']
    branch $156pred, 158, 184                ['$156pred']
label 158:
    $158load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>) ['$158load_global.0']
    $const162.2 = const(int, 1)              ['$const162.2']
    $164binary_add.3 = i + $const162.2       ['$164binary_add.3', '$const162.2', 'i']
    $168call_function.5 = call $158load_global.0($164binary_add.3, high, func=$158load_global.0, args=[Var($164binary_add.3, quicksort.py:186), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None) ['$158load_global.0', '$164binary_add.3', '$168call_function.5', 'high']
    stack[n] = $168call_function.5           ['$168call_function.5', 'n', 'stack']
    $const178.9 = const(int, 1)              ['$const178.9']
    $180inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const178.9, static_lhs=Undefined, static_rhs=Undefined) ['$180inplace_add.10', '$const178.9', 'n']
    n = $180inplace_add.10                   ['$180inplace_add.10', 'n']
    jump 184                                 []
label 184:
    $const186.1 = const(int, 1)              ['$const186.1']
    high = i - $const186.1                   ['$const186.1', 'high', 'i']
    jump 236                                 []
label 194:
    $198compare_op.2 = i > low               ['$198compare_op.2', 'i', 'low']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($198compare_op.2, func=bool200, args=(Var($198compare_op.2, quicksort.py:190),), kws=(), vararg=None, varkwarg=None, target=None) ['$198compare_op.2', '$200pred', 'bool200']
    branch $200pred, 202, 228                ['$200pred']
label 202:
    $202load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>) ['$202load_global.0']
    $const208.3 = const(int, 1)              ['$const208.3']
    $210binary_subtract.4 = i - $const208.3  ['$210binary_subtract.4', '$const208.3', 'i']
    $212call_function.5 = call $202load_global.0(low, $210binary_subtract.4, func=$202load_global.0, args=[Var(low, quicksort.py:177), Var($210binary_subtract.4, quicksort.py:191)], kws=(), vararg=None, varkwarg=None, target=None) ['$202load_global.0', '$210binary_subtract.4', '$212call_function.5', 'low']
    stack[n] = $212call_function.5           ['$212call_function.5', 'n', 'stack']
    $const222.9 = const(int, 1)              ['$const222.9']
    $224inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const222.9, static_lhs=Undefined, static_rhs=Undefined) ['$224inplace_add.10', '$const222.9', 'n']
    n = $224inplace_add.10                   ['$224inplace_add.10', 'n']
    jump 228                                 []
label 228:
    $const230.1 = const(int, 1)              ['$const230.1']
    low = i + $const230.1                    ['$const230.1', 'i', 'low']
    jump 236                                 []
label 236:
    $240binary_subtract.2 = high - low       ['$240binary_subtract.2', 'high', 'low']
    $242load_global.3 = global(SMALL_QUICKSORT: 15) ['$242load_global.3']
    $244compare_op.4 = $240binary_subtract.2 >= $242load_global.3 ['$240binary_subtract.2', '$242load_global.3', '$244compare_op.4']
    bool246 = global(bool: <class 'bool'>)   ['bool246']
    $246pred = call bool246($244compare_op.4, func=bool246, args=(Var($244compare_op.4, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None) ['$244compare_op.4', '$246pred', 'bool246']
    branch $246pred, 108, 248                ['$246pred']
label 248:
    $248load_deref.0 = freevar(insertion_sort: <function make_quicksort_impl.<locals>.insertion_sort at 0x0000017A1EFED7E0>) ['$248load_deref.0']
    $258call_function.5 = call $248load_deref.0(A, R, low, high, func=$248load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None) ['$248load_deref.0', '$258call_function.5', 'A', 'R', 'high', 'low']
    $const264.7 = const(int, 0)              ['$const264.7']
    $266compare_op.8 = n > $const264.7       ['$266compare_op.8', '$const264.7', 'n']
    bool268 = global(bool: <class 'bool'>)   ['bool268']
    $268pred = call bool268($266compare_op.8, func=bool268, args=(Var($266compare_op.8, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None) ['$266compare_op.8', '$268pred', 'bool268']
    branch $268pred, 76, 270                 ['$268pred']
label 270:
    $272return_value.1 = cast(value=R)       ['$272return_value.1', 'R']
    return $272return_value.1                ['$272return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3CA8820>
DEBUG:numba.core.ssa:on stmt: A = arg(0, name=A)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(make_res: <function make_quicksort_impl.<locals>.make_res at 0x0000017A1EF13D90>)
DEBUG:numba.core.ssa:on stmt: R = call $2load_deref.0(A, func=$2load_deref.0, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10load_global.3 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $14call_function.5 = call $10load_global.3(A, func=$10load_global.3, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const16.6 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $18compare_op.7 = $14call_function.5 < $const16.6
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18compare_op.7, func=bool20, args=(Var($18compare_op.7, quicksort.py:168),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 26
DEBUG:numba.core.ssa:==== SSA block analysis pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3CA8820>
DEBUG:numba.core.ssa:on stmt: $24return_value.1 = cast(value=R)
DEBUG:numba.core.ssa:on stmt: return $24return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3CA8820>
DEBUG:numba.core.ssa:on stmt: $26load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $28load_deref.1 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $30load_deref.2 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $32call_function.3 = call $26load_global.0($28load_deref.1, $30load_deref.2, func=$26load_global.0, args=[Var($28load_deref.1, quicksort.py:171), Var($30load_deref.2, quicksort.py:171)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34build_list.4 = build_list(items=[Var($32call_function.3, quicksort.py:171)])
DEBUG:numba.core.ssa:on stmt: $36load_global.5 = global(MAX_STACK: 100)
DEBUG:numba.core.ssa:on stmt: stack = $34build_list.4 * $36load_global.5
DEBUG:numba.core.ssa:on stmt: $42load_global.7 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $44load_deref.8 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $46load_global.9 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $50call_function.11 = call $46load_global.9(A, func=$46load_global.9, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $54binary_subtract.13 = $50call_function.11 - $const52.12
DEBUG:numba.core.ssa:on stmt: $56call_function.14 = call $42load_global.7($44load_deref.8, $54binary_subtract.13, func=$42load_global.7, args=[Var($44load_deref.8, quicksort.py:172), Var($54binary_subtract.13, quicksort.py:172)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const60.16 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stack[0] = $56call_function.14
DEBUG:numba.core.ssa:on stmt: n = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const70.19 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $72compare_op.20 = n > $const70.19
DEBUG:numba.core.ssa:on stmt: bool74 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $74pred = call bool74($72compare_op.20, func=bool74, args=(Var($72compare_op.20, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $74pred, 76, 270
DEBUG:numba.core.ssa:==== SSA block analysis pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3CA8820>
DEBUG:numba.core.ssa:on stmt: $const78.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $80inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=n, rhs=$const78.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $80inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.5 = getitem(value=stack, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.8 = exhaust_iter(value=$88binary_subscr.5, count=2)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.6 = static_getitem(value=$90unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.7 = static_getitem(value=$90unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: low = $90unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: high = $90unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $100binary_subtract.11 = high - low
DEBUG:numba.core.ssa:on stmt: $102load_global.12 = global(SMALL_QUICKSORT: 15)
DEBUG:numba.core.ssa:on stmt: $104compare_op.13 = $100binary_subtract.11 >= $102load_global.12
DEBUG:numba.core.ssa:on stmt: bool106 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $106pred = call bool106($104compare_op.13, func=bool106, args=(Var($104compare_op.13, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $106pred, 108, 248
DEBUG:numba.core.ssa:==== SSA block analysis pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3CA8820>
DEBUG:numba.core.ssa:on stmt: $110load_global.1 = global(MAX_STACK: 100)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = n < $110load_global.1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, quicksort.py:180),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 120, 116
DEBUG:numba.core.ssa:==== SSA block analysis pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3CA8820>
DEBUG:numba.core.ssa:on stmt: $assertion_error116.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>
DEBUG:numba.core.ssa:==== SSA block analysis pass on 120
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3CA8820>
DEBUG:numba.core.ssa:on stmt: $120load_deref.0 = freevar(partition: <function make_quicksort_impl.<locals>.partition at 0x0000017A1EFEFA30>)
DEBUG:numba.core.ssa:on stmt: i = call $120load_deref.0(A, R, low, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_subtract.8 = high - i
DEBUG:numba.core.ssa:on stmt: $144binary_subtract.11 = i - low
DEBUG:numba.core.ssa:on stmt: $146compare_op.12 = $138binary_subtract.8 > $144binary_subtract.11
DEBUG:numba.core.ssa:on stmt: bool148 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $148pred = call bool148($146compare_op.12, func=bool148, args=(Var($146compare_op.12, quicksort.py:183),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $148pred, 150, 194
DEBUG:numba.core.ssa:==== SSA block analysis pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3CA8820>
DEBUG:numba.core.ssa:on stmt: $154compare_op.2 = high > i
DEBUG:numba.core.ssa:on stmt: bool156 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $156pred = call bool156($154compare_op.2, func=bool156, args=(Var($154compare_op.2, quicksort.py:185),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $156pred, 158, 184
DEBUG:numba.core.ssa:==== SSA block analysis pass on 158
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3CA8820>
DEBUG:numba.core.ssa:on stmt: $158load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $const162.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.3 = i + $const162.2
DEBUG:numba.core.ssa:on stmt: $168call_function.5 = call $158load_global.0($164binary_add.3, high, func=$158load_global.0, args=[Var($164binary_add.3, quicksort.py:186), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: stack[n] = $168call_function.5
DEBUG:numba.core.ssa:on stmt: $const178.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const178.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $180inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 184
DEBUG:numba.core.ssa:==== SSA block analysis pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3CA8820>
DEBUG:numba.core.ssa:on stmt: $const186.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: high = i - $const186.1
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block analysis pass on 194
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3CA8820>
DEBUG:numba.core.ssa:on stmt: $198compare_op.2 = i > low
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($198compare_op.2, func=bool200, args=(Var($198compare_op.2, quicksort.py:190),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 228
DEBUG:numba.core.ssa:==== SSA block analysis pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3CA8820>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $const208.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $210binary_subtract.4 = i - $const208.3
DEBUG:numba.core.ssa:on stmt: $212call_function.5 = call $202load_global.0(low, $210binary_subtract.4, func=$202load_global.0, args=[Var(low, quicksort.py:177), Var($210binary_subtract.4, quicksort.py:191)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: stack[n] = $212call_function.5
DEBUG:numba.core.ssa:on stmt: $const222.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $224inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const222.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $224inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block analysis pass on 228
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3CA8820>
DEBUG:numba.core.ssa:on stmt: $const230.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: low = i + $const230.1
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block analysis pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3CA8820>
DEBUG:numba.core.ssa:on stmt: $240binary_subtract.2 = high - low
DEBUG:numba.core.ssa:on stmt: $242load_global.3 = global(SMALL_QUICKSORT: 15)
DEBUG:numba.core.ssa:on stmt: $244compare_op.4 = $240binary_subtract.2 >= $242load_global.3
DEBUG:numba.core.ssa:on stmt: bool246 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $246pred = call bool246($244compare_op.4, func=bool246, args=(Var($244compare_op.4, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $246pred, 108, 248
DEBUG:numba.core.ssa:==== SSA block analysis pass on 248
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3CA8820>
DEBUG:numba.core.ssa:on stmt: $248load_deref.0 = freevar(insertion_sort: <function make_quicksort_impl.<locals>.insertion_sort at 0x0000017A1EFED7E0>)
DEBUG:numba.core.ssa:on stmt: $258call_function.5 = call $248load_deref.0(A, R, low, high, func=$248load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const264.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $266compare_op.8 = n > $const264.7
DEBUG:numba.core.ssa:on stmt: bool268 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $268pred = call bool268($266compare_op.8, func=bool268, args=(Var($266compare_op.8, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $268pred, 76, 270
DEBUG:numba.core.ssa:==== SSA block analysis pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3CA8820>
DEBUG:numba.core.ssa:on stmt: $272return_value.1 = cast(value=R)
DEBUG:numba.core.ssa:on stmt: return $272return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100binary_subtract.11': [(<numba.core.ir.Assign object at 0x0000017AA3CDD900>,
                                         76)],
             '$102load_global.12': [(<numba.core.ir.Assign object at 0x0000017AA3CDDA50>,
                                     76)],
             '$104compare_op.13': [(<numba.core.ir.Assign object at 0x0000017AA3CDDC00>,
                                    76)],
             '$106pred': [(<numba.core.ir.Assign object at 0x0000017AA3CDDE70>,
                           76)],
             '$10load_global.3': [(<numba.core.ir.Assign object at 0x0000017AA3CC0E80>,
                                   0)],
             '$110load_global.1': [(<numba.core.ir.Assign object at 0x0000017AA3CDE050>,
                                    108)],
             '$112compare_op.2': [(<numba.core.ir.Assign object at 0x0000017AA3CDE200>,
                                   108)],
             '$114pred': [(<numba.core.ir.Assign object at 0x0000017AA3CDE470>,
                           108)],
             '$120load_deref.0': [(<numba.core.ir.Assign object at 0x0000017AA3CDE9B0>,
                                   120)],
             '$138binary_subtract.8': [(<numba.core.ir.Assign object at 0x0000017AA3CDF4C0>,
                                        120)],
             '$144binary_subtract.11': [(<numba.core.ir.Assign object at 0x0000017AA3CDF880>,
                                         120)],
             '$146compare_op.12': [(<numba.core.ir.Assign object at 0x0000017AA3CDFA00>,
                                    120)],
             '$148pred': [(<numba.core.ir.Assign object at 0x0000017AA3CDFC70>,
                           120)],
             '$14call_function.5': [(<numba.core.ir.Assign object at 0x0000017AA3CC1A80>,
                                     0)],
             '$154compare_op.2': [(<numba.core.ir.Assign object at 0x0000017AA3CDFE20>,
                                   150)],
             '$156pred': [(<numba.core.ir.Assign object at 0x0000017AA3CE40D0>,
                           150)],
             '$158load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA3CE42B0>,
                                    158)],
             '$164binary_add.3': [(<numba.core.ir.Assign object at 0x0000017AA3CE4700>,
                                   158)],
             '$168call_function.5': [(<numba.core.ir.Assign object at 0x0000017AA3CE49D0>,
                                      158)],
             '$180inplace_add.10': [(<numba.core.ir.Assign object at 0x0000017AA3CE50C0>,
                                     158)],
             '$18compare_op.7': [(<numba.core.ir.Assign object at 0x0000017AA3CC1D50>,
                                  0)],
             '$198compare_op.2': [(<numba.core.ir.Assign object at 0x0000017AA3CE59C0>,
                                   194)],
             '$200pred': [(<numba.core.ir.Assign object at 0x0000017AA3CE5C30>,
                           194)],
             '$202load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA3CE5E10>,
                                    202)],
             '$20pred': [(<numba.core.ir.Assign object at 0x0000017AA3CC1FC0>,
                          0)],
             '$210binary_subtract.4': [(<numba.core.ir.Assign object at 0x0000017AA3CE6380>,
                                        202)],
             '$212call_function.5': [(<numba.core.ir.Assign object at 0x0000017AA3CE6530>,
                                      202)],
             '$224inplace_add.10': [(<numba.core.ir.Assign object at 0x0000017AA3CE6C20>,
                                     202)],
             '$240binary_subtract.2': [(<numba.core.ir.Assign object at 0x0000017AA3CE74C0>,
                                        236)],
             '$242load_global.3': [(<numba.core.ir.Assign object at 0x0000017AA3CE7610>,
                                    236)],
             '$244compare_op.4': [(<numba.core.ir.Assign object at 0x0000017AA3CE77C0>,
                                   236)],
             '$246pred': [(<numba.core.ir.Assign object at 0x0000017AA3CE7A30>,
                           236)],
             '$248load_deref.0': [(<numba.core.ir.Assign object at 0x0000017AA3CE7C10>,
                                   248)],
             '$24return_value.1': [(<numba.core.ir.Assign object at 0x0000017AA3CC2260>,
                                    22)],
             '$258call_function.5': [(<numba.core.ir.Assign object at 0x0000017AA3CEC2B0>,
                                      248)],
             '$266compare_op.8': [(<numba.core.ir.Assign object at 0x0000017AA3CEC6A0>,
                                   248)],
             '$268pred': [(<numba.core.ir.Assign object at 0x0000017AA3CEC910>,
                           248)],
             '$26load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA3CC24A0>,
                                   26)],
             '$272return_value.1': [(<numba.core.ir.Assign object at 0x0000017AA3CECAF0>,
                                     270)],
             '$28load_deref.1': [(<numba.core.ir.Assign object at 0x0000017AA3CC2620>,
                                  26)],
             '$2load_deref.0': [(<numba.core.ir.Assign object at 0x0000017AA3CC0730>,
                                 0)],
             '$30load_deref.2': [(<numba.core.ir.Assign object at 0x0000017AA3CC27A0>,
                                  26)],
             '$32call_function.3': [(<numba.core.ir.Assign object at 0x0000017AA3CC2980>,
                                     26)],
             '$34build_list.4': [(<numba.core.ir.Assign object at 0x0000017AA3CC2AD0>,
                                  26)],
             '$36load_global.5': [(<numba.core.ir.Assign object at 0x0000017AA3CC2C20>,
                                   26)],
             '$42load_global.7': [(<numba.core.ir.Assign object at 0x0000017AA3CC3040>,
                                   26)],
             '$44load_deref.8': [(<numba.core.ir.Assign object at 0x0000017AA3CC31C0>,
                                  26)],
             '$46load_global.9': [(<numba.core.ir.Assign object at 0x0000017AA3CC3340>,
                                   26)],
             '$50call_function.11': [(<numba.core.ir.Assign object at 0x0000017AA3CC3640>,
                                      26)],
             '$54binary_subtract.13': [(<numba.core.ir.Assign object at 0x0000017AA3CC3910>,
                                        26)],
             '$56call_function.14': [(<numba.core.ir.Assign object at 0x0000017AA3CC3A90>,
                                      26)],
             '$72compare_op.20': [(<numba.core.ir.Assign object at 0x0000017AA3CDC4C0>,
                                   26)],
             '$74pred': [(<numba.core.ir.Assign object at 0x0000017AA3CDC730>,
                          26)],
             '$80inplace_subtract.2': [(<numba.core.ir.Assign object at 0x0000017AA3CDCAC0>,
                                        76)],
             '$88binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000017AA3CDCF40>,
                                     76)],
             '$90unpack_sequence.6': [(<numba.core.ir.Assign object at 0x0000017AA3CDD210>,
                                       76)],
             '$90unpack_sequence.7': [(<numba.core.ir.Assign object at 0x0000017AA3CDD330>,
                                       76)],
             '$90unpack_sequence.8': [(<numba.core.ir.Assign object at 0x0000017AA3CDD0C0>,
                                       76)],
             '$assertion_error116.0': [(<numba.core.ir.Assign object at 0x0000017AA3CDE6B0>,
                                        116)],
             '$const16.6': [(<numba.core.ir.Assign object at 0x0000017AA3CC1BA0>,
                             0)],
             '$const162.2': [(<numba.core.ir.Assign object at 0x0000017AA3CE4550>,
                              158)],
             '$const178.9': [(<numba.core.ir.Assign object at 0x0000017AA3CE4F10>,
                              158)],
             '$const186.1': [(<numba.core.ir.Assign object at 0x0000017AA3CE5330>,
                              184)],
             '$const208.3': [(<numba.core.ir.Assign object at 0x0000017AA3CE61D0>,
                              202)],
             '$const222.9': [(<numba.core.ir.Assign object at 0x0000017AA3CE6A70>,
                              202)],
             '$const230.1': [(<numba.core.ir.Assign object at 0x0000017AA3CE6E90>,
                              228)],
             '$const264.7': [(<numba.core.ir.Assign object at 0x0000017AA3CEC4F0>,
                              248)],
             '$const52.12': [(<numba.core.ir.Assign object at 0x0000017AA3CC3760>,
                              26)],
             '$const60.16': [(<numba.core.ir.Assign object at 0x0000017AA3CC3CD0>,
                              26)],
             '$const70.19': [(<numba.core.ir.Assign object at 0x0000017AA3CDC310>,
                              26)],
             '$const78.1': [(<numba.core.ir.Assign object at 0x0000017AA3CDC910>,
                             76)],
             'A': [(<numba.core.ir.Assign object at 0x0000017AA3CC0FD0>, 0)],
             'R': [(<numba.core.ir.Assign object at 0x0000017AA3CC0820>, 0)],
             'bool106': [(<numba.core.ir.Assign object at 0x0000017AA3CDDD50>,
                          76)],
             'bool114': [(<numba.core.ir.Assign object at 0x0000017AA3CDE350>,
                          108)],
             'bool148': [(<numba.core.ir.Assign object at 0x0000017AA3CDFB50>,
                          120)],
             'bool156': [(<numba.core.ir.Assign object at 0x0000017AA3CDFF70>,
                          150)],
             'bool20': [(<numba.core.ir.Assign object at 0x0000017AA3CC1EA0>,
                         0)],
             'bool200': [(<numba.core.ir.Assign object at 0x0000017AA3CE5B10>,
                          194)],
             'bool246': [(<numba.core.ir.Assign object at 0x0000017AA3CE7910>,
                          236)],
             'bool268': [(<numba.core.ir.Assign object at 0x0000017AA3CEC7F0>,
                          248)],
             'bool74': [(<numba.core.ir.Assign object at 0x0000017AA3CDC610>,
                         26)],
             'high': [(<numba.core.ir.Assign object at 0x0000017AA3CDD510>, 76),
                      (<numba.core.ir.Assign object at 0x0000017AA3CE54E0>,
                       184)],
             'i': [(<numba.core.ir.Assign object at 0x0000017AA3CDF010>, 120)],
             'low': [(<numba.core.ir.Assign object at 0x0000017AA3CDD3F0>, 76),
                     (<numba.core.ir.Assign object at 0x0000017AA3CE7040>,
                      228)],
             'n': [(<numba.core.ir.Assign object at 0x0000017AA3CC3F10>, 26),
                   (<numba.core.ir.Assign object at 0x0000017AA3CDCB80>, 76),
                   (<numba.core.ir.Assign object at 0x0000017AA3CE5180>, 158),
                   (<numba.core.ir.Assign object at 0x0000017AA3CE6CE0>, 202)],
             'stack': [(<numba.core.ir.Assign object at 0x0000017AA3CC2DD0>,
                        26)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017A1F0FC940>
DEBUG:numba.core.ssa:Fix SSA violator on var n
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: A = arg(0, name=A)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(make_res: <function make_quicksort_impl.<locals>.make_res at 0x0000017A1EF13D90>)
DEBUG:numba.core.ssa:on stmt: R = call $2load_deref.0(A, func=$2load_deref.0, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10load_global.3 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $14call_function.5 = call $10load_global.3(A, func=$10load_global.3, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const16.6 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $18compare_op.7 = $14call_function.5 < $const16.6
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18compare_op.7, func=bool20, args=(Var($18compare_op.7, quicksort.py:168),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 26
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $24return_value.1 = cast(value=R)
DEBUG:numba.core.ssa:on stmt: return $24return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $26load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $28load_deref.1 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $30load_deref.2 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $32call_function.3 = call $26load_global.0($28load_deref.1, $30load_deref.2, func=$26load_global.0, args=[Var($28load_deref.1, quicksort.py:171), Var($30load_deref.2, quicksort.py:171)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34build_list.4 = build_list(items=[Var($32call_function.3, quicksort.py:171)])
DEBUG:numba.core.ssa:on stmt: $36load_global.5 = global(MAX_STACK: 100)
DEBUG:numba.core.ssa:on stmt: stack = $34build_list.4 * $36load_global.5
DEBUG:numba.core.ssa:on stmt: $42load_global.7 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $44load_deref.8 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $46load_global.9 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $50call_function.11 = call $46load_global.9(A, func=$46load_global.9, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $54binary_subtract.13 = $50call_function.11 - $const52.12
DEBUG:numba.core.ssa:on stmt: $56call_function.14 = call $42load_global.7($44load_deref.8, $54binary_subtract.13, func=$42load_global.7, args=[Var($44load_deref.8, quicksort.py:172), Var($54binary_subtract.13, quicksort.py:172)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const60.16 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stack[0] = $56call_function.14
DEBUG:numba.core.ssa:on stmt: n = const(int, 1)
DEBUG:numba.core.ssa:first assign: n
DEBUG:numba.core.ssa:replaced with: n = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const70.19 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $72compare_op.20 = n > $const70.19
DEBUG:numba.core.ssa:on stmt: bool74 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $74pred = call bool74($72compare_op.20, func=bool74, args=(Var($72compare_op.20, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $74pred, 76, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $const78.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $80inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=n, rhs=$const78.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $80inplace_subtract.2
DEBUG:numba.core.ssa:replaced with: n.1 = $80inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.5 = getitem(value=stack, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.8 = exhaust_iter(value=$88binary_subscr.5, count=2)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.6 = static_getitem(value=$90unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.7 = static_getitem(value=$90unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: low = $90unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: high = $90unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $100binary_subtract.11 = high - low
DEBUG:numba.core.ssa:on stmt: $102load_global.12 = global(SMALL_QUICKSORT: 15)
DEBUG:numba.core.ssa:on stmt: $104compare_op.13 = $100binary_subtract.11 >= $102load_global.12
DEBUG:numba.core.ssa:on stmt: bool106 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $106pred = call bool106($104compare_op.13, func=bool106, args=(Var($104compare_op.13, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $106pred, 108, 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $110load_global.1 = global(MAX_STACK: 100)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = n < $110load_global.1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, quicksort.py:180),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 120, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $assertion_error116.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 120
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $120load_deref.0 = freevar(partition: <function make_quicksort_impl.<locals>.partition at 0x0000017A1EFEFA30>)
DEBUG:numba.core.ssa:on stmt: i = call $120load_deref.0(A, R, low, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_subtract.8 = high - i
DEBUG:numba.core.ssa:on stmt: $144binary_subtract.11 = i - low
DEBUG:numba.core.ssa:on stmt: $146compare_op.12 = $138binary_subtract.8 > $144binary_subtract.11
DEBUG:numba.core.ssa:on stmt: bool148 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $148pred = call bool148($146compare_op.12, func=bool148, args=(Var($146compare_op.12, quicksort.py:183),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $148pred, 150, 194
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $154compare_op.2 = high > i
DEBUG:numba.core.ssa:on stmt: bool156 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $156pred = call bool156($154compare_op.2, func=bool156, args=(Var($154compare_op.2, quicksort.py:185),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $156pred, 158, 184
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 158
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $158load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $const162.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.3 = i + $const162.2
DEBUG:numba.core.ssa:on stmt: $168call_function.5 = call $158load_global.0($164binary_add.3, high, func=$158load_global.0, args=[Var($164binary_add.3, quicksort.py:186), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: stack[n] = $168call_function.5
DEBUG:numba.core.ssa:on stmt: $const178.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const178.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $180inplace_add.10
DEBUG:numba.core.ssa:replaced with: n.2 = $180inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 184
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $const186.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: high = i - $const186.1
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 194
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $198compare_op.2 = i > low
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($198compare_op.2, func=bool200, args=(Var($198compare_op.2, quicksort.py:190),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $const208.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $210binary_subtract.4 = i - $const208.3
DEBUG:numba.core.ssa:on stmt: $212call_function.5 = call $202load_global.0(low, $210binary_subtract.4, func=$202load_global.0, args=[Var(low, quicksort.py:177), Var($210binary_subtract.4, quicksort.py:191)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: stack[n] = $212call_function.5
DEBUG:numba.core.ssa:on stmt: $const222.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $224inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const222.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $224inplace_add.10
DEBUG:numba.core.ssa:replaced with: n.3 = $224inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 228
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $const230.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: low = i + $const230.1
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $240binary_subtract.2 = high - low
DEBUG:numba.core.ssa:on stmt: $242load_global.3 = global(SMALL_QUICKSORT: 15)
DEBUG:numba.core.ssa:on stmt: $244compare_op.4 = $240binary_subtract.2 >= $242load_global.3
DEBUG:numba.core.ssa:on stmt: bool246 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $246pred = call bool246($244compare_op.4, func=bool246, args=(Var($244compare_op.4, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $246pred, 108, 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 248
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $248load_deref.0 = freevar(insertion_sort: <function make_quicksort_impl.<locals>.insertion_sort at 0x0000017A1EFED7E0>)
DEBUG:numba.core.ssa:on stmt: $258call_function.5 = call $248load_deref.0(A, R, low, high, func=$248load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const264.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $266compare_op.8 = n > $const264.7
DEBUG:numba.core.ssa:on stmt: bool268 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $268pred = call bool268($266compare_op.8, func=bool268, args=(Var($266compare_op.8, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $268pred, 76, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $272return_value.1 = cast(value=R)
DEBUG:numba.core.ssa:on stmt: return $272return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x0000017A1F01D750>],
             76: [<numba.core.ir.Assign object at 0x0000017A1F01D6F0>],
             158: [<numba.core.ir.Assign object at 0x0000017A1F017A30>],
             202: [<numba.core.ir.Assign object at 0x0000017AA3C91180>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: A = arg(0, name=A)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(make_res: <function make_quicksort_impl.<locals>.make_res at 0x0000017A1EF13D90>)
DEBUG:numba.core.ssa:on stmt: R = call $2load_deref.0(A, func=$2load_deref.0, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10load_global.3 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $14call_function.5 = call $10load_global.3(A, func=$10load_global.3, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const16.6 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $18compare_op.7 = $14call_function.5 < $const16.6
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18compare_op.7, func=bool20, args=(Var($18compare_op.7, quicksort.py:168),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 26
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $24return_value.1 = cast(value=R)
DEBUG:numba.core.ssa:on stmt: return $24return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $26load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $28load_deref.1 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $30load_deref.2 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $32call_function.3 = call $26load_global.0($28load_deref.1, $30load_deref.2, func=$26load_global.0, args=[Var($28load_deref.1, quicksort.py:171), Var($30load_deref.2, quicksort.py:171)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34build_list.4 = build_list(items=[Var($32call_function.3, quicksort.py:171)])
DEBUG:numba.core.ssa:on stmt: $36load_global.5 = global(MAX_STACK: 100)
DEBUG:numba.core.ssa:on stmt: stack = $34build_list.4 * $36load_global.5
DEBUG:numba.core.ssa:on stmt: $42load_global.7 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $44load_deref.8 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $46load_global.9 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $50call_function.11 = call $46load_global.9(A, func=$46load_global.9, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $54binary_subtract.13 = $50call_function.11 - $const52.12
DEBUG:numba.core.ssa:on stmt: $56call_function.14 = call $42load_global.7($44load_deref.8, $54binary_subtract.13, func=$42load_global.7, args=[Var($44load_deref.8, quicksort.py:172), Var($54binary_subtract.13, quicksort.py:172)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const60.16 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stack[0] = $56call_function.14
DEBUG:numba.core.ssa:on stmt: n = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const70.19 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $72compare_op.20 = n > $const70.19
DEBUG:numba.core.ssa:find_def var='n' stmt=$72compare_op.20 = n > $const70.19
DEBUG:numba.core.ssa:on stmt: bool74 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $74pred = call bool74($72compare_op.20, func=bool74, args=(Var($72compare_op.20, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $74pred, 76, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $const78.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $80inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=n, rhs=$const78.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='n' stmt=$80inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=n, rhs=$const78.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 76
DEBUG:numba.core.ssa:insert phi node n.4 = phi(incoming_values=[], incoming_blocks=[]) at 76
DEBUG:numba.core.ssa:find_def_from_bottom label 248
DEBUG:numba.core.ssa:find_def_from_top label 248
DEBUG:numba.core.ssa:insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 248
DEBUG:numba.core.ssa:find_def_from_bottom label 76
DEBUG:numba.core.ssa:incoming_def n.1 = $80inplace_subtract.2
DEBUG:numba.core.ssa:find_def_from_bottom label 236
DEBUG:numba.core.ssa:find_def_from_top label 236
DEBUG:numba.core.ssa:insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 236
DEBUG:numba.core.ssa:find_def_from_bottom label 184
DEBUG:numba.core.ssa:find_def_from_top label 184
DEBUG:numba.core.ssa:insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 184
DEBUG:numba.core.ssa:find_def_from_bottom label 158
DEBUG:numba.core.ssa:incoming_def n.2 = $180inplace_add.10
DEBUG:numba.core.ssa:find_def_from_bottom label 150
DEBUG:numba.core.ssa:find_def_from_top label 150
DEBUG:numba.core.ssa:idom 120 from label 150
DEBUG:numba.core.ssa:find_def_from_bottom label 120
DEBUG:numba.core.ssa:find_def_from_top label 120
DEBUG:numba.core.ssa:idom 108 from label 120
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:insert phi node n.8 = phi(incoming_values=[], incoming_blocks=[]) at 108
DEBUG:numba.core.ssa:find_def_from_bottom label 76
DEBUG:numba.core.ssa:incoming_def n.1 = $80inplace_subtract.2
DEBUG:numba.core.ssa:find_def_from_bottom label 236
DEBUG:numba.core.ssa:incoming_def n.6 = phi(incoming_values=[], incoming_blocks=[])
DEBUG:numba.core.ssa:incoming_def n.8 = phi(incoming_values=[Var(n.1, quicksort.py:176), Var(n.6, quicksort.py:176)], incoming_blocks=[76, 236])
DEBUG:numba.core.ssa:incoming_def n.7 = phi(incoming_values=[Var(n.2, quicksort.py:187), Var(n.8, quicksort.py:176)], incoming_blocks=[158, 150])
DEBUG:numba.core.ssa:find_def_from_bottom label 228
DEBUG:numba.core.ssa:find_def_from_top label 228
DEBUG:numba.core.ssa:insert phi node n.9 = phi(incoming_values=[], incoming_blocks=[]) at 228
DEBUG:numba.core.ssa:find_def_from_bottom label 202
DEBUG:numba.core.ssa:incoming_def n.3 = $224inplace_add.10
DEBUG:numba.core.ssa:find_def_from_bottom label 194
DEBUG:numba.core.ssa:find_def_from_top label 194
DEBUG:numba.core.ssa:idom 120 from label 194
DEBUG:numba.core.ssa:find_def_from_bottom label 120
DEBUG:numba.core.ssa:find_def_from_top label 120
DEBUG:numba.core.ssa:idom 108 from label 120
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:incoming_def n.8 = phi(incoming_values=[Var(n.1, quicksort.py:176), Var(n.6, quicksort.py:176)], incoming_blocks=[76, 236])
DEBUG:numba.core.ssa:incoming_def n.9 = phi(incoming_values=[Var(n.3, quicksort.py:192), Var(n.8, quicksort.py:176)], incoming_blocks=[202, 194])
DEBUG:numba.core.ssa:incoming_def n.6 = phi(incoming_values=[Var(n.7, quicksort.py:176), Var(n.9, quicksort.py:176)], incoming_blocks=[184, 228])
DEBUG:numba.core.ssa:incoming_def n.5 = phi(incoming_values=[Var(n.1, quicksort.py:176), Var(n.6, quicksort.py:176)], incoming_blocks=[76, 236])
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:incoming_def n = const(int, 1)
DEBUG:numba.core.ssa:replaced with: $80inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=n.4, rhs=$const78.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.1 = $80inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.5 = getitem(value=stack, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$88binary_subscr.5 = getitem(value=stack, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: $88binary_subscr.5 = getitem(value=stack, index=n.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.8 = exhaust_iter(value=$88binary_subscr.5, count=2)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.6 = static_getitem(value=$90unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.7 = static_getitem(value=$90unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: low = $90unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: high = $90unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $100binary_subtract.11 = high - low
DEBUG:numba.core.ssa:on stmt: $102load_global.12 = global(SMALL_QUICKSORT: 15)
DEBUG:numba.core.ssa:on stmt: $104compare_op.13 = $100binary_subtract.11 >= $102load_global.12
DEBUG:numba.core.ssa:on stmt: bool106 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $106pred = call bool106($104compare_op.13, func=bool106, args=(Var($104compare_op.13, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $106pred, 108, 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $110load_global.1 = global(MAX_STACK: 100)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = n < $110load_global.1
DEBUG:numba.core.ssa:find_def var='n' stmt=$112compare_op.2 = n < $110load_global.1
DEBUG:numba.core.ssa:replaced with: $112compare_op.2 = n.8 < $110load_global.1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, quicksort.py:180),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 120, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $assertion_error116.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 120
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $120load_deref.0 = freevar(partition: <function make_quicksort_impl.<locals>.partition at 0x0000017A1EFEFA30>)
DEBUG:numba.core.ssa:on stmt: i = call $120load_deref.0(A, R, low, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_subtract.8 = high - i
DEBUG:numba.core.ssa:on stmt: $144binary_subtract.11 = i - low
DEBUG:numba.core.ssa:on stmt: $146compare_op.12 = $138binary_subtract.8 > $144binary_subtract.11
DEBUG:numba.core.ssa:on stmt: bool148 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $148pred = call bool148($146compare_op.12, func=bool148, args=(Var($146compare_op.12, quicksort.py:183),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $148pred, 150, 194
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $154compare_op.2 = high > i
DEBUG:numba.core.ssa:on stmt: bool156 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $156pred = call bool156($154compare_op.2, func=bool156, args=(Var($154compare_op.2, quicksort.py:185),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $156pred, 158, 184
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 158
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $158load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $const162.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.3 = i + $const162.2
DEBUG:numba.core.ssa:on stmt: $168call_function.5 = call $158load_global.0($164binary_add.3, high, func=$158load_global.0, args=[Var($164binary_add.3, quicksort.py:186), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: stack[n] = $168call_function.5
DEBUG:numba.core.ssa:find_def var='n' stmt=stack[n] = $168call_function.5
DEBUG:numba.core.ssa:find_def_from_top label 158
DEBUG:numba.core.ssa:idom 150 from label 158
DEBUG:numba.core.ssa:find_def_from_bottom label 150
DEBUG:numba.core.ssa:find_def_from_top label 150
DEBUG:numba.core.ssa:idom 120 from label 150
DEBUG:numba.core.ssa:find_def_from_bottom label 120
DEBUG:numba.core.ssa:find_def_from_top label 120
DEBUG:numba.core.ssa:idom 108 from label 120
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:replaced with: stack[n.8] = $168call_function.5
DEBUG:numba.core.ssa:on stmt: $const178.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const178.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='n' stmt=$180inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const178.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 158
DEBUG:numba.core.ssa:idom 150 from label 158
DEBUG:numba.core.ssa:find_def_from_bottom label 150
DEBUG:numba.core.ssa:find_def_from_top label 150
DEBUG:numba.core.ssa:idom 120 from label 150
DEBUG:numba.core.ssa:find_def_from_bottom label 120
DEBUG:numba.core.ssa:find_def_from_top label 120
DEBUG:numba.core.ssa:idom 108 from label 120
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:replaced with: $180inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.8, rhs=$const178.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.2 = $180inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 184
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $const186.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: high = i - $const186.1
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 194
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $198compare_op.2 = i > low
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($198compare_op.2, func=bool200, args=(Var($198compare_op.2, quicksort.py:190),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $const208.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $210binary_subtract.4 = i - $const208.3
DEBUG:numba.core.ssa:on stmt: $212call_function.5 = call $202load_global.0(low, $210binary_subtract.4, func=$202load_global.0, args=[Var(low, quicksort.py:177), Var($210binary_subtract.4, quicksort.py:191)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: stack[n] = $212call_function.5
DEBUG:numba.core.ssa:find_def var='n' stmt=stack[n] = $212call_function.5
DEBUG:numba.core.ssa:find_def_from_top label 202
DEBUG:numba.core.ssa:idom 194 from label 202
DEBUG:numba.core.ssa:find_def_from_bottom label 194
DEBUG:numba.core.ssa:find_def_from_top label 194
DEBUG:numba.core.ssa:idom 120 from label 194
DEBUG:numba.core.ssa:find_def_from_bottom label 120
DEBUG:numba.core.ssa:find_def_from_top label 120
DEBUG:numba.core.ssa:idom 108 from label 120
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:replaced with: stack[n.8] = $212call_function.5
DEBUG:numba.core.ssa:on stmt: $const222.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $224inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const222.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='n' stmt=$224inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const222.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 202
DEBUG:numba.core.ssa:idom 194 from label 202
DEBUG:numba.core.ssa:find_def_from_bottom label 194
DEBUG:numba.core.ssa:find_def_from_top label 194
DEBUG:numba.core.ssa:idom 120 from label 194
DEBUG:numba.core.ssa:find_def_from_bottom label 120
DEBUG:numba.core.ssa:find_def_from_top label 120
DEBUG:numba.core.ssa:idom 108 from label 120
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:replaced with: $224inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.8, rhs=$const222.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.3 = $224inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 228
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $const230.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: low = i + $const230.1
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $240binary_subtract.2 = high - low
DEBUG:numba.core.ssa:on stmt: $242load_global.3 = global(SMALL_QUICKSORT: 15)
DEBUG:numba.core.ssa:on stmt: $244compare_op.4 = $240binary_subtract.2 >= $242load_global.3
DEBUG:numba.core.ssa:on stmt: bool246 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $246pred = call bool246($244compare_op.4, func=bool246, args=(Var($244compare_op.4, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $246pred, 108, 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 248
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $248load_deref.0 = freevar(insertion_sort: <function make_quicksort_impl.<locals>.insertion_sort at 0x0000017A1EFED7E0>)
DEBUG:numba.core.ssa:on stmt: $258call_function.5 = call $248load_deref.0(A, R, low, high, func=$248load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const264.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $266compare_op.8 = n > $const264.7
DEBUG:numba.core.ssa:find_def var='n' stmt=$266compare_op.8 = n > $const264.7
DEBUG:numba.core.ssa:replaced with: $266compare_op.8 = n.5 > $const264.7
DEBUG:numba.core.ssa:on stmt: bool268 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $268pred = call bool268($266compare_op.8, func=bool268, args=(Var($266compare_op.8, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $268pred, 76, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $272return_value.1 = cast(value=R)
DEBUG:numba.core.ssa:on stmt: return $272return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var low
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: A = arg(0, name=A)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(make_res: <function make_quicksort_impl.<locals>.make_res at 0x0000017A1EF13D90>)
DEBUG:numba.core.ssa:on stmt: R = call $2load_deref.0(A, func=$2load_deref.0, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10load_global.3 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $14call_function.5 = call $10load_global.3(A, func=$10load_global.3, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const16.6 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $18compare_op.7 = $14call_function.5 < $const16.6
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18compare_op.7, func=bool20, args=(Var($18compare_op.7, quicksort.py:168),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 26
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: $24return_value.1 = cast(value=R)
DEBUG:numba.core.ssa:on stmt: return $24return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: $26load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $28load_deref.1 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $30load_deref.2 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $32call_function.3 = call $26load_global.0($28load_deref.1, $30load_deref.2, func=$26load_global.0, args=[Var($28load_deref.1, quicksort.py:171), Var($30load_deref.2, quicksort.py:171)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34build_list.4 = build_list(items=[Var($32call_function.3, quicksort.py:171)])
DEBUG:numba.core.ssa:on stmt: $36load_global.5 = global(MAX_STACK: 100)
DEBUG:numba.core.ssa:on stmt: stack = $34build_list.4 * $36load_global.5
DEBUG:numba.core.ssa:on stmt: $42load_global.7 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $44load_deref.8 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $46load_global.9 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $50call_function.11 = call $46load_global.9(A, func=$46load_global.9, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $54binary_subtract.13 = $50call_function.11 - $const52.12
DEBUG:numba.core.ssa:on stmt: $56call_function.14 = call $42load_global.7($44load_deref.8, $54binary_subtract.13, func=$42load_global.7, args=[Var($44load_deref.8, quicksort.py:172), Var($54binary_subtract.13, quicksort.py:172)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const60.16 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stack[0] = $56call_function.14
DEBUG:numba.core.ssa:on stmt: n = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const70.19 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $72compare_op.20 = n > $const70.19
DEBUG:numba.core.ssa:on stmt: bool74 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $74pred = call bool74($72compare_op.20, func=bool74, args=(Var($72compare_op.20, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $74pred, 76, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: n.4 = phi(incoming_values=[Var(n.5, quicksort.py:176), Var(n, quicksort.py:173)], incoming_blocks=[248, 26])
DEBUG:numba.core.ssa:on stmt: $const78.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $80inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=n.4, rhs=$const78.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.1 = $80inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.5 = getitem(value=stack, index=n.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.8 = exhaust_iter(value=$88binary_subscr.5, count=2)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.6 = static_getitem(value=$90unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.7 = static_getitem(value=$90unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: low = $90unpack_sequence.6
DEBUG:numba.core.ssa:first assign: low
DEBUG:numba.core.ssa:replaced with: low = $90unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: high = $90unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $100binary_subtract.11 = high - low
DEBUG:numba.core.ssa:on stmt: $102load_global.12 = global(SMALL_QUICKSORT: 15)
DEBUG:numba.core.ssa:on stmt: $104compare_op.13 = $100binary_subtract.11 >= $102load_global.12
DEBUG:numba.core.ssa:on stmt: bool106 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $106pred = call bool106($104compare_op.13, func=bool106, args=(Var($104compare_op.13, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $106pred, 108, 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: n.8 = phi(incoming_values=[Var(n.1, quicksort.py:176), Var(n.6, quicksort.py:176)], incoming_blocks=[76, 236])
DEBUG:numba.core.ssa:on stmt: $110load_global.1 = global(MAX_STACK: 100)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = n.8 < $110load_global.1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, quicksort.py:180),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 120, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: $assertion_error116.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 120
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: $120load_deref.0 = freevar(partition: <function make_quicksort_impl.<locals>.partition at 0x0000017A1EFEFA30>)
DEBUG:numba.core.ssa:on stmt: i = call $120load_deref.0(A, R, low, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_subtract.8 = high - i
DEBUG:numba.core.ssa:on stmt: $144binary_subtract.11 = i - low
DEBUG:numba.core.ssa:on stmt: $146compare_op.12 = $138binary_subtract.8 > $144binary_subtract.11
DEBUG:numba.core.ssa:on stmt: bool148 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $148pred = call bool148($146compare_op.12, func=bool148, args=(Var($146compare_op.12, quicksort.py:183),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $148pred, 150, 194
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: $154compare_op.2 = high > i
DEBUG:numba.core.ssa:on stmt: bool156 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $156pred = call bool156($154compare_op.2, func=bool156, args=(Var($154compare_op.2, quicksort.py:185),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $156pred, 158, 184
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 158
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: $158load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $const162.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.3 = i + $const162.2
DEBUG:numba.core.ssa:on stmt: $168call_function.5 = call $158load_global.0($164binary_add.3, high, func=$158load_global.0, args=[Var($164binary_add.3, quicksort.py:186), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: stack[n.8] = $168call_function.5
DEBUG:numba.core.ssa:on stmt: $const178.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.8, rhs=$const178.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.2 = $180inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 184
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: n.7 = phi(incoming_values=[Var(n.2, quicksort.py:187), Var(n.8, quicksort.py:176)], incoming_blocks=[158, 150])
DEBUG:numba.core.ssa:on stmt: $const186.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: high = i - $const186.1
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 194
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: $198compare_op.2 = i > low
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($198compare_op.2, func=bool200, args=(Var($198compare_op.2, quicksort.py:190),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $const208.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $210binary_subtract.4 = i - $const208.3
DEBUG:numba.core.ssa:on stmt: $212call_function.5 = call $202load_global.0(low, $210binary_subtract.4, func=$202load_global.0, args=[Var(low, quicksort.py:177), Var($210binary_subtract.4, quicksort.py:191)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: stack[n.8] = $212call_function.5
DEBUG:numba.core.ssa:on stmt: $const222.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $224inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.8, rhs=$const222.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.3 = $224inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 228
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: n.9 = phi(incoming_values=[Var(n.3, quicksort.py:192), Var(n.8, quicksort.py:176)], incoming_blocks=[202, 194])
DEBUG:numba.core.ssa:on stmt: $const230.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: low = i + $const230.1
DEBUG:numba.core.ssa:replaced with: low.1 = i + $const230.1
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: n.6 = phi(incoming_values=[Var(n.7, quicksort.py:176), Var(n.9, quicksort.py:176)], incoming_blocks=[184, 228])
DEBUG:numba.core.ssa:on stmt: $240binary_subtract.2 = high - low
DEBUG:numba.core.ssa:on stmt: $242load_global.3 = global(SMALL_QUICKSORT: 15)
DEBUG:numba.core.ssa:on stmt: $244compare_op.4 = $240binary_subtract.2 >= $242load_global.3
DEBUG:numba.core.ssa:on stmt: bool246 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $246pred = call bool246($244compare_op.4, func=bool246, args=(Var($244compare_op.4, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $246pred, 108, 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 248
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: n.5 = phi(incoming_values=[Var(n.1, quicksort.py:176), Var(n.6, quicksort.py:176)], incoming_blocks=[76, 236])
DEBUG:numba.core.ssa:on stmt: $248load_deref.0 = freevar(insertion_sort: <function make_quicksort_impl.<locals>.insertion_sort at 0x0000017A1EFED7E0>)
DEBUG:numba.core.ssa:on stmt: $258call_function.5 = call $248load_deref.0(A, R, low, high, func=$248load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const264.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $266compare_op.8 = n.5 > $const264.7
DEBUG:numba.core.ssa:on stmt: bool268 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $268pred = call bool268($266compare_op.8, func=bool268, args=(Var($266compare_op.8, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $268pred, 76, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: $272return_value.1 = cast(value=R)
DEBUG:numba.core.ssa:on stmt: return $272return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {76: [<numba.core.ir.Assign object at 0x0000017A1F0142E0>],
             228: [<numba.core.ir.Assign object at 0x0000017AA3CA8820>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: A = arg(0, name=A)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(make_res: <function make_quicksort_impl.<locals>.make_res at 0x0000017A1EF13D90>)
DEBUG:numba.core.ssa:on stmt: R = call $2load_deref.0(A, func=$2load_deref.0, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10load_global.3 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $14call_function.5 = call $10load_global.3(A, func=$10load_global.3, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const16.6 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $18compare_op.7 = $14call_function.5 < $const16.6
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18compare_op.7, func=bool20, args=(Var($18compare_op.7, quicksort.py:168),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 26
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $24return_value.1 = cast(value=R)
DEBUG:numba.core.ssa:on stmt: return $24return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $26load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $28load_deref.1 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $30load_deref.2 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $32call_function.3 = call $26load_global.0($28load_deref.1, $30load_deref.2, func=$26load_global.0, args=[Var($28load_deref.1, quicksort.py:171), Var($30load_deref.2, quicksort.py:171)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34build_list.4 = build_list(items=[Var($32call_function.3, quicksort.py:171)])
DEBUG:numba.core.ssa:on stmt: $36load_global.5 = global(MAX_STACK: 100)
DEBUG:numba.core.ssa:on stmt: stack = $34build_list.4 * $36load_global.5
DEBUG:numba.core.ssa:on stmt: $42load_global.7 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $44load_deref.8 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $46load_global.9 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $50call_function.11 = call $46load_global.9(A, func=$46load_global.9, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $54binary_subtract.13 = $50call_function.11 - $const52.12
DEBUG:numba.core.ssa:on stmt: $56call_function.14 = call $42load_global.7($44load_deref.8, $54binary_subtract.13, func=$42load_global.7, args=[Var($44load_deref.8, quicksort.py:172), Var($54binary_subtract.13, quicksort.py:172)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const60.16 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stack[0] = $56call_function.14
DEBUG:numba.core.ssa:on stmt: n = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const70.19 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $72compare_op.20 = n > $const70.19
DEBUG:numba.core.ssa:on stmt: bool74 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $74pred = call bool74($72compare_op.20, func=bool74, args=(Var($72compare_op.20, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $74pred, 76, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: n.4 = phi(incoming_values=[Var(n.5, quicksort.py:176), Var(n, quicksort.py:173)], incoming_blocks=[248, 26])
DEBUG:numba.core.ssa:on stmt: $const78.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $80inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=n.4, rhs=$const78.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.1 = $80inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.5 = getitem(value=stack, index=n.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.8 = exhaust_iter(value=$88binary_subscr.5, count=2)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.6 = static_getitem(value=$90unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.7 = static_getitem(value=$90unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: low = $90unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: high = $90unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $100binary_subtract.11 = high - low
DEBUG:numba.core.ssa:find_def var='low' stmt=$100binary_subtract.11 = high - low
DEBUG:numba.core.ssa:on stmt: $102load_global.12 = global(SMALL_QUICKSORT: 15)
DEBUG:numba.core.ssa:on stmt: $104compare_op.13 = $100binary_subtract.11 >= $102load_global.12
DEBUG:numba.core.ssa:on stmt: bool106 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $106pred = call bool106($104compare_op.13, func=bool106, args=(Var($104compare_op.13, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $106pred, 108, 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: n.8 = phi(incoming_values=[Var(n.1, quicksort.py:176), Var(n.6, quicksort.py:176)], incoming_blocks=[76, 236])
DEBUG:numba.core.ssa:on stmt: $110load_global.1 = global(MAX_STACK: 100)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = n.8 < $110load_global.1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, quicksort.py:180),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 120, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $assertion_error116.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 120
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $120load_deref.0 = freevar(partition: <function make_quicksort_impl.<locals>.partition at 0x0000017A1EFEFA30>)
DEBUG:numba.core.ssa:on stmt: i = call $120load_deref.0(A, R, low, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='low' stmt=i = call $120load_deref.0(A, R, low, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 120
DEBUG:numba.core.ssa:idom 108 from label 120
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:insert phi node low.2 = phi(incoming_values=[], incoming_blocks=[]) at 108
DEBUG:numba.core.ssa:find_def_from_bottom label 76
DEBUG:numba.core.ssa:incoming_def low = $90unpack_sequence.6
DEBUG:numba.core.ssa:find_def_from_bottom label 236
DEBUG:numba.core.ssa:find_def_from_top label 236
DEBUG:numba.core.ssa:insert phi node low.3 = phi(incoming_values=[], incoming_blocks=[]) at 236
DEBUG:numba.core.ssa:find_def_from_bottom label 184
DEBUG:numba.core.ssa:find_def_from_top label 184
DEBUG:numba.core.ssa:idom 150 from label 184
DEBUG:numba.core.ssa:find_def_from_bottom label 150
DEBUG:numba.core.ssa:find_def_from_top label 150
DEBUG:numba.core.ssa:idom 120 from label 150
DEBUG:numba.core.ssa:find_def_from_bottom label 120
DEBUG:numba.core.ssa:find_def_from_top label 120
DEBUG:numba.core.ssa:idom 108 from label 120
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:incoming_def low.2 = phi(incoming_values=[Var(low, quicksort.py:177)], incoming_blocks=[76])
DEBUG:numba.core.ssa:find_def_from_bottom label 228
DEBUG:numba.core.ssa:incoming_def low.1 = i + $const230.1
DEBUG:numba.core.ssa:incoming_def low.3 = phi(incoming_values=[Var(low.2, quicksort.py:181), Var(low.1, quicksort.py:193)], incoming_blocks=[184, 228])
DEBUG:numba.core.ssa:replaced with: i = call $120load_deref.0(A, R, low.2, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low.2, quicksort.py:181), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_subtract.8 = high - i
DEBUG:numba.core.ssa:on stmt: $144binary_subtract.11 = i - low
DEBUG:numba.core.ssa:find_def var='low' stmt=$144binary_subtract.11 = i - low
DEBUG:numba.core.ssa:find_def_from_top label 120
DEBUG:numba.core.ssa:idom 108 from label 120
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:replaced with: $144binary_subtract.11 = i - low.2
DEBUG:numba.core.ssa:on stmt: $146compare_op.12 = $138binary_subtract.8 > $144binary_subtract.11
DEBUG:numba.core.ssa:on stmt: bool148 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $148pred = call bool148($146compare_op.12, func=bool148, args=(Var($146compare_op.12, quicksort.py:183),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $148pred, 150, 194
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $154compare_op.2 = high > i
DEBUG:numba.core.ssa:on stmt: bool156 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $156pred = call bool156($154compare_op.2, func=bool156, args=(Var($154compare_op.2, quicksort.py:185),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $156pred, 158, 184
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 158
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $158load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $const162.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.3 = i + $const162.2
DEBUG:numba.core.ssa:on stmt: $168call_function.5 = call $158load_global.0($164binary_add.3, high, func=$158load_global.0, args=[Var($164binary_add.3, quicksort.py:186), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: stack[n.8] = $168call_function.5
DEBUG:numba.core.ssa:on stmt: $const178.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.8, rhs=$const178.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.2 = $180inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 184
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: n.7 = phi(incoming_values=[Var(n.2, quicksort.py:187), Var(n.8, quicksort.py:176)], incoming_blocks=[158, 150])
DEBUG:numba.core.ssa:on stmt: $const186.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: high = i - $const186.1
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 194
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $198compare_op.2 = i > low
DEBUG:numba.core.ssa:find_def var='low' stmt=$198compare_op.2 = i > low
DEBUG:numba.core.ssa:find_def_from_top label 194
DEBUG:numba.core.ssa:idom 120 from label 194
DEBUG:numba.core.ssa:find_def_from_bottom label 120
DEBUG:numba.core.ssa:find_def_from_top label 120
DEBUG:numba.core.ssa:idom 108 from label 120
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:replaced with: $198compare_op.2 = i > low.2
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($198compare_op.2, func=bool200, args=(Var($198compare_op.2, quicksort.py:190),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $const208.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $210binary_subtract.4 = i - $const208.3
DEBUG:numba.core.ssa:on stmt: $212call_function.5 = call $202load_global.0(low, $210binary_subtract.4, func=$202load_global.0, args=[Var(low, quicksort.py:177), Var($210binary_subtract.4, quicksort.py:191)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='low' stmt=$212call_function.5 = call $202load_global.0(low, $210binary_subtract.4, func=$202load_global.0, args=[Var(low, quicksort.py:177), Var($210binary_subtract.4, quicksort.py:191)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 202
DEBUG:numba.core.ssa:idom 194 from label 202
DEBUG:numba.core.ssa:find_def_from_bottom label 194
DEBUG:numba.core.ssa:find_def_from_top label 194
DEBUG:numba.core.ssa:idom 120 from label 194
DEBUG:numba.core.ssa:find_def_from_bottom label 120
DEBUG:numba.core.ssa:find_def_from_top label 120
DEBUG:numba.core.ssa:idom 108 from label 120
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:replaced with: $212call_function.5 = call $202load_global.0(low.2, $210binary_subtract.4, func=$202load_global.0, args=[Var(low.2, quicksort.py:181), Var($210binary_subtract.4, quicksort.py:191)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: stack[n.8] = $212call_function.5
DEBUG:numba.core.ssa:on stmt: $const222.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $224inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.8, rhs=$const222.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.3 = $224inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 228
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: n.9 = phi(incoming_values=[Var(n.3, quicksort.py:192), Var(n.8, quicksort.py:176)], incoming_blocks=[202, 194])
DEBUG:numba.core.ssa:on stmt: $const230.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: low.1 = i + $const230.1
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: n.6 = phi(incoming_values=[Var(n.7, quicksort.py:176), Var(n.9, quicksort.py:176)], incoming_blocks=[184, 228])
DEBUG:numba.core.ssa:on stmt: $240binary_subtract.2 = high - low
DEBUG:numba.core.ssa:find_def var='low' stmt=$240binary_subtract.2 = high - low
DEBUG:numba.core.ssa:replaced with: $240binary_subtract.2 = high - low.3
DEBUG:numba.core.ssa:on stmt: $242load_global.3 = global(SMALL_QUICKSORT: 15)
DEBUG:numba.core.ssa:on stmt: $244compare_op.4 = $240binary_subtract.2 >= $242load_global.3
DEBUG:numba.core.ssa:on stmt: bool246 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $246pred = call bool246($244compare_op.4, func=bool246, args=(Var($244compare_op.4, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $246pred, 108, 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 248
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: n.5 = phi(incoming_values=[Var(n.1, quicksort.py:176), Var(n.6, quicksort.py:176)], incoming_blocks=[76, 236])
DEBUG:numba.core.ssa:on stmt: $248load_deref.0 = freevar(insertion_sort: <function make_quicksort_impl.<locals>.insertion_sort at 0x0000017A1EFED7E0>)
DEBUG:numba.core.ssa:on stmt: $258call_function.5 = call $248load_deref.0(A, R, low, high, func=$248load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='low' stmt=$258call_function.5 = call $248load_deref.0(A, R, low, high, func=$248load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 248
DEBUG:numba.core.ssa:insert phi node low.4 = phi(incoming_values=[], incoming_blocks=[]) at 248
DEBUG:numba.core.ssa:find_def_from_bottom label 76
DEBUG:numba.core.ssa:incoming_def low = $90unpack_sequence.6
DEBUG:numba.core.ssa:find_def_from_bottom label 236
DEBUG:numba.core.ssa:incoming_def low.3 = phi(incoming_values=[Var(low.2, quicksort.py:181), Var(low.1, quicksort.py:193)], incoming_blocks=[184, 228])
DEBUG:numba.core.ssa:replaced with: $258call_function.5 = call $248load_deref.0(A, R, low.4, high, func=$248load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low.4, quicksort.py:195), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const264.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $266compare_op.8 = n.5 > $const264.7
DEBUG:numba.core.ssa:on stmt: bool268 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $268pred = call bool268($266compare_op.8, func=bool268, args=(Var($266compare_op.8, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $268pred, 76, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A1F0FF250>
DEBUG:numba.core.ssa:on stmt: $272return_value.1 = cast(value=R)
DEBUG:numba.core.ssa:on stmt: return $272return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var high
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3CABE20>
DEBUG:numba.core.ssa:on stmt: A = arg(0, name=A)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(make_res: <function make_quicksort_impl.<locals>.make_res at 0x0000017A1EF13D90>)
DEBUG:numba.core.ssa:on stmt: R = call $2load_deref.0(A, func=$2load_deref.0, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10load_global.3 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $14call_function.5 = call $10load_global.3(A, func=$10load_global.3, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const16.6 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $18compare_op.7 = $14call_function.5 < $const16.6
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18compare_op.7, func=bool20, args=(Var($18compare_op.7, quicksort.py:168),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 26
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3CABE20>
DEBUG:numba.core.ssa:on stmt: $24return_value.1 = cast(value=R)
DEBUG:numba.core.ssa:on stmt: return $24return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3CABE20>
DEBUG:numba.core.ssa:on stmt: $26load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $28load_deref.1 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $30load_deref.2 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $32call_function.3 = call $26load_global.0($28load_deref.1, $30load_deref.2, func=$26load_global.0, args=[Var($28load_deref.1, quicksort.py:171), Var($30load_deref.2, quicksort.py:171)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34build_list.4 = build_list(items=[Var($32call_function.3, quicksort.py:171)])
DEBUG:numba.core.ssa:on stmt: $36load_global.5 = global(MAX_STACK: 100)
DEBUG:numba.core.ssa:on stmt: stack = $34build_list.4 * $36load_global.5
DEBUG:numba.core.ssa:on stmt: $42load_global.7 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $44load_deref.8 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $46load_global.9 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $50call_function.11 = call $46load_global.9(A, func=$46load_global.9, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $54binary_subtract.13 = $50call_function.11 - $const52.12
DEBUG:numba.core.ssa:on stmt: $56call_function.14 = call $42load_global.7($44load_deref.8, $54binary_subtract.13, func=$42load_global.7, args=[Var($44load_deref.8, quicksort.py:172), Var($54binary_subtract.13, quicksort.py:172)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const60.16 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stack[0] = $56call_function.14
DEBUG:numba.core.ssa:on stmt: n = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const70.19 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $72compare_op.20 = n > $const70.19
DEBUG:numba.core.ssa:on stmt: bool74 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $74pred = call bool74($72compare_op.20, func=bool74, args=(Var($72compare_op.20, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $74pred, 76, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3CABE20>
DEBUG:numba.core.ssa:on stmt: n.4 = phi(incoming_values=[Var(n.5, quicksort.py:176), Var(n, quicksort.py:173)], incoming_blocks=[248, 26])
DEBUG:numba.core.ssa:on stmt: $const78.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $80inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=n.4, rhs=$const78.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.1 = $80inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.5 = getitem(value=stack, index=n.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.8 = exhaust_iter(value=$88binary_subscr.5, count=2)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.6 = static_getitem(value=$90unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.7 = static_getitem(value=$90unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: low = $90unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: high = $90unpack_sequence.7
DEBUG:numba.core.ssa:first assign: high
DEBUG:numba.core.ssa:replaced with: high = $90unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $100binary_subtract.11 = high - low
DEBUG:numba.core.ssa:on stmt: $102load_global.12 = global(SMALL_QUICKSORT: 15)
DEBUG:numba.core.ssa:on stmt: $104compare_op.13 = $100binary_subtract.11 >= $102load_global.12
DEBUG:numba.core.ssa:on stmt: bool106 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $106pred = call bool106($104compare_op.13, func=bool106, args=(Var($104compare_op.13, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $106pred, 108, 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3CABE20>
DEBUG:numba.core.ssa:on stmt: low.2 = phi(incoming_values=[Var(low, quicksort.py:177), Var(low.3, quicksort.py:181)], incoming_blocks=[76, 236])
DEBUG:numba.core.ssa:on stmt: n.8 = phi(incoming_values=[Var(n.1, quicksort.py:176), Var(n.6, quicksort.py:176)], incoming_blocks=[76, 236])
DEBUG:numba.core.ssa:on stmt: $110load_global.1 = global(MAX_STACK: 100)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = n.8 < $110load_global.1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, quicksort.py:180),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 120, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3CABE20>
DEBUG:numba.core.ssa:on stmt: $assertion_error116.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 120
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3CABE20>
DEBUG:numba.core.ssa:on stmt: $120load_deref.0 = freevar(partition: <function make_quicksort_impl.<locals>.partition at 0x0000017A1EFEFA30>)
DEBUG:numba.core.ssa:on stmt: i = call $120load_deref.0(A, R, low.2, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low.2, quicksort.py:181), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_subtract.8 = high - i
DEBUG:numba.core.ssa:on stmt: $144binary_subtract.11 = i - low.2
DEBUG:numba.core.ssa:on stmt: $146compare_op.12 = $138binary_subtract.8 > $144binary_subtract.11
DEBUG:numba.core.ssa:on stmt: bool148 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $148pred = call bool148($146compare_op.12, func=bool148, args=(Var($146compare_op.12, quicksort.py:183),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $148pred, 150, 194
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3CABE20>
DEBUG:numba.core.ssa:on stmt: $154compare_op.2 = high > i
DEBUG:numba.core.ssa:on stmt: bool156 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $156pred = call bool156($154compare_op.2, func=bool156, args=(Var($154compare_op.2, quicksort.py:185),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $156pred, 158, 184
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 158
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3CABE20>
DEBUG:numba.core.ssa:on stmt: $158load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $const162.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.3 = i + $const162.2
DEBUG:numba.core.ssa:on stmt: $168call_function.5 = call $158load_global.0($164binary_add.3, high, func=$158load_global.0, args=[Var($164binary_add.3, quicksort.py:186), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: stack[n.8] = $168call_function.5
DEBUG:numba.core.ssa:on stmt: $const178.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.8, rhs=$const178.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.2 = $180inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 184
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3CABE20>
DEBUG:numba.core.ssa:on stmt: n.7 = phi(incoming_values=[Var(n.2, quicksort.py:187), Var(n.8, quicksort.py:176)], incoming_blocks=[158, 150])
DEBUG:numba.core.ssa:on stmt: $const186.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: high = i - $const186.1
DEBUG:numba.core.ssa:replaced with: high.1 = i - $const186.1
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 194
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3CABE20>
DEBUG:numba.core.ssa:on stmt: $198compare_op.2 = i > low.2
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($198compare_op.2, func=bool200, args=(Var($198compare_op.2, quicksort.py:190),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3CABE20>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $const208.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $210binary_subtract.4 = i - $const208.3
DEBUG:numba.core.ssa:on stmt: $212call_function.5 = call $202load_global.0(low.2, $210binary_subtract.4, func=$202load_global.0, args=[Var(low.2, quicksort.py:181), Var($210binary_subtract.4, quicksort.py:191)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: stack[n.8] = $212call_function.5
DEBUG:numba.core.ssa:on stmt: $const222.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $224inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.8, rhs=$const222.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.3 = $224inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 228
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3CABE20>
DEBUG:numba.core.ssa:on stmt: n.9 = phi(incoming_values=[Var(n.3, quicksort.py:192), Var(n.8, quicksort.py:176)], incoming_blocks=[202, 194])
DEBUG:numba.core.ssa:on stmt: $const230.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: low.1 = i + $const230.1
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3CABE20>
DEBUG:numba.core.ssa:on stmt: low.3 = phi(incoming_values=[Var(low.2, quicksort.py:181), Var(low.1, quicksort.py:193)], incoming_blocks=[184, 228])
DEBUG:numba.core.ssa:on stmt: n.6 = phi(incoming_values=[Var(n.7, quicksort.py:176), Var(n.9, quicksort.py:176)], incoming_blocks=[184, 228])
DEBUG:numba.core.ssa:on stmt: $240binary_subtract.2 = high - low.3
DEBUG:numba.core.ssa:on stmt: $242load_global.3 = global(SMALL_QUICKSORT: 15)
DEBUG:numba.core.ssa:on stmt: $244compare_op.4 = $240binary_subtract.2 >= $242load_global.3
DEBUG:numba.core.ssa:on stmt: bool246 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $246pred = call bool246($244compare_op.4, func=bool246, args=(Var($244compare_op.4, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $246pred, 108, 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 248
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3CABE20>
DEBUG:numba.core.ssa:on stmt: low.4 = phi(incoming_values=[Var(low, quicksort.py:177), Var(low.3, quicksort.py:181)], incoming_blocks=[76, 236])
DEBUG:numba.core.ssa:on stmt: n.5 = phi(incoming_values=[Var(n.1, quicksort.py:176), Var(n.6, quicksort.py:176)], incoming_blocks=[76, 236])
DEBUG:numba.core.ssa:on stmt: $248load_deref.0 = freevar(insertion_sort: <function make_quicksort_impl.<locals>.insertion_sort at 0x0000017A1EFED7E0>)
DEBUG:numba.core.ssa:on stmt: $258call_function.5 = call $248load_deref.0(A, R, low.4, high, func=$248load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low.4, quicksort.py:195), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const264.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $266compare_op.8 = n.5 > $const264.7
DEBUG:numba.core.ssa:on stmt: bool268 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $268pred = call bool268($266compare_op.8, func=bool268, args=(Var($266compare_op.8, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $268pred, 76, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3CABE20>
DEBUG:numba.core.ssa:on stmt: $272return_value.1 = cast(value=R)
DEBUG:numba.core.ssa:on stmt: return $272return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {76: [<numba.core.ir.Assign object at 0x0000017A1F017970>],
             184: [<numba.core.ir.Assign object at 0x0000017A1F0FF6A0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: A = arg(0, name=A)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(make_res: <function make_quicksort_impl.<locals>.make_res at 0x0000017A1EF13D90>)
DEBUG:numba.core.ssa:on stmt: R = call $2load_deref.0(A, func=$2load_deref.0, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10load_global.3 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $14call_function.5 = call $10load_global.3(A, func=$10load_global.3, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const16.6 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $18compare_op.7 = $14call_function.5 < $const16.6
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18compare_op.7, func=bool20, args=(Var($18compare_op.7, quicksort.py:168),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 26
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: $24return_value.1 = cast(value=R)
DEBUG:numba.core.ssa:on stmt: return $24return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: $26load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $28load_deref.1 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $30load_deref.2 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $32call_function.3 = call $26load_global.0($28load_deref.1, $30load_deref.2, func=$26load_global.0, args=[Var($28load_deref.1, quicksort.py:171), Var($30load_deref.2, quicksort.py:171)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34build_list.4 = build_list(items=[Var($32call_function.3, quicksort.py:171)])
DEBUG:numba.core.ssa:on stmt: $36load_global.5 = global(MAX_STACK: 100)
DEBUG:numba.core.ssa:on stmt: stack = $34build_list.4 * $36load_global.5
DEBUG:numba.core.ssa:on stmt: $42load_global.7 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $44load_deref.8 = freevar(zero: 0)
DEBUG:numba.core.ssa:on stmt: $46load_global.9 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $50call_function.11 = call $46load_global.9(A, func=$46load_global.9, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $54binary_subtract.13 = $50call_function.11 - $const52.12
DEBUG:numba.core.ssa:on stmt: $56call_function.14 = call $42load_global.7($44load_deref.8, $54binary_subtract.13, func=$42load_global.7, args=[Var($44load_deref.8, quicksort.py:172), Var($54binary_subtract.13, quicksort.py:172)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const60.16 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stack[0] = $56call_function.14
DEBUG:numba.core.ssa:on stmt: n = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const70.19 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $72compare_op.20 = n > $const70.19
DEBUG:numba.core.ssa:on stmt: bool74 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $74pred = call bool74($72compare_op.20, func=bool74, args=(Var($72compare_op.20, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $74pred, 76, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: n.4 = phi(incoming_values=[Var(n.5, quicksort.py:176), Var(n, quicksort.py:173)], incoming_blocks=[248, 26])
DEBUG:numba.core.ssa:on stmt: $const78.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $80inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=n.4, rhs=$const78.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.1 = $80inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: $88binary_subscr.5 = getitem(value=stack, index=n.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.8 = exhaust_iter(value=$88binary_subscr.5, count=2)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.6 = static_getitem(value=$90unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $90unpack_sequence.7 = static_getitem(value=$90unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: low = $90unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: high = $90unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $100binary_subtract.11 = high - low
DEBUG:numba.core.ssa:find_def var='high' stmt=$100binary_subtract.11 = high - low
DEBUG:numba.core.ssa:on stmt: $102load_global.12 = global(SMALL_QUICKSORT: 15)
DEBUG:numba.core.ssa:on stmt: $104compare_op.13 = $100binary_subtract.11 >= $102load_global.12
DEBUG:numba.core.ssa:on stmt: bool106 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $106pred = call bool106($104compare_op.13, func=bool106, args=(Var($104compare_op.13, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $106pred, 108, 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: low.2 = phi(incoming_values=[Var(low, quicksort.py:177), Var(low.3, quicksort.py:181)], incoming_blocks=[76, 236])
DEBUG:numba.core.ssa:on stmt: n.8 = phi(incoming_values=[Var(n.1, quicksort.py:176), Var(n.6, quicksort.py:176)], incoming_blocks=[76, 236])
DEBUG:numba.core.ssa:on stmt: $110load_global.1 = global(MAX_STACK: 100)
DEBUG:numba.core.ssa:on stmt: $112compare_op.2 = n.8 < $110load_global.1
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, quicksort.py:180),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 120, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: $assertion_error116.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 120
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: $120load_deref.0 = freevar(partition: <function make_quicksort_impl.<locals>.partition at 0x0000017A1EFEFA30>)
DEBUG:numba.core.ssa:on stmt: i = call $120load_deref.0(A, R, low.2, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low.2, quicksort.py:181), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='high' stmt=i = call $120load_deref.0(A, R, low.2, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low.2, quicksort.py:181), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 120
DEBUG:numba.core.ssa:idom 108 from label 120
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:insert phi node high.2 = phi(incoming_values=[], incoming_blocks=[]) at 108
DEBUG:numba.core.ssa:find_def_from_bottom label 76
DEBUG:numba.core.ssa:incoming_def high = $90unpack_sequence.7
DEBUG:numba.core.ssa:find_def_from_bottom label 236
DEBUG:numba.core.ssa:find_def_from_top label 236
DEBUG:numba.core.ssa:insert phi node high.3 = phi(incoming_values=[], incoming_blocks=[]) at 236
DEBUG:numba.core.ssa:find_def_from_bottom label 184
DEBUG:numba.core.ssa:incoming_def high.1 = i - $const186.1
DEBUG:numba.core.ssa:find_def_from_bottom label 228
DEBUG:numba.core.ssa:find_def_from_top label 228
DEBUG:numba.core.ssa:idom 194 from label 228
DEBUG:numba.core.ssa:find_def_from_bottom label 194
DEBUG:numba.core.ssa:find_def_from_top label 194
DEBUG:numba.core.ssa:idom 120 from label 194
DEBUG:numba.core.ssa:find_def_from_bottom label 120
DEBUG:numba.core.ssa:find_def_from_top label 120
DEBUG:numba.core.ssa:idom 108 from label 120
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:incoming_def high.2 = phi(incoming_values=[Var(high, quicksort.py:177)], incoming_blocks=[76])
DEBUG:numba.core.ssa:incoming_def high.3 = phi(incoming_values=[Var(high.1, quicksort.py:188), Var(high.2, quicksort.py:181)], incoming_blocks=[184, 228])
DEBUG:numba.core.ssa:replaced with: i = call $120load_deref.0(A, R, low.2, high.2, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low.2, quicksort.py:181), Var(high.2, quicksort.py:181)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_subtract.8 = high - i
DEBUG:numba.core.ssa:find_def var='high' stmt=$138binary_subtract.8 = high - i
DEBUG:numba.core.ssa:find_def_from_top label 120
DEBUG:numba.core.ssa:idom 108 from label 120
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:replaced with: $138binary_subtract.8 = high.2 - i
DEBUG:numba.core.ssa:on stmt: $144binary_subtract.11 = i - low.2
DEBUG:numba.core.ssa:on stmt: $146compare_op.12 = $138binary_subtract.8 > $144binary_subtract.11
DEBUG:numba.core.ssa:on stmt: bool148 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $148pred = call bool148($146compare_op.12, func=bool148, args=(Var($146compare_op.12, quicksort.py:183),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $148pred, 150, 194
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: $154compare_op.2 = high > i
DEBUG:numba.core.ssa:find_def var='high' stmt=$154compare_op.2 = high > i
DEBUG:numba.core.ssa:find_def_from_top label 150
DEBUG:numba.core.ssa:idom 120 from label 150
DEBUG:numba.core.ssa:find_def_from_bottom label 120
DEBUG:numba.core.ssa:find_def_from_top label 120
DEBUG:numba.core.ssa:idom 108 from label 120
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:replaced with: $154compare_op.2 = high.2 > i
DEBUG:numba.core.ssa:on stmt: bool156 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $156pred = call bool156($154compare_op.2, func=bool156, args=(Var($154compare_op.2, quicksort.py:185),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $156pred, 158, 184
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 158
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: $158load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $const162.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.3 = i + $const162.2
DEBUG:numba.core.ssa:on stmt: $168call_function.5 = call $158load_global.0($164binary_add.3, high, func=$158load_global.0, args=[Var($164binary_add.3, quicksort.py:186), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='high' stmt=$168call_function.5 = call $158load_global.0($164binary_add.3, high, func=$158load_global.0, args=[Var($164binary_add.3, quicksort.py:186), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 158
DEBUG:numba.core.ssa:idom 150 from label 158
DEBUG:numba.core.ssa:find_def_from_bottom label 150
DEBUG:numba.core.ssa:find_def_from_top label 150
DEBUG:numba.core.ssa:idom 120 from label 150
DEBUG:numba.core.ssa:find_def_from_bottom label 120
DEBUG:numba.core.ssa:find_def_from_top label 120
DEBUG:numba.core.ssa:idom 108 from label 120
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:replaced with: $168call_function.5 = call $158load_global.0($164binary_add.3, high.2, func=$158load_global.0, args=[Var($164binary_add.3, quicksort.py:186), Var(high.2, quicksort.py:181)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: stack[n.8] = $168call_function.5
DEBUG:numba.core.ssa:on stmt: $const178.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.8, rhs=$const178.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.2 = $180inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 184
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: n.7 = phi(incoming_values=[Var(n.2, quicksort.py:187), Var(n.8, quicksort.py:176)], incoming_blocks=[158, 150])
DEBUG:numba.core.ssa:on stmt: $const186.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: high.1 = i - $const186.1
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 194
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: $198compare_op.2 = i > low.2
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($198compare_op.2, func=bool200, args=(Var($198compare_op.2, quicksort.py:190),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
DEBUG:numba.core.ssa:on stmt: $const208.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $210binary_subtract.4 = i - $const208.3
DEBUG:numba.core.ssa:on stmt: $212call_function.5 = call $202load_global.0(low.2, $210binary_subtract.4, func=$202load_global.0, args=[Var(low.2, quicksort.py:181), Var($210binary_subtract.4, quicksort.py:191)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: stack[n.8] = $212call_function.5
DEBUG:numba.core.ssa:on stmt: $const222.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $224inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.8, rhs=$const222.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.3 = $224inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 228
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: n.9 = phi(incoming_values=[Var(n.3, quicksort.py:192), Var(n.8, quicksort.py:176)], incoming_blocks=[202, 194])
DEBUG:numba.core.ssa:on stmt: $const230.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: low.1 = i + $const230.1
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: low.3 = phi(incoming_values=[Var(low.2, quicksort.py:181), Var(low.1, quicksort.py:193)], incoming_blocks=[184, 228])
DEBUG:numba.core.ssa:on stmt: n.6 = phi(incoming_values=[Var(n.7, quicksort.py:176), Var(n.9, quicksort.py:176)], incoming_blocks=[184, 228])
DEBUG:numba.core.ssa:on stmt: $240binary_subtract.2 = high - low.3
DEBUG:numba.core.ssa:find_def var='high' stmt=$240binary_subtract.2 = high - low.3
DEBUG:numba.core.ssa:replaced with: $240binary_subtract.2 = high.3 - low.3
DEBUG:numba.core.ssa:on stmt: $242load_global.3 = global(SMALL_QUICKSORT: 15)
DEBUG:numba.core.ssa:on stmt: $244compare_op.4 = $240binary_subtract.2 >= $242load_global.3
DEBUG:numba.core.ssa:on stmt: bool246 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $246pred = call bool246($244compare_op.4, func=bool246, args=(Var($244compare_op.4, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $246pred, 108, 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 248
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: low.4 = phi(incoming_values=[Var(low, quicksort.py:177), Var(low.3, quicksort.py:181)], incoming_blocks=[76, 236])
DEBUG:numba.core.ssa:on stmt: n.5 = phi(incoming_values=[Var(n.1, quicksort.py:176), Var(n.6, quicksort.py:176)], incoming_blocks=[76, 236])
DEBUG:numba.core.ssa:on stmt: $248load_deref.0 = freevar(insertion_sort: <function make_quicksort_impl.<locals>.insertion_sort at 0x0000017A1EFED7E0>)
DEBUG:numba.core.ssa:on stmt: $258call_function.5 = call $248load_deref.0(A, R, low.4, high, func=$248load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low.4, quicksort.py:195), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='high' stmt=$258call_function.5 = call $248load_deref.0(A, R, low.4, high, func=$248load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low.4, quicksort.py:195), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 248
DEBUG:numba.core.ssa:insert phi node high.4 = phi(incoming_values=[], incoming_blocks=[]) at 248
DEBUG:numba.core.ssa:find_def_from_bottom label 76
DEBUG:numba.core.ssa:incoming_def high = $90unpack_sequence.7
DEBUG:numba.core.ssa:find_def_from_bottom label 236
DEBUG:numba.core.ssa:incoming_def high.3 = phi(incoming_values=[Var(high.1, quicksort.py:188), Var(high.2, quicksort.py:181)], incoming_blocks=[184, 228])
DEBUG:numba.core.ssa:replaced with: $258call_function.5 = call $248load_deref.0(A, R, low.4, high.4, func=$248load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low.4, quicksort.py:195), Var(high.4, quicksort.py:195)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const264.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $266compare_op.8 = n.5 > $const264.7
DEBUG:numba.core.ssa:on stmt: bool268 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $268pred = call bool268($266compare_op.8, func=bool268, args=(Var($266compare_op.8, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $268pred, 76, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3C928C0>
DEBUG:numba.core.ssa:on stmt: $272return_value.1 = cast(value=R)
DEBUG:numba.core.ssa:on stmt: return $272return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=41)
           2	LOAD_GLOBAL(arg=0, lineno=43)
           4	LOAD_METHOD(arg=1, lineno=43)
           6	LOAD_FAST(arg=0, lineno=43)
           8	LOAD_ATTR(arg=2, lineno=43)
          10	CALL_METHOD(arg=1, lineno=43)
          12	RETURN_VALUE(arg=None, lineno=43)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=41)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=43)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=43)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=43)
DEBUG:numba.core.byteflow:stack ['$4load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=43)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$A6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=CALL_METHOD(arg=1, lineno=43)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$8load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=43)
DEBUG:numba.core.byteflow:stack ['$10call_method.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$A6.2'}), (8, {'item': '$A6.2', 'res': '$8load_attr.3'}), (10, {'func': '$4load_method.1', 'args': ['$8load_attr.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    A = arg(0, name=A)                       ['A']
    $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=arange) ['$2load_global.0', '$4load_method.1']
    $8load_attr.3 = getattr(value=A, attr=size) ['$8load_attr.3', 'A']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, quicksort.py:43)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D07DC0>
DEBUG:numba.core.ssa:on stmt: A = arg(0, name=A)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=arange)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=A, attr=size)
DEBUG:numba.core.ssa:on stmt: $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, quicksort.py:43)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $12return_value.5 = cast(value=$10call_method.4)
DEBUG:numba.core.ssa:on stmt: return $12return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x0000017AA3D05480>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x0000017AA3D052D0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA3D063E0>,
                                  0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x0000017AA3D06140>,
                                  0)],
             '$8load_attr.3': [(<numba.core.ir.Assign object at 0x0000017AA3D05B70>,
                                0)],
             'A': [(<numba.core.ir.Assign object at 0x0000017AA3D07820>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA3D07DC0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4795)
           2	LOAD_DEREF(arg=0, lineno=4797)
           4	LOAD_CONST(arg=0, lineno=4797)
           6	IS_OP(arg=1, lineno=4797)
           8	POP_JUMP_IF_FALSE(arg=8, lineno=4797)
          10	LOAD_DEREF(arg=0, lineno=4797)
          12	JUMP_FORWARD(arg=1, lineno=4797)
>         14	LOAD_FAST(arg=0, lineno=4797)
>         16	STORE_FAST(arg=4, lineno=4797)
          18	LOAD_DEREF(arg=2, lineno=4798)
          20	LOAD_CONST(arg=0, lineno=4798)
          22	IS_OP(arg=1, lineno=4798)
          24	POP_JUMP_IF_FALSE(arg=16, lineno=4798)
          26	LOAD_DEREF(arg=2, lineno=4798)
          28	JUMP_FORWARD(arg=1, lineno=4798)
>         30	LOAD_FAST(arg=1, lineno=4798)
>         32	STORE_FAST(arg=5, lineno=4798)
          34	LOAD_DEREF(arg=1, lineno=4799)
          36	LOAD_CONST(arg=0, lineno=4799)
          38	IS_OP(arg=1, lineno=4799)
          40	POP_JUMP_IF_FALSE(arg=24, lineno=4799)
          42	LOAD_DEREF(arg=1, lineno=4799)
          44	JUMP_FORWARD(arg=1, lineno=4799)
>         46	LOAD_FAST(arg=2, lineno=4799)
>         48	STORE_FAST(arg=6, lineno=4799)
          50	LOAD_FAST(arg=6, lineno=4801)
          52	LOAD_CONST(arg=0, lineno=4801)
          54	IS_OP(arg=1, lineno=4801)
          56	POP_JUMP_IF_FALSE(arg=32, lineno=4801)
          58	LOAD_FAST(arg=6, lineno=4801)
          60	JUMP_FORWARD(arg=1, lineno=4801)
>         62	LOAD_CONST(arg=1, lineno=4801)
>         64	STORE_FAST(arg=7, lineno=4801)
          66	LOAD_FAST(arg=5, lineno=4802)
          68	LOAD_CONST(arg=0, lineno=4802)
          70	IS_OP(arg=0, lineno=4802)
          72	POP_JUMP_IF_FALSE(arg=44, lineno=4802)
          74	LOAD_CONST(arg=2, lineno=4803)
          76	LOAD_FAST(arg=4, lineno=4803)
          78	ROT_TWO(arg=None, lineno=4803)
          80	STORE_FAST(arg=8, lineno=4803)
          82	STORE_FAST(arg=9, lineno=4803)
          84	JUMP_FORWARD(arg=5, lineno=4803)
>         86	LOAD_FAST(arg=4, lineno=4805)
          88	LOAD_FAST(arg=5, lineno=4805)
          90	ROT_TWO(arg=None, lineno=4805)
          92	STORE_FAST(arg=8, lineno=4805)
          94	STORE_FAST(arg=9, lineno=4805)
>         96	LOAD_FAST(arg=7, lineno=4807)
          98	LOAD_CONST(arg=2, lineno=4807)
         100	COMPARE_OP(arg=2, lineno=4807)
         102	POP_JUMP_IF_FALSE(arg=57, lineno=4807)
         104	LOAD_GLOBAL(arg=0, lineno=4808)
         106	LOAD_CONST(arg=3, lineno=4808)
         108	CALL_FUNCTION(arg=1, lineno=4808)
         110	RAISE_VARARGS(arg=1, lineno=4808)
>        112	LOAD_FAST(arg=9, lineno=4810)
         114	LOAD_FAST(arg=8, lineno=4810)
         116	BINARY_SUBTRACT(arg=None, lineno=4810)
         118	LOAD_FAST(arg=7, lineno=4810)
         120	BINARY_TRUE_DIVIDE(arg=None, lineno=4810)
         122	STORE_FAST(arg=10, lineno=4810)
         124	LOAD_GLOBAL(arg=1, lineno=4811)
         126	LOAD_GLOBAL(arg=2, lineno=4811)
         128	LOAD_METHOD(arg=3, lineno=4811)
         130	LOAD_FAST(arg=10, lineno=4811)
         132	LOAD_ATTR(arg=4, lineno=4811)
         134	CALL_METHOD(arg=1, lineno=4811)
         136	CALL_FUNCTION(arg=1, lineno=4811)
         138	STORE_FAST(arg=11, lineno=4811)
         140	LOAD_DEREF(arg=4, lineno=4814)
         142	LOAD_CONST(arg=4, lineno=4814)
         144	IS_OP(arg=0, lineno=4814)
         146	POP_JUMP_IF_FALSE(arg=92, lineno=4814)
         148	LOAD_GLOBAL(arg=1, lineno=4815)
         150	LOAD_GLOBAL(arg=2, lineno=4815)
         152	LOAD_METHOD(arg=3, lineno=4815)
         154	LOAD_FAST(arg=10, lineno=4815)
         156	LOAD_ATTR(arg=5, lineno=4815)
         158	CALL_METHOD(arg=1, lineno=4815)
         160	CALL_FUNCTION(arg=1, lineno=4815)
         162	STORE_FAST(arg=12, lineno=4815)
         164	LOAD_GLOBAL(arg=6, lineno=4816)
         166	LOAD_GLOBAL(arg=7, lineno=4816)
         168	LOAD_FAST(arg=12, lineno=4816)
         170	LOAD_FAST(arg=11, lineno=4816)
         172	CALL_FUNCTION(arg=2, lineno=4816)
         174	LOAD_CONST(arg=2, lineno=4816)
         176	CALL_FUNCTION(arg=2, lineno=4816)
         178	STORE_FAST(arg=13, lineno=4816)
         180	JUMP_FORWARD(arg=5, lineno=4816)
>        182	LOAD_GLOBAL(arg=6, lineno=4818)
         184	LOAD_FAST(arg=11, lineno=4818)
         186	LOAD_CONST(arg=2, lineno=4818)
         188	CALL_FUNCTION(arg=2, lineno=4818)
         190	STORE_FAST(arg=13, lineno=4818)
>        192	LOAD_GLOBAL(arg=8, lineno=4819)
         194	LOAD_METHOD(arg=9, lineno=4819)
         196	LOAD_FAST(arg=13, lineno=4819)
         198	LOAD_DEREF(arg=3, lineno=4819)
         200	CALL_METHOD(arg=2, lineno=4819)
         202	STORE_FAST(arg=14, lineno=4819)
         204	LOAD_FAST(arg=8, lineno=4820)
         206	STORE_FAST(arg=15, lineno=4820)
         208	LOAD_GLOBAL(arg=10, lineno=4821)
         210	LOAD_FAST(arg=13, lineno=4821)
         212	CALL_FUNCTION(arg=1, lineno=4821)
         214	GET_ITER(arg=None, lineno=4821)
>        216	FOR_ITER(arg=10, lineno=4821)
         218	STORE_FAST(arg=16, lineno=4821)
         220	LOAD_FAST(arg=15, lineno=4822)
         222	LOAD_FAST(arg=16, lineno=4822)
         224	LOAD_FAST(arg=7, lineno=4822)
         226	BINARY_MULTIPLY(arg=None, lineno=4822)
         228	BINARY_ADD(arg=None, lineno=4822)
         230	LOAD_FAST(arg=14, lineno=4822)
         232	LOAD_FAST(arg=16, lineno=4822)
         234	STORE_SUBSCR(arg=None, lineno=4822)
         236	JUMP_ABSOLUTE(arg=109, lineno=4822)
>        238	LOAD_FAST(arg=14, lineno=4823)
         240	RETURN_VALUE(arg=None, lineno=4823)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4795)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_DEREF(arg=0, lineno=4797)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=0, lineno=4797)
DEBUG:numba.core.byteflow:stack ['$2load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=IS_OP(arg=1, lineno=4797)
DEBUG:numba.core.byteflow:stack ['$2load_deref.0', '$const4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=POP_JUMP_IF_FALSE(arg=8, lineno=4797)
DEBUG:numba.core.byteflow:stack ['$6is_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=10, stack=(), blockstack=(), npush=0), Edge(pc=14, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=10 nstack_initial=0), State(pc_initial=14 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=10 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_DEREF(arg=0, lineno=4797)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=JUMP_FORWARD(arg=1, lineno=4797)
DEBUG:numba.core.byteflow:stack ['$10load_deref.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=('$10load_deref.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=14 nstack_initial=0), State(pc_initial=16 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=14 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=4797)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=('$start14.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=1), State(pc_initial=16 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi16.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=16 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=4, lineno=4797)
DEBUG:numba.core.byteflow:stack ['$phi16.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_DEREF(arg=2, lineno=4798)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=0, lineno=4798)
DEBUG:numba.core.byteflow:stack ['$18load_deref.1']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=IS_OP(arg=1, lineno=4798)
DEBUG:numba.core.byteflow:stack ['$18load_deref.1', '$const20.2']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=16, lineno=4798)
DEBUG:numba.core.byteflow:stack ['$22is_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=30, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=1), State(pc_initial=26 nstack_initial=0), State(pc_initial=30 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=30 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=26 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_DEREF(arg=2, lineno=4798)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=JUMP_FORWARD(arg=1, lineno=4798)
DEBUG:numba.core.byteflow:stack ['$26load_deref.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$26load_deref.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=30 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=4798)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$stop30.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=STORE_FAST(arg=5, lineno=4798)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_DEREF(arg=1, lineno=4799)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=0, lineno=4799)
DEBUG:numba.core.byteflow:stack ['$34load_deref.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=IS_OP(arg=1, lineno=4799)
DEBUG:numba.core.byteflow:stack ['$34load_deref.1', '$const36.2']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=POP_JUMP_IF_FALSE(arg=24, lineno=4799)
DEBUG:numba.core.byteflow:stack ['$38is_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=46, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=42 nstack_initial=0), State(pc_initial=46 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=46 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=42 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_DEREF(arg=1, lineno=4799)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=JUMP_FORWARD(arg=1, lineno=4799)
DEBUG:numba.core.byteflow:stack ['$42load_deref.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=48, stack=('$42load_deref.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=46 nstack_initial=0), State(pc_initial=48 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=46 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=2, lineno=4799)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=48, stack=('$step46.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=1), State(pc_initial=48 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi48.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=48 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=48, inst=STORE_FAST(arg=6, lineno=4799)
DEBUG:numba.core.byteflow:stack ['$phi48.0']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=4801)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=0, lineno=4801)
DEBUG:numba.core.byteflow:stack ['$lit_step50.1']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=IS_OP(arg=1, lineno=4801)
DEBUG:numba.core.byteflow:stack ['$lit_step50.1', '$const52.2']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=POP_JUMP_IF_FALSE(arg=32, lineno=4801)
DEBUG:numba.core.byteflow:stack ['$54is_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0), Edge(pc=62, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=1), State(pc_initial=58 nstack_initial=0), State(pc_initial=62 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=62 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=6, lineno=4801)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=JUMP_FORWARD(arg=1, lineno=4801)
DEBUG:numba.core.byteflow:stack ['$lit_step58.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=64, stack=('$lit_step58.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=62 nstack_initial=0), State(pc_initial=64 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=62 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_CONST(arg=1, lineno=4801)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=64, stack=('$const62.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=64 nstack_initial=1), State(pc_initial=64 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi64.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=64 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=64, inst=STORE_FAST(arg=7, lineno=4801)
DEBUG:numba.core.byteflow:stack ['$phi64.0']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=5, lineno=4802)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_CONST(arg=0, lineno=4802)
DEBUG:numba.core.byteflow:stack ['$lit_stop66.1']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=IS_OP(arg=0, lineno=4802)
DEBUG:numba.core.byteflow:stack ['$lit_stop66.1', '$const68.2']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=POP_JUMP_IF_FALSE(arg=44, lineno=4802)
DEBUG:numba.core.byteflow:stack ['$70is_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=64 nstack_initial=1), State(pc_initial=74 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=74 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_CONST(arg=2, lineno=4803)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=4803)
DEBUG:numba.core.byteflow:stack ['$const74.0']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=ROT_TWO(arg=None, lineno=4803)
DEBUG:numba.core.byteflow:stack ['$const74.0', '$lit_start76.1']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=STORE_FAST(arg=8, lineno=4803)
DEBUG:numba.core.byteflow:stack ['$lit_start76.1', '$const74.0']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=STORE_FAST(arg=9, lineno=4803)
DEBUG:numba.core.byteflow:stack ['$lit_start76.1']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=JUMP_FORWARD(arg=5, lineno=4803)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=86 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=86 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=4, lineno=4805)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_FAST(arg=5, lineno=4805)
DEBUG:numba.core.byteflow:stack ['$lit_start86.0']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=ROT_TWO(arg=None, lineno=4805)
DEBUG:numba.core.byteflow:stack ['$lit_start86.0', '$lit_stop88.1']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=STORE_FAST(arg=8, lineno=4805)
DEBUG:numba.core.byteflow:stack ['$lit_stop88.1', '$lit_start86.0']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=STORE_FAST(arg=9, lineno=4805)
DEBUG:numba.core.byteflow:stack ['$lit_stop88.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=96 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=7, lineno=4807)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=2, lineno=4807)
DEBUG:numba.core.byteflow:stack ['$_step96.0']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=COMPARE_OP(arg=2, lineno=4807)
DEBUG:numba.core.byteflow:stack ['$_step96.0', '$const98.1']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=POP_JUMP_IF_FALSE(arg=57, lineno=4807)
DEBUG:numba.core.byteflow:stack ['$100compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=104 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=104 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_GLOBAL(arg=0, lineno=4808)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_CONST(arg=3, lineno=4808)
DEBUG:numba.core.byteflow:stack ['$104load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=CALL_FUNCTION(arg=1, lineno=4808)
DEBUG:numba.core.byteflow:stack ['$104load_global.0', '$const106.1']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=RAISE_VARARGS(arg=1, lineno=4808)
DEBUG:numba.core.byteflow:stack ['$108call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=112 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=112 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_FAST(arg=9, lineno=4810)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_FAST(arg=8, lineno=4810)
DEBUG:numba.core.byteflow:stack ['$_stop112.0']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BINARY_SUBTRACT(arg=None, lineno=4810)
DEBUG:numba.core.byteflow:stack ['$_stop112.0', '$_start114.1']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_FAST(arg=7, lineno=4810)
DEBUG:numba.core.byteflow:stack ['$116binary_subtract.2']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=4810)
DEBUG:numba.core.byteflow:stack ['$116binary_subtract.2', '$_step118.3']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=STORE_FAST(arg=10, lineno=4810)
DEBUG:numba.core.byteflow:stack ['$120binary_true_divide.4']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_GLOBAL(arg=1, lineno=4811)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_GLOBAL(arg=2, lineno=4811)
DEBUG:numba.core.byteflow:stack ['$124load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_METHOD(arg=3, lineno=4811)
DEBUG:numba.core.byteflow:stack ['$124load_global.5', '$126load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_FAST(arg=10, lineno=4811)
DEBUG:numba.core.byteflow:stack ['$124load_global.5', '$128load_method.7']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=LOAD_ATTR(arg=4, lineno=4811)
DEBUG:numba.core.byteflow:stack ['$124load_global.5', '$128load_method.7', '$nitems_c130.8']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=CALL_METHOD(arg=1, lineno=4811)
DEBUG:numba.core.byteflow:stack ['$124load_global.5', '$128load_method.7', '$132load_attr.9']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=CALL_FUNCTION(arg=1, lineno=4811)
DEBUG:numba.core.byteflow:stack ['$124load_global.5', '$134call_method.10']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=STORE_FAST(arg=11, lineno=4811)
DEBUG:numba.core.byteflow:stack ['$136call_function.11']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_DEREF(arg=4, lineno=4814)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=142, inst=LOAD_CONST(arg=4, lineno=4814)
DEBUG:numba.core.byteflow:stack ['$140load_deref.12']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=IS_OP(arg=0, lineno=4814)
DEBUG:numba.core.byteflow:stack ['$140load_deref.12', '$const142.13']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=POP_JUMP_IF_FALSE(arg=92, lineno=4814)
DEBUG:numba.core.byteflow:stack ['$144is_op.14']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=148, stack=(), blockstack=(), npush=0), Edge(pc=182, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=148 nstack_initial=0), State(pc_initial=182 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=148 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_GLOBAL(arg=1, lineno=4815)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_GLOBAL(arg=2, lineno=4815)
DEBUG:numba.core.byteflow:stack ['$148load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_METHOD(arg=3, lineno=4815)
DEBUG:numba.core.byteflow:stack ['$148load_global.0', '$150load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=10, lineno=4815)
DEBUG:numba.core.byteflow:stack ['$148load_global.0', '$152load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_ATTR(arg=5, lineno=4815)
DEBUG:numba.core.byteflow:stack ['$148load_global.0', '$152load_method.2', '$nitems_c154.3']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=CALL_METHOD(arg=1, lineno=4815)
DEBUG:numba.core.byteflow:stack ['$148load_global.0', '$152load_method.2', '$156load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=CALL_FUNCTION(arg=1, lineno=4815)
DEBUG:numba.core.byteflow:stack ['$148load_global.0', '$158call_method.5']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=STORE_FAST(arg=12, lineno=4815)
DEBUG:numba.core.byteflow:stack ['$160call_function.6']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=LOAD_GLOBAL(arg=6, lineno=4816)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_GLOBAL(arg=7, lineno=4816)
DEBUG:numba.core.byteflow:stack ['$164load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_FAST(arg=12, lineno=4816)
DEBUG:numba.core.byteflow:stack ['$164load_global.7', '$166load_global.8']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=11, lineno=4816)
DEBUG:numba.core.byteflow:stack ['$164load_global.7', '$166load_global.8', '$nitems_i168.9']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=CALL_FUNCTION(arg=2, lineno=4816)
DEBUG:numba.core.byteflow:stack ['$164load_global.7', '$166load_global.8', '$nitems_i168.9', '$nitems_r170.10']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=LOAD_CONST(arg=2, lineno=4816)
DEBUG:numba.core.byteflow:stack ['$164load_global.7', '$172call_function.11']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=CALL_FUNCTION(arg=2, lineno=4816)
DEBUG:numba.core.byteflow:stack ['$164load_global.7', '$172call_function.11', '$const174.12']
DEBUG:numba.core.byteflow:dispatch pc=178, inst=STORE_FAST(arg=13, lineno=4816)
DEBUG:numba.core.byteflow:stack ['$176call_function.13']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=JUMP_FORWARD(arg=5, lineno=4816)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=192, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=182 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=182 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=182, inst=LOAD_GLOBAL(arg=6, lineno=4818)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=184, inst=LOAD_FAST(arg=11, lineno=4818)
DEBUG:numba.core.byteflow:stack ['$182load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=LOAD_CONST(arg=2, lineno=4818)
DEBUG:numba.core.byteflow:stack ['$182load_global.0', '$nitems_r184.1']
DEBUG:numba.core.byteflow:dispatch pc=188, inst=CALL_FUNCTION(arg=2, lineno=4818)
DEBUG:numba.core.byteflow:stack ['$182load_global.0', '$nitems_r184.1', '$const186.2']
DEBUG:numba.core.byteflow:dispatch pc=190, inst=STORE_FAST(arg=13, lineno=4818)
DEBUG:numba.core.byteflow:stack ['$188call_function.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=192, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=192 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=192 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_GLOBAL(arg=8, lineno=4819)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_METHOD(arg=9, lineno=4819)
DEBUG:numba.core.byteflow:stack ['$192load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=LOAD_FAST(arg=13, lineno=4819)
DEBUG:numba.core.byteflow:stack ['$194load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=LOAD_DEREF(arg=3, lineno=4819)
DEBUG:numba.core.byteflow:stack ['$194load_method.1', '$nitems196.2']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=CALL_METHOD(arg=2, lineno=4819)
DEBUG:numba.core.byteflow:stack ['$194load_method.1', '$nitems196.2', '$198load_deref.3']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=STORE_FAST(arg=14, lineno=4819)
DEBUG:numba.core.byteflow:stack ['$200call_method.4']
DEBUG:numba.core.byteflow:dispatch pc=204, inst=LOAD_FAST(arg=8, lineno=4820)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=206, inst=STORE_FAST(arg=15, lineno=4820)
DEBUG:numba.core.byteflow:stack ['$_start204.5']
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_GLOBAL(arg=10, lineno=4821)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=210, inst=LOAD_FAST(arg=13, lineno=4821)
DEBUG:numba.core.byteflow:stack ['$208load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=212, inst=CALL_FUNCTION(arg=1, lineno=4821)
DEBUG:numba.core.byteflow:stack ['$208load_global.6', '$nitems210.7']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=GET_ITER(arg=None, lineno=4821)
DEBUG:numba.core.byteflow:stack ['$212call_function.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=216, stack=('$214get_iter.9',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=192 nstack_initial=0), State(pc_initial=216 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=216 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi216.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=216 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=216, inst=FOR_ITER(arg=10, lineno=4821)
DEBUG:numba.core.byteflow:stack ['$phi216.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=238, stack=(), blockstack=(), npush=0), Edge(pc=218, stack=('$phi216.0', '$216for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=238 nstack_initial=0), State(pc_initial=218 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=238 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=238, inst=LOAD_FAST(arg=14, lineno=4823)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=240, inst=RETURN_VALUE(arg=None, lineno=4823)
DEBUG:numba.core.byteflow:stack ['$arr238.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=218 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi218.0', '$phi218.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=218 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=218, inst=STORE_FAST(arg=16, lineno=4821)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$phi218.1']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=15, lineno=4822)
DEBUG:numba.core.byteflow:stack ['$phi218.0']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=LOAD_FAST(arg=16, lineno=4822)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$val220.2']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=LOAD_FAST(arg=7, lineno=4822)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$val220.2', '$i222.3']
DEBUG:numba.core.byteflow:dispatch pc=226, inst=BINARY_MULTIPLY(arg=None, lineno=4822)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$val220.2', '$i222.3', '$_step224.4']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=BINARY_ADD(arg=None, lineno=4822)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$val220.2', '$226binary_multiply.5']
DEBUG:numba.core.byteflow:dispatch pc=230, inst=LOAD_FAST(arg=14, lineno=4822)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$228binary_add.6']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=LOAD_FAST(arg=16, lineno=4822)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$228binary_add.6', '$arr230.7']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=STORE_SUBSCR(arg=None, lineno=4822)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$228binary_add.6', '$arr230.7', '$i232.8']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=JUMP_ABSOLUTE(arg=109, lineno=4822)
DEBUG:numba.core.byteflow:stack ['$phi218.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=216, stack=('$phi218.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=216 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=10 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=46 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=1): {'$phi48.0'},
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=1): {'$phi64.0'},
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=148 nstack_initial=0): set(),
             State(pc_initial=182 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=216 nstack_initial=1): {'$phi216.0'},
             State(pc_initial=218 nstack_initial=2): {'$phi218.1'},
             State(pc_initial=238 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi16.0': State(pc_initial=14 nstack_initial=0),
 '$phi216.0': State(pc_initial=192 nstack_initial=0),
 '$phi218.1': State(pc_initial=216 nstack_initial=1),
 '$phi32.0': State(pc_initial=26 nstack_initial=0),
 '$phi48.0': State(pc_initial=46 nstack_initial=0),
 '$phi64.0': State(pc_initial=62 nstack_initial=0)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$10load_deref.0',
                           State(pc_initial=10 nstack_initial=0)),
                          ('$start14.0',
                           State(pc_initial=14 nstack_initial=0))},
             '$phi216.0': {('$214get_iter.9',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi218.0',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi218.0': {('$phi216.0',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi218.1': {('$216for_iter.2',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi32.0': {('$26load_deref.0',
                           State(pc_initial=26 nstack_initial=0)),
                          ('$stop30.0', State(pc_initial=30 nstack_initial=0))},
             '$phi48.0': {('$42load_deref.0',
                           State(pc_initial=42 nstack_initial=0)),
                          ('$step46.0', State(pc_initial=46 nstack_initial=0))},
             '$phi64.0': {('$const62.0', State(pc_initial=62 nstack_initial=0)),
                          ('$lit_step58.0',
                           State(pc_initial=58 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$10load_deref.0',
                           State(pc_initial=10 nstack_initial=0)),
                          ('$start14.0',
                           State(pc_initial=14 nstack_initial=0))},
             '$phi216.0': {('$214get_iter.9',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi216.0',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi218.0': {('$214get_iter.9',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi218.1': {('$216for_iter.2',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi32.0': {('$26load_deref.0',
                           State(pc_initial=26 nstack_initial=0)),
                          ('$stop30.0', State(pc_initial=30 nstack_initial=0))},
             '$phi48.0': {('$42load_deref.0',
                           State(pc_initial=42 nstack_initial=0)),
                          ('$step46.0', State(pc_initial=46 nstack_initial=0))},
             '$phi64.0': {('$const62.0', State(pc_initial=62 nstack_initial=0)),
                          ('$lit_step58.0',
                           State(pc_initial=58 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$10load_deref.0',
                           State(pc_initial=10 nstack_initial=0)),
                          ('$start14.0',
                           State(pc_initial=14 nstack_initial=0))},
             '$phi216.0': {('$214get_iter.9',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi218.0': {('$214get_iter.9',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi218.1': {('$216for_iter.2',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi32.0': {('$26load_deref.0',
                           State(pc_initial=26 nstack_initial=0)),
                          ('$stop30.0', State(pc_initial=30 nstack_initial=0))},
             '$phi48.0': {('$42load_deref.0',
                           State(pc_initial=42 nstack_initial=0)),
                          ('$step46.0', State(pc_initial=46 nstack_initial=0))},
             '$phi64.0': {('$const62.0', State(pc_initial=62 nstack_initial=0)),
                          ('$lit_step58.0',
                           State(pc_initial=58 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$10load_deref.0',
                           State(pc_initial=10 nstack_initial=0)),
                          ('$start14.0',
                           State(pc_initial=14 nstack_initial=0))},
             '$phi216.0': {('$214get_iter.9',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi218.0': {('$214get_iter.9',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi218.1': {('$216for_iter.2',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi32.0': {('$26load_deref.0',
                           State(pc_initial=26 nstack_initial=0)),
                          ('$stop30.0', State(pc_initial=30 nstack_initial=0))},
             '$phi48.0': {('$42load_deref.0',
                           State(pc_initial=42 nstack_initial=0)),
                          ('$step46.0', State(pc_initial=46 nstack_initial=0))},
             '$phi64.0': {('$const62.0', State(pc_initial=62 nstack_initial=0)),
                          ('$lit_step58.0',
                           State(pc_initial=58 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi16.0': {('$10load_deref.0', State(pc_initial=10 nstack_initial=0)),
              ('$start14.0', State(pc_initial=14 nstack_initial=0))},
 '$phi216.0': {('$214get_iter.9', State(pc_initial=192 nstack_initial=0))},
 '$phi218.1': {('$216for_iter.2', State(pc_initial=216 nstack_initial=1))},
 '$phi32.0': {('$26load_deref.0', State(pc_initial=26 nstack_initial=0)),
              ('$stop30.0', State(pc_initial=30 nstack_initial=0))},
 '$phi48.0': {('$42load_deref.0', State(pc_initial=42 nstack_initial=0)),
              ('$step46.0', State(pc_initial=46 nstack_initial=0))},
 '$phi64.0': {('$const62.0', State(pc_initial=62 nstack_initial=0)),
              ('$lit_step58.0', State(pc_initial=58 nstack_initial=0))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=10 nstack_initial=0): {'$phi16.0': '$10load_deref.0'},
             State(pc_initial=14 nstack_initial=0): {'$phi16.0': '$start14.0'},
             State(pc_initial=26 nstack_initial=0): {'$phi32.0': '$26load_deref.0'},
             State(pc_initial=30 nstack_initial=0): {'$phi32.0': '$stop30.0'},
             State(pc_initial=42 nstack_initial=0): {'$phi48.0': '$42load_deref.0'},
             State(pc_initial=46 nstack_initial=0): {'$phi48.0': '$step46.0'},
             State(pc_initial=58 nstack_initial=0): {'$phi64.0': '$lit_step58.0'},
             State(pc_initial=62 nstack_initial=0): {'$phi64.0': '$const62.0'},
             State(pc_initial=192 nstack_initial=0): {'$phi216.0': '$214get_iter.9'},
             State(pc_initial=216 nstack_initial=1): {'$phi218.1': '$216for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'lhs': '$2load_deref.0', 'rhs': '$const4.1', 'res': '$6is_op.2'}), (8, {'pred': '$6is_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={10: (), 14: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=10 nstack_initial=0):
AdaptBlockInfo(insts=((10, {'res': '$10load_deref.0'}), (12, {})), outgoing_phis={'$phi16.0': '$10load_deref.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$10load_deref.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((14, {'res': '$start14.0'}),), outgoing_phis={'$phi16.0': '$start14.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$start14.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'value': '$phi16.0'}), (18, {'res': '$18load_deref.1'}), (20, {'res': '$const20.2'}), (22, {'lhs': '$18load_deref.1', 'rhs': '$const20.2', 'res': '$22is_op.3'}), (24, {'pred': '$22is_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 30: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$26load_deref.0'}), (28, {})), outgoing_phis={'$phi32.0': '$26load_deref.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$26load_deref.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {'res': '$stop30.0'}),), outgoing_phis={'$phi32.0': '$stop30.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$stop30.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'value': '$phi32.0'}), (34, {'res': '$34load_deref.1'}), (36, {'res': '$const36.2'}), (38, {'lhs': '$34load_deref.1', 'rhs': '$const36.2', 'res': '$38is_op.3'}), (40, {'pred': '$38is_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 46: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {'res': '$42load_deref.0'}), (44, {})), outgoing_phis={'$phi48.0': '$42load_deref.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$42load_deref.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=46 nstack_initial=0):
AdaptBlockInfo(insts=((46, {'res': '$step46.0'}),), outgoing_phis={'$phi48.0': '$step46.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$step46.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=48 nstack_initial=1):
AdaptBlockInfo(insts=((48, {'value': '$phi48.0'}), (50, {'res': '$lit_step50.1'}), (52, {'res': '$const52.2'}), (54, {'lhs': '$lit_step50.1', 'rhs': '$const52.2', 'res': '$54is_op.3'}), (56, {'pred': '$54is_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: (), 62: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$lit_step58.0'}), (60, {})), outgoing_phis={'$phi64.0': '$lit_step58.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$lit_step58.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=62 nstack_initial=0):
AdaptBlockInfo(insts=((62, {'res': '$const62.0'}),), outgoing_phis={'$phi64.0': '$const62.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$const62.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=64 nstack_initial=1):
AdaptBlockInfo(insts=((64, {'value': '$phi64.0'}), (66, {'res': '$lit_stop66.1'}), (68, {'res': '$const68.2'}), (70, {'lhs': '$lit_stop66.1', 'rhs': '$const68.2', 'res': '$70is_op.3'}), (72, {'pred': '$70is_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: (), 86: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'res': '$lit_start76.1'}), (80, {'value': '$const74.0'}), (82, {'value': '$lit_start76.1'}), (84, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$lit_start86.0'}), (88, {'res': '$lit_stop88.1'}), (92, {'value': '$lit_start86.0'}), (94, {'value': '$lit_stop88.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$_step96.0'}), (98, {'res': '$const98.1'}), (100, {'lhs': '$_step96.0', 'rhs': '$const98.1', 'res': '$100compare_op.2'}), (102, {'pred': '$100compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 112: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$104load_global.0'}), (106, {'res': '$const106.1'}), (108, {'func': '$104load_global.0', 'args': ['$const106.1'], 'res': '$108call_function.2'}), (110, {'exc': '$108call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$_stop112.0'}), (114, {'res': '$_start114.1'}), (116, {'lhs': '$_stop112.0', 'rhs': '$_start114.1', 'res': '$116binary_subtract.2'}), (118, {'res': '$_step118.3'}), (120, {'lhs': '$116binary_subtract.2', 'rhs': '$_step118.3', 'res': '$120binary_true_divide.4'}), (122, {'value': '$120binary_true_divide.4'}), (124, {'res': '$124load_global.5'}), (126, {'res': '$126load_global.6'}), (128, {'item': '$126load_global.6', 'res': '$128load_method.7'}), (130, {'res': '$nitems_c130.8'}), (132, {'item': '$nitems_c130.8', 'res': '$132load_attr.9'}), (134, {'func': '$128load_method.7', 'args': ['$132load_attr.9'], 'res': '$134call_method.10'}), (136, {'func': '$124load_global.5', 'args': ['$134call_method.10'], 'res': '$136call_function.11'}), (138, {'value': '$136call_function.11'}), (140, {'res': '$140load_deref.12'}), (142, {'res': '$const142.13'}), (144, {'lhs': '$140load_deref.12', 'rhs': '$const142.13', 'res': '$144is_op.14'}), (146, {'pred': '$144is_op.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={148: (), 182: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=148 nstack_initial=0):
AdaptBlockInfo(insts=((148, {'res': '$148load_global.0'}), (150, {'res': '$150load_global.1'}), (152, {'item': '$150load_global.1', 'res': '$152load_method.2'}), (154, {'res': '$nitems_c154.3'}), (156, {'item': '$nitems_c154.3', 'res': '$156load_attr.4'}), (158, {'func': '$152load_method.2', 'args': ['$156load_attr.4'], 'res': '$158call_method.5'}), (160, {'func': '$148load_global.0', 'args': ['$158call_method.5'], 'res': '$160call_function.6'}), (162, {'value': '$160call_function.6'}), (164, {'res': '$164load_global.7'}), (166, {'res': '$166load_global.8'}), (168, {'res': '$nitems_i168.9'}), (170, {'res': '$nitems_r170.10'}), (172, {'func': '$166load_global.8', 'args': ['$nitems_i168.9', '$nitems_r170.10'], 'res': '$172call_function.11'}), (174, {'res': '$const174.12'}), (176, {'func': '$164load_global.7', 'args': ['$172call_function.11', '$const174.12'], 'res': '$176call_function.13'}), (178, {'value': '$176call_function.13'}), (180, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={192: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=182 nstack_initial=0):
AdaptBlockInfo(insts=((182, {'res': '$182load_global.0'}), (184, {'res': '$nitems_r184.1'}), (186, {'res': '$const186.2'}), (188, {'func': '$182load_global.0', 'args': ['$nitems_r184.1', '$const186.2'], 'res': '$188call_function.3'}), (190, {'value': '$188call_function.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={192: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$192load_global.0'}), (194, {'item': '$192load_global.0', 'res': '$194load_method.1'}), (196, {'res': '$nitems196.2'}), (198, {'res': '$198load_deref.3'}), (200, {'func': '$194load_method.1', 'args': ['$nitems196.2', '$198load_deref.3'], 'res': '$200call_method.4'}), (202, {'value': '$200call_method.4'}), (204, {'res': '$_start204.5'}), (206, {'value': '$_start204.5'}), (208, {'res': '$208load_global.6'}), (210, {'res': '$nitems210.7'}), (212, {'func': '$208load_global.6', 'args': ['$nitems210.7'], 'res': '$212call_function.8'}), (214, {'value': '$212call_function.8', 'res': '$214get_iter.9'})), outgoing_phis={'$phi216.0': '$214get_iter.9'}, blockstack=(), active_try_block=None, outgoing_edgepushed={216: ('$214get_iter.9',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=216 nstack_initial=1):
AdaptBlockInfo(insts=((216, {'iterator': '$phi216.0', 'pair': '$216for_iter.1', 'indval': '$216for_iter.2', 'pred': '$216for_iter.3'}),), outgoing_phis={'$phi218.1': '$216for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={238: (), 218: ('$phi216.0', '$216for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=218 nstack_initial=2):
AdaptBlockInfo(insts=((218, {'value': '$phi218.1'}), (220, {'res': '$val220.2'}), (222, {'res': '$i222.3'}), (224, {'res': '$_step224.4'}), (226, {'lhs': '$i222.3', 'rhs': '$_step224.4', 'res': '$226binary_multiply.5'}), (228, {'lhs': '$val220.2', 'rhs': '$226binary_multiply.5', 'res': '$228binary_add.6'}), (230, {'res': '$arr230.7'}), (232, {'res': '$i232.8'}), (234, {'target': '$arr230.7', 'index': '$i232.8', 'value': '$228binary_add.6'}), (236, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={216: ('$phi218.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=238 nstack_initial=0):
AdaptBlockInfo(insts=((238, {'res': '$arr238.0'}), (240, {'retval': '$arr238.0', 'castval': '$240return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    start = arg(0, name=start)               ['start']
    stop = arg(1, name=stop)                 ['stop']
    step = arg(2, name=step)                 ['step']
    dtype = arg(3, name=dtype)               ['dtype']
    $2load_deref.0 = freevar(start_value: None) ['$2load_deref.0']
    $const4.1 = const(NoneType, None)        ['$const4.1']
    $6is_op.2 = $2load_deref.0 is not $const4.1 ['$2load_deref.0', '$6is_op.2', '$const4.1']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6is_op.2, func=bool8, args=(Var($6is_op.2, arrayobj.py:4797),), kws=(), vararg=None, varkwarg=None, target=None) ['$6is_op.2', '$8pred', 'bool8']
    branch $8pred, 10, 14                    ['$8pred']
label 10:
    $10load_deref.0 = freevar(start_value: None) ['$10load_deref.0']
    $phi16.0 = $10load_deref.0               ['$10load_deref.0', '$phi16.0']
    jump 16                                  []
label 14:
    $phi16.0 = start                         ['$phi16.0', 'start']
    jump 16                                  []
label 16:
    lit_start = $phi16.0                     ['$phi16.0', 'lit_start']
    $18load_deref.1 = freevar(stop_value: None) ['$18load_deref.1']
    $const20.2 = const(NoneType, None)       ['$const20.2']
    $22is_op.3 = $18load_deref.1 is not $const20.2 ['$18load_deref.1', '$22is_op.3', '$const20.2']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22is_op.3, func=bool24, args=(Var($22is_op.3, arrayobj.py:4798),), kws=(), vararg=None, varkwarg=None, target=None) ['$22is_op.3', '$24pred', 'bool24']
    branch $24pred, 26, 30                   ['$24pred']
label 26:
    $26load_deref.0 = freevar(stop_value: None) ['$26load_deref.0']
    $phi32.0 = $26load_deref.0               ['$26load_deref.0', '$phi32.0']
    jump 32                                  []
label 30:
    $phi32.0 = stop                          ['$phi32.0', 'stop']
    jump 32                                  []
label 32:
    lit_stop = $phi32.0                      ['$phi32.0', 'lit_stop']
    $34load_deref.1 = freevar(step_value: None) ['$34load_deref.1']
    $const36.2 = const(NoneType, None)       ['$const36.2']
    $38is_op.3 = $34load_deref.1 is not $const36.2 ['$34load_deref.1', '$38is_op.3', '$const36.2']
    bool40 = global(bool: <class 'bool'>)    ['bool40']
    $40pred = call bool40($38is_op.3, func=bool40, args=(Var($38is_op.3, arrayobj.py:4799),), kws=(), vararg=None, varkwarg=None, target=None) ['$38is_op.3', '$40pred', 'bool40']
    branch $40pred, 42, 46                   ['$40pred']
label 42:
    $42load_deref.0 = freevar(step_value: None) ['$42load_deref.0']
    $phi48.0 = $42load_deref.0               ['$42load_deref.0', '$phi48.0']
    jump 48                                  []
label 46:
    $phi48.0 = step                          ['$phi48.0', 'step']
    jump 48                                  []
label 48:
    lit_step = $phi48.0                      ['$phi48.0', 'lit_step']
    $const52.2 = const(NoneType, None)       ['$const52.2']
    $54is_op.3 = lit_step is not $const52.2  ['$54is_op.3', '$const52.2', 'lit_step']
    bool56 = global(bool: <class 'bool'>)    ['bool56']
    $56pred = call bool56($54is_op.3, func=bool56, args=(Var($54is_op.3, arrayobj.py:4801),), kws=(), vararg=None, varkwarg=None, target=None) ['$54is_op.3', '$56pred', 'bool56']
    branch $56pred, 58, 62                   ['$56pred']
label 58:
    $phi64.0 = lit_step                      ['$phi64.0', 'lit_step']
    jump 64                                  []
label 62:
    $const62.0 = const(int, 1)               ['$const62.0']
    $phi64.0 = $const62.0                    ['$const62.0', '$phi64.0']
    jump 64                                  []
label 64:
    _step = $phi64.0                         ['$phi64.0', '_step']
    $const68.2 = const(NoneType, None)       ['$const68.2']
    $70is_op.3 = lit_stop is $const68.2      ['$70is_op.3', '$const68.2', 'lit_stop']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($70is_op.3, func=bool72, args=(Var($70is_op.3, arrayobj.py:4802),), kws=(), vararg=None, varkwarg=None, target=None) ['$70is_op.3', '$72pred', 'bool72']
    branch $72pred, 74, 86                   ['$72pred']
label 74:
    _start = const(int, 0)                   ['_start']
    _stop = lit_start                        ['_stop', 'lit_start']
    jump 96                                  []
label 86:
    _start = lit_start                       ['_start', 'lit_start']
    _stop = lit_stop                         ['_stop', 'lit_stop']
    jump 96                                  []
label 96:
    $const98.1 = const(int, 0)               ['$const98.1']
    $100compare_op.2 = _step == $const98.1   ['$100compare_op.2', '$const98.1', '_step']
    bool102 = global(bool: <class 'bool'>)   ['bool102']
    $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, arrayobj.py:4807),), kws=(), vararg=None, varkwarg=None, target=None) ['$100compare_op.2', '$102pred', 'bool102']
    branch $102pred, 104, 112                ['$102pred']
label 104:
    $104load_global.0 = global(ValueError: <class 'ValueError'>) ['$104load_global.0']
    $const106.1 = const(str, Maximum allowed size exceeded) ['$const106.1']
    $108call_function.2 = call $104load_global.0($const106.1, func=$104load_global.0, args=[Var($const106.1, arrayobj.py:4808)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_global.0', '$108call_function.2', '$const106.1']
    raise $108call_function.2                ['$108call_function.2']
label 112:
    $116binary_subtract.2 = _stop - _start   ['$116binary_subtract.2', '_start', '_stop']
    nitems_c = $116binary_subtract.2 / _step ['$116binary_subtract.2', '_step', 'nitems_c']
    $124load_global.5 = global(int: <class 'int'>) ['$124load_global.5']
    $126load_global.6 = global(math: <module 'math' (built-in)>) ['$126load_global.6']
    $128load_method.7 = getattr(value=$126load_global.6, attr=ceil) ['$126load_global.6', '$128load_method.7']
    $132load_attr.9 = getattr(value=nitems_c, attr=real) ['$132load_attr.9', 'nitems_c']
    $134call_method.10 = call $128load_method.7($132load_attr.9, func=$128load_method.7, args=[Var($132load_attr.9, arrayobj.py:4811)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_method.7', '$132load_attr.9', '$134call_method.10']
    nitems_r = call $124load_global.5($134call_method.10, func=$124load_global.5, args=[Var($134call_method.10, arrayobj.py:4811)], kws=(), vararg=None, varkwarg=None, target=None) ['$124load_global.5', '$134call_method.10', 'nitems_r']
    $140load_deref.12 = freevar(use_complex: False) ['$140load_deref.12']
    $const142.13 = const(bool, True)         ['$const142.13']
    $144is_op.14 = $140load_deref.12 is $const142.13 ['$140load_deref.12', '$144is_op.14', '$const142.13']
    bool146 = global(bool: <class 'bool'>)   ['bool146']
    $146pred = call bool146($144is_op.14, func=bool146, args=(Var($144is_op.14, arrayobj.py:4814),), kws=(), vararg=None, varkwarg=None, target=None) ['$144is_op.14', '$146pred', 'bool146']
    branch $146pred, 148, 182                ['$146pred']
label 148:
    $148load_global.0 = global(int: <class 'int'>) ['$148load_global.0']
    $150load_global.1 = global(math: <module 'math' (built-in)>) ['$150load_global.1']
    $152load_method.2 = getattr(value=$150load_global.1, attr=ceil) ['$150load_global.1', '$152load_method.2']
    $156load_attr.4 = getattr(value=nitems_c, attr=imag) ['$156load_attr.4', 'nitems_c']
    $158call_method.5 = call $152load_method.2($156load_attr.4, func=$152load_method.2, args=[Var($156load_attr.4, arrayobj.py:4815)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_method.2', '$156load_attr.4', '$158call_method.5']
    nitems_i = call $148load_global.0($158call_method.5, func=$148load_global.0, args=[Var($158call_method.5, arrayobj.py:4815)], kws=(), vararg=None, varkwarg=None, target=None) ['$148load_global.0', '$158call_method.5', 'nitems_i']
    $164load_global.7 = global(max: <built-in function max>) ['$164load_global.7']
    $166load_global.8 = global(min: <built-in function min>) ['$166load_global.8']
    $172call_function.11 = call $166load_global.8(nitems_i, nitems_r, func=$166load_global.8, args=[Var(nitems_i, arrayobj.py:4815), Var(nitems_r, arrayobj.py:4811)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_global.8', '$172call_function.11', 'nitems_i', 'nitems_r']
    $const174.12 = const(int, 0)             ['$const174.12']
    nitems = call $164load_global.7($172call_function.11, $const174.12, func=$164load_global.7, args=[Var($172call_function.11, arrayobj.py:4816), Var($const174.12, arrayobj.py:4816)], kws=(), vararg=None, varkwarg=None, target=None) ['$164load_global.7', '$172call_function.11', '$const174.12', 'nitems']
    jump 192                                 []
label 182:
    $182load_global.0 = global(max: <built-in function max>) ['$182load_global.0']
    $const186.2 = const(int, 0)              ['$const186.2']
    nitems = call $182load_global.0(nitems_r, $const186.2, func=$182load_global.0, args=[Var(nitems_r, arrayobj.py:4811), Var($const186.2, arrayobj.py:4818)], kws=(), vararg=None, varkwarg=None, target=None) ['$182load_global.0', '$const186.2', 'nitems', 'nitems_r']
    jump 192                                 []
label 192:
    $192load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$192load_global.0']
    $194load_method.1 = getattr(value=$192load_global.0, attr=empty) ['$192load_global.0', '$194load_method.1']
    $198load_deref.3 = freevar(true_dtype: int64) ['$198load_deref.3']
    arr = call $194load_method.1(nitems, $198load_deref.3, func=$194load_method.1, args=[Var(nitems, arrayobj.py:4816), Var($198load_deref.3, arrayobj.py:4819)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_method.1', '$198load_deref.3', 'arr', 'nitems']
    val = _start                             ['_start', 'val']
    $208load_global.6 = global(range: <class 'range'>) ['$208load_global.6']
    $212call_function.8 = call $208load_global.6(nitems, func=$208load_global.6, args=[Var(nitems, arrayobj.py:4816)], kws=(), vararg=None, varkwarg=None, target=None) ['$208load_global.6', '$212call_function.8', 'nitems']
    $214get_iter.9 = getiter(value=$212call_function.8) ['$212call_function.8', '$214get_iter.9']
    $phi216.0 = $214get_iter.9               ['$214get_iter.9', '$phi216.0']
    jump 216                                 []
label 216:
    $216for_iter.1 = iternext(value=$phi216.0) ['$216for_iter.1', '$phi216.0']
    $216for_iter.2 = pair_first(value=$216for_iter.1) ['$216for_iter.1', '$216for_iter.2']
    $216for_iter.3 = pair_second(value=$216for_iter.1) ['$216for_iter.1', '$216for_iter.3']
    $phi218.1 = $216for_iter.2               ['$216for_iter.2', '$phi218.1']
    branch $216for_iter.3, 218, 238          ['$216for_iter.3']
label 218:
    i = $phi218.1                            ['$phi218.1', 'i']
    $226binary_multiply.5 = i * _step        ['$226binary_multiply.5', '_step', 'i']
    $228binary_add.6 = val + $226binary_multiply.5 ['$226binary_multiply.5', '$228binary_add.6', 'val']
    arr[i] = $228binary_add.6                ['$228binary_add.6', 'arr', 'i']
    jump 216                                 []
label 238:
    $240return_value.1 = cast(value=arr)     ['$240return_value.1', 'arr']
    return $240return_value.1                ['$240return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D51AE0>
DEBUG:numba.core.ssa:on stmt: start = arg(0, name=start)
DEBUG:numba.core.ssa:on stmt: stop = arg(1, name=stop)
DEBUG:numba.core.ssa:on stmt: step = arg(2, name=step)
DEBUG:numba.core.ssa:on stmt: dtype = arg(3, name=dtype)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(start_value: None)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $6is_op.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6is_op.2, func=bool8, args=(Var($6is_op.2, arrayobj.py:4797),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 14
DEBUG:numba.core.ssa:==== SSA block analysis pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D51AE0>
DEBUG:numba.core.ssa:on stmt: $phi16.0 = start
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block analysis pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D51AE0>
DEBUG:numba.core.ssa:on stmt: lit_start = $phi16.0
DEBUG:numba.core.ssa:on stmt: $18load_deref.1 = freevar(stop_value: None)
DEBUG:numba.core.ssa:on stmt: $const20.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $22is_op.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22is_op.3, func=bool24, args=(Var($22is_op.3, arrayobj.py:4798),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D51AE0>
DEBUG:numba.core.ssa:on stmt: $phi32.0 = stop
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D51AE0>
DEBUG:numba.core.ssa:on stmt: lit_stop = $phi32.0
DEBUG:numba.core.ssa:on stmt: $34load_deref.1 = freevar(step_value: None)
DEBUG:numba.core.ssa:on stmt: $const36.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $38is_op.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool40 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $40pred = call bool40($38is_op.3, func=bool40, args=(Var($38is_op.3, arrayobj.py:4799),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 46
DEBUG:numba.core.ssa:==== SSA block analysis pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D51AE0>
DEBUG:numba.core.ssa:on stmt: $phi48.0 = step
DEBUG:numba.core.ssa:on stmt: jump 48
DEBUG:numba.core.ssa:==== SSA block analysis pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D51AE0>
DEBUG:numba.core.ssa:on stmt: lit_step = $phi48.0
DEBUG:numba.core.ssa:on stmt: $const52.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $54is_op.3 = lit_step is not $const52.2
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54is_op.3, func=bool56, args=(Var($54is_op.3, arrayobj.py:4801),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 62
DEBUG:numba.core.ssa:==== SSA block analysis pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D51AE0>
DEBUG:numba.core.ssa:on stmt: $phi64.0 = lit_step
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block analysis pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D51AE0>
DEBUG:numba.core.ssa:on stmt: $const62.0 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $phi64.0 = $const62.0
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block analysis pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D51AE0>
DEBUG:numba.core.ssa:on stmt: _step = $phi64.0
DEBUG:numba.core.ssa:on stmt: $const68.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $70is_op.3 = lit_stop is $const68.2
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70is_op.3, func=bool72, args=(Var($70is_op.3, arrayobj.py:4802),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 86
DEBUG:numba.core.ssa:==== SSA block analysis pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D51AE0>
DEBUG:numba.core.ssa:on stmt: _start = const(int, 0)
DEBUG:numba.core.ssa:on stmt: _stop = lit_start
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block analysis pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D51AE0>
DEBUG:numba.core.ssa:on stmt: _start = lit_start
DEBUG:numba.core.ssa:on stmt: _stop = lit_stop
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block analysis pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D51AE0>
DEBUG:numba.core.ssa:on stmt: $const98.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = _step == $const98.1
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, arrayobj.py:4807),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 112
DEBUG:numba.core.ssa:==== SSA block analysis pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D51AE0>
DEBUG:numba.core.ssa:on stmt: $104load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const106.1 = const(str, Maximum allowed size exceeded)
DEBUG:numba.core.ssa:on stmt: $108call_function.2 = call $104load_global.0($const106.1, func=$104load_global.0, args=[Var($const106.1, arrayobj.py:4808)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('Maximum allowed size exceeded')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D51AE0>
DEBUG:numba.core.ssa:on stmt: $116binary_subtract.2 = _stop - _start
DEBUG:numba.core.ssa:on stmt: nitems_c = $116binary_subtract.2 / _step
DEBUG:numba.core.ssa:on stmt: $124load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $126load_global.6 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $128load_method.7 = getattr(value=$126load_global.6, attr=ceil)
DEBUG:numba.core.ssa:on stmt: $132load_attr.9 = getattr(value=nitems_c, attr=real)
DEBUG:numba.core.ssa:on stmt: $134call_method.10 = call $128load_method.7($132load_attr.9, func=$128load_method.7, args=[Var($132load_attr.9, arrayobj.py:4811)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: nitems_r = call $124load_global.5($134call_method.10, func=$124load_global.5, args=[Var($134call_method.10, arrayobj.py:4811)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $140load_deref.12 = freevar(use_complex: False)
DEBUG:numba.core.ssa:on stmt: $const142.13 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: $144is_op.14 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144is_op.14, func=bool146, args=(Var($144is_op.14, arrayobj.py:4814),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 182
DEBUG:numba.core.ssa:==== SSA block analysis pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D51AE0>
DEBUG:numba.core.ssa:on stmt: $182load_global.0 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const186.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nitems = call $182load_global.0(nitems_r, $const186.2, func=$182load_global.0, args=[Var(nitems_r, arrayobj.py:4811), Var($const186.2, arrayobj.py:4818)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 192
DEBUG:numba.core.ssa:==== SSA block analysis pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D51AE0>
DEBUG:numba.core.ssa:on stmt: $192load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $194load_method.1 = getattr(value=$192load_global.0, attr=empty)
DEBUG:numba.core.ssa:on stmt: $198load_deref.3 = freevar(true_dtype: int64)
DEBUG:numba.core.ssa:on stmt: arr = call $194load_method.1(nitems, $198load_deref.3, func=$194load_method.1, args=[Var(nitems, arrayobj.py:4816), Var($198load_deref.3, arrayobj.py:4819)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: val = _start
DEBUG:numba.core.ssa:on stmt: $208load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $212call_function.8 = call $208load_global.6(nitems, func=$208load_global.6, args=[Var(nitems, arrayobj.py:4816)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $214get_iter.9 = getiter(value=$212call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi216.0 = $214get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 216
DEBUG:numba.core.ssa:==== SSA block analysis pass on 216
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D51AE0>
DEBUG:numba.core.ssa:on stmt: $216for_iter.1 = iternext(value=$phi216.0)
DEBUG:numba.core.ssa:on stmt: $216for_iter.2 = pair_first(value=$216for_iter.1)
DEBUG:numba.core.ssa:on stmt: $216for_iter.3 = pair_second(value=$216for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi218.1 = $216for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $216for_iter.3, 218, 238
DEBUG:numba.core.ssa:==== SSA block analysis pass on 218
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D51AE0>
DEBUG:numba.core.ssa:on stmt: i = $phi218.1
DEBUG:numba.core.ssa:on stmt: $226binary_multiply.5 = i * _step
DEBUG:numba.core.ssa:on stmt: $228binary_add.6 = val + $226binary_multiply.5
DEBUG:numba.core.ssa:on stmt: arr[i] = $228binary_add.6
DEBUG:numba.core.ssa:on stmt: jump 216
DEBUG:numba.core.ssa:==== SSA block analysis pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D51AE0>
DEBUG:numba.core.ssa:on stmt: $240return_value.1 = cast(value=arr)
DEBUG:numba.core.ssa:on stmt: return $240return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100compare_op.2': [(<numba.core.ir.Assign object at 0x0000017AA3D42E00>,
                                   96)],
             '$102pred': [(<numba.core.ir.Assign object at 0x0000017AA3D43070>,
                           96)],
             '$104load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA3D432B0>,
                                    104)],
             '$108call_function.2': [(<numba.core.ir.Assign object at 0x0000017AA3D43610>,
                                      104)],
             '$116binary_subtract.2': [(<numba.core.ir.Assign object at 0x0000017AA3D43B20>,
                                        112)],
             '$124load_global.5': [(<numba.core.ir.Assign object at 0x0000017AA3D48070>,
                                    112)],
             '$126load_global.6': [(<numba.core.ir.Assign object at 0x0000017AA3D481F0>,
                                    112)],
             '$128load_method.7': [(<numba.core.ir.Assign object at 0x0000017AA3D48370>,
                                    112)],
             '$132load_attr.9': [(<numba.core.ir.Assign object at 0x0000017AA3D48610>,
                                  112)],
             '$134call_method.10': [(<numba.core.ir.Assign object at 0x0000017AA3D48820>,
                                     112)],
             '$140load_deref.12': [(<numba.core.ir.Assign object at 0x0000017AA3D48BB0>,
                                    112)],
             '$144is_op.14': [(<numba.core.ir.Assign object at 0x0000017AA3D48EE0>,
                               112)],
             '$146pred': [(<numba.core.ir.Assign object at 0x0000017AA3D49150>,
                           112)],
             '$182load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA3D4A6E0>,
                                    182)],
             '$18load_deref.1': [(<numba.core.ir.Assign object at 0x0000017AA3D16C50>,
                                  16)],
             '$192load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA3D4ADD0>,
                                    192)],
             '$194load_method.1': [(<numba.core.ir.Assign object at 0x0000017AA3D4AF50>,
                                    192)],
             '$198load_deref.3': [(<numba.core.ir.Assign object at 0x0000017AA3D4B1F0>,
                                   192)],
             '$208load_global.6': [(<numba.core.ir.Assign object at 0x0000017AA3D4B850>,
                                    192)],
             '$212call_function.8': [(<numba.core.ir.Assign object at 0x0000017AA3D4BB50>,
                                      192)],
             '$214get_iter.9': [(<numba.core.ir.Assign object at 0x0000017AA3D4BC70>,
                                 192)],
             '$216for_iter.1': [(<numba.core.ir.Assign object at 0x0000017AA3D4BE80>,
                                 216)],
             '$216for_iter.2': [(<numba.core.ir.Assign object at 0x0000017AA3D4BFA0>,
                                 216)],
             '$216for_iter.3': [(<numba.core.ir.Assign object at 0x0000017AA3D50100>,
                                 216)],
             '$226binary_multiply.5': [(<numba.core.ir.Assign object at 0x0000017AA3D508E0>,
                                        218)],
             '$228binary_add.6': [(<numba.core.ir.Assign object at 0x0000017AA3D50A60>,
                                   218)],
             '$22is_op.3': [(<numba.core.ir.Assign object at 0x0000017AA3D16F80>,
                             16)],
             '$240return_value.1': [(<numba.core.ir.Assign object at 0x0000017AA3D50F70>,
                                     238)],
             '$24pred': [(<numba.core.ir.Assign object at 0x0000017AA3D171F0>,
                          16)],
             '$2load_deref.0': [(<numba.core.ir.Assign object at 0x0000017AA3D156C0>,
                                 0)],
             '$34load_deref.1': [(<numba.core.ir.Assign object at 0x0000017AA3D17BB0>,
                                  32)],
             '$38is_op.3': [(<numba.core.ir.Assign object at 0x0000017AA3D17EE0>,
                             32)],
             '$40pred': [(<numba.core.ir.Assign object at 0x0000017AA3D40190>,
                          32)],
             '$54is_op.3': [(<numba.core.ir.Assign object at 0x0000017AA3D40E20>,
                             48)],
             '$56pred': [(<numba.core.ir.Assign object at 0x0000017AA3D41090>,
                          48)],
             '$6is_op.2': [(<numba.core.ir.Assign object at 0x0000017AA3D16200>,
                            0)],
             '$70is_op.3': [(<numba.core.ir.Assign object at 0x0000017AA3D41CC0>,
                             64)],
             '$72pred': [(<numba.core.ir.Assign object at 0x0000017AA3D41F30>,
                          64)],
             '$8pred': [(<numba.core.ir.Assign object at 0x0000017AA3D15DB0>,
                         0)],
             '$const106.1': [(<numba.core.ir.Assign object at 0x0000017AA3D43430>,
                              104)],
             '$const142.13': [(<numba.core.ir.Assign object at 0x0000017AA3D48D30>,
                               112)],
             '$const186.2': [(<numba.core.ir.Assign object at 0x0000017AA3D4AA10>,
                              182)],
             '$const20.2': [(<numba.core.ir.Assign object at 0x0000017AA3D16DD0>,
                             16)],
             '$const36.2': [(<numba.core.ir.Assign object at 0x0000017AA3D17D30>,
                             32)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x0000017AA3D15B70>,
                            0)],
             '$const52.2': [(<numba.core.ir.Assign object at 0x0000017AA3D40C70>,
                             48)],
             '$const62.0': [(<numba.core.ir.Assign object at 0x0000017AA3D415D0>,
                             62)],
             '$const68.2': [(<numba.core.ir.Assign object at 0x0000017AA3D41B10>,
                             64)],
             '$const98.1': [(<numba.core.ir.Assign object at 0x0000017AA3D42C50>,
                             96)],
             '$phi16.0': [(<numba.core.ir.Assign object at 0x0000017AA3D16890>,
                           14)],
             '$phi216.0': [(<numba.core.ir.Assign object at 0x0000017AA3D4B100>,
                            192)],
             '$phi218.1': [(<numba.core.ir.Assign object at 0x0000017AA3D4BDC0>,
                            216)],
             '$phi32.0': [(<numba.core.ir.Assign object at 0x0000017AA3D177F0>,
                           30)],
             '$phi48.0': [(<numba.core.ir.Assign object at 0x0000017AA3D40790>,
                           46)],
             '$phi64.0': [(<numba.core.ir.Assign object at 0x0000017AA3D41300>,
                           58),
                          (<numba.core.ir.Assign object at 0x0000017AA3D411B0>,
                           62)],
             '_start': [(<numba.core.ir.Assign object at 0x0000017AA3D42170>,
                         74),
                        (<numba.core.ir.Assign object at 0x0000017AA3D428C0>,
                         86)],
             '_step': [(<numba.core.ir.Assign object at 0x0000017AA3D41870>,
                        64)],
             '_stop': [(<numba.core.ir.Assign object at 0x0000017AA3D424D0>,
                        74),
                       (<numba.core.ir.Assign object at 0x0000017AA3D42980>,
                        86)],
             'arr': [(<numba.core.ir.Assign object at 0x0000017AA3D4B400>,
                      192)],
             'bool102': [(<numba.core.ir.Assign object at 0x0000017AA3D42F50>,
                          96)],
             'bool146': [(<numba.core.ir.Assign object at 0x0000017AA3D49030>,
                          112)],
             'bool24': [(<numba.core.ir.Assign object at 0x0000017AA3D170D0>,
                         16)],
             'bool40': [(<numba.core.ir.Assign object at 0x0000017AA3D40070>,
                         32)],
             'bool56': [(<numba.core.ir.Assign object at 0x0000017AA3D40F70>,
                         48)],
             'bool72': [(<numba.core.ir.Assign object at 0x0000017AA3D41E10>,
                         64)],
             'bool8': [(<numba.core.ir.Assign object at 0x0000017AA3D15B10>,
                        0)],
             'dtype': [(<numba.core.ir.Assign object at 0x0000017AA3D15870>,
                        0)],
             'i': [(<numba.core.ir.Assign object at 0x0000017AA3D503D0>, 218)],
             'lit_start': [(<numba.core.ir.Assign object at 0x0000017AA3D16AD0>,
                            16)],
             'lit_step': [(<numba.core.ir.Assign object at 0x0000017AA3D409D0>,
                           48)],
             'lit_stop': [(<numba.core.ir.Assign object at 0x0000017AA3D17A30>,
                           32)],
             'nitems': [(<numba.core.ir.Assign object at 0x0000017AA3D4ABF0>,
                         182)],
             'nitems_c': [(<numba.core.ir.Assign object at 0x0000017AA3D43DC0>,
                           112)],
             'nitems_r': [(<numba.core.ir.Assign object at 0x0000017AA3D48970>,
                           112)],
             'start': [(<numba.core.ir.Assign object at 0x0000017AA3D15E70>,
                        0)],
             'step': [(<numba.core.ir.Assign object at 0x0000017AA3D14370>, 0)],
             'stop': [(<numba.core.ir.Assign object at 0x0000017AA3D141F0>, 0)],
             'val': [(<numba.core.ir.Assign object at 0x0000017AA3D4B6D0>,
                      192)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA3D15780>
DEBUG:numba.core.ssa:Fix SSA violator on var $phi64.0
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: start = arg(0, name=start)
DEBUG:numba.core.ssa:on stmt: stop = arg(1, name=stop)
DEBUG:numba.core.ssa:on stmt: step = arg(2, name=step)
DEBUG:numba.core.ssa:on stmt: dtype = arg(3, name=dtype)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(start_value: None)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $6is_op.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6is_op.2, func=bool8, args=(Var($6is_op.2, arrayobj.py:4797),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $phi16.0 = start
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: lit_start = $phi16.0
DEBUG:numba.core.ssa:on stmt: $18load_deref.1 = freevar(stop_value: None)
DEBUG:numba.core.ssa:on stmt: $const20.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $22is_op.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22is_op.3, func=bool24, args=(Var($22is_op.3, arrayobj.py:4798),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $phi32.0 = stop
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: lit_stop = $phi32.0
DEBUG:numba.core.ssa:on stmt: $34load_deref.1 = freevar(step_value: None)
DEBUG:numba.core.ssa:on stmt: $const36.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $38is_op.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool40 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $40pred = call bool40($38is_op.3, func=bool40, args=(Var($38is_op.3, arrayobj.py:4799),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 46
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $phi48.0 = step
DEBUG:numba.core.ssa:on stmt: jump 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: lit_step = $phi48.0
DEBUG:numba.core.ssa:on stmt: $const52.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $54is_op.3 = lit_step is not $const52.2
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54is_op.3, func=bool56, args=(Var($54is_op.3, arrayobj.py:4801),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $phi64.0 = lit_step
DEBUG:numba.core.ssa:first assign: $phi64.0
DEBUG:numba.core.ssa:replaced with: $phi64.0 = lit_step
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $const62.0 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $phi64.0 = $const62.0
DEBUG:numba.core.ssa:replaced with: $phi64.0.1 = $const62.0
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: _step = $phi64.0
DEBUG:numba.core.ssa:on stmt: $const68.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $70is_op.3 = lit_stop is $const68.2
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70is_op.3, func=bool72, args=(Var($70is_op.3, arrayobj.py:4802),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: _start = const(int, 0)
DEBUG:numba.core.ssa:on stmt: _stop = lit_start
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: _start = lit_start
DEBUG:numba.core.ssa:on stmt: _stop = lit_stop
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $const98.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = _step == $const98.1
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, arrayobj.py:4807),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 112
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $104load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const106.1 = const(str, Maximum allowed size exceeded)
DEBUG:numba.core.ssa:on stmt: $108call_function.2 = call $104load_global.0($const106.1, func=$104load_global.0, args=[Var($const106.1, arrayobj.py:4808)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('Maximum allowed size exceeded')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $116binary_subtract.2 = _stop - _start
DEBUG:numba.core.ssa:on stmt: nitems_c = $116binary_subtract.2 / _step
DEBUG:numba.core.ssa:on stmt: $124load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $126load_global.6 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $128load_method.7 = getattr(value=$126load_global.6, attr=ceil)
DEBUG:numba.core.ssa:on stmt: $132load_attr.9 = getattr(value=nitems_c, attr=real)
DEBUG:numba.core.ssa:on stmt: $134call_method.10 = call $128load_method.7($132load_attr.9, func=$128load_method.7, args=[Var($132load_attr.9, arrayobj.py:4811)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: nitems_r = call $124load_global.5($134call_method.10, func=$124load_global.5, args=[Var($134call_method.10, arrayobj.py:4811)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $140load_deref.12 = freevar(use_complex: False)
DEBUG:numba.core.ssa:on stmt: $const142.13 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: $144is_op.14 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144is_op.14, func=bool146, args=(Var($144is_op.14, arrayobj.py:4814),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $182load_global.0 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const186.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nitems = call $182load_global.0(nitems_r, $const186.2, func=$182load_global.0, args=[Var(nitems_r, arrayobj.py:4811), Var($const186.2, arrayobj.py:4818)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $192load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $194load_method.1 = getattr(value=$192load_global.0, attr=empty)
DEBUG:numba.core.ssa:on stmt: $198load_deref.3 = freevar(true_dtype: int64)
DEBUG:numba.core.ssa:on stmt: arr = call $194load_method.1(nitems, $198load_deref.3, func=$194load_method.1, args=[Var(nitems, arrayobj.py:4816), Var($198load_deref.3, arrayobj.py:4819)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: val = _start
DEBUG:numba.core.ssa:on stmt: $208load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $212call_function.8 = call $208load_global.6(nitems, func=$208load_global.6, args=[Var(nitems, arrayobj.py:4816)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $214get_iter.9 = getiter(value=$212call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi216.0 = $214get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 216
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 216
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $216for_iter.1 = iternext(value=$phi216.0)
DEBUG:numba.core.ssa:on stmt: $216for_iter.2 = pair_first(value=$216for_iter.1)
DEBUG:numba.core.ssa:on stmt: $216for_iter.3 = pair_second(value=$216for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi218.1 = $216for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $216for_iter.3, 218, 238
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 218
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: i = $phi218.1
DEBUG:numba.core.ssa:on stmt: $226binary_multiply.5 = i * _step
DEBUG:numba.core.ssa:on stmt: $228binary_add.6 = val + $226binary_multiply.5
DEBUG:numba.core.ssa:on stmt: arr[i] = $228binary_add.6
DEBUG:numba.core.ssa:on stmt: jump 216
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $240return_value.1 = cast(value=arr)
DEBUG:numba.core.ssa:on stmt: return $240return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x0000017AA3D04AF0>],
             62: [<numba.core.ir.Assign object at 0x0000017AA3D07F40>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: start = arg(0, name=start)
DEBUG:numba.core.ssa:on stmt: stop = arg(1, name=stop)
DEBUG:numba.core.ssa:on stmt: step = arg(2, name=step)
DEBUG:numba.core.ssa:on stmt: dtype = arg(3, name=dtype)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(start_value: None)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $6is_op.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6is_op.2, func=bool8, args=(Var($6is_op.2, arrayobj.py:4797),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $phi16.0 = start
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: lit_start = $phi16.0
DEBUG:numba.core.ssa:on stmt: $18load_deref.1 = freevar(stop_value: None)
DEBUG:numba.core.ssa:on stmt: $const20.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $22is_op.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22is_op.3, func=bool24, args=(Var($22is_op.3, arrayobj.py:4798),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $phi32.0 = stop
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: lit_stop = $phi32.0
DEBUG:numba.core.ssa:on stmt: $34load_deref.1 = freevar(step_value: None)
DEBUG:numba.core.ssa:on stmt: $const36.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $38is_op.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool40 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $40pred = call bool40($38is_op.3, func=bool40, args=(Var($38is_op.3, arrayobj.py:4799),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 46
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $phi48.0 = step
DEBUG:numba.core.ssa:on stmt: jump 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: lit_step = $phi48.0
DEBUG:numba.core.ssa:on stmt: $const52.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $54is_op.3 = lit_step is not $const52.2
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54is_op.3, func=bool56, args=(Var($54is_op.3, arrayobj.py:4801),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $phi64.0 = lit_step
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $const62.0 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $phi64.0.1 = $const62.0
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: _step = $phi64.0
DEBUG:numba.core.ssa:find_def var='$phi64.0' stmt=_step = $phi64.0
DEBUG:numba.core.ssa:find_def_from_top label 64
DEBUG:numba.core.ssa:insert phi node $phi64.0.2 = phi(incoming_values=[], incoming_blocks=[]) at 64
DEBUG:numba.core.ssa:find_def_from_bottom label 58
DEBUG:numba.core.ssa:incoming_def $phi64.0 = lit_step
DEBUG:numba.core.ssa:find_def_from_bottom label 62
DEBUG:numba.core.ssa:incoming_def $phi64.0.1 = $const62.0
DEBUG:numba.core.ssa:replaced with: _step = $phi64.0.2
DEBUG:numba.core.ssa:on stmt: $const68.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $70is_op.3 = lit_stop is $const68.2
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70is_op.3, func=bool72, args=(Var($70is_op.3, arrayobj.py:4802),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: _start = const(int, 0)
DEBUG:numba.core.ssa:on stmt: _stop = lit_start
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: _start = lit_start
DEBUG:numba.core.ssa:on stmt: _stop = lit_stop
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $const98.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = _step == $const98.1
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, arrayobj.py:4807),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 112
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $104load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const106.1 = const(str, Maximum allowed size exceeded)
DEBUG:numba.core.ssa:on stmt: $108call_function.2 = call $104load_global.0($const106.1, func=$104load_global.0, args=[Var($const106.1, arrayobj.py:4808)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('Maximum allowed size exceeded')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $116binary_subtract.2 = _stop - _start
DEBUG:numba.core.ssa:on stmt: nitems_c = $116binary_subtract.2 / _step
DEBUG:numba.core.ssa:on stmt: $124load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $126load_global.6 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $128load_method.7 = getattr(value=$126load_global.6, attr=ceil)
DEBUG:numba.core.ssa:on stmt: $132load_attr.9 = getattr(value=nitems_c, attr=real)
DEBUG:numba.core.ssa:on stmt: $134call_method.10 = call $128load_method.7($132load_attr.9, func=$128load_method.7, args=[Var($132load_attr.9, arrayobj.py:4811)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: nitems_r = call $124load_global.5($134call_method.10, func=$124load_global.5, args=[Var($134call_method.10, arrayobj.py:4811)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $140load_deref.12 = freevar(use_complex: False)
DEBUG:numba.core.ssa:on stmt: $const142.13 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: $144is_op.14 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144is_op.14, func=bool146, args=(Var($144is_op.14, arrayobj.py:4814),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $182load_global.0 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const186.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nitems = call $182load_global.0(nitems_r, $const186.2, func=$182load_global.0, args=[Var(nitems_r, arrayobj.py:4811), Var($const186.2, arrayobj.py:4818)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $192load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $194load_method.1 = getattr(value=$192load_global.0, attr=empty)
DEBUG:numba.core.ssa:on stmt: $198load_deref.3 = freevar(true_dtype: int64)
DEBUG:numba.core.ssa:on stmt: arr = call $194load_method.1(nitems, $198load_deref.3, func=$194load_method.1, args=[Var(nitems, arrayobj.py:4816), Var($198load_deref.3, arrayobj.py:4819)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: val = _start
DEBUG:numba.core.ssa:on stmt: $208load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $212call_function.8 = call $208load_global.6(nitems, func=$208load_global.6, args=[Var(nitems, arrayobj.py:4816)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $214get_iter.9 = getiter(value=$212call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi216.0 = $214get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 216
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 216
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $216for_iter.1 = iternext(value=$phi216.0)
DEBUG:numba.core.ssa:on stmt: $216for_iter.2 = pair_first(value=$216for_iter.1)
DEBUG:numba.core.ssa:on stmt: $216for_iter.3 = pair_second(value=$216for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi218.1 = $216for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $216for_iter.3, 218, 238
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 218
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: i = $phi218.1
DEBUG:numba.core.ssa:on stmt: $226binary_multiply.5 = i * _step
DEBUG:numba.core.ssa:on stmt: $228binary_add.6 = val + $226binary_multiply.5
DEBUG:numba.core.ssa:on stmt: arr[i] = $228binary_add.6
DEBUG:numba.core.ssa:on stmt: jump 216
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D15810>
DEBUG:numba.core.ssa:on stmt: $240return_value.1 = cast(value=arr)
DEBUG:numba.core.ssa:on stmt: return $240return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var _start
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: start = arg(0, name=start)
DEBUG:numba.core.ssa:on stmt: stop = arg(1, name=stop)
DEBUG:numba.core.ssa:on stmt: step = arg(2, name=step)
DEBUG:numba.core.ssa:on stmt: dtype = arg(3, name=dtype)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(start_value: None)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $6is_op.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6is_op.2, func=bool8, args=(Var($6is_op.2, arrayobj.py:4797),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $phi16.0 = start
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: lit_start = $phi16.0
DEBUG:numba.core.ssa:on stmt: $18load_deref.1 = freevar(stop_value: None)
DEBUG:numba.core.ssa:on stmt: $const20.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $22is_op.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22is_op.3, func=bool24, args=(Var($22is_op.3, arrayobj.py:4798),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $phi32.0 = stop
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: lit_stop = $phi32.0
DEBUG:numba.core.ssa:on stmt: $34load_deref.1 = freevar(step_value: None)
DEBUG:numba.core.ssa:on stmt: $const36.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $38is_op.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool40 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $40pred = call bool40($38is_op.3, func=bool40, args=(Var($38is_op.3, arrayobj.py:4799),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 46
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $phi48.0 = step
DEBUG:numba.core.ssa:on stmt: jump 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: lit_step = $phi48.0
DEBUG:numba.core.ssa:on stmt: $const52.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $54is_op.3 = lit_step is not $const52.2
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54is_op.3, func=bool56, args=(Var($54is_op.3, arrayobj.py:4801),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $phi64.0 = lit_step
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $const62.0 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $phi64.0.1 = $const62.0
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $phi64.0.2 = phi(incoming_values=[Var($phi64.0, arrayobj.py:4801), Var($phi64.0.1, arrayobj.py:4801)], incoming_blocks=[58, 62])
DEBUG:numba.core.ssa:on stmt: _step = $phi64.0.2
DEBUG:numba.core.ssa:on stmt: $const68.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $70is_op.3 = lit_stop is $const68.2
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70is_op.3, func=bool72, args=(Var($70is_op.3, arrayobj.py:4802),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: _start = const(int, 0)
DEBUG:numba.core.ssa:first assign: _start
DEBUG:numba.core.ssa:replaced with: _start = const(int, 0)
DEBUG:numba.core.ssa:on stmt: _stop = lit_start
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: _start = lit_start
DEBUG:numba.core.ssa:replaced with: _start.1 = lit_start
DEBUG:numba.core.ssa:on stmt: _stop = lit_stop
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $const98.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = _step == $const98.1
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, arrayobj.py:4807),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 112
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $104load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const106.1 = const(str, Maximum allowed size exceeded)
DEBUG:numba.core.ssa:on stmt: $108call_function.2 = call $104load_global.0($const106.1, func=$104load_global.0, args=[Var($const106.1, arrayobj.py:4808)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('Maximum allowed size exceeded')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $116binary_subtract.2 = _stop - _start
DEBUG:numba.core.ssa:on stmt: nitems_c = $116binary_subtract.2 / _step
DEBUG:numba.core.ssa:on stmt: $124load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $126load_global.6 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $128load_method.7 = getattr(value=$126load_global.6, attr=ceil)
DEBUG:numba.core.ssa:on stmt: $132load_attr.9 = getattr(value=nitems_c, attr=real)
DEBUG:numba.core.ssa:on stmt: $134call_method.10 = call $128load_method.7($132load_attr.9, func=$128load_method.7, args=[Var($132load_attr.9, arrayobj.py:4811)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: nitems_r = call $124load_global.5($134call_method.10, func=$124load_global.5, args=[Var($134call_method.10, arrayobj.py:4811)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $140load_deref.12 = freevar(use_complex: False)
DEBUG:numba.core.ssa:on stmt: $const142.13 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: $144is_op.14 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144is_op.14, func=bool146, args=(Var($144is_op.14, arrayobj.py:4814),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $182load_global.0 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const186.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nitems = call $182load_global.0(nitems_r, $const186.2, func=$182load_global.0, args=[Var(nitems_r, arrayobj.py:4811), Var($const186.2, arrayobj.py:4818)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $192load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $194load_method.1 = getattr(value=$192load_global.0, attr=empty)
DEBUG:numba.core.ssa:on stmt: $198load_deref.3 = freevar(true_dtype: int64)
DEBUG:numba.core.ssa:on stmt: arr = call $194load_method.1(nitems, $198load_deref.3, func=$194load_method.1, args=[Var(nitems, arrayobj.py:4816), Var($198load_deref.3, arrayobj.py:4819)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: val = _start
DEBUG:numba.core.ssa:on stmt: $208load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $212call_function.8 = call $208load_global.6(nitems, func=$208load_global.6, args=[Var(nitems, arrayobj.py:4816)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $214get_iter.9 = getiter(value=$212call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi216.0 = $214get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 216
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 216
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $216for_iter.1 = iternext(value=$phi216.0)
DEBUG:numba.core.ssa:on stmt: $216for_iter.2 = pair_first(value=$216for_iter.1)
DEBUG:numba.core.ssa:on stmt: $216for_iter.3 = pair_second(value=$216for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi218.1 = $216for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $216for_iter.3, 218, 238
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 218
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: i = $phi218.1
DEBUG:numba.core.ssa:on stmt: $226binary_multiply.5 = i * _step
DEBUG:numba.core.ssa:on stmt: $228binary_add.6 = val + $226binary_multiply.5
DEBUG:numba.core.ssa:on stmt: arr[i] = $228binary_add.6
DEBUG:numba.core.ssa:on stmt: jump 216
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $240return_value.1 = cast(value=arr)
DEBUG:numba.core.ssa:on stmt: return $240return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {74: [<numba.core.ir.Assign object at 0x0000017AA3D077F0>],
             86: [<numba.core.ir.Assign object at 0x0000017AA3D04250>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: start = arg(0, name=start)
DEBUG:numba.core.ssa:on stmt: stop = arg(1, name=stop)
DEBUG:numba.core.ssa:on stmt: step = arg(2, name=step)
DEBUG:numba.core.ssa:on stmt: dtype = arg(3, name=dtype)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(start_value: None)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $6is_op.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6is_op.2, func=bool8, args=(Var($6is_op.2, arrayobj.py:4797),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $phi16.0 = start
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: lit_start = $phi16.0
DEBUG:numba.core.ssa:on stmt: $18load_deref.1 = freevar(stop_value: None)
DEBUG:numba.core.ssa:on stmt: $const20.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $22is_op.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22is_op.3, func=bool24, args=(Var($22is_op.3, arrayobj.py:4798),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $phi32.0 = stop
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: lit_stop = $phi32.0
DEBUG:numba.core.ssa:on stmt: $34load_deref.1 = freevar(step_value: None)
DEBUG:numba.core.ssa:on stmt: $const36.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $38is_op.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool40 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $40pred = call bool40($38is_op.3, func=bool40, args=(Var($38is_op.3, arrayobj.py:4799),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 46
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $phi48.0 = step
DEBUG:numba.core.ssa:on stmt: jump 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: lit_step = $phi48.0
DEBUG:numba.core.ssa:on stmt: $const52.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $54is_op.3 = lit_step is not $const52.2
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54is_op.3, func=bool56, args=(Var($54is_op.3, arrayobj.py:4801),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $phi64.0 = lit_step
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $const62.0 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $phi64.0.1 = $const62.0
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $phi64.0.2 = phi(incoming_values=[Var($phi64.0, arrayobj.py:4801), Var($phi64.0.1, arrayobj.py:4801)], incoming_blocks=[58, 62])
DEBUG:numba.core.ssa:on stmt: _step = $phi64.0.2
DEBUG:numba.core.ssa:on stmt: $const68.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $70is_op.3 = lit_stop is $const68.2
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70is_op.3, func=bool72, args=(Var($70is_op.3, arrayobj.py:4802),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: _start = const(int, 0)
DEBUG:numba.core.ssa:on stmt: _stop = lit_start
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: _start.1 = lit_start
DEBUG:numba.core.ssa:on stmt: _stop = lit_stop
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $const98.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = _step == $const98.1
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, arrayobj.py:4807),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 112
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $104load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const106.1 = const(str, Maximum allowed size exceeded)
DEBUG:numba.core.ssa:on stmt: $108call_function.2 = call $104load_global.0($const106.1, func=$104load_global.0, args=[Var($const106.1, arrayobj.py:4808)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('Maximum allowed size exceeded')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $116binary_subtract.2 = _stop - _start
DEBUG:numba.core.ssa:find_def var='_start' stmt=$116binary_subtract.2 = _stop - _start
DEBUG:numba.core.ssa:find_def_from_top label 112
DEBUG:numba.core.ssa:idom 96 from label 112
DEBUG:numba.core.ssa:find_def_from_bottom label 96
DEBUG:numba.core.ssa:find_def_from_top label 96
DEBUG:numba.core.ssa:insert phi node _start.2 = phi(incoming_values=[], incoming_blocks=[]) at 96
DEBUG:numba.core.ssa:find_def_from_bottom label 74
DEBUG:numba.core.ssa:incoming_def _start = const(int, 0)
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:incoming_def _start.1 = lit_start
DEBUG:numba.core.ssa:replaced with: $116binary_subtract.2 = _stop - _start.2
DEBUG:numba.core.ssa:on stmt: nitems_c = $116binary_subtract.2 / _step
DEBUG:numba.core.ssa:on stmt: $124load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $126load_global.6 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $128load_method.7 = getattr(value=$126load_global.6, attr=ceil)
DEBUG:numba.core.ssa:on stmt: $132load_attr.9 = getattr(value=nitems_c, attr=real)
DEBUG:numba.core.ssa:on stmt: $134call_method.10 = call $128load_method.7($132load_attr.9, func=$128load_method.7, args=[Var($132load_attr.9, arrayobj.py:4811)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: nitems_r = call $124load_global.5($134call_method.10, func=$124load_global.5, args=[Var($134call_method.10, arrayobj.py:4811)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $140load_deref.12 = freevar(use_complex: False)
DEBUG:numba.core.ssa:on stmt: $const142.13 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: $144is_op.14 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144is_op.14, func=bool146, args=(Var($144is_op.14, arrayobj.py:4814),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $182load_global.0 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const186.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nitems = call $182load_global.0(nitems_r, $const186.2, func=$182load_global.0, args=[Var(nitems_r, arrayobj.py:4811), Var($const186.2, arrayobj.py:4818)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $192load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $194load_method.1 = getattr(value=$192load_global.0, attr=empty)
DEBUG:numba.core.ssa:on stmt: $198load_deref.3 = freevar(true_dtype: int64)
DEBUG:numba.core.ssa:on stmt: arr = call $194load_method.1(nitems, $198load_deref.3, func=$194load_method.1, args=[Var(nitems, arrayobj.py:4816), Var($198load_deref.3, arrayobj.py:4819)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: val = _start
DEBUG:numba.core.ssa:find_def var='_start' stmt=val = _start
DEBUG:numba.core.ssa:find_def_from_top label 192
DEBUG:numba.core.ssa:idom 182 from label 192
DEBUG:numba.core.ssa:find_def_from_bottom label 182
DEBUG:numba.core.ssa:find_def_from_top label 182
DEBUG:numba.core.ssa:idom 112 from label 182
DEBUG:numba.core.ssa:find_def_from_bottom label 112
DEBUG:numba.core.ssa:find_def_from_top label 112
DEBUG:numba.core.ssa:idom 96 from label 112
DEBUG:numba.core.ssa:find_def_from_bottom label 96
DEBUG:numba.core.ssa:replaced with: val = _start.2
DEBUG:numba.core.ssa:on stmt: $208load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $212call_function.8 = call $208load_global.6(nitems, func=$208load_global.6, args=[Var(nitems, arrayobj.py:4816)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $214get_iter.9 = getiter(value=$212call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi216.0 = $214get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 216
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 216
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $216for_iter.1 = iternext(value=$phi216.0)
DEBUG:numba.core.ssa:on stmt: $216for_iter.2 = pair_first(value=$216for_iter.1)
DEBUG:numba.core.ssa:on stmt: $216for_iter.3 = pair_second(value=$216for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi218.1 = $216for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $216for_iter.3, 218, 238
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 218
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: i = $phi218.1
DEBUG:numba.core.ssa:on stmt: $226binary_multiply.5 = i * _step
DEBUG:numba.core.ssa:on stmt: $228binary_add.6 = val + $226binary_multiply.5
DEBUG:numba.core.ssa:on stmt: arr[i] = $228binary_add.6
DEBUG:numba.core.ssa:on stmt: jump 216
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $240return_value.1 = cast(value=arr)
DEBUG:numba.core.ssa:on stmt: return $240return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var _stop
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D16EF0>
DEBUG:numba.core.ssa:on stmt: start = arg(0, name=start)
DEBUG:numba.core.ssa:on stmt: stop = arg(1, name=stop)
DEBUG:numba.core.ssa:on stmt: step = arg(2, name=step)
DEBUG:numba.core.ssa:on stmt: dtype = arg(3, name=dtype)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(start_value: None)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $6is_op.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6is_op.2, func=bool8, args=(Var($6is_op.2, arrayobj.py:4797),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D16EF0>
DEBUG:numba.core.ssa:on stmt: $phi16.0 = start
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D16EF0>
DEBUG:numba.core.ssa:on stmt: lit_start = $phi16.0
DEBUG:numba.core.ssa:on stmt: $18load_deref.1 = freevar(stop_value: None)
DEBUG:numba.core.ssa:on stmt: $const20.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $22is_op.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22is_op.3, func=bool24, args=(Var($22is_op.3, arrayobj.py:4798),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D16EF0>
DEBUG:numba.core.ssa:on stmt: $phi32.0 = stop
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D16EF0>
DEBUG:numba.core.ssa:on stmt: lit_stop = $phi32.0
DEBUG:numba.core.ssa:on stmt: $34load_deref.1 = freevar(step_value: None)
DEBUG:numba.core.ssa:on stmt: $const36.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $38is_op.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool40 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $40pred = call bool40($38is_op.3, func=bool40, args=(Var($38is_op.3, arrayobj.py:4799),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 46
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D16EF0>
DEBUG:numba.core.ssa:on stmt: $phi48.0 = step
DEBUG:numba.core.ssa:on stmt: jump 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D16EF0>
DEBUG:numba.core.ssa:on stmt: lit_step = $phi48.0
DEBUG:numba.core.ssa:on stmt: $const52.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $54is_op.3 = lit_step is not $const52.2
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54is_op.3, func=bool56, args=(Var($54is_op.3, arrayobj.py:4801),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D16EF0>
DEBUG:numba.core.ssa:on stmt: $phi64.0 = lit_step
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D16EF0>
DEBUG:numba.core.ssa:on stmt: $const62.0 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $phi64.0.1 = $const62.0
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D16EF0>
DEBUG:numba.core.ssa:on stmt: $phi64.0.2 = phi(incoming_values=[Var($phi64.0, arrayobj.py:4801), Var($phi64.0.1, arrayobj.py:4801)], incoming_blocks=[58, 62])
DEBUG:numba.core.ssa:on stmt: _step = $phi64.0.2
DEBUG:numba.core.ssa:on stmt: $const68.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $70is_op.3 = lit_stop is $const68.2
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70is_op.3, func=bool72, args=(Var($70is_op.3, arrayobj.py:4802),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D16EF0>
DEBUG:numba.core.ssa:on stmt: _start = const(int, 0)
DEBUG:numba.core.ssa:on stmt: _stop = lit_start
DEBUG:numba.core.ssa:first assign: _stop
DEBUG:numba.core.ssa:replaced with: _stop = lit_start
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D16EF0>
DEBUG:numba.core.ssa:on stmt: _start.1 = lit_start
DEBUG:numba.core.ssa:on stmt: _stop = lit_stop
DEBUG:numba.core.ssa:replaced with: _stop.1 = lit_stop
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D16EF0>
DEBUG:numba.core.ssa:on stmt: _start.2 = phi(incoming_values=[Var(_start, arrayobj.py:4803), Var(_start.1, arrayobj.py:4805)], incoming_blocks=[74, 86])
DEBUG:numba.core.ssa:on stmt: $const98.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = _step == $const98.1
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, arrayobj.py:4807),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 112
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D16EF0>
DEBUG:numba.core.ssa:on stmt: $104load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const106.1 = const(str, Maximum allowed size exceeded)
DEBUG:numba.core.ssa:on stmt: $108call_function.2 = call $104load_global.0($const106.1, func=$104load_global.0, args=[Var($const106.1, arrayobj.py:4808)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('Maximum allowed size exceeded')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D16EF0>
DEBUG:numba.core.ssa:on stmt: $116binary_subtract.2 = _stop - _start.2
DEBUG:numba.core.ssa:on stmt: nitems_c = $116binary_subtract.2 / _step
DEBUG:numba.core.ssa:on stmt: $124load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $126load_global.6 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $128load_method.7 = getattr(value=$126load_global.6, attr=ceil)
DEBUG:numba.core.ssa:on stmt: $132load_attr.9 = getattr(value=nitems_c, attr=real)
DEBUG:numba.core.ssa:on stmt: $134call_method.10 = call $128load_method.7($132load_attr.9, func=$128load_method.7, args=[Var($132load_attr.9, arrayobj.py:4811)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: nitems_r = call $124load_global.5($134call_method.10, func=$124load_global.5, args=[Var($134call_method.10, arrayobj.py:4811)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $140load_deref.12 = freevar(use_complex: False)
DEBUG:numba.core.ssa:on stmt: $const142.13 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: $144is_op.14 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144is_op.14, func=bool146, args=(Var($144is_op.14, arrayobj.py:4814),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D16EF0>
DEBUG:numba.core.ssa:on stmt: $182load_global.0 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const186.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nitems = call $182load_global.0(nitems_r, $const186.2, func=$182load_global.0, args=[Var(nitems_r, arrayobj.py:4811), Var($const186.2, arrayobj.py:4818)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D16EF0>
DEBUG:numba.core.ssa:on stmt: $192load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $194load_method.1 = getattr(value=$192load_global.0, attr=empty)
DEBUG:numba.core.ssa:on stmt: $198load_deref.3 = freevar(true_dtype: int64)
DEBUG:numba.core.ssa:on stmt: arr = call $194load_method.1(nitems, $198load_deref.3, func=$194load_method.1, args=[Var(nitems, arrayobj.py:4816), Var($198load_deref.3, arrayobj.py:4819)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: val = _start.2
DEBUG:numba.core.ssa:on stmt: $208load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $212call_function.8 = call $208load_global.6(nitems, func=$208load_global.6, args=[Var(nitems, arrayobj.py:4816)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $214get_iter.9 = getiter(value=$212call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi216.0 = $214get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 216
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 216
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D16EF0>
DEBUG:numba.core.ssa:on stmt: $216for_iter.1 = iternext(value=$phi216.0)
DEBUG:numba.core.ssa:on stmt: $216for_iter.2 = pair_first(value=$216for_iter.1)
DEBUG:numba.core.ssa:on stmt: $216for_iter.3 = pair_second(value=$216for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi218.1 = $216for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $216for_iter.3, 218, 238
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 218
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D16EF0>
DEBUG:numba.core.ssa:on stmt: i = $phi218.1
DEBUG:numba.core.ssa:on stmt: $226binary_multiply.5 = i * _step
DEBUG:numba.core.ssa:on stmt: $228binary_add.6 = val + $226binary_multiply.5
DEBUG:numba.core.ssa:on stmt: arr[i] = $228binary_add.6
DEBUG:numba.core.ssa:on stmt: jump 216
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D16EF0>
DEBUG:numba.core.ssa:on stmt: $240return_value.1 = cast(value=arr)
DEBUG:numba.core.ssa:on stmt: return $240return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {74: [<numba.core.ir.Assign object at 0x0000017AA3D07EE0>],
             86: [<numba.core.ir.Assign object at 0x0000017AA3D04310>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: start = arg(0, name=start)
DEBUG:numba.core.ssa:on stmt: stop = arg(1, name=stop)
DEBUG:numba.core.ssa:on stmt: step = arg(2, name=step)
DEBUG:numba.core.ssa:on stmt: dtype = arg(3, name=dtype)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(start_value: None)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $6is_op.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6is_op.2, func=bool8, args=(Var($6is_op.2, arrayobj.py:4797),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $phi16.0 = start
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: lit_start = $phi16.0
DEBUG:numba.core.ssa:on stmt: $18load_deref.1 = freevar(stop_value: None)
DEBUG:numba.core.ssa:on stmt: $const20.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $22is_op.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22is_op.3, func=bool24, args=(Var($22is_op.3, arrayobj.py:4798),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $phi32.0 = stop
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: lit_stop = $phi32.0
DEBUG:numba.core.ssa:on stmt: $34load_deref.1 = freevar(step_value: None)
DEBUG:numba.core.ssa:on stmt: $const36.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $38is_op.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool40 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $40pred = call bool40($38is_op.3, func=bool40, args=(Var($38is_op.3, arrayobj.py:4799),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 46
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $phi48.0 = step
DEBUG:numba.core.ssa:on stmt: jump 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: lit_step = $phi48.0
DEBUG:numba.core.ssa:on stmt: $const52.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $54is_op.3 = lit_step is not $const52.2
DEBUG:numba.core.ssa:on stmt: bool56 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $56pred = call bool56($54is_op.3, func=bool56, args=(Var($54is_op.3, arrayobj.py:4801),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $56pred, 58, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $phi64.0 = lit_step
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $const62.0 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $phi64.0.1 = $const62.0
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $phi64.0.2 = phi(incoming_values=[Var($phi64.0, arrayobj.py:4801), Var($phi64.0.1, arrayobj.py:4801)], incoming_blocks=[58, 62])
DEBUG:numba.core.ssa:on stmt: _step = $phi64.0.2
DEBUG:numba.core.ssa:on stmt: $const68.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $70is_op.3 = lit_stop is $const68.2
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70is_op.3, func=bool72, args=(Var($70is_op.3, arrayobj.py:4802),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: _start = const(int, 0)
DEBUG:numba.core.ssa:on stmt: _stop = lit_start
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: _start.1 = lit_start
DEBUG:numba.core.ssa:on stmt: _stop.1 = lit_stop
DEBUG:numba.core.ssa:on stmt: jump 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: _start.2 = phi(incoming_values=[Var(_start, arrayobj.py:4803), Var(_start.1, arrayobj.py:4805)], incoming_blocks=[74, 86])
DEBUG:numba.core.ssa:on stmt: $const98.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $100compare_op.2 = _step == $const98.1
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, arrayobj.py:4807),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 112
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $104load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const106.1 = const(str, Maximum allowed size exceeded)
DEBUG:numba.core.ssa:on stmt: $108call_function.2 = call $104load_global.0($const106.1, func=$104load_global.0, args=[Var($const106.1, arrayobj.py:4808)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('Maximum allowed size exceeded')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $116binary_subtract.2 = _stop - _start.2
DEBUG:numba.core.ssa:find_def var='_stop' stmt=$116binary_subtract.2 = _stop - _start.2
DEBUG:numba.core.ssa:find_def_from_top label 112
DEBUG:numba.core.ssa:idom 96 from label 112
DEBUG:numba.core.ssa:find_def_from_bottom label 96
DEBUG:numba.core.ssa:find_def_from_top label 96
DEBUG:numba.core.ssa:insert phi node _stop.2 = phi(incoming_values=[], incoming_blocks=[]) at 96
DEBUG:numba.core.ssa:find_def_from_bottom label 74
DEBUG:numba.core.ssa:incoming_def _stop = lit_start
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:incoming_def _stop.1 = lit_stop
DEBUG:numba.core.ssa:replaced with: $116binary_subtract.2 = _stop.2 - _start.2
DEBUG:numba.core.ssa:on stmt: nitems_c = $116binary_subtract.2 / _step
DEBUG:numba.core.ssa:on stmt: $124load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $126load_global.6 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $128load_method.7 = getattr(value=$126load_global.6, attr=ceil)
DEBUG:numba.core.ssa:on stmt: $132load_attr.9 = getattr(value=nitems_c, attr=real)
DEBUG:numba.core.ssa:on stmt: $134call_method.10 = call $128load_method.7($132load_attr.9, func=$128load_method.7, args=[Var($132load_attr.9, arrayobj.py:4811)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: nitems_r = call $124load_global.5($134call_method.10, func=$124load_global.5, args=[Var($134call_method.10, arrayobj.py:4811)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $140load_deref.12 = freevar(use_complex: False)
DEBUG:numba.core.ssa:on stmt: $const142.13 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: $144is_op.14 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144is_op.14, func=bool146, args=(Var($144is_op.14, arrayobj.py:4814),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $182load_global.0 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const186.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nitems = call $182load_global.0(nitems_r, $const186.2, func=$182load_global.0, args=[Var(nitems_r, arrayobj.py:4811), Var($const186.2, arrayobj.py:4818)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $192load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $194load_method.1 = getattr(value=$192load_global.0, attr=empty)
DEBUG:numba.core.ssa:on stmt: $198load_deref.3 = freevar(true_dtype: int64)
DEBUG:numba.core.ssa:on stmt: arr = call $194load_method.1(nitems, $198load_deref.3, func=$194load_method.1, args=[Var(nitems, arrayobj.py:4816), Var($198load_deref.3, arrayobj.py:4819)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: val = _start.2
DEBUG:numba.core.ssa:on stmt: $208load_global.6 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $212call_function.8 = call $208load_global.6(nitems, func=$208load_global.6, args=[Var(nitems, arrayobj.py:4816)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $214get_iter.9 = getiter(value=$212call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi216.0 = $214get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 216
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 216
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $216for_iter.1 = iternext(value=$phi216.0)
DEBUG:numba.core.ssa:on stmt: $216for_iter.2 = pair_first(value=$216for_iter.1)
DEBUG:numba.core.ssa:on stmt: $216for_iter.3 = pair_second(value=$216for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi218.1 = $216for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $216for_iter.3, 218, 238
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 218
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: i = $phi218.1
DEBUG:numba.core.ssa:on stmt: $226binary_multiply.5 = i * _step
DEBUG:numba.core.ssa:on stmt: $228binary_add.6 = val + $226binary_multiply.5
DEBUG:numba.core.ssa:on stmt: arr[i] = $228binary_add.6
DEBUG:numba.core.ssa:on stmt: jump 216
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D075E0>
DEBUG:numba.core.ssa:on stmt: $240return_value.1 = cast(value=arr)
DEBUG:numba.core.ssa:on stmt: return $240return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4388)
           2	LOAD_GLOBAL(arg=0, lineno=4389)
           4	LOAD_FAST(arg=0, lineno=4389)
           6	LOAD_FAST(arg=1, lineno=4389)
           8	LOAD_DEREF(arg=0, lineno=4389)
          10	CALL_FUNCTION(arg=3, lineno=4389)
          12	RETURN_VALUE(arg=None, lineno=4389)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4388)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4389)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$shape4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$10call_function.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(int64, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($8load_deref.3, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3D512A0>
DEBUG:numba.core.ssa:on stmt: shape = arg(0, name=shape)
DEBUG:numba.core.ssa:on stmt: dtype = arg(1, name=dtype)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
DEBUG:numba.core.ssa:on stmt: $8load_deref.3 = freevar(retty: array(int64, 1d, C))
DEBUG:numba.core.ssa:on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($8load_deref.3, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $12return_value.5 = cast(value=$10call_function.4)
DEBUG:numba.core.ssa:on stmt: return $12return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x0000017AA3D69D80>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x0000017AA3D6A920>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA3D6A470>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x0000017AA3D6A290>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x0000017AA3D6A5F0>,
                        0)],
             'shape': [(<numba.core.ir.Assign object at 0x0000017AA3D6A710>,
                        0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA3D512A0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=86)
           2	LOAD_FAST(arg=2, lineno=92)
           4	LOAD_CONST(arg=1, lineno=92)
           6	COMPARE_OP(arg=5, lineno=92)
           8	POP_JUMP_IF_TRUE(arg=8, lineno=92)
          10	LOAD_ASSERTION_ERROR(arg=None, lineno=92)
          12	RAISE_VARARGS(arg=1, lineno=92)
>         14	LOAD_FAST(arg=3, lineno=93)
          16	LOAD_FAST(arg=2, lineno=93)
          18	COMPARE_OP(arg=4, lineno=93)
          20	POP_JUMP_IF_TRUE(arg=14, lineno=93)
          22	LOAD_ASSERTION_ERROR(arg=None, lineno=93)
          24	RAISE_VARARGS(arg=1, lineno=93)
>         26	LOAD_FAST(arg=2, lineno=95)
          28	LOAD_FAST(arg=3, lineno=95)
          30	BINARY_ADD(arg=None, lineno=95)
          32	LOAD_CONST(arg=2, lineno=95)
          34	BINARY_RSHIFT(arg=None, lineno=95)
          36	STORE_FAST(arg=4, lineno=95)
          38	LOAD_DEREF(arg=1, lineno=102)
          40	LOAD_DEREF(arg=0, lineno=102)
          42	LOAD_FAST(arg=0, lineno=102)
          44	LOAD_FAST(arg=1, lineno=102)
          46	LOAD_FAST(arg=4, lineno=102)
          48	BINARY_SUBSCR(arg=None, lineno=102)
          50	CALL_FUNCTION(arg=2, lineno=102)
          52	LOAD_DEREF(arg=0, lineno=102)
          54	LOAD_FAST(arg=0, lineno=102)
          56	LOAD_FAST(arg=1, lineno=102)
          58	LOAD_FAST(arg=2, lineno=102)
          60	BINARY_SUBSCR(arg=None, lineno=102)
          62	CALL_FUNCTION(arg=2, lineno=102)
          64	CALL_FUNCTION(arg=2, lineno=102)
          66	POP_JUMP_IF_FALSE(arg=48, lineno=102)
          68	LOAD_FAST(arg=1, lineno=103)
          70	LOAD_FAST(arg=4, lineno=103)
          72	BINARY_SUBSCR(arg=None, lineno=103)
          74	LOAD_FAST(arg=1, lineno=103)
          76	LOAD_FAST(arg=2, lineno=103)
          78	BINARY_SUBSCR(arg=None, lineno=103)
          80	ROT_TWO(arg=None, lineno=103)
          82	LOAD_FAST(arg=1, lineno=103)
          84	LOAD_FAST(arg=2, lineno=103)
          86	STORE_SUBSCR(arg=None, lineno=103)
          88	LOAD_FAST(arg=1, lineno=103)
          90	LOAD_FAST(arg=4, lineno=103)
          92	STORE_SUBSCR(arg=None, lineno=103)
>         94	LOAD_DEREF(arg=1, lineno=104)
          96	LOAD_DEREF(arg=0, lineno=104)
          98	LOAD_FAST(arg=0, lineno=104)
         100	LOAD_FAST(arg=1, lineno=104)
         102	LOAD_FAST(arg=3, lineno=104)
         104	BINARY_SUBSCR(arg=None, lineno=104)
         106	CALL_FUNCTION(arg=2, lineno=104)
         108	LOAD_DEREF(arg=0, lineno=104)
         110	LOAD_FAST(arg=0, lineno=104)
         112	LOAD_FAST(arg=1, lineno=104)
         114	LOAD_FAST(arg=4, lineno=104)
         116	BINARY_SUBSCR(arg=None, lineno=104)
         118	CALL_FUNCTION(arg=2, lineno=104)
         120	CALL_FUNCTION(arg=2, lineno=104)
         122	POP_JUMP_IF_FALSE(arg=76, lineno=104)
         124	LOAD_FAST(arg=1, lineno=105)
         126	LOAD_FAST(arg=4, lineno=105)
         128	BINARY_SUBSCR(arg=None, lineno=105)
         130	LOAD_FAST(arg=1, lineno=105)
         132	LOAD_FAST(arg=3, lineno=105)
         134	BINARY_SUBSCR(arg=None, lineno=105)
         136	ROT_TWO(arg=None, lineno=105)
         138	LOAD_FAST(arg=1, lineno=105)
         140	LOAD_FAST(arg=3, lineno=105)
         142	STORE_SUBSCR(arg=None, lineno=105)
         144	LOAD_FAST(arg=1, lineno=105)
         146	LOAD_FAST(arg=4, lineno=105)
         148	STORE_SUBSCR(arg=None, lineno=105)
>        150	LOAD_DEREF(arg=1, lineno=106)
         152	LOAD_DEREF(arg=0, lineno=106)
         154	LOAD_FAST(arg=0, lineno=106)
         156	LOAD_FAST(arg=1, lineno=106)
         158	LOAD_FAST(arg=4, lineno=106)
         160	BINARY_SUBSCR(arg=None, lineno=106)
         162	CALL_FUNCTION(arg=2, lineno=106)
         164	LOAD_DEREF(arg=0, lineno=106)
         166	LOAD_FAST(arg=0, lineno=106)
         168	LOAD_FAST(arg=1, lineno=106)
         170	LOAD_FAST(arg=2, lineno=106)
         172	BINARY_SUBSCR(arg=None, lineno=106)
         174	CALL_FUNCTION(arg=2, lineno=106)
         176	CALL_FUNCTION(arg=2, lineno=106)
         178	POP_JUMP_IF_FALSE(arg=104, lineno=106)
         180	LOAD_FAST(arg=1, lineno=107)
         182	LOAD_FAST(arg=4, lineno=107)
         184	BINARY_SUBSCR(arg=None, lineno=107)
         186	LOAD_FAST(arg=1, lineno=107)
         188	LOAD_FAST(arg=2, lineno=107)
         190	BINARY_SUBSCR(arg=None, lineno=107)
         192	ROT_TWO(arg=None, lineno=107)
         194	LOAD_FAST(arg=1, lineno=107)
         196	LOAD_FAST(arg=2, lineno=107)
         198	STORE_SUBSCR(arg=None, lineno=107)
         200	LOAD_FAST(arg=1, lineno=107)
         202	LOAD_FAST(arg=4, lineno=107)
         204	STORE_SUBSCR(arg=None, lineno=107)
>        206	LOAD_DEREF(arg=0, lineno=108)
         208	LOAD_FAST(arg=0, lineno=108)
         210	LOAD_FAST(arg=1, lineno=108)
         212	LOAD_FAST(arg=4, lineno=108)
         214	BINARY_SUBSCR(arg=None, lineno=108)
         216	CALL_FUNCTION(arg=2, lineno=108)
         218	STORE_FAST(arg=5, lineno=108)
         220	LOAD_FAST(arg=1, lineno=111)
         222	LOAD_FAST(arg=4, lineno=111)
         224	BINARY_SUBSCR(arg=None, lineno=111)
         226	LOAD_FAST(arg=1, lineno=111)
         228	LOAD_FAST(arg=3, lineno=111)
         230	BINARY_SUBSCR(arg=None, lineno=111)
         232	ROT_TWO(arg=None, lineno=111)
         234	LOAD_FAST(arg=1, lineno=111)
         236	LOAD_FAST(arg=3, lineno=111)
         238	STORE_SUBSCR(arg=None, lineno=111)
         240	LOAD_FAST(arg=1, lineno=111)
         242	LOAD_FAST(arg=4, lineno=111)
         244	STORE_SUBSCR(arg=None, lineno=111)
         246	LOAD_FAST(arg=2, lineno=112)
         248	STORE_FAST(arg=6, lineno=112)
         250	LOAD_FAST(arg=3, lineno=113)
         252	LOAD_CONST(arg=2, lineno=113)
         254	BINARY_SUBTRACT(arg=None, lineno=113)
         256	STORE_FAST(arg=7, lineno=113)
         258	NOP(arg=None, lineno=114)
>        260	LOAD_FAST(arg=6, lineno=115)
         262	LOAD_FAST(arg=3, lineno=115)
         264	COMPARE_OP(arg=0, lineno=115)
         266	POP_JUMP_IF_FALSE(arg=163, lineno=115)
         268	LOAD_DEREF(arg=1, lineno=115)
         270	LOAD_DEREF(arg=0, lineno=115)
         272	LOAD_FAST(arg=0, lineno=115)
         274	LOAD_FAST(arg=1, lineno=115)
         276	LOAD_FAST(arg=6, lineno=115)
         278	BINARY_SUBSCR(arg=None, lineno=115)
         280	CALL_FUNCTION(arg=2, lineno=115)
         282	LOAD_FAST(arg=5, lineno=115)
         284	CALL_FUNCTION(arg=2, lineno=115)
         286	POP_JUMP_IF_FALSE(arg=163, lineno=115)
>        288	LOAD_FAST(arg=6, lineno=116)
         290	LOAD_CONST(arg=2, lineno=116)
         292	INPLACE_ADD(arg=None, lineno=116)
         294	STORE_FAST(arg=6, lineno=116)
         296	LOAD_FAST(arg=6, lineno=115)
         298	LOAD_FAST(arg=3, lineno=115)
         300	COMPARE_OP(arg=0, lineno=115)
         302	POP_JUMP_IF_FALSE(arg=163, lineno=115)
         304	LOAD_DEREF(arg=1, lineno=115)
         306	LOAD_DEREF(arg=0, lineno=115)
         308	LOAD_FAST(arg=0, lineno=115)
         310	LOAD_FAST(arg=1, lineno=115)
         312	LOAD_FAST(arg=6, lineno=115)
         314	BINARY_SUBSCR(arg=None, lineno=115)
         316	CALL_FUNCTION(arg=2, lineno=115)
         318	LOAD_FAST(arg=5, lineno=115)
         320	CALL_FUNCTION(arg=2, lineno=115)
         322	POP_JUMP_IF_TRUE(arg=145, lineno=115)
>        324	LOAD_FAST(arg=7, lineno=117)
         326	LOAD_FAST(arg=2, lineno=117)
         328	COMPARE_OP(arg=5, lineno=117)
         330	POP_JUMP_IF_FALSE(arg=195, lineno=117)
         332	LOAD_DEREF(arg=1, lineno=117)
         334	LOAD_FAST(arg=5, lineno=117)
         336	LOAD_DEREF(arg=0, lineno=117)
         338	LOAD_FAST(arg=0, lineno=117)
         340	LOAD_FAST(arg=1, lineno=117)
         342	LOAD_FAST(arg=7, lineno=117)
         344	BINARY_SUBSCR(arg=None, lineno=117)
         346	CALL_FUNCTION(arg=2, lineno=117)
         348	CALL_FUNCTION(arg=2, lineno=117)
         350	POP_JUMP_IF_FALSE(arg=195, lineno=117)
>        352	LOAD_FAST(arg=7, lineno=118)
         354	LOAD_CONST(arg=2, lineno=118)
         356	INPLACE_SUBTRACT(arg=None, lineno=118)
         358	STORE_FAST(arg=7, lineno=118)
         360	LOAD_FAST(arg=7, lineno=117)
         362	LOAD_FAST(arg=2, lineno=117)
         364	COMPARE_OP(arg=5, lineno=117)
         366	POP_JUMP_IF_FALSE(arg=195, lineno=117)
         368	LOAD_DEREF(arg=1, lineno=117)
         370	LOAD_FAST(arg=5, lineno=117)
         372	LOAD_DEREF(arg=0, lineno=117)
         374	LOAD_FAST(arg=0, lineno=117)
         376	LOAD_FAST(arg=1, lineno=117)
         378	LOAD_FAST(arg=7, lineno=117)
         380	BINARY_SUBSCR(arg=None, lineno=117)
         382	CALL_FUNCTION(arg=2, lineno=117)
         384	CALL_FUNCTION(arg=2, lineno=117)
         386	POP_JUMP_IF_TRUE(arg=177, lineno=117)
>        388	LOAD_FAST(arg=6, lineno=119)
         390	LOAD_FAST(arg=7, lineno=119)
         392	COMPARE_OP(arg=5, lineno=119)
         394	POP_JUMP_IF_FALSE(arg=200, lineno=119)
         396	JUMP_FORWARD(arg=22, lineno=120)
>        398	LOAD_FAST(arg=1, lineno=121)
         400	LOAD_FAST(arg=7, lineno=121)
         402	BINARY_SUBSCR(arg=None, lineno=121)
         404	LOAD_FAST(arg=1, lineno=121)
         406	LOAD_FAST(arg=6, lineno=121)
         408	BINARY_SUBSCR(arg=None, lineno=121)
         410	ROT_TWO(arg=None, lineno=121)
         412	LOAD_FAST(arg=1, lineno=121)
         414	LOAD_FAST(arg=6, lineno=121)
         416	STORE_SUBSCR(arg=None, lineno=121)
         418	LOAD_FAST(arg=1, lineno=121)
         420	LOAD_FAST(arg=7, lineno=121)
         422	STORE_SUBSCR(arg=None, lineno=121)
         424	LOAD_FAST(arg=6, lineno=122)
         426	LOAD_CONST(arg=2, lineno=122)
         428	INPLACE_ADD(arg=None, lineno=122)
         430	STORE_FAST(arg=6, lineno=122)
         432	LOAD_FAST(arg=7, lineno=123)
         434	LOAD_CONST(arg=2, lineno=123)
         436	INPLACE_SUBTRACT(arg=None, lineno=123)
         438	STORE_FAST(arg=7, lineno=123)
         440	JUMP_ABSOLUTE(arg=131, lineno=114)
>        442	LOAD_FAST(arg=1, lineno=126)
         444	LOAD_FAST(arg=3, lineno=126)
         446	BINARY_SUBSCR(arg=None, lineno=126)
         448	LOAD_FAST(arg=1, lineno=126)
         450	LOAD_FAST(arg=6, lineno=126)
         452	BINARY_SUBSCR(arg=None, lineno=126)
         454	ROT_TWO(arg=None, lineno=126)
         456	LOAD_FAST(arg=1, lineno=126)
         458	LOAD_FAST(arg=6, lineno=126)
         460	STORE_SUBSCR(arg=None, lineno=126)
         462	LOAD_FAST(arg=1, lineno=126)
         464	LOAD_FAST(arg=3, lineno=126)
         466	STORE_SUBSCR(arg=None, lineno=126)
         468	LOAD_FAST(arg=6, lineno=127)
         470	RETURN_VALUE(arg=None, lineno=127)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=86)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=2, lineno=92)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=92)
DEBUG:numba.core.byteflow:stack ['$low2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=COMPARE_OP(arg=5, lineno=92)
DEBUG:numba.core.byteflow:stack ['$low2.0', '$const4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=POP_JUMP_IF_TRUE(arg=8, lineno=92)
DEBUG:numba.core.byteflow:stack ['$6compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=10, stack=(), blockstack=(), npush=0), Edge(pc=14, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=10 nstack_initial=0), State(pc_initial=14 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=10 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_ASSERTION_ERROR(arg=None, lineno=92)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RAISE_VARARGS(arg=1, lineno=92)
DEBUG:numba.core.byteflow:stack ['$assertion_error10.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=14 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=14 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=93)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=93)
DEBUG:numba.core.byteflow:stack ['$high14.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=COMPARE_OP(arg=4, lineno=93)
DEBUG:numba.core.byteflow:stack ['$high14.0', '$low16.1']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=POP_JUMP_IF_TRUE(arg=14, lineno=93)
DEBUG:numba.core.byteflow:stack ['$18compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=22, stack=(), blockstack=(), npush=0), Edge(pc=26, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=22 nstack_initial=0), State(pc_initial=26 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=22 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_ASSERTION_ERROR(arg=None, lineno=93)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=24, inst=RAISE_VARARGS(arg=1, lineno=93)
DEBUG:numba.core.byteflow:stack ['$assertion_error22.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=26 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=95)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=3, lineno=95)
DEBUG:numba.core.byteflow:stack ['$low26.0']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=BINARY_ADD(arg=None, lineno=95)
DEBUG:numba.core.byteflow:stack ['$low26.0', '$high28.1']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_CONST(arg=2, lineno=95)
DEBUG:numba.core.byteflow:stack ['$30binary_add.2']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=BINARY_RSHIFT(arg=None, lineno=95)
DEBUG:numba.core.byteflow:stack ['$30binary_add.2', '$const32.3']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=STORE_FAST(arg=4, lineno=95)
DEBUG:numba.core.byteflow:stack ['$34binary_rshift.4']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_DEREF(arg=1, lineno=102)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_DEREF(arg=0, lineno=102)
DEBUG:numba.core.byteflow:stack ['$38load_deref.5']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=102)
DEBUG:numba.core.byteflow:stack ['$38load_deref.5', '$40load_deref.6']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=1, lineno=102)
DEBUG:numba.core.byteflow:stack ['$38load_deref.5', '$40load_deref.6', '$A42.7']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=4, lineno=102)
DEBUG:numba.core.byteflow:stack ['$38load_deref.5', '$40load_deref.6', '$A42.7', '$R44.8']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=BINARY_SUBSCR(arg=None, lineno=102)
DEBUG:numba.core.byteflow:stack ['$38load_deref.5', '$40load_deref.6', '$A42.7', '$R44.8', '$mid46.9']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=CALL_FUNCTION(arg=2, lineno=102)
DEBUG:numba.core.byteflow:stack ['$38load_deref.5', '$40load_deref.6', '$A42.7', '$48binary_subscr.10']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_DEREF(arg=0, lineno=102)
DEBUG:numba.core.byteflow:stack ['$38load_deref.5', '$50call_function.11']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=102)
DEBUG:numba.core.byteflow:stack ['$38load_deref.5', '$50call_function.11', '$52load_deref.12']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=1, lineno=102)
DEBUG:numba.core.byteflow:stack ['$38load_deref.5', '$50call_function.11', '$52load_deref.12', '$A54.13']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=2, lineno=102)
DEBUG:numba.core.byteflow:stack ['$38load_deref.5', '$50call_function.11', '$52load_deref.12', '$A54.13', '$R56.14']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=BINARY_SUBSCR(arg=None, lineno=102)
DEBUG:numba.core.byteflow:stack ['$38load_deref.5', '$50call_function.11', '$52load_deref.12', '$A54.13', '$R56.14', '$low58.15']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=CALL_FUNCTION(arg=2, lineno=102)
DEBUG:numba.core.byteflow:stack ['$38load_deref.5', '$50call_function.11', '$52load_deref.12', '$A54.13', '$60binary_subscr.16']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=CALL_FUNCTION(arg=2, lineno=102)
DEBUG:numba.core.byteflow:stack ['$38load_deref.5', '$50call_function.11', '$62call_function.17']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=48, lineno=102)
DEBUG:numba.core.byteflow:stack ['$64call_function.18']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=94, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=94 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=68 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=1, lineno=103)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=4, lineno=103)
DEBUG:numba.core.byteflow:stack ['$R68.0']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=103)
DEBUG:numba.core.byteflow:stack ['$R68.0', '$mid70.1']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=103)
DEBUG:numba.core.byteflow:stack ['$72binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=2, lineno=103)
DEBUG:numba.core.byteflow:stack ['$72binary_subscr.2', '$R74.3']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=BINARY_SUBSCR(arg=None, lineno=103)
DEBUG:numba.core.byteflow:stack ['$72binary_subscr.2', '$R74.3', '$low76.4']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=ROT_TWO(arg=None, lineno=103)
DEBUG:numba.core.byteflow:stack ['$72binary_subscr.2', '$78binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_FAST(arg=1, lineno=103)
DEBUG:numba.core.byteflow:stack ['$78binary_subscr.5', '$72binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_FAST(arg=2, lineno=103)
DEBUG:numba.core.byteflow:stack ['$78binary_subscr.5', '$72binary_subscr.2', '$R82.6']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=STORE_SUBSCR(arg=None, lineno=103)
DEBUG:numba.core.byteflow:stack ['$78binary_subscr.5', '$72binary_subscr.2', '$R82.6', '$low84.7']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_FAST(arg=1, lineno=103)
DEBUG:numba.core.byteflow:stack ['$78binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=4, lineno=103)
DEBUG:numba.core.byteflow:stack ['$78binary_subscr.5', '$R88.8']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=STORE_SUBSCR(arg=None, lineno=103)
DEBUG:numba.core.byteflow:stack ['$78binary_subscr.5', '$R88.8', '$mid90.9']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=94, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=94 nstack_initial=0), State(pc_initial=94 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=94 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_DEREF(arg=1, lineno=104)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_DEREF(arg=0, lineno=104)
DEBUG:numba.core.byteflow:stack ['$94load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=104)
DEBUG:numba.core.byteflow:stack ['$94load_deref.0', '$96load_deref.1']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_FAST(arg=1, lineno=104)
DEBUG:numba.core.byteflow:stack ['$94load_deref.0', '$96load_deref.1', '$A98.2']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=3, lineno=104)
DEBUG:numba.core.byteflow:stack ['$94load_deref.0', '$96load_deref.1', '$A98.2', '$R100.3']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=BINARY_SUBSCR(arg=None, lineno=104)
DEBUG:numba.core.byteflow:stack ['$94load_deref.0', '$96load_deref.1', '$A98.2', '$R100.3', '$high102.4']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=CALL_FUNCTION(arg=2, lineno=104)
DEBUG:numba.core.byteflow:stack ['$94load_deref.0', '$96load_deref.1', '$A98.2', '$104binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_DEREF(arg=0, lineno=104)
DEBUG:numba.core.byteflow:stack ['$94load_deref.0', '$106call_function.6']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=0, lineno=104)
DEBUG:numba.core.byteflow:stack ['$94load_deref.0', '$106call_function.6', '$108load_deref.7']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_FAST(arg=1, lineno=104)
DEBUG:numba.core.byteflow:stack ['$94load_deref.0', '$106call_function.6', '$108load_deref.7', '$A110.8']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=104)
DEBUG:numba.core.byteflow:stack ['$94load_deref.0', '$106call_function.6', '$108load_deref.7', '$A110.8', '$R112.9']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BINARY_SUBSCR(arg=None, lineno=104)
DEBUG:numba.core.byteflow:stack ['$94load_deref.0', '$106call_function.6', '$108load_deref.7', '$A110.8', '$R112.9', '$mid114.10']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=CALL_FUNCTION(arg=2, lineno=104)
DEBUG:numba.core.byteflow:stack ['$94load_deref.0', '$106call_function.6', '$108load_deref.7', '$A110.8', '$116binary_subscr.11']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=CALL_FUNCTION(arg=2, lineno=104)
DEBUG:numba.core.byteflow:stack ['$94load_deref.0', '$106call_function.6', '$118call_function.12']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=POP_JUMP_IF_FALSE(arg=76, lineno=104)
DEBUG:numba.core.byteflow:stack ['$120call_function.13']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=124, stack=(), blockstack=(), npush=0), Edge(pc=150, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=94 nstack_initial=0), State(pc_initial=124 nstack_initial=0), State(pc_initial=150 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=124 nstack_initial=0), State(pc_initial=150 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=124 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=105)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=4, lineno=105)
DEBUG:numba.core.byteflow:stack ['$R124.0']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=BINARY_SUBSCR(arg=None, lineno=105)
DEBUG:numba.core.byteflow:stack ['$R124.0', '$mid126.1']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_FAST(arg=1, lineno=105)
DEBUG:numba.core.byteflow:stack ['$128binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=LOAD_FAST(arg=3, lineno=105)
DEBUG:numba.core.byteflow:stack ['$128binary_subscr.2', '$R130.3']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=105)
DEBUG:numba.core.byteflow:stack ['$128binary_subscr.2', '$R130.3', '$high132.4']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=ROT_TWO(arg=None, lineno=105)
DEBUG:numba.core.byteflow:stack ['$128binary_subscr.2', '$134binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_FAST(arg=1, lineno=105)
DEBUG:numba.core.byteflow:stack ['$134binary_subscr.5', '$128binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=3, lineno=105)
DEBUG:numba.core.byteflow:stack ['$134binary_subscr.5', '$128binary_subscr.2', '$R138.6']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=STORE_SUBSCR(arg=None, lineno=105)
DEBUG:numba.core.byteflow:stack ['$134binary_subscr.5', '$128binary_subscr.2', '$R138.6', '$high140.7']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=LOAD_FAST(arg=1, lineno=105)
DEBUG:numba.core.byteflow:stack ['$134binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_FAST(arg=4, lineno=105)
DEBUG:numba.core.byteflow:stack ['$134binary_subscr.5', '$R144.8']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=STORE_SUBSCR(arg=None, lineno=105)
DEBUG:numba.core.byteflow:stack ['$134binary_subscr.5', '$R144.8', '$mid146.9']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=150, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=150 nstack_initial=0), State(pc_initial=150 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=150 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_DEREF(arg=1, lineno=106)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_DEREF(arg=0, lineno=106)
DEBUG:numba.core.byteflow:stack ['$150load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=0, lineno=106)
DEBUG:numba.core.byteflow:stack ['$150load_deref.0', '$152load_deref.1']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=1, lineno=106)
DEBUG:numba.core.byteflow:stack ['$150load_deref.0', '$152load_deref.1', '$A154.2']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=LOAD_FAST(arg=4, lineno=106)
DEBUG:numba.core.byteflow:stack ['$150load_deref.0', '$152load_deref.1', '$A154.2', '$R156.3']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=106)
DEBUG:numba.core.byteflow:stack ['$150load_deref.0', '$152load_deref.1', '$A154.2', '$R156.3', '$mid158.4']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=CALL_FUNCTION(arg=2, lineno=106)
DEBUG:numba.core.byteflow:stack ['$150load_deref.0', '$152load_deref.1', '$A154.2', '$160binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=LOAD_DEREF(arg=0, lineno=106)
DEBUG:numba.core.byteflow:stack ['$150load_deref.0', '$162call_function.6']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_FAST(arg=0, lineno=106)
DEBUG:numba.core.byteflow:stack ['$150load_deref.0', '$162call_function.6', '$164load_deref.7']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_FAST(arg=1, lineno=106)
DEBUG:numba.core.byteflow:stack ['$150load_deref.0', '$162call_function.6', '$164load_deref.7', '$A166.8']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=106)
DEBUG:numba.core.byteflow:stack ['$150load_deref.0', '$162call_function.6', '$164load_deref.7', '$A166.8', '$R168.9']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=BINARY_SUBSCR(arg=None, lineno=106)
DEBUG:numba.core.byteflow:stack ['$150load_deref.0', '$162call_function.6', '$164load_deref.7', '$A166.8', '$R168.9', '$low170.10']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=CALL_FUNCTION(arg=2, lineno=106)
DEBUG:numba.core.byteflow:stack ['$150load_deref.0', '$162call_function.6', '$164load_deref.7', '$A166.8', '$172binary_subscr.11']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=CALL_FUNCTION(arg=2, lineno=106)
DEBUG:numba.core.byteflow:stack ['$150load_deref.0', '$162call_function.6', '$174call_function.12']
DEBUG:numba.core.byteflow:dispatch pc=178, inst=POP_JUMP_IF_FALSE(arg=104, lineno=106)
DEBUG:numba.core.byteflow:stack ['$176call_function.13']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=180, stack=(), blockstack=(), npush=0), Edge(pc=206, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=150 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=206 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=206 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=180 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_FAST(arg=1, lineno=107)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=182, inst=LOAD_FAST(arg=4, lineno=107)
DEBUG:numba.core.byteflow:stack ['$R180.0']
DEBUG:numba.core.byteflow:dispatch pc=184, inst=BINARY_SUBSCR(arg=None, lineno=107)
DEBUG:numba.core.byteflow:stack ['$R180.0', '$mid182.1']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=LOAD_FAST(arg=1, lineno=107)
DEBUG:numba.core.byteflow:stack ['$184binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=107)
DEBUG:numba.core.byteflow:stack ['$184binary_subscr.2', '$R186.3']
DEBUG:numba.core.byteflow:dispatch pc=190, inst=BINARY_SUBSCR(arg=None, lineno=107)
DEBUG:numba.core.byteflow:stack ['$184binary_subscr.2', '$R186.3', '$low188.4']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=ROT_TWO(arg=None, lineno=107)
DEBUG:numba.core.byteflow:stack ['$184binary_subscr.2', '$190binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=107)
DEBUG:numba.core.byteflow:stack ['$190binary_subscr.5', '$184binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=LOAD_FAST(arg=2, lineno=107)
DEBUG:numba.core.byteflow:stack ['$190binary_subscr.5', '$184binary_subscr.2', '$R194.6']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=STORE_SUBSCR(arg=None, lineno=107)
DEBUG:numba.core.byteflow:stack ['$190binary_subscr.5', '$184binary_subscr.2', '$R194.6', '$low196.7']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=LOAD_FAST(arg=1, lineno=107)
DEBUG:numba.core.byteflow:stack ['$190binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=LOAD_FAST(arg=4, lineno=107)
DEBUG:numba.core.byteflow:stack ['$190binary_subscr.5', '$R200.8']
DEBUG:numba.core.byteflow:dispatch pc=204, inst=STORE_SUBSCR(arg=None, lineno=107)
DEBUG:numba.core.byteflow:stack ['$190binary_subscr.5', '$R200.8', '$mid202.9']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=206, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=206 nstack_initial=0), State(pc_initial=206 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=206 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=206, inst=LOAD_DEREF(arg=0, lineno=108)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=108)
DEBUG:numba.core.byteflow:stack ['$206load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=LOAD_FAST(arg=1, lineno=108)
DEBUG:numba.core.byteflow:stack ['$206load_deref.0', '$A208.1']
DEBUG:numba.core.byteflow:dispatch pc=212, inst=LOAD_FAST(arg=4, lineno=108)
DEBUG:numba.core.byteflow:stack ['$206load_deref.0', '$A208.1', '$R210.2']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=BINARY_SUBSCR(arg=None, lineno=108)
DEBUG:numba.core.byteflow:stack ['$206load_deref.0', '$A208.1', '$R210.2', '$mid212.3']
DEBUG:numba.core.byteflow:dispatch pc=216, inst=CALL_FUNCTION(arg=2, lineno=108)
DEBUG:numba.core.byteflow:stack ['$206load_deref.0', '$A208.1', '$214binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=STORE_FAST(arg=5, lineno=108)
DEBUG:numba.core.byteflow:stack ['$216call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=1, lineno=111)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=222, inst=LOAD_FAST(arg=4, lineno=111)
DEBUG:numba.core.byteflow:stack ['$R220.6']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=BINARY_SUBSCR(arg=None, lineno=111)
DEBUG:numba.core.byteflow:stack ['$R220.6', '$mid222.7']
DEBUG:numba.core.byteflow:dispatch pc=226, inst=LOAD_FAST(arg=1, lineno=111)
DEBUG:numba.core.byteflow:stack ['$224binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=LOAD_FAST(arg=3, lineno=111)
DEBUG:numba.core.byteflow:stack ['$224binary_subscr.8', '$R226.9']
DEBUG:numba.core.byteflow:dispatch pc=230, inst=BINARY_SUBSCR(arg=None, lineno=111)
DEBUG:numba.core.byteflow:stack ['$224binary_subscr.8', '$R226.9', '$high228.10']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=ROT_TWO(arg=None, lineno=111)
DEBUG:numba.core.byteflow:stack ['$224binary_subscr.8', '$230binary_subscr.11']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=LOAD_FAST(arg=1, lineno=111)
DEBUG:numba.core.byteflow:stack ['$230binary_subscr.11', '$224binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=LOAD_FAST(arg=3, lineno=111)
DEBUG:numba.core.byteflow:stack ['$230binary_subscr.11', '$224binary_subscr.8', '$R234.12']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=STORE_SUBSCR(arg=None, lineno=111)
DEBUG:numba.core.byteflow:stack ['$230binary_subscr.11', '$224binary_subscr.8', '$R234.12', '$high236.13']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=LOAD_FAST(arg=1, lineno=111)
DEBUG:numba.core.byteflow:stack ['$230binary_subscr.11']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=LOAD_FAST(arg=4, lineno=111)
DEBUG:numba.core.byteflow:stack ['$230binary_subscr.11', '$R240.14']
DEBUG:numba.core.byteflow:dispatch pc=244, inst=STORE_SUBSCR(arg=None, lineno=111)
DEBUG:numba.core.byteflow:stack ['$230binary_subscr.11', '$R240.14', '$mid242.15']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=LOAD_FAST(arg=2, lineno=112)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=248, inst=STORE_FAST(arg=6, lineno=112)
DEBUG:numba.core.byteflow:stack ['$low246.16']
DEBUG:numba.core.byteflow:dispatch pc=250, inst=LOAD_FAST(arg=3, lineno=113)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=252, inst=LOAD_CONST(arg=2, lineno=113)
DEBUG:numba.core.byteflow:stack ['$high250.17']
DEBUG:numba.core.byteflow:dispatch pc=254, inst=BINARY_SUBTRACT(arg=None, lineno=113)
DEBUG:numba.core.byteflow:stack ['$high250.17', '$const252.18']
DEBUG:numba.core.byteflow:dispatch pc=256, inst=STORE_FAST(arg=7, lineno=113)
DEBUG:numba.core.byteflow:stack ['$254binary_subtract.19']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=NOP(arg=None, lineno=114)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=260, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=206 nstack_initial=0), State(pc_initial=260 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=260 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=260 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=260, inst=LOAD_FAST(arg=6, lineno=115)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=3, lineno=115)
DEBUG:numba.core.byteflow:stack ['$i260.0']
DEBUG:numba.core.byteflow:dispatch pc=264, inst=COMPARE_OP(arg=0, lineno=115)
DEBUG:numba.core.byteflow:stack ['$i260.0', '$high262.1']
DEBUG:numba.core.byteflow:dispatch pc=266, inst=POP_JUMP_IF_FALSE(arg=163, lineno=115)
DEBUG:numba.core.byteflow:stack ['$264compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=268, stack=(), blockstack=(), npush=0), Edge(pc=324, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=268 nstack_initial=0), State(pc_initial=324 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=268 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=268, inst=LOAD_DEREF(arg=1, lineno=115)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=270, inst=LOAD_DEREF(arg=0, lineno=115)
DEBUG:numba.core.byteflow:stack ['$268load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=LOAD_FAST(arg=0, lineno=115)
DEBUG:numba.core.byteflow:stack ['$268load_deref.0', '$270load_deref.1']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=LOAD_FAST(arg=1, lineno=115)
DEBUG:numba.core.byteflow:stack ['$268load_deref.0', '$270load_deref.1', '$A272.2']
DEBUG:numba.core.byteflow:dispatch pc=276, inst=LOAD_FAST(arg=6, lineno=115)
DEBUG:numba.core.byteflow:stack ['$268load_deref.0', '$270load_deref.1', '$A272.2', '$R274.3']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=BINARY_SUBSCR(arg=None, lineno=115)
DEBUG:numba.core.byteflow:stack ['$268load_deref.0', '$270load_deref.1', '$A272.2', '$R274.3', '$i276.4']
DEBUG:numba.core.byteflow:dispatch pc=280, inst=CALL_FUNCTION(arg=2, lineno=115)
DEBUG:numba.core.byteflow:stack ['$268load_deref.0', '$270load_deref.1', '$A272.2', '$278binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=LOAD_FAST(arg=5, lineno=115)
DEBUG:numba.core.byteflow:stack ['$268load_deref.0', '$280call_function.6']
DEBUG:numba.core.byteflow:dispatch pc=284, inst=CALL_FUNCTION(arg=2, lineno=115)
DEBUG:numba.core.byteflow:stack ['$268load_deref.0', '$280call_function.6', '$pivot282.7']
DEBUG:numba.core.byteflow:dispatch pc=286, inst=POP_JUMP_IF_FALSE(arg=163, lineno=115)
DEBUG:numba.core.byteflow:stack ['$284call_function.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=288, stack=(), blockstack=(), npush=0), Edge(pc=324, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=324 nstack_initial=0), State(pc_initial=288 nstack_initial=0), State(pc_initial=324 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=324 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=324, inst=LOAD_FAST(arg=7, lineno=117)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=326, inst=LOAD_FAST(arg=2, lineno=117)
DEBUG:numba.core.byteflow:stack ['$j324.0']
DEBUG:numba.core.byteflow:dispatch pc=328, inst=COMPARE_OP(arg=5, lineno=117)
DEBUG:numba.core.byteflow:stack ['$j324.0', '$low326.1']
DEBUG:numba.core.byteflow:dispatch pc=330, inst=POP_JUMP_IF_FALSE(arg=195, lineno=117)
DEBUG:numba.core.byteflow:stack ['$328compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=332, stack=(), blockstack=(), npush=0), Edge(pc=388, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=288 nstack_initial=0), State(pc_initial=324 nstack_initial=0), State(pc_initial=332 nstack_initial=0), State(pc_initial=388 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=288 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=288, inst=LOAD_FAST(arg=6, lineno=116)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=290, inst=LOAD_CONST(arg=2, lineno=116)
DEBUG:numba.core.byteflow:stack ['$i288.0']
DEBUG:numba.core.byteflow:dispatch pc=292, inst=INPLACE_ADD(arg=None, lineno=116)
DEBUG:numba.core.byteflow:stack ['$i288.0', '$const290.1']
DEBUG:numba.core.byteflow:dispatch pc=294, inst=STORE_FAST(arg=6, lineno=116)
DEBUG:numba.core.byteflow:stack ['$292inplace_add.2']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=LOAD_FAST(arg=6, lineno=115)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=298, inst=LOAD_FAST(arg=3, lineno=115)
DEBUG:numba.core.byteflow:stack ['$i296.3']
DEBUG:numba.core.byteflow:dispatch pc=300, inst=COMPARE_OP(arg=0, lineno=115)
DEBUG:numba.core.byteflow:stack ['$i296.3', '$high298.4']
DEBUG:numba.core.byteflow:dispatch pc=302, inst=POP_JUMP_IF_FALSE(arg=163, lineno=115)
DEBUG:numba.core.byteflow:stack ['$300compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=304, stack=(), blockstack=(), npush=0), Edge(pc=324, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=324 nstack_initial=0), State(pc_initial=332 nstack_initial=0), State(pc_initial=388 nstack_initial=0), State(pc_initial=304 nstack_initial=0), State(pc_initial=324 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=332 nstack_initial=0), State(pc_initial=388 nstack_initial=0), State(pc_initial=304 nstack_initial=0), State(pc_initial=324 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=332 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=332, inst=LOAD_DEREF(arg=1, lineno=117)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=334, inst=LOAD_FAST(arg=5, lineno=117)
DEBUG:numba.core.byteflow:stack ['$332load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=336, inst=LOAD_DEREF(arg=0, lineno=117)
DEBUG:numba.core.byteflow:stack ['$332load_deref.0', '$pivot334.1']
DEBUG:numba.core.byteflow:dispatch pc=338, inst=LOAD_FAST(arg=0, lineno=117)
DEBUG:numba.core.byteflow:stack ['$332load_deref.0', '$pivot334.1', '$336load_deref.2']
DEBUG:numba.core.byteflow:dispatch pc=340, inst=LOAD_FAST(arg=1, lineno=117)
DEBUG:numba.core.byteflow:stack ['$332load_deref.0', '$pivot334.1', '$336load_deref.2', '$A338.3']
DEBUG:numba.core.byteflow:dispatch pc=342, inst=LOAD_FAST(arg=7, lineno=117)
DEBUG:numba.core.byteflow:stack ['$332load_deref.0', '$pivot334.1', '$336load_deref.2', '$A338.3', '$R340.4']
DEBUG:numba.core.byteflow:dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=117)
DEBUG:numba.core.byteflow:stack ['$332load_deref.0', '$pivot334.1', '$336load_deref.2', '$A338.3', '$R340.4', '$j342.5']
DEBUG:numba.core.byteflow:dispatch pc=346, inst=CALL_FUNCTION(arg=2, lineno=117)
DEBUG:numba.core.byteflow:stack ['$332load_deref.0', '$pivot334.1', '$336load_deref.2', '$A338.3', '$344binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=348, inst=CALL_FUNCTION(arg=2, lineno=117)
DEBUG:numba.core.byteflow:stack ['$332load_deref.0', '$pivot334.1', '$346call_function.7']
DEBUG:numba.core.byteflow:dispatch pc=350, inst=POP_JUMP_IF_FALSE(arg=195, lineno=117)
DEBUG:numba.core.byteflow:stack ['$348call_function.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=352, stack=(), blockstack=(), npush=0), Edge(pc=388, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=388 nstack_initial=0), State(pc_initial=304 nstack_initial=0), State(pc_initial=324 nstack_initial=0), State(pc_initial=352 nstack_initial=0), State(pc_initial=388 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=388 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=388, inst=LOAD_FAST(arg=6, lineno=119)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=390, inst=LOAD_FAST(arg=7, lineno=119)
DEBUG:numba.core.byteflow:stack ['$i388.0']
DEBUG:numba.core.byteflow:dispatch pc=392, inst=COMPARE_OP(arg=5, lineno=119)
DEBUG:numba.core.byteflow:stack ['$i388.0', '$j390.1']
DEBUG:numba.core.byteflow:dispatch pc=394, inst=POP_JUMP_IF_FALSE(arg=200, lineno=119)
DEBUG:numba.core.byteflow:stack ['$392compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=396, stack=(), blockstack=(), npush=0), Edge(pc=398, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=304 nstack_initial=0), State(pc_initial=324 nstack_initial=0), State(pc_initial=352 nstack_initial=0), State(pc_initial=388 nstack_initial=0), State(pc_initial=396 nstack_initial=0), State(pc_initial=398 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=304 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=304, inst=LOAD_DEREF(arg=1, lineno=115)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=306, inst=LOAD_DEREF(arg=0, lineno=115)
DEBUG:numba.core.byteflow:stack ['$304load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=308, inst=LOAD_FAST(arg=0, lineno=115)
DEBUG:numba.core.byteflow:stack ['$304load_deref.0', '$306load_deref.1']
DEBUG:numba.core.byteflow:dispatch pc=310, inst=LOAD_FAST(arg=1, lineno=115)
DEBUG:numba.core.byteflow:stack ['$304load_deref.0', '$306load_deref.1', '$A308.2']
DEBUG:numba.core.byteflow:dispatch pc=312, inst=LOAD_FAST(arg=6, lineno=115)
DEBUG:numba.core.byteflow:stack ['$304load_deref.0', '$306load_deref.1', '$A308.2', '$R310.3']
DEBUG:numba.core.byteflow:dispatch pc=314, inst=BINARY_SUBSCR(arg=None, lineno=115)
DEBUG:numba.core.byteflow:stack ['$304load_deref.0', '$306load_deref.1', '$A308.2', '$R310.3', '$i312.4']
DEBUG:numba.core.byteflow:dispatch pc=316, inst=CALL_FUNCTION(arg=2, lineno=115)
DEBUG:numba.core.byteflow:stack ['$304load_deref.0', '$306load_deref.1', '$A308.2', '$314binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=318, inst=LOAD_FAST(arg=5, lineno=115)
DEBUG:numba.core.byteflow:stack ['$304load_deref.0', '$316call_function.6']
DEBUG:numba.core.byteflow:dispatch pc=320, inst=CALL_FUNCTION(arg=2, lineno=115)
DEBUG:numba.core.byteflow:stack ['$304load_deref.0', '$316call_function.6', '$pivot318.7']
DEBUG:numba.core.byteflow:dispatch pc=322, inst=POP_JUMP_IF_TRUE(arg=145, lineno=115)
DEBUG:numba.core.byteflow:stack ['$320call_function.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=324, stack=(), blockstack=(), npush=0), Edge(pc=288, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=324 nstack_initial=0), State(pc_initial=352 nstack_initial=0), State(pc_initial=388 nstack_initial=0), State(pc_initial=396 nstack_initial=0), State(pc_initial=398 nstack_initial=0), State(pc_initial=324 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=352 nstack_initial=0), State(pc_initial=388 nstack_initial=0), State(pc_initial=396 nstack_initial=0), State(pc_initial=398 nstack_initial=0), State(pc_initial=324 nstack_initial=0), State(pc_initial=288 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=352 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=352, inst=LOAD_FAST(arg=7, lineno=118)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=354, inst=LOAD_CONST(arg=2, lineno=118)
DEBUG:numba.core.byteflow:stack ['$j352.0']
DEBUG:numba.core.byteflow:dispatch pc=356, inst=INPLACE_SUBTRACT(arg=None, lineno=118)
DEBUG:numba.core.byteflow:stack ['$j352.0', '$const354.1']
DEBUG:numba.core.byteflow:dispatch pc=358, inst=STORE_FAST(arg=7, lineno=118)
DEBUG:numba.core.byteflow:stack ['$356inplace_subtract.2']
DEBUG:numba.core.byteflow:dispatch pc=360, inst=LOAD_FAST(arg=7, lineno=117)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=362, inst=LOAD_FAST(arg=2, lineno=117)
DEBUG:numba.core.byteflow:stack ['$j360.3']
DEBUG:numba.core.byteflow:dispatch pc=364, inst=COMPARE_OP(arg=5, lineno=117)
DEBUG:numba.core.byteflow:stack ['$j360.3', '$low362.4']
DEBUG:numba.core.byteflow:dispatch pc=366, inst=POP_JUMP_IF_FALSE(arg=195, lineno=117)
DEBUG:numba.core.byteflow:stack ['$364compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=368, stack=(), blockstack=(), npush=0), Edge(pc=388, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=388 nstack_initial=0), State(pc_initial=396 nstack_initial=0), State(pc_initial=398 nstack_initial=0), State(pc_initial=324 nstack_initial=0), State(pc_initial=288 nstack_initial=0), State(pc_initial=368 nstack_initial=0), State(pc_initial=388 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=396 nstack_initial=0), State(pc_initial=398 nstack_initial=0), State(pc_initial=324 nstack_initial=0), State(pc_initial=288 nstack_initial=0), State(pc_initial=368 nstack_initial=0), State(pc_initial=388 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=396 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=396, inst=JUMP_FORWARD(arg=22, lineno=120)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=442, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=398 nstack_initial=0), State(pc_initial=324 nstack_initial=0), State(pc_initial=288 nstack_initial=0), State(pc_initial=368 nstack_initial=0), State(pc_initial=388 nstack_initial=0), State(pc_initial=442 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=398 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=398, inst=LOAD_FAST(arg=1, lineno=121)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=400, inst=LOAD_FAST(arg=7, lineno=121)
DEBUG:numba.core.byteflow:stack ['$R398.0']
DEBUG:numba.core.byteflow:dispatch pc=402, inst=BINARY_SUBSCR(arg=None, lineno=121)
DEBUG:numba.core.byteflow:stack ['$R398.0', '$j400.1']
DEBUG:numba.core.byteflow:dispatch pc=404, inst=LOAD_FAST(arg=1, lineno=121)
DEBUG:numba.core.byteflow:stack ['$402binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=406, inst=LOAD_FAST(arg=6, lineno=121)
DEBUG:numba.core.byteflow:stack ['$402binary_subscr.2', '$R404.3']
DEBUG:numba.core.byteflow:dispatch pc=408, inst=BINARY_SUBSCR(arg=None, lineno=121)
DEBUG:numba.core.byteflow:stack ['$402binary_subscr.2', '$R404.3', '$i406.4']
DEBUG:numba.core.byteflow:dispatch pc=410, inst=ROT_TWO(arg=None, lineno=121)
DEBUG:numba.core.byteflow:stack ['$402binary_subscr.2', '$408binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=412, inst=LOAD_FAST(arg=1, lineno=121)
DEBUG:numba.core.byteflow:stack ['$408binary_subscr.5', '$402binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=414, inst=LOAD_FAST(arg=6, lineno=121)
DEBUG:numba.core.byteflow:stack ['$408binary_subscr.5', '$402binary_subscr.2', '$R412.6']
DEBUG:numba.core.byteflow:dispatch pc=416, inst=STORE_SUBSCR(arg=None, lineno=121)
DEBUG:numba.core.byteflow:stack ['$408binary_subscr.5', '$402binary_subscr.2', '$R412.6', '$i414.7']
DEBUG:numba.core.byteflow:dispatch pc=418, inst=LOAD_FAST(arg=1, lineno=121)
DEBUG:numba.core.byteflow:stack ['$408binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=420, inst=LOAD_FAST(arg=7, lineno=121)
DEBUG:numba.core.byteflow:stack ['$408binary_subscr.5', '$R418.8']
DEBUG:numba.core.byteflow:dispatch pc=422, inst=STORE_SUBSCR(arg=None, lineno=121)
DEBUG:numba.core.byteflow:stack ['$408binary_subscr.5', '$R418.8', '$j420.9']
DEBUG:numba.core.byteflow:dispatch pc=424, inst=LOAD_FAST(arg=6, lineno=122)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=426, inst=LOAD_CONST(arg=2, lineno=122)
DEBUG:numba.core.byteflow:stack ['$i424.10']
DEBUG:numba.core.byteflow:dispatch pc=428, inst=INPLACE_ADD(arg=None, lineno=122)
DEBUG:numba.core.byteflow:stack ['$i424.10', '$const426.11']
DEBUG:numba.core.byteflow:dispatch pc=430, inst=STORE_FAST(arg=6, lineno=122)
DEBUG:numba.core.byteflow:stack ['$428inplace_add.12']
DEBUG:numba.core.byteflow:dispatch pc=432, inst=LOAD_FAST(arg=7, lineno=123)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=434, inst=LOAD_CONST(arg=2, lineno=123)
DEBUG:numba.core.byteflow:stack ['$j432.13']
DEBUG:numba.core.byteflow:dispatch pc=436, inst=INPLACE_SUBTRACT(arg=None, lineno=123)
DEBUG:numba.core.byteflow:stack ['$j432.13', '$const434.14']
DEBUG:numba.core.byteflow:dispatch pc=438, inst=STORE_FAST(arg=7, lineno=123)
DEBUG:numba.core.byteflow:stack ['$436inplace_subtract.15']
DEBUG:numba.core.byteflow:dispatch pc=440, inst=JUMP_ABSOLUTE(arg=131, lineno=114)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=260, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=324 nstack_initial=0), State(pc_initial=288 nstack_initial=0), State(pc_initial=368 nstack_initial=0), State(pc_initial=388 nstack_initial=0), State(pc_initial=442 nstack_initial=0), State(pc_initial=260 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=288 nstack_initial=0), State(pc_initial=368 nstack_initial=0), State(pc_initial=388 nstack_initial=0), State(pc_initial=442 nstack_initial=0), State(pc_initial=260 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=368 nstack_initial=0), State(pc_initial=388 nstack_initial=0), State(pc_initial=442 nstack_initial=0), State(pc_initial=260 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=368 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=368, inst=LOAD_DEREF(arg=1, lineno=117)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=370, inst=LOAD_FAST(arg=5, lineno=117)
DEBUG:numba.core.byteflow:stack ['$368load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=372, inst=LOAD_DEREF(arg=0, lineno=117)
DEBUG:numba.core.byteflow:stack ['$368load_deref.0', '$pivot370.1']
DEBUG:numba.core.byteflow:dispatch pc=374, inst=LOAD_FAST(arg=0, lineno=117)
DEBUG:numba.core.byteflow:stack ['$368load_deref.0', '$pivot370.1', '$372load_deref.2']
DEBUG:numba.core.byteflow:dispatch pc=376, inst=LOAD_FAST(arg=1, lineno=117)
DEBUG:numba.core.byteflow:stack ['$368load_deref.0', '$pivot370.1', '$372load_deref.2', '$A374.3']
DEBUG:numba.core.byteflow:dispatch pc=378, inst=LOAD_FAST(arg=7, lineno=117)
DEBUG:numba.core.byteflow:stack ['$368load_deref.0', '$pivot370.1', '$372load_deref.2', '$A374.3', '$R376.4']
DEBUG:numba.core.byteflow:dispatch pc=380, inst=BINARY_SUBSCR(arg=None, lineno=117)
DEBUG:numba.core.byteflow:stack ['$368load_deref.0', '$pivot370.1', '$372load_deref.2', '$A374.3', '$R376.4', '$j378.5']
DEBUG:numba.core.byteflow:dispatch pc=382, inst=CALL_FUNCTION(arg=2, lineno=117)
DEBUG:numba.core.byteflow:stack ['$368load_deref.0', '$pivot370.1', '$372load_deref.2', '$A374.3', '$380binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=384, inst=CALL_FUNCTION(arg=2, lineno=117)
DEBUG:numba.core.byteflow:stack ['$368load_deref.0', '$pivot370.1', '$382call_function.7']
DEBUG:numba.core.byteflow:dispatch pc=386, inst=POP_JUMP_IF_TRUE(arg=177, lineno=117)
DEBUG:numba.core.byteflow:stack ['$384call_function.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=388, stack=(), blockstack=(), npush=0), Edge(pc=352, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=388 nstack_initial=0), State(pc_initial=442 nstack_initial=0), State(pc_initial=260 nstack_initial=0), State(pc_initial=388 nstack_initial=0), State(pc_initial=352 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=442 nstack_initial=0), State(pc_initial=260 nstack_initial=0), State(pc_initial=388 nstack_initial=0), State(pc_initial=352 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=442 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=442, inst=LOAD_FAST(arg=1, lineno=126)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=444, inst=LOAD_FAST(arg=3, lineno=126)
DEBUG:numba.core.byteflow:stack ['$R442.0']
DEBUG:numba.core.byteflow:dispatch pc=446, inst=BINARY_SUBSCR(arg=None, lineno=126)
DEBUG:numba.core.byteflow:stack ['$R442.0', '$high444.1']
DEBUG:numba.core.byteflow:dispatch pc=448, inst=LOAD_FAST(arg=1, lineno=126)
DEBUG:numba.core.byteflow:stack ['$446binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=450, inst=LOAD_FAST(arg=6, lineno=126)
DEBUG:numba.core.byteflow:stack ['$446binary_subscr.2', '$R448.3']
DEBUG:numba.core.byteflow:dispatch pc=452, inst=BINARY_SUBSCR(arg=None, lineno=126)
DEBUG:numba.core.byteflow:stack ['$446binary_subscr.2', '$R448.3', '$i450.4']
DEBUG:numba.core.byteflow:dispatch pc=454, inst=ROT_TWO(arg=None, lineno=126)
DEBUG:numba.core.byteflow:stack ['$446binary_subscr.2', '$452binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=456, inst=LOAD_FAST(arg=1, lineno=126)
DEBUG:numba.core.byteflow:stack ['$452binary_subscr.5', '$446binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=458, inst=LOAD_FAST(arg=6, lineno=126)
DEBUG:numba.core.byteflow:stack ['$452binary_subscr.5', '$446binary_subscr.2', '$R456.6']
DEBUG:numba.core.byteflow:dispatch pc=460, inst=STORE_SUBSCR(arg=None, lineno=126)
DEBUG:numba.core.byteflow:stack ['$452binary_subscr.5', '$446binary_subscr.2', '$R456.6', '$i458.7']
DEBUG:numba.core.byteflow:dispatch pc=462, inst=LOAD_FAST(arg=1, lineno=126)
DEBUG:numba.core.byteflow:stack ['$452binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=464, inst=LOAD_FAST(arg=3, lineno=126)
DEBUG:numba.core.byteflow:stack ['$452binary_subscr.5', '$R462.8']
DEBUG:numba.core.byteflow:dispatch pc=466, inst=STORE_SUBSCR(arg=None, lineno=126)
DEBUG:numba.core.byteflow:stack ['$452binary_subscr.5', '$R462.8', '$high464.9']
DEBUG:numba.core.byteflow:dispatch pc=468, inst=LOAD_FAST(arg=6, lineno=127)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=470, inst=RETURN_VALUE(arg=None, lineno=127)
DEBUG:numba.core.byteflow:stack ['$i468.10']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=260 nstack_initial=0), State(pc_initial=388 nstack_initial=0), State(pc_initial=352 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=388 nstack_initial=0), State(pc_initial=352 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=352 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=10 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=22 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=94 nstack_initial=0): set(),
             State(pc_initial=124 nstack_initial=0): set(),
             State(pc_initial=150 nstack_initial=0): set(),
             State(pc_initial=180 nstack_initial=0): set(),
             State(pc_initial=206 nstack_initial=0): set(),
             State(pc_initial=260 nstack_initial=0): set(),
             State(pc_initial=268 nstack_initial=0): set(),
             State(pc_initial=288 nstack_initial=0): set(),
             State(pc_initial=304 nstack_initial=0): set(),
             State(pc_initial=324 nstack_initial=0): set(),
             State(pc_initial=332 nstack_initial=0): set(),
             State(pc_initial=352 nstack_initial=0): set(),
             State(pc_initial=368 nstack_initial=0): set(),
             State(pc_initial=388 nstack_initial=0): set(),
             State(pc_initial=396 nstack_initial=0): set(),
             State(pc_initial=398 nstack_initial=0): set(),
             State(pc_initial=442 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$low2.0'}), (4, {'res': '$const4.1'}), (6, {'lhs': '$low2.0', 'rhs': '$const4.1', 'res': '$6compare_op.2'}), (8, {'pred': '$6compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={10: (), 14: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=10 nstack_initial=0):
AdaptBlockInfo(insts=((10, {'res': '$assertion_error10.0'}), (12, {'exc': '$assertion_error10.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((14, {'res': '$high14.0'}), (16, {'res': '$low16.1'}), (18, {'lhs': '$high14.0', 'rhs': '$low16.1', 'res': '$18compare_op.2'}), (20, {'pred': '$18compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: (), 26: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=22 nstack_initial=0):
AdaptBlockInfo(insts=((22, {'res': '$assertion_error22.0'}), (24, {'exc': '$assertion_error22.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$low26.0'}), (28, {'res': '$high28.1'}), (30, {'lhs': '$low26.0', 'rhs': '$high28.1', 'res': '$30binary_add.2'}), (32, {'res': '$const32.3'}), (34, {'lhs': '$30binary_add.2', 'rhs': '$const32.3', 'res': '$34binary_rshift.4'}), (36, {'value': '$34binary_rshift.4'}), (38, {'res': '$38load_deref.5'}), (40, {'res': '$40load_deref.6'}), (42, {'res': '$A42.7'}), (44, {'res': '$R44.8'}), (46, {'res': '$mid46.9'}), (48, {'index': '$mid46.9', 'target': '$R44.8', 'res': '$48binary_subscr.10'}), (50, {'func': '$40load_deref.6', 'args': ['$A42.7', '$48binary_subscr.10'], 'res': '$50call_function.11'}), (52, {'res': '$52load_deref.12'}), (54, {'res': '$A54.13'}), (56, {'res': '$R56.14'}), (58, {'res': '$low58.15'}), (60, {'index': '$low58.15', 'target': '$R56.14', 'res': '$60binary_subscr.16'}), (62, {'func': '$52load_deref.12', 'args': ['$A54.13', '$60binary_subscr.16'], 'res': '$62call_function.17'}), (64, {'func': '$38load_deref.5', 'args': ['$50call_function.11', '$62call_function.17'], 'res': '$64call_function.18'}), (66, {'pred': '$64call_function.18'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 94: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$R68.0'}), (70, {'res': '$mid70.1'}), (72, {'index': '$mid70.1', 'target': '$R68.0', 'res': '$72binary_subscr.2'}), (74, {'res': '$R74.3'}), (76, {'res': '$low76.4'}), (78, {'index': '$low76.4', 'target': '$R74.3', 'res': '$78binary_subscr.5'}), (82, {'res': '$R82.6'}), (84, {'res': '$low84.7'}), (86, {'target': '$R82.6', 'index': '$low84.7', 'value': '$72binary_subscr.2'}), (88, {'res': '$R88.8'}), (90, {'res': '$mid90.9'}), (92, {'target': '$R88.8', 'index': '$mid90.9', 'value': '$78binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={94: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=94 nstack_initial=0):
AdaptBlockInfo(insts=((94, {'res': '$94load_deref.0'}), (96, {'res': '$96load_deref.1'}), (98, {'res': '$A98.2'}), (100, {'res': '$R100.3'}), (102, {'res': '$high102.4'}), (104, {'index': '$high102.4', 'target': '$R100.3', 'res': '$104binary_subscr.5'}), (106, {'func': '$96load_deref.1', 'args': ['$A98.2', '$104binary_subscr.5'], 'res': '$106call_function.6'}), (108, {'res': '$108load_deref.7'}), (110, {'res': '$A110.8'}), (112, {'res': '$R112.9'}), (114, {'res': '$mid114.10'}), (116, {'index': '$mid114.10', 'target': '$R112.9', 'res': '$116binary_subscr.11'}), (118, {'func': '$108load_deref.7', 'args': ['$A110.8', '$116binary_subscr.11'], 'res': '$118call_function.12'}), (120, {'func': '$94load_deref.0', 'args': ['$106call_function.6', '$118call_function.12'], 'res': '$120call_function.13'}), (122, {'pred': '$120call_function.13'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={124: (), 150: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=124 nstack_initial=0):
AdaptBlockInfo(insts=((124, {'res': '$R124.0'}), (126, {'res': '$mid126.1'}), (128, {'index': '$mid126.1', 'target': '$R124.0', 'res': '$128binary_subscr.2'}), (130, {'res': '$R130.3'}), (132, {'res': '$high132.4'}), (134, {'index': '$high132.4', 'target': '$R130.3', 'res': '$134binary_subscr.5'}), (138, {'res': '$R138.6'}), (140, {'res': '$high140.7'}), (142, {'target': '$R138.6', 'index': '$high140.7', 'value': '$128binary_subscr.2'}), (144, {'res': '$R144.8'}), (146, {'res': '$mid146.9'}), (148, {'target': '$R144.8', 'index': '$mid146.9', 'value': '$134binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={150: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=150 nstack_initial=0):
AdaptBlockInfo(insts=((150, {'res': '$150load_deref.0'}), (152, {'res': '$152load_deref.1'}), (154, {'res': '$A154.2'}), (156, {'res': '$R156.3'}), (158, {'res': '$mid158.4'}), (160, {'index': '$mid158.4', 'target': '$R156.3', 'res': '$160binary_subscr.5'}), (162, {'func': '$152load_deref.1', 'args': ['$A154.2', '$160binary_subscr.5'], 'res': '$162call_function.6'}), (164, {'res': '$164load_deref.7'}), (166, {'res': '$A166.8'}), (168, {'res': '$R168.9'}), (170, {'res': '$low170.10'}), (172, {'index': '$low170.10', 'target': '$R168.9', 'res': '$172binary_subscr.11'}), (174, {'func': '$164load_deref.7', 'args': ['$A166.8', '$172binary_subscr.11'], 'res': '$174call_function.12'}), (176, {'func': '$150load_deref.0', 'args': ['$162call_function.6', '$174call_function.12'], 'res': '$176call_function.13'}), (178, {'pred': '$176call_function.13'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={180: (), 206: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=180 nstack_initial=0):
AdaptBlockInfo(insts=((180, {'res': '$R180.0'}), (182, {'res': '$mid182.1'}), (184, {'index': '$mid182.1', 'target': '$R180.0', 'res': '$184binary_subscr.2'}), (186, {'res': '$R186.3'}), (188, {'res': '$low188.4'}), (190, {'index': '$low188.4', 'target': '$R186.3', 'res': '$190binary_subscr.5'}), (194, {'res': '$R194.6'}), (196, {'res': '$low196.7'}), (198, {'target': '$R194.6', 'index': '$low196.7', 'value': '$184binary_subscr.2'}), (200, {'res': '$R200.8'}), (202, {'res': '$mid202.9'}), (204, {'target': '$R200.8', 'index': '$mid202.9', 'value': '$190binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={206: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=206 nstack_initial=0):
AdaptBlockInfo(insts=((206, {'res': '$206load_deref.0'}), (208, {'res': '$A208.1'}), (210, {'res': '$R210.2'}), (212, {'res': '$mid212.3'}), (214, {'index': '$mid212.3', 'target': '$R210.2', 'res': '$214binary_subscr.4'}), (216, {'func': '$206load_deref.0', 'args': ['$A208.1', '$214binary_subscr.4'], 'res': '$216call_function.5'}), (218, {'value': '$216call_function.5'}), (220, {'res': '$R220.6'}), (222, {'res': '$mid222.7'}), (224, {'index': '$mid222.7', 'target': '$R220.6', 'res': '$224binary_subscr.8'}), (226, {'res': '$R226.9'}), (228, {'res': '$high228.10'}), (230, {'index': '$high228.10', 'target': '$R226.9', 'res': '$230binary_subscr.11'}), (234, {'res': '$R234.12'}), (236, {'res': '$high236.13'}), (238, {'target': '$R234.12', 'index': '$high236.13', 'value': '$224binary_subscr.8'}), (240, {'res': '$R240.14'}), (242, {'res': '$mid242.15'}), (244, {'target': '$R240.14', 'index': '$mid242.15', 'value': '$230binary_subscr.11'}), (246, {'res': '$low246.16'}), (248, {'value': '$low246.16'}), (250, {'res': '$high250.17'}), (252, {'res': '$const252.18'}), (254, {'lhs': '$high250.17', 'rhs': '$const252.18', 'res': '$254binary_subtract.19'}), (256, {'value': '$254binary_subtract.19'}), (258, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={260: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=260 nstack_initial=0):
AdaptBlockInfo(insts=((260, {'res': '$i260.0'}), (262, {'res': '$high262.1'}), (264, {'lhs': '$i260.0', 'rhs': '$high262.1', 'res': '$264compare_op.2'}), (266, {'pred': '$264compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={268: (), 324: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=268 nstack_initial=0):
AdaptBlockInfo(insts=((268, {'res': '$268load_deref.0'}), (270, {'res': '$270load_deref.1'}), (272, {'res': '$A272.2'}), (274, {'res': '$R274.3'}), (276, {'res': '$i276.4'}), (278, {'index': '$i276.4', 'target': '$R274.3', 'res': '$278binary_subscr.5'}), (280, {'func': '$270load_deref.1', 'args': ['$A272.2', '$278binary_subscr.5'], 'res': '$280call_function.6'}), (282, {'res': '$pivot282.7'}), (284, {'func': '$268load_deref.0', 'args': ['$280call_function.6', '$pivot282.7'], 'res': '$284call_function.8'}), (286, {'pred': '$284call_function.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={288: (), 324: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=288 nstack_initial=0):
AdaptBlockInfo(insts=((288, {'res': '$i288.0'}), (290, {'res': '$const290.1'}), (292, {'lhs': '$i288.0', 'rhs': '$const290.1', 'res': '$292inplace_add.2'}), (294, {'value': '$292inplace_add.2'}), (296, {'res': '$i296.3'}), (298, {'res': '$high298.4'}), (300, {'lhs': '$i296.3', 'rhs': '$high298.4', 'res': '$300compare_op.5'}), (302, {'pred': '$300compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={304: (), 324: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=304 nstack_initial=0):
AdaptBlockInfo(insts=((304, {'res': '$304load_deref.0'}), (306, {'res': '$306load_deref.1'}), (308, {'res': '$A308.2'}), (310, {'res': '$R310.3'}), (312, {'res': '$i312.4'}), (314, {'index': '$i312.4', 'target': '$R310.3', 'res': '$314binary_subscr.5'}), (316, {'func': '$306load_deref.1', 'args': ['$A308.2', '$314binary_subscr.5'], 'res': '$316call_function.6'}), (318, {'res': '$pivot318.7'}), (320, {'func': '$304load_deref.0', 'args': ['$316call_function.6', '$pivot318.7'], 'res': '$320call_function.8'}), (322, {'pred': '$320call_function.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={324: (), 288: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=324 nstack_initial=0):
AdaptBlockInfo(insts=((324, {'res': '$j324.0'}), (326, {'res': '$low326.1'}), (328, {'lhs': '$j324.0', 'rhs': '$low326.1', 'res': '$328compare_op.2'}), (330, {'pred': '$328compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={332: (), 388: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=332 nstack_initial=0):
AdaptBlockInfo(insts=((332, {'res': '$332load_deref.0'}), (334, {'res': '$pivot334.1'}), (336, {'res': '$336load_deref.2'}), (338, {'res': '$A338.3'}), (340, {'res': '$R340.4'}), (342, {'res': '$j342.5'}), (344, {'index': '$j342.5', 'target': '$R340.4', 'res': '$344binary_subscr.6'}), (346, {'func': '$336load_deref.2', 'args': ['$A338.3', '$344binary_subscr.6'], 'res': '$346call_function.7'}), (348, {'func': '$332load_deref.0', 'args': ['$pivot334.1', '$346call_function.7'], 'res': '$348call_function.8'}), (350, {'pred': '$348call_function.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={352: (), 388: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=352 nstack_initial=0):
AdaptBlockInfo(insts=((352, {'res': '$j352.0'}), (354, {'res': '$const354.1'}), (356, {'lhs': '$j352.0', 'rhs': '$const354.1', 'res': '$356inplace_subtract.2'}), (358, {'value': '$356inplace_subtract.2'}), (360, {'res': '$j360.3'}), (362, {'res': '$low362.4'}), (364, {'lhs': '$j360.3', 'rhs': '$low362.4', 'res': '$364compare_op.5'}), (366, {'pred': '$364compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={368: (), 388: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=368 nstack_initial=0):
AdaptBlockInfo(insts=((368, {'res': '$368load_deref.0'}), (370, {'res': '$pivot370.1'}), (372, {'res': '$372load_deref.2'}), (374, {'res': '$A374.3'}), (376, {'res': '$R376.4'}), (378, {'res': '$j378.5'}), (380, {'index': '$j378.5', 'target': '$R376.4', 'res': '$380binary_subscr.6'}), (382, {'func': '$372load_deref.2', 'args': ['$A374.3', '$380binary_subscr.6'], 'res': '$382call_function.7'}), (384, {'func': '$368load_deref.0', 'args': ['$pivot370.1', '$382call_function.7'], 'res': '$384call_function.8'}), (386, {'pred': '$384call_function.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={388: (), 352: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=388 nstack_initial=0):
AdaptBlockInfo(insts=((388, {'res': '$i388.0'}), (390, {'res': '$j390.1'}), (392, {'lhs': '$i388.0', 'rhs': '$j390.1', 'res': '$392compare_op.2'}), (394, {'pred': '$392compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={396: (), 398: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=396 nstack_initial=0):
AdaptBlockInfo(insts=((396, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={442: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=398 nstack_initial=0):
AdaptBlockInfo(insts=((398, {'res': '$R398.0'}), (400, {'res': '$j400.1'}), (402, {'index': '$j400.1', 'target': '$R398.0', 'res': '$402binary_subscr.2'}), (404, {'res': '$R404.3'}), (406, {'res': '$i406.4'}), (408, {'index': '$i406.4', 'target': '$R404.3', 'res': '$408binary_subscr.5'}), (412, {'res': '$R412.6'}), (414, {'res': '$i414.7'}), (416, {'target': '$R412.6', 'index': '$i414.7', 'value': '$402binary_subscr.2'}), (418, {'res': '$R418.8'}), (420, {'res': '$j420.9'}), (422, {'target': '$R418.8', 'index': '$j420.9', 'value': '$408binary_subscr.5'}), (424, {'res': '$i424.10'}), (426, {'res': '$const426.11'}), (428, {'lhs': '$i424.10', 'rhs': '$const426.11', 'res': '$428inplace_add.12'}), (430, {'value': '$428inplace_add.12'}), (432, {'res': '$j432.13'}), (434, {'res': '$const434.14'}), (436, {'lhs': '$j432.13', 'rhs': '$const434.14', 'res': '$436inplace_subtract.15'}), (438, {'value': '$436inplace_subtract.15'}), (440, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={260: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=442 nstack_initial=0):
AdaptBlockInfo(insts=((442, {'res': '$R442.0'}), (444, {'res': '$high444.1'}), (446, {'index': '$high444.1', 'target': '$R442.0', 'res': '$446binary_subscr.2'}), (448, {'res': '$R448.3'}), (450, {'res': '$i450.4'}), (452, {'index': '$i450.4', 'target': '$R448.3', 'res': '$452binary_subscr.5'}), (456, {'res': '$R456.6'}), (458, {'res': '$i458.7'}), (460, {'target': '$R456.6', 'index': '$i458.7', 'value': '$446binary_subscr.2'}), (462, {'res': '$R462.8'}), (464, {'res': '$high464.9'}), (466, {'target': '$R462.8', 'index': '$high464.9', 'value': '$452binary_subscr.5'}), (468, {'res': '$i468.10'}), (470, {'retval': '$i468.10', 'castval': '$470return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    A = arg(0, name=A)                       ['A']
    R = arg(1, name=R)                       ['R']
    low = arg(2, name=low)                   ['low']
    high = arg(3, name=high)                 ['high']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6compare_op.2 = low >= $const4.1        ['$6compare_op.2', '$const4.1', 'low']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, quicksort.py:92),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    branch $8pred, 14, 10                    ['$8pred']
label 10:
    $assertion_error10.0 = global(AssertionError: <class 'AssertionError'>) ['$assertion_error10.0']
    raise $assertion_error10.0               ['$assertion_error10.0']
label 14:
    $18compare_op.2 = high > low             ['$18compare_op.2', 'high', 'low']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, quicksort.py:93),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
    branch $20pred, 26, 22                   ['$20pred']
label 22:
    $assertion_error22.0 = global(AssertionError: <class 'AssertionError'>) ['$assertion_error22.0']
    raise $assertion_error22.0               ['$assertion_error22.0']
label 26:
    $30binary_add.2 = low + high             ['$30binary_add.2', 'high', 'low']
    $const32.3 = const(int, 1)               ['$const32.3']
    mid = $30binary_add.2 >> $const32.3      ['$30binary_add.2', '$const32.3', 'mid']
    $38load_deref.5 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>) ['$38load_deref.5']
    $40load_deref.6 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>) ['$40load_deref.6']
    $48binary_subscr.10 = getitem(value=R, index=mid, fn=<built-in function getitem>) ['$48binary_subscr.10', 'R', 'mid']
    $50call_function.11 = call $40load_deref.6(A, $48binary_subscr.10, func=$40load_deref.6, args=[Var(A, quicksort.py:86), Var($48binary_subscr.10, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_deref.6', '$48binary_subscr.10', '$50call_function.11', 'A']
    $52load_deref.12 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>) ['$52load_deref.12']
    $60binary_subscr.16 = getitem(value=R, index=low, fn=<built-in function getitem>) ['$60binary_subscr.16', 'R', 'low']
    $62call_function.17 = call $52load_deref.12(A, $60binary_subscr.16, func=$52load_deref.12, args=[Var(A, quicksort.py:86), Var($60binary_subscr.16, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_deref.12', '$60binary_subscr.16', '$62call_function.17', 'A']
    $64call_function.18 = call $38load_deref.5($50call_function.11, $62call_function.17, func=$38load_deref.5, args=[Var($50call_function.11, quicksort.py:102), Var($62call_function.17, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_deref.5', '$50call_function.11', '$62call_function.17', '$64call_function.18']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64call_function.18, func=bool66, args=(Var($64call_function.18, quicksort.py:102),), kws=(), vararg=None, varkwarg=None, target=None) ['$64call_function.18', '$66pred', 'bool66']
    branch $66pred, 68, 94                   ['$66pred']
label 68:
    $72binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>) ['$72binary_subscr.2', 'R', 'mid']
    $78binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>) ['$78binary_subscr.5', 'R', 'low']
    R[low] = $72binary_subscr.2              ['$72binary_subscr.2', 'R', 'low']
    R[mid] = $78binary_subscr.5              ['$78binary_subscr.5', 'R', 'mid']
    jump 94                                  []
label 94:
    $94load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>) ['$94load_deref.0']
    $96load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>) ['$96load_deref.1']
    $104binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>) ['$104binary_subscr.5', 'R', 'high']
    $106call_function.6 = call $96load_deref.1(A, $104binary_subscr.5, func=$96load_deref.1, args=[Var(A, quicksort.py:86), Var($104binary_subscr.5, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None) ['$104binary_subscr.5', '$106call_function.6', '$96load_deref.1', 'A']
    $108load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>) ['$108load_deref.7']
    $116binary_subscr.11 = getitem(value=R, index=mid, fn=<built-in function getitem>) ['$116binary_subscr.11', 'R', 'mid']
    $118call_function.12 = call $108load_deref.7(A, $116binary_subscr.11, func=$108load_deref.7, args=[Var(A, quicksort.py:86), Var($116binary_subscr.11, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None) ['$108load_deref.7', '$116binary_subscr.11', '$118call_function.12', 'A']
    $120call_function.13 = call $94load_deref.0($106call_function.6, $118call_function.12, func=$94load_deref.0, args=[Var($106call_function.6, quicksort.py:104), Var($118call_function.12, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None) ['$106call_function.6', '$118call_function.12', '$120call_function.13', '$94load_deref.0']
    bool122 = global(bool: <class 'bool'>)   ['bool122']
    $122pred = call bool122($120call_function.13, func=bool122, args=(Var($120call_function.13, quicksort.py:104),), kws=(), vararg=None, varkwarg=None, target=None) ['$120call_function.13', '$122pred', 'bool122']
    branch $122pred, 124, 150                ['$122pred']
label 124:
    $128binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>) ['$128binary_subscr.2', 'R', 'mid']
    $134binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>) ['$134binary_subscr.5', 'R', 'high']
    R[high] = $128binary_subscr.2            ['$128binary_subscr.2', 'R', 'high']
    R[mid] = $134binary_subscr.5             ['$134binary_subscr.5', 'R', 'mid']
    jump 150                                 []
label 150:
    $150load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>) ['$150load_deref.0']
    $152load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>) ['$152load_deref.1']
    $160binary_subscr.5 = getitem(value=R, index=mid, fn=<built-in function getitem>) ['$160binary_subscr.5', 'R', 'mid']
    $162call_function.6 = call $152load_deref.1(A, $160binary_subscr.5, func=$152load_deref.1, args=[Var(A, quicksort.py:86), Var($160binary_subscr.5, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_deref.1', '$160binary_subscr.5', '$162call_function.6', 'A']
    $164load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>) ['$164load_deref.7']
    $172binary_subscr.11 = getitem(value=R, index=low, fn=<built-in function getitem>) ['$172binary_subscr.11', 'R', 'low']
    $174call_function.12 = call $164load_deref.7(A, $172binary_subscr.11, func=$164load_deref.7, args=[Var(A, quicksort.py:86), Var($172binary_subscr.11, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$164load_deref.7', '$172binary_subscr.11', '$174call_function.12', 'A']
    $176call_function.13 = call $150load_deref.0($162call_function.6, $174call_function.12, func=$150load_deref.0, args=[Var($162call_function.6, quicksort.py:106), Var($174call_function.12, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$150load_deref.0', '$162call_function.6', '$174call_function.12', '$176call_function.13']
    bool178 = global(bool: <class 'bool'>)   ['bool178']
    $178pred = call bool178($176call_function.13, func=bool178, args=(Var($176call_function.13, quicksort.py:106),), kws=(), vararg=None, varkwarg=None, target=None) ['$176call_function.13', '$178pred', 'bool178']
    branch $178pred, 180, 206                ['$178pred']
label 180:
    $184binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>) ['$184binary_subscr.2', 'R', 'mid']
    $190binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>) ['$190binary_subscr.5', 'R', 'low']
    R[low] = $184binary_subscr.2             ['$184binary_subscr.2', 'R', 'low']
    R[mid] = $190binary_subscr.5             ['$190binary_subscr.5', 'R', 'mid']
    jump 206                                 []
label 206:
    $206load_deref.0 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>) ['$206load_deref.0']
    $214binary_subscr.4 = getitem(value=R, index=mid, fn=<built-in function getitem>) ['$214binary_subscr.4', 'R', 'mid']
    pivot = call $206load_deref.0(A, $214binary_subscr.4, func=$206load_deref.0, args=[Var(A, quicksort.py:86), Var($214binary_subscr.4, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None) ['$206load_deref.0', '$214binary_subscr.4', 'A', 'pivot']
    $224binary_subscr.8 = getitem(value=R, index=mid, fn=<built-in function getitem>) ['$224binary_subscr.8', 'R', 'mid']
    $230binary_subscr.11 = getitem(value=R, index=high, fn=<built-in function getitem>) ['$230binary_subscr.11', 'R', 'high']
    R[high] = $224binary_subscr.8            ['$224binary_subscr.8', 'R', 'high']
    R[mid] = $230binary_subscr.11            ['$230binary_subscr.11', 'R', 'mid']
    i = low                                  ['i', 'low']
    $const252.18 = const(int, 1)             ['$const252.18']
    j = high - $const252.18                  ['$const252.18', 'high', 'j']
    jump 260                                 []
label 260:
    $264compare_op.2 = i < high              ['$264compare_op.2', 'high', 'i']
    bool266 = global(bool: <class 'bool'>)   ['bool266']
    $266pred = call bool266($264compare_op.2, func=bool266, args=(Var($264compare_op.2, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None) ['$264compare_op.2', '$266pred', 'bool266']
    branch $266pred, 268, 324                ['$266pred']
label 268:
    $268load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>) ['$268load_deref.0']
    $270load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>) ['$270load_deref.1']
    $278binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>) ['$278binary_subscr.5', 'R', 'i']
    $280call_function.6 = call $270load_deref.1(A, $278binary_subscr.5, func=$270load_deref.1, args=[Var(A, quicksort.py:86), Var($278binary_subscr.5, quicksort.py:115)], kws=(), vararg=None, varkwarg=None, target=None) ['$270load_deref.1', '$278binary_subscr.5', '$280call_function.6', 'A']
    $284call_function.8 = call $268load_deref.0($280call_function.6, pivot, func=$268load_deref.0, args=[Var($280call_function.6, quicksort.py:115), Var(pivot, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None) ['$268load_deref.0', '$280call_function.6', '$284call_function.8', 'pivot']
    bool286 = global(bool: <class 'bool'>)   ['bool286']
    $286pred = call bool286($284call_function.8, func=bool286, args=(Var($284call_function.8, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None) ['$284call_function.8', '$286pred', 'bool286']
    branch $286pred, 288, 324                ['$286pred']
label 288:
    $const290.1 = const(int, 1)              ['$const290.1']
    $292inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const290.1, static_lhs=Undefined, static_rhs=Undefined) ['$292inplace_add.2', '$const290.1', 'i']
    i = $292inplace_add.2                    ['$292inplace_add.2', 'i']
    $300compare_op.5 = i < high              ['$300compare_op.5', 'high', 'i']
    bool302 = global(bool: <class 'bool'>)   ['bool302']
    $302pred = call bool302($300compare_op.5, func=bool302, args=(Var($300compare_op.5, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None) ['$300compare_op.5', '$302pred', 'bool302']
    branch $302pred, 304, 324                ['$302pred']
label 304:
    $304load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>) ['$304load_deref.0']
    $306load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>) ['$306load_deref.1']
    $314binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>) ['$314binary_subscr.5', 'R', 'i']
    $316call_function.6 = call $306load_deref.1(A, $314binary_subscr.5, func=$306load_deref.1, args=[Var(A, quicksort.py:86), Var($314binary_subscr.5, quicksort.py:115)], kws=(), vararg=None, varkwarg=None, target=None) ['$306load_deref.1', '$314binary_subscr.5', '$316call_function.6', 'A']
    $320call_function.8 = call $304load_deref.0($316call_function.6, pivot, func=$304load_deref.0, args=[Var($316call_function.6, quicksort.py:115), Var(pivot, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None) ['$304load_deref.0', '$316call_function.6', '$320call_function.8', 'pivot']
    bool322 = global(bool: <class 'bool'>)   ['bool322']
    $322pred = call bool322($320call_function.8, func=bool322, args=(Var($320call_function.8, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None) ['$320call_function.8', '$322pred', 'bool322']
    branch $322pred, 288, 324                ['$322pred']
label 324:
    $328compare_op.2 = j >= low              ['$328compare_op.2', 'j', 'low']
    bool330 = global(bool: <class 'bool'>)   ['bool330']
    $330pred = call bool330($328compare_op.2, func=bool330, args=(Var($328compare_op.2, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None) ['$328compare_op.2', '$330pred', 'bool330']
    branch $330pred, 332, 388                ['$330pred']
label 332:
    $332load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>) ['$332load_deref.0']
    $336load_deref.2 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>) ['$336load_deref.2']
    $344binary_subscr.6 = getitem(value=R, index=j, fn=<built-in function getitem>) ['$344binary_subscr.6', 'R', 'j']
    $346call_function.7 = call $336load_deref.2(A, $344binary_subscr.6, func=$336load_deref.2, args=[Var(A, quicksort.py:86), Var($344binary_subscr.6, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None) ['$336load_deref.2', '$344binary_subscr.6', '$346call_function.7', 'A']
    $348call_function.8 = call $332load_deref.0(pivot, $346call_function.7, func=$332load_deref.0, args=[Var(pivot, quicksort.py:108), Var($346call_function.7, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None) ['$332load_deref.0', '$346call_function.7', '$348call_function.8', 'pivot']
    bool350 = global(bool: <class 'bool'>)   ['bool350']
    $350pred = call bool350($348call_function.8, func=bool350, args=(Var($348call_function.8, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None) ['$348call_function.8', '$350pred', 'bool350']
    branch $350pred, 352, 388                ['$350pred']
label 352:
    $const354.1 = const(int, 1)              ['$const354.1']
    $356inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const354.1, static_lhs=Undefined, static_rhs=Undefined) ['$356inplace_subtract.2', '$const354.1', 'j']
    j = $356inplace_subtract.2               ['$356inplace_subtract.2', 'j']
    $364compare_op.5 = j >= low              ['$364compare_op.5', 'j', 'low']
    bool366 = global(bool: <class 'bool'>)   ['bool366']
    $366pred = call bool366($364compare_op.5, func=bool366, args=(Var($364compare_op.5, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None) ['$364compare_op.5', '$366pred', 'bool366']
    branch $366pred, 368, 388                ['$366pred']
label 368:
    $368load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>) ['$368load_deref.0']
    $372load_deref.2 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>) ['$372load_deref.2']
    $380binary_subscr.6 = getitem(value=R, index=j, fn=<built-in function getitem>) ['$380binary_subscr.6', 'R', 'j']
    $382call_function.7 = call $372load_deref.2(A, $380binary_subscr.6, func=$372load_deref.2, args=[Var(A, quicksort.py:86), Var($380binary_subscr.6, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None) ['$372load_deref.2', '$380binary_subscr.6', '$382call_function.7', 'A']
    $384call_function.8 = call $368load_deref.0(pivot, $382call_function.7, func=$368load_deref.0, args=[Var(pivot, quicksort.py:108), Var($382call_function.7, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None) ['$368load_deref.0', '$382call_function.7', '$384call_function.8', 'pivot']
    bool386 = global(bool: <class 'bool'>)   ['bool386']
    $386pred = call bool386($384call_function.8, func=bool386, args=(Var($384call_function.8, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None) ['$384call_function.8', '$386pred', 'bool386']
    branch $386pred, 352, 388                ['$386pred']
label 388:
    $392compare_op.2 = i >= j                ['$392compare_op.2', 'i', 'j']
    bool394 = global(bool: <class 'bool'>)   ['bool394']
    $394pred = call bool394($392compare_op.2, func=bool394, args=(Var($392compare_op.2, quicksort.py:119),), kws=(), vararg=None, varkwarg=None, target=None) ['$392compare_op.2', '$394pred', 'bool394']
    branch $394pred, 396, 398                ['$394pred']
label 396:
    jump 442                                 []
label 398:
    $402binary_subscr.2 = getitem(value=R, index=j, fn=<built-in function getitem>) ['$402binary_subscr.2', 'R', 'j']
    $408binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>) ['$408binary_subscr.5', 'R', 'i']
    R[i] = $402binary_subscr.2               ['$402binary_subscr.2', 'R', 'i']
    R[j] = $408binary_subscr.5               ['$408binary_subscr.5', 'R', 'j']
    $const426.11 = const(int, 1)             ['$const426.11']
    $428inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const426.11, static_lhs=Undefined, static_rhs=Undefined) ['$428inplace_add.12', '$const426.11', 'i']
    i = $428inplace_add.12                   ['$428inplace_add.12', 'i']
    $const434.14 = const(int, 1)             ['$const434.14']
    $436inplace_subtract.15 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const434.14, static_lhs=Undefined, static_rhs=Undefined) ['$436inplace_subtract.15', '$const434.14', 'j']
    j = $436inplace_subtract.15              ['$436inplace_subtract.15', 'j']
    jump 260                                 []
label 442:
    $446binary_subscr.2 = getitem(value=R, index=high, fn=<built-in function getitem>) ['$446binary_subscr.2', 'R', 'high']
    $452binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>) ['$452binary_subscr.5', 'R', 'i']
    R[i] = $446binary_subscr.2               ['$446binary_subscr.2', 'R', 'i']
    R[high] = $452binary_subscr.5            ['$452binary_subscr.5', 'R', 'high']
    $470return_value.11 = cast(value=i)      ['$470return_value.11', 'i']
    return $470return_value.11               ['$470return_value.11']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: A = arg(0, name=A)
DEBUG:numba.core.ssa:on stmt: R = arg(1, name=R)
DEBUG:numba.core.ssa:on stmt: low = arg(2, name=low)
DEBUG:numba.core.ssa:on stmt: high = arg(3, name=high)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = low >= $const4.1
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, quicksort.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 14, 10
DEBUG:numba.core.ssa:==== SSA block analysis pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $assertion_error10.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>
DEBUG:numba.core.ssa:==== SSA block analysis pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $18compare_op.2 = high > low
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, quicksort.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 26, 22
DEBUG:numba.core.ssa:==== SSA block analysis pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $assertion_error22.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $30binary_add.2 = low + high
DEBUG:numba.core.ssa:on stmt: $const32.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: mid = $30binary_add.2 >> $const32.3
DEBUG:numba.core.ssa:on stmt: $38load_deref.5 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $40load_deref.6 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.10 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50call_function.11 = call $40load_deref.6(A, $48binary_subscr.10, func=$40load_deref.6, args=[Var(A, quicksort.py:86), Var($48binary_subscr.10, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $52load_deref.12 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $60binary_subscr.16 = getitem(value=R, index=low, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $62call_function.17 = call $52load_deref.12(A, $60binary_subscr.16, func=$52load_deref.12, args=[Var(A, quicksort.py:86), Var($60binary_subscr.16, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $64call_function.18 = call $38load_deref.5($50call_function.11, $62call_function.17, func=$38load_deref.5, args=[Var($50call_function.11, quicksort.py:102), Var($62call_function.17, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool66 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $66pred = call bool66($64call_function.18, func=bool66, args=(Var($64call_function.18, quicksort.py:102),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $66pred, 68, 94
DEBUG:numba.core.ssa:==== SSA block analysis pass on 68
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $72binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $78binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[low] = $72binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[mid] = $78binary_subscr.5
DEBUG:numba.core.ssa:on stmt: jump 94
DEBUG:numba.core.ssa:==== SSA block analysis pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $94load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $96load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $104binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $106call_function.6 = call $96load_deref.1(A, $104binary_subscr.5, func=$96load_deref.1, args=[Var(A, quicksort.py:86), Var($104binary_subscr.5, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $108load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $116binary_subscr.11 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $118call_function.12 = call $108load_deref.7(A, $116binary_subscr.11, func=$108load_deref.7, args=[Var(A, quicksort.py:86), Var($116binary_subscr.11, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $120call_function.13 = call $94load_deref.0($106call_function.6, $118call_function.12, func=$94load_deref.0, args=[Var($106call_function.6, quicksort.py:104), Var($118call_function.12, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120call_function.13, func=bool122, args=(Var($120call_function.13, quicksort.py:104),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 150
DEBUG:numba.core.ssa:==== SSA block analysis pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $128binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $134binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[high] = $128binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[mid] = $134binary_subscr.5
DEBUG:numba.core.ssa:on stmt: jump 150
DEBUG:numba.core.ssa:==== SSA block analysis pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $150load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $152load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $160binary_subscr.5 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $162call_function.6 = call $152load_deref.1(A, $160binary_subscr.5, func=$152load_deref.1, args=[Var(A, quicksort.py:86), Var($160binary_subscr.5, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $172binary_subscr.11 = getitem(value=R, index=low, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $174call_function.12 = call $164load_deref.7(A, $172binary_subscr.11, func=$164load_deref.7, args=[Var(A, quicksort.py:86), Var($172binary_subscr.11, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $176call_function.13 = call $150load_deref.0($162call_function.6, $174call_function.12, func=$150load_deref.0, args=[Var($162call_function.6, quicksort.py:106), Var($174call_function.12, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176call_function.13, func=bool178, args=(Var($176call_function.13, quicksort.py:106),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block analysis pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $184binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[low] = $184binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[mid] = $190binary_subscr.5
DEBUG:numba.core.ssa:on stmt: jump 206
DEBUG:numba.core.ssa:==== SSA block analysis pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $206load_deref.0 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $214binary_subscr.4 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: pivot = call $206load_deref.0(A, $214binary_subscr.4, func=$206load_deref.0, args=[Var(A, quicksort.py:86), Var($214binary_subscr.4, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $224binary_subscr.8 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $230binary_subscr.11 = getitem(value=R, index=high, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[high] = $224binary_subscr.8
DEBUG:numba.core.ssa:on stmt: R[mid] = $230binary_subscr.11
DEBUG:numba.core.ssa:on stmt: i = low
DEBUG:numba.core.ssa:on stmt: $const252.18 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: j = high - $const252.18
DEBUG:numba.core.ssa:on stmt: jump 260
DEBUG:numba.core.ssa:==== SSA block analysis pass on 260
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $264compare_op.2 = i < high
DEBUG:numba.core.ssa:on stmt: bool266 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $266pred = call bool266($264compare_op.2, func=bool266, args=(Var($264compare_op.2, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $266pred, 268, 324
DEBUG:numba.core.ssa:==== SSA block analysis pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $268load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $270load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $278binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $280call_function.6 = call $270load_deref.1(A, $278binary_subscr.5, func=$270load_deref.1, args=[Var(A, quicksort.py:86), Var($278binary_subscr.5, quicksort.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $284call_function.8 = call $268load_deref.0($280call_function.6, pivot, func=$268load_deref.0, args=[Var($280call_function.6, quicksort.py:115), Var(pivot, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool286 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $286pred = call bool286($284call_function.8, func=bool286, args=(Var($284call_function.8, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $286pred, 288, 324
DEBUG:numba.core.ssa:==== SSA block analysis pass on 288
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $const290.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $292inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const290.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i = $292inplace_add.2
DEBUG:numba.core.ssa:on stmt: $300compare_op.5 = i < high
DEBUG:numba.core.ssa:on stmt: bool302 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $302pred = call bool302($300compare_op.5, func=bool302, args=(Var($300compare_op.5, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $302pred, 304, 324
DEBUG:numba.core.ssa:==== SSA block analysis pass on 304
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $304load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $306load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $314binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $316call_function.6 = call $306load_deref.1(A, $314binary_subscr.5, func=$306load_deref.1, args=[Var(A, quicksort.py:86), Var($314binary_subscr.5, quicksort.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $320call_function.8 = call $304load_deref.0($316call_function.6, pivot, func=$304load_deref.0, args=[Var($316call_function.6, quicksort.py:115), Var(pivot, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool322 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $322pred = call bool322($320call_function.8, func=bool322, args=(Var($320call_function.8, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $322pred, 288, 324
DEBUG:numba.core.ssa:==== SSA block analysis pass on 324
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $328compare_op.2 = j >= low
DEBUG:numba.core.ssa:on stmt: bool330 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $330pred = call bool330($328compare_op.2, func=bool330, args=(Var($328compare_op.2, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $330pred, 332, 388
DEBUG:numba.core.ssa:==== SSA block analysis pass on 332
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $332load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $336load_deref.2 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $344binary_subscr.6 = getitem(value=R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $346call_function.7 = call $336load_deref.2(A, $344binary_subscr.6, func=$336load_deref.2, args=[Var(A, quicksort.py:86), Var($344binary_subscr.6, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $348call_function.8 = call $332load_deref.0(pivot, $346call_function.7, func=$332load_deref.0, args=[Var(pivot, quicksort.py:108), Var($346call_function.7, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool350 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $350pred = call bool350($348call_function.8, func=bool350, args=(Var($348call_function.8, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $350pred, 352, 388
DEBUG:numba.core.ssa:==== SSA block analysis pass on 352
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $const354.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $356inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const354.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: j = $356inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: $364compare_op.5 = j >= low
DEBUG:numba.core.ssa:on stmt: bool366 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $366pred = call bool366($364compare_op.5, func=bool366, args=(Var($364compare_op.5, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $366pred, 368, 388
DEBUG:numba.core.ssa:==== SSA block analysis pass on 368
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $368load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $372load_deref.2 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $380binary_subscr.6 = getitem(value=R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $382call_function.7 = call $372load_deref.2(A, $380binary_subscr.6, func=$372load_deref.2, args=[Var(A, quicksort.py:86), Var($380binary_subscr.6, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $384call_function.8 = call $368load_deref.0(pivot, $382call_function.7, func=$368load_deref.0, args=[Var(pivot, quicksort.py:108), Var($382call_function.7, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool386 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $386pred = call bool386($384call_function.8, func=bool386, args=(Var($384call_function.8, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $386pred, 352, 388
DEBUG:numba.core.ssa:==== SSA block analysis pass on 388
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $392compare_op.2 = i >= j
DEBUG:numba.core.ssa:on stmt: bool394 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $394pred = call bool394($392compare_op.2, func=bool394, args=(Var($392compare_op.2, quicksort.py:119),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $394pred, 396, 398
DEBUG:numba.core.ssa:==== SSA block analysis pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: jump 442
DEBUG:numba.core.ssa:==== SSA block analysis pass on 398
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $402binary_subscr.2 = getitem(value=R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[i] = $402binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[j] = $408binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const426.11 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $428inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const426.11, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i = $428inplace_add.12
DEBUG:numba.core.ssa:on stmt: $const434.14 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $436inplace_subtract.15 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const434.14, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: j = $436inplace_subtract.15
DEBUG:numba.core.ssa:on stmt: jump 260
DEBUG:numba.core.ssa:==== SSA block analysis pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $446binary_subscr.2 = getitem(value=R, index=high, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $452binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[i] = $446binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[high] = $452binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $470return_value.11 = cast(value=i)
DEBUG:numba.core.ssa:on stmt: return $470return_value.11
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$104binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000017AA3DF5420>,
                                      94)],
             '$106call_function.6': [(<numba.core.ir.Assign object at 0x0000017AA3DF5510>,
                                      94)],
             '$108load_deref.7': [(<numba.core.ir.Assign object at 0x0000017AA3DF5390>,
                                   94)],
             '$116binary_subscr.11': [(<numba.core.ir.Assign object at 0x0000017AA3DF4610>,
                                       94)],
             '$118call_function.12': [(<numba.core.ir.Assign object at 0x0000017AA3DF4A90>,
                                       94)],
             '$120call_function.13': [(<numba.core.ir.Assign object at 0x0000017AA3DF4B20>,
                                       94)],
             '$122pred': [(<numba.core.ir.Assign object at 0x0000017AA3DF5900>,
                           94)],
             '$128binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000017AA3DF5E70>,
                                      124)],
             '$134binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000017AA3DF7850>,
                                      124)],
             '$150load_deref.0': [(<numba.core.ir.Assign object at 0x0000017AA3DE4520>,
                                   150)],
             '$152load_deref.1': [(<numba.core.ir.Assign object at 0x0000017AA3DE6E90>,
                                   150)],
             '$160binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000017AA3DE7F70>,
                                      150)],
             '$162call_function.6': [(<numba.core.ir.Assign object at 0x0000017AA3DE71F0>,
                                      150)],
             '$164load_deref.7': [(<numba.core.ir.Assign object at 0x0000017AA3DE7D30>,
                                   150)],
             '$172binary_subscr.11': [(<numba.core.ir.Assign object at 0x0000017AA3DE7400>,
                                       150)],
             '$174call_function.12': [(<numba.core.ir.Assign object at 0x0000017AA3DE6860>,
                                       150)],
             '$176call_function.13': [(<numba.core.ir.Assign object at 0x0000017AA3DE7130>,
                                       150)],
             '$178pred': [(<numba.core.ir.Assign object at 0x0000017AA3DE69E0>,
                           150)],
             '$184binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000017AA3DE5D20>,
                                      180)],
             '$18compare_op.2': [(<numba.core.ir.Assign object at 0x0000017AA3E24D90>,
                                  14)],
             '$190binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000017AA3DE67D0>,
                                      180)],
             '$206load_deref.0': [(<numba.core.ir.Assign object at 0x0000017AA3DE61D0>,
                                   206)],
             '$20pred': [(<numba.core.ir.Assign object at 0x0000017AA3D69180>,
                          14)],
             '$214binary_subscr.4': [(<numba.core.ir.Assign object at 0x0000017AA3DE5960>,
                                      206)],
             '$224binary_subscr.8': [(<numba.core.ir.Assign object at 0x0000017AA3DE46D0>,
                                      206)],
             '$230binary_subscr.11': [(<numba.core.ir.Assign object at 0x0000017AA3DE5120>,
                                       206)],
             '$264compare_op.2': [(<numba.core.ir.Assign object at 0x0000017AA3DE4E80>,
                                   260)],
             '$266pred': [(<numba.core.ir.Assign object at 0x0000017AA3DCBA00>,
                           260)],
             '$268load_deref.0': [(<numba.core.ir.Assign object at 0x0000017AA3DCB2E0>,
                                   268)],
             '$270load_deref.1': [(<numba.core.ir.Assign object at 0x0000017AA3DCB3A0>,
                                   268)],
             '$278binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000017AA3DCACB0>,
                                      268)],
             '$280call_function.6': [(<numba.core.ir.Assign object at 0x0000017AA3DC95D0>,
                                      268)],
             '$284call_function.8': [(<numba.core.ir.Assign object at 0x0000017AA3DCB0A0>,
                                      268)],
             '$286pred': [(<numba.core.ir.Assign object at 0x0000017AA3DCB040>,
                           268)],
             '$292inplace_add.2': [(<numba.core.ir.Assign object at 0x0000017AA3DCA860>,
                                    288)],
             '$300compare_op.5': [(<numba.core.ir.Assign object at 0x0000017AA3DC9420>,
                                   288)],
             '$302pred': [(<numba.core.ir.Assign object at 0x0000017AA3DC9480>,
                           288)],
             '$304load_deref.0': [(<numba.core.ir.Assign object at 0x0000017AA3DC9A50>,
                                   304)],
             '$306load_deref.1': [(<numba.core.ir.Assign object at 0x0000017AA3DC9AB0>,
                                   304)],
             '$30binary_add.2': [(<numba.core.ir.Assign object at 0x0000017AA3D150C0>,
                                  26)],
             '$314binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000017AA3DCA0E0>,
                                      304)],
             '$316call_function.6': [(<numba.core.ir.Assign object at 0x0000017AA3DCA5C0>,
                                      304)],
             '$320call_function.8': [(<numba.core.ir.Assign object at 0x0000017AA3DC8880>,
                                      304)],
             '$322pred': [(<numba.core.ir.Assign object at 0x0000017AA3DC8BB0>,
                           304)],
             '$328compare_op.2': [(<numba.core.ir.Assign object at 0x0000017AA3DC8190>,
                                   324)],
             '$330pred': [(<numba.core.ir.Assign object at 0x0000017AA3DC8670>,
                           324)],
             '$332load_deref.0': [(<numba.core.ir.Assign object at 0x0000017AA3DC84F0>,
                                   332)],
             '$336load_deref.2': [(<numba.core.ir.Assign object at 0x0000017AA3DCA350>,
                                   332)],
             '$344binary_subscr.6': [(<numba.core.ir.Assign object at 0x0000017AA3DCB790>,
                                      332)],
             '$346call_function.7': [(<numba.core.ir.Assign object at 0x0000017AA3DC7820>,
                                      332)],
             '$348call_function.8': [(<numba.core.ir.Assign object at 0x0000017AA3DC7D00>,
                                      332)],
             '$350pred': [(<numba.core.ir.Assign object at 0x0000017AA3DC7FD0>,
                           332)],
             '$356inplace_subtract.2': [(<numba.core.ir.Assign object at 0x0000017AA3DC76D0>,
                                         352)],
             '$364compare_op.5': [(<numba.core.ir.Assign object at 0x0000017AA3DC7430>,
                                   352)],
             '$366pred': [(<numba.core.ir.Assign object at 0x0000017AA3DC7550>,
                           352)],
             '$368load_deref.0': [(<numba.core.ir.Assign object at 0x0000017AA3DC7910>,
                                   368)],
             '$372load_deref.2': [(<numba.core.ir.Assign object at 0x0000017AA3DAF850>,
                                   368)],
             '$380binary_subscr.6': [(<numba.core.ir.Assign object at 0x0000017AA3DAFCA0>,
                                      368)],
             '$382call_function.7': [(<numba.core.ir.Assign object at 0x0000017AA3DAF5B0>,
                                      368)],
             '$384call_function.8': [(<numba.core.ir.Assign object at 0x0000017AA3E6C820>,
                                      368)],
             '$386pred': [(<numba.core.ir.Assign object at 0x0000017AA3E6FDC0>,
                           368)],
             '$38load_deref.5': [(<numba.core.ir.Assign object at 0x0000017AA3DF6B00>,
                                  26)],
             '$392compare_op.2': [(<numba.core.ir.Assign object at 0x0000017AA3E44190>,
                                   388)],
             '$394pred': [(<numba.core.ir.Assign object at 0x0000017AA3E44400>,
                           388)],
             '$402binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000017AA3E449D0>,
                                      398)],
             '$408binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000017AA3E44D90>,
                                      398)],
             '$40load_deref.6': [(<numba.core.ir.Assign object at 0x0000017AA3DF7370>,
                                  26)],
             '$428inplace_add.12': [(<numba.core.ir.Assign object at 0x0000017AA3E457B0>,
                                     398)],
             '$436inplace_subtract.15': [(<numba.core.ir.Assign object at 0x0000017AA3E45C90>,
                                          398)],
             '$446binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000017AA3E45ED0>,
                                      442)],
             '$452binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000017AA3E46290>,
                                      442)],
             '$470return_value.11': [(<numba.core.ir.Assign object at 0x0000017AA3E46B00>,
                                      442)],
             '$48binary_subscr.10': [(<numba.core.ir.Assign object at 0x0000017AA3DF7130>,
                                      26)],
             '$50call_function.11': [(<numba.core.ir.Assign object at 0x0000017AA3DF6380>,
                                      26)],
             '$52load_deref.12': [(<numba.core.ir.Assign object at 0x0000017AA3DF4190>,
                                   26)],
             '$60binary_subscr.16': [(<numba.core.ir.Assign object at 0x0000017AA3DF59C0>,
                                      26)],
             '$62call_function.17': [(<numba.core.ir.Assign object at 0x0000017AA3DF6080>,
                                      26)],
             '$64call_function.18': [(<numba.core.ir.Assign object at 0x0000017AA3DF6590>,
                                      26)],
             '$66pred': [(<numba.core.ir.Assign object at 0x0000017AA3DF6770>,
                          26)],
             '$6compare_op.2': [(<numba.core.ir.Assign object at 0x0000017AA3E26770>,
                                 0)],
             '$72binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000017AA3DF6980>,
                                     68)],
             '$78binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000017AA3DF7070>,
                                     68)],
             '$8pred': [(<numba.core.ir.Assign object at 0x0000017AA3E26470>,
                         0)],
             '$94load_deref.0': [(<numba.core.ir.Assign object at 0x0000017AA3DF7910>,
                                  94)],
             '$96load_deref.1': [(<numba.core.ir.Assign object at 0x0000017AA3DF7D60>,
                                  94)],
             '$assertion_error10.0': [(<numba.core.ir.Assign object at 0x0000017AA3E26B00>,
                                       10)],
             '$assertion_error22.0': [(<numba.core.ir.Assign object at 0x0000017AA3D68130>,
                                       22)],
             '$const252.18': [(<numba.core.ir.Assign object at 0x0000017AA3DC97E0>,
                               206)],
             '$const290.1': [(<numba.core.ir.Assign object at 0x0000017AA3DCA590>,
                              288)],
             '$const32.3': [(<numba.core.ir.Assign object at 0x0000017AA3D157E0>,
                             26)],
             '$const354.1': [(<numba.core.ir.Assign object at 0x0000017AA3DC7A00>,
                              352)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x0000017AA3E24400>,
                            0)],
             '$const426.11': [(<numba.core.ir.Assign object at 0x0000017AA3E45600>,
                               398)],
             '$const434.14': [(<numba.core.ir.Assign object at 0x0000017AA3E45AE0>,
                               398)],
             'A': [(<numba.core.ir.Assign object at 0x0000017AA3E26200>, 0)],
             'R': [(<numba.core.ir.Assign object at 0x0000017AA3E263B0>, 0)],
             'bool122': [(<numba.core.ir.Assign object at 0x0000017AA3DF4130>,
                          94)],
             'bool178': [(<numba.core.ir.Assign object at 0x0000017AA3DE6950>,
                          150)],
             'bool20': [(<numba.core.ir.Assign object at 0x0000017AA3D68040>,
                         14)],
             'bool266': [(<numba.core.ir.Assign object at 0x0000017AA3DCAA70>,
                          260)],
             'bool286': [(<numba.core.ir.Assign object at 0x0000017AA3DCAEF0>,
                          268)],
             'bool302': [(<numba.core.ir.Assign object at 0x0000017AA3DC9150>,
                          288)],
             'bool322': [(<numba.core.ir.Assign object at 0x0000017AA3DC8CD0>,
                          304)],
             'bool330': [(<numba.core.ir.Assign object at 0x0000017AA3DC83A0>,
                          324)],
             'bool350': [(<numba.core.ir.Assign object at 0x0000017AA3DC7F70>,
                          332)],
             'bool366': [(<numba.core.ir.Assign object at 0x0000017AA3DC68C0>,
                          352)],
             'bool386': [(<numba.core.ir.Assign object at 0x0000017AA3E6FCA0>,
                          368)],
             'bool394': [(<numba.core.ir.Assign object at 0x0000017AA3E442E0>,
                          388)],
             'bool66': [(<numba.core.ir.Assign object at 0x0000017AA3DF6530>,
                         26)],
             'bool8': [(<numba.core.ir.Assign object at 0x0000017AA3E27340>,
                        0)],
             'high': [(<numba.core.ir.Assign object at 0x0000017AA3E266B0>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x0000017AA3DE4F70>, 206),
                   (<numba.core.ir.Assign object at 0x0000017AA3DCA8F0>, 288),
                   (<numba.core.ir.Assign object at 0x0000017AA3E45870>, 398)],
             'j': [(<numba.core.ir.Assign object at 0x0000017AA3DCB490>, 206),
                   (<numba.core.ir.Assign object at 0x0000017AA3DC7310>, 352),
                   (<numba.core.ir.Assign object at 0x0000017AA3E45D50>, 398)],
             'low': [(<numba.core.ir.Assign object at 0x0000017AA3E262C0>, 0)],
             'mid': [(<numba.core.ir.Assign object at 0x0000017AA3D15990>, 26)],
             'pivot': [(<numba.core.ir.Assign object at 0x0000017AA3DE5630>,
                        206)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA3D06F20>
DEBUG:numba.core.ssa:Fix SSA violator on var i
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: A = arg(0, name=A)
DEBUG:numba.core.ssa:on stmt: R = arg(1, name=R)
DEBUG:numba.core.ssa:on stmt: low = arg(2, name=low)
DEBUG:numba.core.ssa:on stmt: high = arg(3, name=high)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = low >= $const4.1
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, quicksort.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 14, 10
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $assertion_error10.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $18compare_op.2 = high > low
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, quicksort.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 26, 22
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $assertion_error22.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $30binary_add.2 = low + high
DEBUG:numba.core.ssa:on stmt: $const32.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: mid = $30binary_add.2 >> $const32.3
DEBUG:numba.core.ssa:on stmt: $38load_deref.5 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $40load_deref.6 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.10 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50call_function.11 = call $40load_deref.6(A, $48binary_subscr.10, func=$40load_deref.6, args=[Var(A, quicksort.py:86), Var($48binary_subscr.10, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $52load_deref.12 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $60binary_subscr.16 = getitem(value=R, index=low, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $62call_function.17 = call $52load_deref.12(A, $60binary_subscr.16, func=$52load_deref.12, args=[Var(A, quicksort.py:86), Var($60binary_subscr.16, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $64call_function.18 = call $38load_deref.5($50call_function.11, $62call_function.17, func=$38load_deref.5, args=[Var($50call_function.11, quicksort.py:102), Var($62call_function.17, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool66 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $66pred = call bool66($64call_function.18, func=bool66, args=(Var($64call_function.18, quicksort.py:102),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $66pred, 68, 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 68
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $72binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $78binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[low] = $72binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[mid] = $78binary_subscr.5
DEBUG:numba.core.ssa:on stmt: jump 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $94load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $96load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $104binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $106call_function.6 = call $96load_deref.1(A, $104binary_subscr.5, func=$96load_deref.1, args=[Var(A, quicksort.py:86), Var($104binary_subscr.5, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $108load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $116binary_subscr.11 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $118call_function.12 = call $108load_deref.7(A, $116binary_subscr.11, func=$108load_deref.7, args=[Var(A, quicksort.py:86), Var($116binary_subscr.11, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $120call_function.13 = call $94load_deref.0($106call_function.6, $118call_function.12, func=$94load_deref.0, args=[Var($106call_function.6, quicksort.py:104), Var($118call_function.12, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120call_function.13, func=bool122, args=(Var($120call_function.13, quicksort.py:104),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $128binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $134binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[high] = $128binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[mid] = $134binary_subscr.5
DEBUG:numba.core.ssa:on stmt: jump 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $150load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $152load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $160binary_subscr.5 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $162call_function.6 = call $152load_deref.1(A, $160binary_subscr.5, func=$152load_deref.1, args=[Var(A, quicksort.py:86), Var($160binary_subscr.5, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $172binary_subscr.11 = getitem(value=R, index=low, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $174call_function.12 = call $164load_deref.7(A, $172binary_subscr.11, func=$164load_deref.7, args=[Var(A, quicksort.py:86), Var($172binary_subscr.11, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $176call_function.13 = call $150load_deref.0($162call_function.6, $174call_function.12, func=$150load_deref.0, args=[Var($162call_function.6, quicksort.py:106), Var($174call_function.12, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176call_function.13, func=bool178, args=(Var($176call_function.13, quicksort.py:106),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $184binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[low] = $184binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[mid] = $190binary_subscr.5
DEBUG:numba.core.ssa:on stmt: jump 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $206load_deref.0 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $214binary_subscr.4 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: pivot = call $206load_deref.0(A, $214binary_subscr.4, func=$206load_deref.0, args=[Var(A, quicksort.py:86), Var($214binary_subscr.4, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $224binary_subscr.8 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $230binary_subscr.11 = getitem(value=R, index=high, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[high] = $224binary_subscr.8
DEBUG:numba.core.ssa:on stmt: R[mid] = $230binary_subscr.11
DEBUG:numba.core.ssa:on stmt: i = low
DEBUG:numba.core.ssa:first assign: i
DEBUG:numba.core.ssa:replaced with: i = low
DEBUG:numba.core.ssa:on stmt: $const252.18 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: j = high - $const252.18
DEBUG:numba.core.ssa:on stmt: jump 260
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 260
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $264compare_op.2 = i < high
DEBUG:numba.core.ssa:on stmt: bool266 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $266pred = call bool266($264compare_op.2, func=bool266, args=(Var($264compare_op.2, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $266pred, 268, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $268load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $270load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $278binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $280call_function.6 = call $270load_deref.1(A, $278binary_subscr.5, func=$270load_deref.1, args=[Var(A, quicksort.py:86), Var($278binary_subscr.5, quicksort.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $284call_function.8 = call $268load_deref.0($280call_function.6, pivot, func=$268load_deref.0, args=[Var($280call_function.6, quicksort.py:115), Var(pivot, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool286 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $286pred = call bool286($284call_function.8, func=bool286, args=(Var($284call_function.8, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $286pred, 288, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 288
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $const290.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $292inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const290.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i = $292inplace_add.2
DEBUG:numba.core.ssa:replaced with: i.1 = $292inplace_add.2
DEBUG:numba.core.ssa:on stmt: $300compare_op.5 = i < high
DEBUG:numba.core.ssa:on stmt: bool302 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $302pred = call bool302($300compare_op.5, func=bool302, args=(Var($300compare_op.5, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $302pred, 304, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 304
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $304load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $306load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $314binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $316call_function.6 = call $306load_deref.1(A, $314binary_subscr.5, func=$306load_deref.1, args=[Var(A, quicksort.py:86), Var($314binary_subscr.5, quicksort.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $320call_function.8 = call $304load_deref.0($316call_function.6, pivot, func=$304load_deref.0, args=[Var($316call_function.6, quicksort.py:115), Var(pivot, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool322 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $322pred = call bool322($320call_function.8, func=bool322, args=(Var($320call_function.8, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $322pred, 288, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 324
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $328compare_op.2 = j >= low
DEBUG:numba.core.ssa:on stmt: bool330 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $330pred = call bool330($328compare_op.2, func=bool330, args=(Var($328compare_op.2, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $330pred, 332, 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 332
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $332load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $336load_deref.2 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $344binary_subscr.6 = getitem(value=R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $346call_function.7 = call $336load_deref.2(A, $344binary_subscr.6, func=$336load_deref.2, args=[Var(A, quicksort.py:86), Var($344binary_subscr.6, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $348call_function.8 = call $332load_deref.0(pivot, $346call_function.7, func=$332load_deref.0, args=[Var(pivot, quicksort.py:108), Var($346call_function.7, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool350 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $350pred = call bool350($348call_function.8, func=bool350, args=(Var($348call_function.8, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $350pred, 352, 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 352
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $const354.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $356inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const354.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: j = $356inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: $364compare_op.5 = j >= low
DEBUG:numba.core.ssa:on stmt: bool366 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $366pred = call bool366($364compare_op.5, func=bool366, args=(Var($364compare_op.5, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $366pred, 368, 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 368
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $368load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $372load_deref.2 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $380binary_subscr.6 = getitem(value=R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $382call_function.7 = call $372load_deref.2(A, $380binary_subscr.6, func=$372load_deref.2, args=[Var(A, quicksort.py:86), Var($380binary_subscr.6, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $384call_function.8 = call $368load_deref.0(pivot, $382call_function.7, func=$368load_deref.0, args=[Var(pivot, quicksort.py:108), Var($382call_function.7, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool386 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $386pred = call bool386($384call_function.8, func=bool386, args=(Var($384call_function.8, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $386pred, 352, 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 388
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $392compare_op.2 = i >= j
DEBUG:numba.core.ssa:on stmt: bool394 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $394pred = call bool394($392compare_op.2, func=bool394, args=(Var($392compare_op.2, quicksort.py:119),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $394pred, 396, 398
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: jump 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 398
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $402binary_subscr.2 = getitem(value=R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[i] = $402binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[j] = $408binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const426.11 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $428inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const426.11, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i = $428inplace_add.12
DEBUG:numba.core.ssa:replaced with: i.2 = $428inplace_add.12
DEBUG:numba.core.ssa:on stmt: $const434.14 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $436inplace_subtract.15 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const434.14, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: j = $436inplace_subtract.15
DEBUG:numba.core.ssa:on stmt: jump 260
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $446binary_subscr.2 = getitem(value=R, index=high, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $452binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[i] = $446binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[high] = $452binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $470return_value.11 = cast(value=i)
DEBUG:numba.core.ssa:on stmt: return $470return_value.11
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {206: [<numba.core.ir.Assign object at 0x0000017AA3E25FF0>],
             288: [<numba.core.ir.Assign object at 0x0000017AA3E25C90>],
             398: [<numba.core.ir.Assign object at 0x0000017AA3E25D50>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: A = arg(0, name=A)
DEBUG:numba.core.ssa:on stmt: R = arg(1, name=R)
DEBUG:numba.core.ssa:on stmt: low = arg(2, name=low)
DEBUG:numba.core.ssa:on stmt: high = arg(3, name=high)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = low >= $const4.1
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, quicksort.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 14, 10
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $assertion_error10.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $18compare_op.2 = high > low
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, quicksort.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 26, 22
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $assertion_error22.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $30binary_add.2 = low + high
DEBUG:numba.core.ssa:on stmt: $const32.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: mid = $30binary_add.2 >> $const32.3
DEBUG:numba.core.ssa:on stmt: $38load_deref.5 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $40load_deref.6 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.10 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50call_function.11 = call $40load_deref.6(A, $48binary_subscr.10, func=$40load_deref.6, args=[Var(A, quicksort.py:86), Var($48binary_subscr.10, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $52load_deref.12 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $60binary_subscr.16 = getitem(value=R, index=low, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $62call_function.17 = call $52load_deref.12(A, $60binary_subscr.16, func=$52load_deref.12, args=[Var(A, quicksort.py:86), Var($60binary_subscr.16, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $64call_function.18 = call $38load_deref.5($50call_function.11, $62call_function.17, func=$38load_deref.5, args=[Var($50call_function.11, quicksort.py:102), Var($62call_function.17, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool66 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $66pred = call bool66($64call_function.18, func=bool66, args=(Var($64call_function.18, quicksort.py:102),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $66pred, 68, 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 68
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $72binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $78binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[low] = $72binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[mid] = $78binary_subscr.5
DEBUG:numba.core.ssa:on stmt: jump 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $94load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $96load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $104binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $106call_function.6 = call $96load_deref.1(A, $104binary_subscr.5, func=$96load_deref.1, args=[Var(A, quicksort.py:86), Var($104binary_subscr.5, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $108load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $116binary_subscr.11 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $118call_function.12 = call $108load_deref.7(A, $116binary_subscr.11, func=$108load_deref.7, args=[Var(A, quicksort.py:86), Var($116binary_subscr.11, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $120call_function.13 = call $94load_deref.0($106call_function.6, $118call_function.12, func=$94load_deref.0, args=[Var($106call_function.6, quicksort.py:104), Var($118call_function.12, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120call_function.13, func=bool122, args=(Var($120call_function.13, quicksort.py:104),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $128binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $134binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[high] = $128binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[mid] = $134binary_subscr.5
DEBUG:numba.core.ssa:on stmt: jump 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $150load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $152load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $160binary_subscr.5 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $162call_function.6 = call $152load_deref.1(A, $160binary_subscr.5, func=$152load_deref.1, args=[Var(A, quicksort.py:86), Var($160binary_subscr.5, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $172binary_subscr.11 = getitem(value=R, index=low, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $174call_function.12 = call $164load_deref.7(A, $172binary_subscr.11, func=$164load_deref.7, args=[Var(A, quicksort.py:86), Var($172binary_subscr.11, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $176call_function.13 = call $150load_deref.0($162call_function.6, $174call_function.12, func=$150load_deref.0, args=[Var($162call_function.6, quicksort.py:106), Var($174call_function.12, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176call_function.13, func=bool178, args=(Var($176call_function.13, quicksort.py:106),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $184binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[low] = $184binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[mid] = $190binary_subscr.5
DEBUG:numba.core.ssa:on stmt: jump 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $206load_deref.0 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $214binary_subscr.4 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: pivot = call $206load_deref.0(A, $214binary_subscr.4, func=$206load_deref.0, args=[Var(A, quicksort.py:86), Var($214binary_subscr.4, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $224binary_subscr.8 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $230binary_subscr.11 = getitem(value=R, index=high, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[high] = $224binary_subscr.8
DEBUG:numba.core.ssa:on stmt: R[mid] = $230binary_subscr.11
DEBUG:numba.core.ssa:on stmt: i = low
DEBUG:numba.core.ssa:on stmt: $const252.18 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: j = high - $const252.18
DEBUG:numba.core.ssa:on stmt: jump 260
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 260
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $264compare_op.2 = i < high
DEBUG:numba.core.ssa:find_def var='i' stmt=$264compare_op.2 = i < high
DEBUG:numba.core.ssa:find_def_from_top label 260
DEBUG:numba.core.ssa:insert phi node i.3 = phi(incoming_values=[], incoming_blocks=[]) at 260
DEBUG:numba.core.ssa:find_def_from_bottom label 398
DEBUG:numba.core.ssa:incoming_def i.2 = $428inplace_add.12
DEBUG:numba.core.ssa:find_def_from_bottom label 206
DEBUG:numba.core.ssa:incoming_def i = low
DEBUG:numba.core.ssa:replaced with: $264compare_op.2 = i.3 < high
DEBUG:numba.core.ssa:on stmt: bool266 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $266pred = call bool266($264compare_op.2, func=bool266, args=(Var($264compare_op.2, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $266pred, 268, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $268load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $270load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $278binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='i' stmt=$278binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 268
DEBUG:numba.core.ssa:idom 260 from label 268
DEBUG:numba.core.ssa:find_def_from_bottom label 260
DEBUG:numba.core.ssa:replaced with: $278binary_subscr.5 = getitem(value=R, index=i.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $280call_function.6 = call $270load_deref.1(A, $278binary_subscr.5, func=$270load_deref.1, args=[Var(A, quicksort.py:86), Var($278binary_subscr.5, quicksort.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $284call_function.8 = call $268load_deref.0($280call_function.6, pivot, func=$268load_deref.0, args=[Var($280call_function.6, quicksort.py:115), Var(pivot, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool286 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $286pred = call bool286($284call_function.8, func=bool286, args=(Var($284call_function.8, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $286pred, 288, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 288
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $const290.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $292inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const290.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='i' stmt=$292inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const290.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 288
DEBUG:numba.core.ssa:insert phi node i.4 = phi(incoming_values=[], incoming_blocks=[]) at 288
DEBUG:numba.core.ssa:find_def_from_bottom label 304
DEBUG:numba.core.ssa:find_def_from_top label 304
DEBUG:numba.core.ssa:idom 288 from label 304
DEBUG:numba.core.ssa:find_def_from_bottom label 288
DEBUG:numba.core.ssa:incoming_def i.1 = $292inplace_add.2
DEBUG:numba.core.ssa:find_def_from_bottom label 268
DEBUG:numba.core.ssa:find_def_from_top label 268
DEBUG:numba.core.ssa:idom 260 from label 268
DEBUG:numba.core.ssa:find_def_from_bottom label 260
DEBUG:numba.core.ssa:incoming_def i.3 = phi(incoming_values=[Var(i.2, quicksort.py:122), Var(i, quicksort.py:112)], incoming_blocks=[398, 206])
DEBUG:numba.core.ssa:replaced with: $292inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i.4, rhs=$const290.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i.1 = $292inplace_add.2
DEBUG:numba.core.ssa:on stmt: $300compare_op.5 = i < high
DEBUG:numba.core.ssa:find_def var='i' stmt=$300compare_op.5 = i < high
DEBUG:numba.core.ssa:replaced with: $300compare_op.5 = i.1 < high
DEBUG:numba.core.ssa:on stmt: bool302 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $302pred = call bool302($300compare_op.5, func=bool302, args=(Var($300compare_op.5, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $302pred, 304, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 304
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $304load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $306load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $314binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='i' stmt=$314binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 304
DEBUG:numba.core.ssa:idom 288 from label 304
DEBUG:numba.core.ssa:find_def_from_bottom label 288
DEBUG:numba.core.ssa:replaced with: $314binary_subscr.5 = getitem(value=R, index=i.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $316call_function.6 = call $306load_deref.1(A, $314binary_subscr.5, func=$306load_deref.1, args=[Var(A, quicksort.py:86), Var($314binary_subscr.5, quicksort.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $320call_function.8 = call $304load_deref.0($316call_function.6, pivot, func=$304load_deref.0, args=[Var($316call_function.6, quicksort.py:115), Var(pivot, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool322 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $322pred = call bool322($320call_function.8, func=bool322, args=(Var($320call_function.8, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $322pred, 288, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 324
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $328compare_op.2 = j >= low
DEBUG:numba.core.ssa:on stmt: bool330 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $330pred = call bool330($328compare_op.2, func=bool330, args=(Var($328compare_op.2, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $330pred, 332, 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 332
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $332load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $336load_deref.2 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $344binary_subscr.6 = getitem(value=R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $346call_function.7 = call $336load_deref.2(A, $344binary_subscr.6, func=$336load_deref.2, args=[Var(A, quicksort.py:86), Var($344binary_subscr.6, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $348call_function.8 = call $332load_deref.0(pivot, $346call_function.7, func=$332load_deref.0, args=[Var(pivot, quicksort.py:108), Var($346call_function.7, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool350 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $350pred = call bool350($348call_function.8, func=bool350, args=(Var($348call_function.8, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $350pred, 352, 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 352
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $const354.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $356inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const354.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: j = $356inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: $364compare_op.5 = j >= low
DEBUG:numba.core.ssa:on stmt: bool366 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $366pred = call bool366($364compare_op.5, func=bool366, args=(Var($364compare_op.5, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $366pred, 368, 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 368
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $368load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $372load_deref.2 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $380binary_subscr.6 = getitem(value=R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $382call_function.7 = call $372load_deref.2(A, $380binary_subscr.6, func=$372load_deref.2, args=[Var(A, quicksort.py:86), Var($380binary_subscr.6, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $384call_function.8 = call $368load_deref.0(pivot, $382call_function.7, func=$368load_deref.0, args=[Var(pivot, quicksort.py:108), Var($382call_function.7, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool386 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $386pred = call bool386($384call_function.8, func=bool386, args=(Var($384call_function.8, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $386pred, 352, 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 388
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $392compare_op.2 = i >= j
DEBUG:numba.core.ssa:find_def var='i' stmt=$392compare_op.2 = i >= j
DEBUG:numba.core.ssa:find_def_from_top label 388
DEBUG:numba.core.ssa:idom 324 from label 388
DEBUG:numba.core.ssa:find_def_from_bottom label 324
DEBUG:numba.core.ssa:find_def_from_top label 324
DEBUG:numba.core.ssa:insert phi node i.5 = phi(incoming_values=[], incoming_blocks=[]) at 324
DEBUG:numba.core.ssa:find_def_from_bottom label 288
DEBUG:numba.core.ssa:incoming_def i.1 = $292inplace_add.2
DEBUG:numba.core.ssa:find_def_from_bottom label 304
DEBUG:numba.core.ssa:find_def_from_top label 304
DEBUG:numba.core.ssa:idom 288 from label 304
DEBUG:numba.core.ssa:find_def_from_bottom label 288
DEBUG:numba.core.ssa:incoming_def i.1 = $292inplace_add.2
DEBUG:numba.core.ssa:find_def_from_bottom label 260
DEBUG:numba.core.ssa:incoming_def i.3 = phi(incoming_values=[Var(i.2, quicksort.py:122), Var(i, quicksort.py:112)], incoming_blocks=[398, 206])
DEBUG:numba.core.ssa:find_def_from_bottom label 268
DEBUG:numba.core.ssa:find_def_from_top label 268
DEBUG:numba.core.ssa:idom 260 from label 268
DEBUG:numba.core.ssa:find_def_from_bottom label 260
DEBUG:numba.core.ssa:incoming_def i.3 = phi(incoming_values=[Var(i.2, quicksort.py:122), Var(i, quicksort.py:112)], incoming_blocks=[398, 206])
DEBUG:numba.core.ssa:replaced with: $392compare_op.2 = i.5 >= j
DEBUG:numba.core.ssa:on stmt: bool394 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $394pred = call bool394($392compare_op.2, func=bool394, args=(Var($392compare_op.2, quicksort.py:119),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $394pred, 396, 398
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: jump 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 398
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $402binary_subscr.2 = getitem(value=R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='i' stmt=$408binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 398
DEBUG:numba.core.ssa:idom 388 from label 398
DEBUG:numba.core.ssa:find_def_from_bottom label 388
DEBUG:numba.core.ssa:find_def_from_top label 388
DEBUG:numba.core.ssa:idom 324 from label 388
DEBUG:numba.core.ssa:find_def_from_bottom label 324
DEBUG:numba.core.ssa:replaced with: $408binary_subscr.5 = getitem(value=R, index=i.5, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[i] = $402binary_subscr.2
DEBUG:numba.core.ssa:find_def var='i' stmt=R[i] = $402binary_subscr.2
DEBUG:numba.core.ssa:find_def_from_top label 398
DEBUG:numba.core.ssa:idom 388 from label 398
DEBUG:numba.core.ssa:find_def_from_bottom label 388
DEBUG:numba.core.ssa:find_def_from_top label 388
DEBUG:numba.core.ssa:idom 324 from label 388
DEBUG:numba.core.ssa:find_def_from_bottom label 324
DEBUG:numba.core.ssa:replaced with: R[i.5] = $402binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[j] = $408binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const426.11 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $428inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const426.11, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='i' stmt=$428inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const426.11, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 398
DEBUG:numba.core.ssa:idom 388 from label 398
DEBUG:numba.core.ssa:find_def_from_bottom label 388
DEBUG:numba.core.ssa:find_def_from_top label 388
DEBUG:numba.core.ssa:idom 324 from label 388
DEBUG:numba.core.ssa:find_def_from_bottom label 324
DEBUG:numba.core.ssa:replaced with: $428inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i.5, rhs=$const426.11, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i.2 = $428inplace_add.12
DEBUG:numba.core.ssa:on stmt: $const434.14 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $436inplace_subtract.15 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const434.14, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: j = $436inplace_subtract.15
DEBUG:numba.core.ssa:on stmt: jump 260
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $446binary_subscr.2 = getitem(value=R, index=high, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $452binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='i' stmt=$452binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 442
DEBUG:numba.core.ssa:idom 396 from label 442
DEBUG:numba.core.ssa:find_def_from_bottom label 396
DEBUG:numba.core.ssa:find_def_from_top label 396
DEBUG:numba.core.ssa:idom 388 from label 396
DEBUG:numba.core.ssa:find_def_from_bottom label 388
DEBUG:numba.core.ssa:find_def_from_top label 388
DEBUG:numba.core.ssa:idom 324 from label 388
DEBUG:numba.core.ssa:find_def_from_bottom label 324
DEBUG:numba.core.ssa:replaced with: $452binary_subscr.5 = getitem(value=R, index=i.5, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[i] = $446binary_subscr.2
DEBUG:numba.core.ssa:find_def var='i' stmt=R[i] = $446binary_subscr.2
DEBUG:numba.core.ssa:find_def_from_top label 442
DEBUG:numba.core.ssa:idom 396 from label 442
DEBUG:numba.core.ssa:find_def_from_bottom label 396
DEBUG:numba.core.ssa:find_def_from_top label 396
DEBUG:numba.core.ssa:idom 388 from label 396
DEBUG:numba.core.ssa:find_def_from_bottom label 388
DEBUG:numba.core.ssa:find_def_from_top label 388
DEBUG:numba.core.ssa:idom 324 from label 388
DEBUG:numba.core.ssa:find_def_from_bottom label 324
DEBUG:numba.core.ssa:replaced with: R[i.5] = $446binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[high] = $452binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $470return_value.11 = cast(value=i)
DEBUG:numba.core.ssa:find_def var='i' stmt=$470return_value.11 = cast(value=i)
DEBUG:numba.core.ssa:find_def_from_top label 442
DEBUG:numba.core.ssa:idom 396 from label 442
DEBUG:numba.core.ssa:find_def_from_bottom label 396
DEBUG:numba.core.ssa:find_def_from_top label 396
DEBUG:numba.core.ssa:idom 388 from label 396
DEBUG:numba.core.ssa:find_def_from_bottom label 388
DEBUG:numba.core.ssa:find_def_from_top label 388
DEBUG:numba.core.ssa:idom 324 from label 388
DEBUG:numba.core.ssa:find_def_from_bottom label 324
DEBUG:numba.core.ssa:replaced with: $470return_value.11 = cast(value=i.5)
DEBUG:numba.core.ssa:on stmt: return $470return_value.11
DEBUG:numba.core.ssa:Fix SSA violator on var j
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: A = arg(0, name=A)
DEBUG:numba.core.ssa:on stmt: R = arg(1, name=R)
DEBUG:numba.core.ssa:on stmt: low = arg(2, name=low)
DEBUG:numba.core.ssa:on stmt: high = arg(3, name=high)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = low >= $const4.1
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, quicksort.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 14, 10
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $assertion_error10.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $18compare_op.2 = high > low
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, quicksort.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 26, 22
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $assertion_error22.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $30binary_add.2 = low + high
DEBUG:numba.core.ssa:on stmt: $const32.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: mid = $30binary_add.2 >> $const32.3
DEBUG:numba.core.ssa:on stmt: $38load_deref.5 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $40load_deref.6 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.10 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50call_function.11 = call $40load_deref.6(A, $48binary_subscr.10, func=$40load_deref.6, args=[Var(A, quicksort.py:86), Var($48binary_subscr.10, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $52load_deref.12 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $60binary_subscr.16 = getitem(value=R, index=low, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $62call_function.17 = call $52load_deref.12(A, $60binary_subscr.16, func=$52load_deref.12, args=[Var(A, quicksort.py:86), Var($60binary_subscr.16, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $64call_function.18 = call $38load_deref.5($50call_function.11, $62call_function.17, func=$38load_deref.5, args=[Var($50call_function.11, quicksort.py:102), Var($62call_function.17, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool66 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $66pred = call bool66($64call_function.18, func=bool66, args=(Var($64call_function.18, quicksort.py:102),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $66pred, 68, 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 68
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $72binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $78binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[low] = $72binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[mid] = $78binary_subscr.5
DEBUG:numba.core.ssa:on stmt: jump 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $94load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $96load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $104binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $106call_function.6 = call $96load_deref.1(A, $104binary_subscr.5, func=$96load_deref.1, args=[Var(A, quicksort.py:86), Var($104binary_subscr.5, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $108load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $116binary_subscr.11 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $118call_function.12 = call $108load_deref.7(A, $116binary_subscr.11, func=$108load_deref.7, args=[Var(A, quicksort.py:86), Var($116binary_subscr.11, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $120call_function.13 = call $94load_deref.0($106call_function.6, $118call_function.12, func=$94load_deref.0, args=[Var($106call_function.6, quicksort.py:104), Var($118call_function.12, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120call_function.13, func=bool122, args=(Var($120call_function.13, quicksort.py:104),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $128binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $134binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[high] = $128binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[mid] = $134binary_subscr.5
DEBUG:numba.core.ssa:on stmt: jump 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $150load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $152load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $160binary_subscr.5 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $162call_function.6 = call $152load_deref.1(A, $160binary_subscr.5, func=$152load_deref.1, args=[Var(A, quicksort.py:86), Var($160binary_subscr.5, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $172binary_subscr.11 = getitem(value=R, index=low, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $174call_function.12 = call $164load_deref.7(A, $172binary_subscr.11, func=$164load_deref.7, args=[Var(A, quicksort.py:86), Var($172binary_subscr.11, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $176call_function.13 = call $150load_deref.0($162call_function.6, $174call_function.12, func=$150load_deref.0, args=[Var($162call_function.6, quicksort.py:106), Var($174call_function.12, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176call_function.13, func=bool178, args=(Var($176call_function.13, quicksort.py:106),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $184binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[low] = $184binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[mid] = $190binary_subscr.5
DEBUG:numba.core.ssa:on stmt: jump 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $206load_deref.0 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $214binary_subscr.4 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: pivot = call $206load_deref.0(A, $214binary_subscr.4, func=$206load_deref.0, args=[Var(A, quicksort.py:86), Var($214binary_subscr.4, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $224binary_subscr.8 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $230binary_subscr.11 = getitem(value=R, index=high, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[high] = $224binary_subscr.8
DEBUG:numba.core.ssa:on stmt: R[mid] = $230binary_subscr.11
DEBUG:numba.core.ssa:on stmt: i = low
DEBUG:numba.core.ssa:on stmt: $const252.18 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: j = high - $const252.18
DEBUG:numba.core.ssa:first assign: j
DEBUG:numba.core.ssa:replaced with: j = high - $const252.18
DEBUG:numba.core.ssa:on stmt: jump 260
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 260
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: i.3 = phi(incoming_values=[Var(i.2, quicksort.py:122), Var(i, quicksort.py:112)], incoming_blocks=[398, 206])
DEBUG:numba.core.ssa:on stmt: $264compare_op.2 = i.3 < high
DEBUG:numba.core.ssa:on stmt: bool266 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $266pred = call bool266($264compare_op.2, func=bool266, args=(Var($264compare_op.2, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $266pred, 268, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $268load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $270load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $278binary_subscr.5 = getitem(value=R, index=i.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $280call_function.6 = call $270load_deref.1(A, $278binary_subscr.5, func=$270load_deref.1, args=[Var(A, quicksort.py:86), Var($278binary_subscr.5, quicksort.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $284call_function.8 = call $268load_deref.0($280call_function.6, pivot, func=$268load_deref.0, args=[Var($280call_function.6, quicksort.py:115), Var(pivot, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool286 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $286pred = call bool286($284call_function.8, func=bool286, args=(Var($284call_function.8, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $286pred, 288, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 288
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: i.4 = phi(incoming_values=[Var(i.1, quicksort.py:116), Var(i.3, quicksort.py:115)], incoming_blocks=[304, 268])
DEBUG:numba.core.ssa:on stmt: $const290.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $292inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i.4, rhs=$const290.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i.1 = $292inplace_add.2
DEBUG:numba.core.ssa:on stmt: $300compare_op.5 = i.1 < high
DEBUG:numba.core.ssa:on stmt: bool302 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $302pred = call bool302($300compare_op.5, func=bool302, args=(Var($300compare_op.5, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $302pred, 304, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 304
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $304load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $306load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $314binary_subscr.5 = getitem(value=R, index=i.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $316call_function.6 = call $306load_deref.1(A, $314binary_subscr.5, func=$306load_deref.1, args=[Var(A, quicksort.py:86), Var($314binary_subscr.5, quicksort.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $320call_function.8 = call $304load_deref.0($316call_function.6, pivot, func=$304load_deref.0, args=[Var($316call_function.6, quicksort.py:115), Var(pivot, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool322 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $322pred = call bool322($320call_function.8, func=bool322, args=(Var($320call_function.8, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $322pred, 288, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 324
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: i.5 = phi(incoming_values=[Var(i.1, quicksort.py:116), Var(i.1, quicksort.py:116), Var(i.3, quicksort.py:115), Var(i.3, quicksort.py:115)], incoming_blocks=[288, 304, 260, 268])
DEBUG:numba.core.ssa:on stmt: $328compare_op.2 = j >= low
DEBUG:numba.core.ssa:on stmt: bool330 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $330pred = call bool330($328compare_op.2, func=bool330, args=(Var($328compare_op.2, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $330pred, 332, 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 332
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $332load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $336load_deref.2 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $344binary_subscr.6 = getitem(value=R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $346call_function.7 = call $336load_deref.2(A, $344binary_subscr.6, func=$336load_deref.2, args=[Var(A, quicksort.py:86), Var($344binary_subscr.6, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $348call_function.8 = call $332load_deref.0(pivot, $346call_function.7, func=$332load_deref.0, args=[Var(pivot, quicksort.py:108), Var($346call_function.7, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool350 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $350pred = call bool350($348call_function.8, func=bool350, args=(Var($348call_function.8, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $350pred, 352, 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 352
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $const354.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $356inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const354.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: j = $356inplace_subtract.2
DEBUG:numba.core.ssa:replaced with: j.1 = $356inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: $364compare_op.5 = j >= low
DEBUG:numba.core.ssa:on stmt: bool366 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $366pred = call bool366($364compare_op.5, func=bool366, args=(Var($364compare_op.5, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $366pred, 368, 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 368
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $368load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $372load_deref.2 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $380binary_subscr.6 = getitem(value=R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $382call_function.7 = call $372load_deref.2(A, $380binary_subscr.6, func=$372load_deref.2, args=[Var(A, quicksort.py:86), Var($380binary_subscr.6, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $384call_function.8 = call $368load_deref.0(pivot, $382call_function.7, func=$368load_deref.0, args=[Var(pivot, quicksort.py:108), Var($382call_function.7, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool386 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $386pred = call bool386($384call_function.8, func=bool386, args=(Var($384call_function.8, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $386pred, 352, 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 388
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $392compare_op.2 = i.5 >= j
DEBUG:numba.core.ssa:on stmt: bool394 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $394pred = call bool394($392compare_op.2, func=bool394, args=(Var($392compare_op.2, quicksort.py:119),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $394pred, 396, 398
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: jump 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 398
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $402binary_subscr.2 = getitem(value=R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.5 = getitem(value=R, index=i.5, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[i.5] = $402binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[j] = $408binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const426.11 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $428inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i.5, rhs=$const426.11, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i.2 = $428inplace_add.12
DEBUG:numba.core.ssa:on stmt: $const434.14 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $436inplace_subtract.15 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const434.14, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: j = $436inplace_subtract.15
DEBUG:numba.core.ssa:replaced with: j.2 = $436inplace_subtract.15
DEBUG:numba.core.ssa:on stmt: jump 260
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E47760>
DEBUG:numba.core.ssa:on stmt: $446binary_subscr.2 = getitem(value=R, index=high, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $452binary_subscr.5 = getitem(value=R, index=i.5, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[i.5] = $446binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[high] = $452binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $470return_value.11 = cast(value=i.5)
DEBUG:numba.core.ssa:on stmt: return $470return_value.11
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {206: [<numba.core.ir.Assign object at 0x0000017AA3D06CB0>],
             352: [<numba.core.ir.Assign object at 0x0000017AA3D06C80>],
             398: [<numba.core.ir.Assign object at 0x0000017AA3E7C820>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: A = arg(0, name=A)
DEBUG:numba.core.ssa:on stmt: R = arg(1, name=R)
DEBUG:numba.core.ssa:on stmt: low = arg(2, name=low)
DEBUG:numba.core.ssa:on stmt: high = arg(3, name=high)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = low >= $const4.1
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, quicksort.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 14, 10
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $assertion_error10.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $18compare_op.2 = high > low
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, quicksort.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 26, 22
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $assertion_error22.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $30binary_add.2 = low + high
DEBUG:numba.core.ssa:on stmt: $const32.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: mid = $30binary_add.2 >> $const32.3
DEBUG:numba.core.ssa:on stmt: $38load_deref.5 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $40load_deref.6 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.10 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50call_function.11 = call $40load_deref.6(A, $48binary_subscr.10, func=$40load_deref.6, args=[Var(A, quicksort.py:86), Var($48binary_subscr.10, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $52load_deref.12 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $60binary_subscr.16 = getitem(value=R, index=low, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $62call_function.17 = call $52load_deref.12(A, $60binary_subscr.16, func=$52load_deref.12, args=[Var(A, quicksort.py:86), Var($60binary_subscr.16, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $64call_function.18 = call $38load_deref.5($50call_function.11, $62call_function.17, func=$38load_deref.5, args=[Var($50call_function.11, quicksort.py:102), Var($62call_function.17, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool66 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $66pred = call bool66($64call_function.18, func=bool66, args=(Var($64call_function.18, quicksort.py:102),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $66pred, 68, 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 68
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $72binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $78binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[low] = $72binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[mid] = $78binary_subscr.5
DEBUG:numba.core.ssa:on stmt: jump 94
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $94load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $96load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $104binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $106call_function.6 = call $96load_deref.1(A, $104binary_subscr.5, func=$96load_deref.1, args=[Var(A, quicksort.py:86), Var($104binary_subscr.5, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $108load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $116binary_subscr.11 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $118call_function.12 = call $108load_deref.7(A, $116binary_subscr.11, func=$108load_deref.7, args=[Var(A, quicksort.py:86), Var($116binary_subscr.11, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $120call_function.13 = call $94load_deref.0($106call_function.6, $118call_function.12, func=$94load_deref.0, args=[Var($106call_function.6, quicksort.py:104), Var($118call_function.12, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120call_function.13, func=bool122, args=(Var($120call_function.13, quicksort.py:104),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 124, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $128binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $134binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[high] = $128binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[mid] = $134binary_subscr.5
DEBUG:numba.core.ssa:on stmt: jump 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $150load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $152load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $160binary_subscr.5 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $162call_function.6 = call $152load_deref.1(A, $160binary_subscr.5, func=$152load_deref.1, args=[Var(A, quicksort.py:86), Var($160binary_subscr.5, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $172binary_subscr.11 = getitem(value=R, index=low, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $174call_function.12 = call $164load_deref.7(A, $172binary_subscr.11, func=$164load_deref.7, args=[Var(A, quicksort.py:86), Var($172binary_subscr.11, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $176call_function.13 = call $150load_deref.0($162call_function.6, $174call_function.12, func=$150load_deref.0, args=[Var($162call_function.6, quicksort.py:106), Var($174call_function.12, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176call_function.13, func=bool178, args=(Var($176call_function.13, quicksort.py:106),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $184binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[low] = $184binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[mid] = $190binary_subscr.5
DEBUG:numba.core.ssa:on stmt: jump 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $206load_deref.0 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $214binary_subscr.4 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: pivot = call $206load_deref.0(A, $214binary_subscr.4, func=$206load_deref.0, args=[Var(A, quicksort.py:86), Var($214binary_subscr.4, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $224binary_subscr.8 = getitem(value=R, index=mid, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $230binary_subscr.11 = getitem(value=R, index=high, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[high] = $224binary_subscr.8
DEBUG:numba.core.ssa:on stmt: R[mid] = $230binary_subscr.11
DEBUG:numba.core.ssa:on stmt: i = low
DEBUG:numba.core.ssa:on stmt: $const252.18 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: j = high - $const252.18
DEBUG:numba.core.ssa:on stmt: jump 260
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 260
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: i.3 = phi(incoming_values=[Var(i.2, quicksort.py:122), Var(i, quicksort.py:112)], incoming_blocks=[398, 206])
DEBUG:numba.core.ssa:on stmt: $264compare_op.2 = i.3 < high
DEBUG:numba.core.ssa:on stmt: bool266 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $266pred = call bool266($264compare_op.2, func=bool266, args=(Var($264compare_op.2, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $266pred, 268, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $268load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $270load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $278binary_subscr.5 = getitem(value=R, index=i.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $280call_function.6 = call $270load_deref.1(A, $278binary_subscr.5, func=$270load_deref.1, args=[Var(A, quicksort.py:86), Var($278binary_subscr.5, quicksort.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $284call_function.8 = call $268load_deref.0($280call_function.6, pivot, func=$268load_deref.0, args=[Var($280call_function.6, quicksort.py:115), Var(pivot, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool286 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $286pred = call bool286($284call_function.8, func=bool286, args=(Var($284call_function.8, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $286pred, 288, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 288
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: i.4 = phi(incoming_values=[Var(i.1, quicksort.py:116), Var(i.3, quicksort.py:115)], incoming_blocks=[304, 268])
DEBUG:numba.core.ssa:on stmt: $const290.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $292inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i.4, rhs=$const290.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i.1 = $292inplace_add.2
DEBUG:numba.core.ssa:on stmt: $300compare_op.5 = i.1 < high
DEBUG:numba.core.ssa:on stmt: bool302 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $302pred = call bool302($300compare_op.5, func=bool302, args=(Var($300compare_op.5, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $302pred, 304, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 304
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $304load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $306load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $314binary_subscr.5 = getitem(value=R, index=i.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $316call_function.6 = call $306load_deref.1(A, $314binary_subscr.5, func=$306load_deref.1, args=[Var(A, quicksort.py:86), Var($314binary_subscr.5, quicksort.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $320call_function.8 = call $304load_deref.0($316call_function.6, pivot, func=$304load_deref.0, args=[Var($316call_function.6, quicksort.py:115), Var(pivot, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool322 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $322pred = call bool322($320call_function.8, func=bool322, args=(Var($320call_function.8, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $322pred, 288, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 324
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: i.5 = phi(incoming_values=[Var(i.1, quicksort.py:116), Var(i.1, quicksort.py:116), Var(i.3, quicksort.py:115), Var(i.3, quicksort.py:115)], incoming_blocks=[288, 304, 260, 268])
DEBUG:numba.core.ssa:on stmt: $328compare_op.2 = j >= low
DEBUG:numba.core.ssa:find_def var='j' stmt=$328compare_op.2 = j >= low
DEBUG:numba.core.ssa:find_def_from_top label 324
DEBUG:numba.core.ssa:idom 260 from label 324
DEBUG:numba.core.ssa:find_def_from_bottom label 260
DEBUG:numba.core.ssa:find_def_from_top label 260
DEBUG:numba.core.ssa:insert phi node j.3 = phi(incoming_values=[], incoming_blocks=[]) at 260
DEBUG:numba.core.ssa:find_def_from_bottom label 398
DEBUG:numba.core.ssa:incoming_def j.2 = $436inplace_subtract.15
DEBUG:numba.core.ssa:find_def_from_bottom label 206
DEBUG:numba.core.ssa:incoming_def j = high - $const252.18
DEBUG:numba.core.ssa:replaced with: $328compare_op.2 = j.3 >= low
DEBUG:numba.core.ssa:on stmt: bool330 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $330pred = call bool330($328compare_op.2, func=bool330, args=(Var($328compare_op.2, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $330pred, 332, 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 332
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $332load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $336load_deref.2 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $344binary_subscr.6 = getitem(value=R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='j' stmt=$344binary_subscr.6 = getitem(value=R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 332
DEBUG:numba.core.ssa:idom 324 from label 332
DEBUG:numba.core.ssa:find_def_from_bottom label 324
DEBUG:numba.core.ssa:find_def_from_top label 324
DEBUG:numba.core.ssa:idom 260 from label 324
DEBUG:numba.core.ssa:find_def_from_bottom label 260
DEBUG:numba.core.ssa:replaced with: $344binary_subscr.6 = getitem(value=R, index=j.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $346call_function.7 = call $336load_deref.2(A, $344binary_subscr.6, func=$336load_deref.2, args=[Var(A, quicksort.py:86), Var($344binary_subscr.6, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $348call_function.8 = call $332load_deref.0(pivot, $346call_function.7, func=$332load_deref.0, args=[Var(pivot, quicksort.py:108), Var($346call_function.7, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool350 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $350pred = call bool350($348call_function.8, func=bool350, args=(Var($348call_function.8, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $350pred, 352, 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 352
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $const354.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $356inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const354.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='j' stmt=$356inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const354.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 352
DEBUG:numba.core.ssa:insert phi node j.4 = phi(incoming_values=[], incoming_blocks=[]) at 352
DEBUG:numba.core.ssa:find_def_from_bottom label 368
DEBUG:numba.core.ssa:find_def_from_top label 368
DEBUG:numba.core.ssa:idom 352 from label 368
DEBUG:numba.core.ssa:find_def_from_bottom label 352
DEBUG:numba.core.ssa:incoming_def j.1 = $356inplace_subtract.2
DEBUG:numba.core.ssa:find_def_from_bottom label 332
DEBUG:numba.core.ssa:find_def_from_top label 332
DEBUG:numba.core.ssa:idom 324 from label 332
DEBUG:numba.core.ssa:find_def_from_bottom label 324
DEBUG:numba.core.ssa:find_def_from_top label 324
DEBUG:numba.core.ssa:idom 260 from label 324
DEBUG:numba.core.ssa:find_def_from_bottom label 260
DEBUG:numba.core.ssa:incoming_def j.3 = phi(incoming_values=[Var(j.2, quicksort.py:123), Var(j, quicksort.py:113)], incoming_blocks=[398, 206])
DEBUG:numba.core.ssa:replaced with: $356inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j.4, rhs=$const354.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: j.1 = $356inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: $364compare_op.5 = j >= low
DEBUG:numba.core.ssa:find_def var='j' stmt=$364compare_op.5 = j >= low
DEBUG:numba.core.ssa:replaced with: $364compare_op.5 = j.1 >= low
DEBUG:numba.core.ssa:on stmt: bool366 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $366pred = call bool366($364compare_op.5, func=bool366, args=(Var($364compare_op.5, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $366pred, 368, 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 368
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $368load_deref.0 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $372load_deref.2 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $380binary_subscr.6 = getitem(value=R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='j' stmt=$380binary_subscr.6 = getitem(value=R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 368
DEBUG:numba.core.ssa:idom 352 from label 368
DEBUG:numba.core.ssa:find_def_from_bottom label 352
DEBUG:numba.core.ssa:replaced with: $380binary_subscr.6 = getitem(value=R, index=j.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $382call_function.7 = call $372load_deref.2(A, $380binary_subscr.6, func=$372load_deref.2, args=[Var(A, quicksort.py:86), Var($380binary_subscr.6, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $384call_function.8 = call $368load_deref.0(pivot, $382call_function.7, func=$368load_deref.0, args=[Var(pivot, quicksort.py:108), Var($382call_function.7, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool386 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $386pred = call bool386($384call_function.8, func=bool386, args=(Var($384call_function.8, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $386pred, 352, 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 388
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $392compare_op.2 = i.5 >= j
DEBUG:numba.core.ssa:find_def var='j' stmt=$392compare_op.2 = i.5 >= j
DEBUG:numba.core.ssa:find_def_from_top label 388
DEBUG:numba.core.ssa:insert phi node j.5 = phi(incoming_values=[], incoming_blocks=[]) at 388
DEBUG:numba.core.ssa:find_def_from_bottom label 352
DEBUG:numba.core.ssa:incoming_def j.1 = $356inplace_subtract.2
DEBUG:numba.core.ssa:find_def_from_bottom label 324
DEBUG:numba.core.ssa:find_def_from_top label 324
DEBUG:numba.core.ssa:idom 260 from label 324
DEBUG:numba.core.ssa:find_def_from_bottom label 260
DEBUG:numba.core.ssa:incoming_def j.3 = phi(incoming_values=[Var(j.2, quicksort.py:123), Var(j, quicksort.py:113)], incoming_blocks=[398, 206])
DEBUG:numba.core.ssa:find_def_from_bottom label 368
DEBUG:numba.core.ssa:find_def_from_top label 368
DEBUG:numba.core.ssa:idom 352 from label 368
DEBUG:numba.core.ssa:find_def_from_bottom label 352
DEBUG:numba.core.ssa:incoming_def j.1 = $356inplace_subtract.2
DEBUG:numba.core.ssa:find_def_from_bottom label 332
DEBUG:numba.core.ssa:find_def_from_top label 332
DEBUG:numba.core.ssa:idom 324 from label 332
DEBUG:numba.core.ssa:find_def_from_bottom label 324
DEBUG:numba.core.ssa:find_def_from_top label 324
DEBUG:numba.core.ssa:idom 260 from label 324
DEBUG:numba.core.ssa:find_def_from_bottom label 260
DEBUG:numba.core.ssa:incoming_def j.3 = phi(incoming_values=[Var(j.2, quicksort.py:123), Var(j, quicksort.py:113)], incoming_blocks=[398, 206])
DEBUG:numba.core.ssa:replaced with: $392compare_op.2 = i.5 >= j.5
DEBUG:numba.core.ssa:on stmt: bool394 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $394pred = call bool394($392compare_op.2, func=bool394, args=(Var($392compare_op.2, quicksort.py:119),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $394pred, 396, 398
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: jump 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 398
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $402binary_subscr.2 = getitem(value=R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='j' stmt=$402binary_subscr.2 = getitem(value=R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 398
DEBUG:numba.core.ssa:idom 388 from label 398
DEBUG:numba.core.ssa:find_def_from_bottom label 388
DEBUG:numba.core.ssa:replaced with: $402binary_subscr.2 = getitem(value=R, index=j.5, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.5 = getitem(value=R, index=i.5, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[i.5] = $402binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[j] = $408binary_subscr.5
DEBUG:numba.core.ssa:find_def var='j' stmt=R[j] = $408binary_subscr.5
DEBUG:numba.core.ssa:find_def_from_top label 398
DEBUG:numba.core.ssa:idom 388 from label 398
DEBUG:numba.core.ssa:find_def_from_bottom label 388
DEBUG:numba.core.ssa:replaced with: R[j.5] = $408binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const426.11 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $428inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i.5, rhs=$const426.11, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: i.2 = $428inplace_add.12
DEBUG:numba.core.ssa:on stmt: $const434.14 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $436inplace_subtract.15 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const434.14, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='j' stmt=$436inplace_subtract.15 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const434.14, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 398
DEBUG:numba.core.ssa:idom 388 from label 398
DEBUG:numba.core.ssa:find_def_from_bottom label 388
DEBUG:numba.core.ssa:replaced with: $436inplace_subtract.15 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j.5, rhs=$const434.14, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: j.2 = $436inplace_subtract.15
DEBUG:numba.core.ssa:on stmt: jump 260
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3D05D50>
DEBUG:numba.core.ssa:on stmt: $446binary_subscr.2 = getitem(value=R, index=high, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $452binary_subscr.5 = getitem(value=R, index=i.5, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[i.5] = $446binary_subscr.2
DEBUG:numba.core.ssa:on stmt: R[high] = $452binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $470return_value.11 = cast(value=i.5)
DEBUG:numba.core.ssa:on stmt: return $470return_value.11
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=45)
           2	LOAD_FAST(arg=0, lineno=47)
           4	LOAD_FAST(arg=1, lineno=47)
           6	BINARY_SUBSCR(arg=None, lineno=47)
           8	RETURN_VALUE(arg=None, lineno=47)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=45)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=47)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=47)
DEBUG:numba.core.byteflow:stack ['$A2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.core.byteflow:stack ['$A2.0', '$idx_or_val4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=47)
DEBUG:numba.core.byteflow:stack ['$6binary_subscr.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$A2.0'}), (4, {'res': '$idx_or_val4.1'}), (6, {'index': '$idx_or_val4.1', 'target': '$A2.0', 'res': '$6binary_subscr.2'}), (8, {'retval': '$6binary_subscr.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    A = arg(0, name=A)                       ['A']
    idx_or_val = arg(1, name=idx_or_val)     ['idx_or_val']
    $6binary_subscr.2 = getitem(value=A, index=idx_or_val, fn=<built-in function getitem>) ['$6binary_subscr.2', 'A', 'idx_or_val']
    $8return_value.3 = cast(value=$6binary_subscr.2) ['$6binary_subscr.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E7E5C0>
DEBUG:numba.core.ssa:on stmt: A = arg(0, name=A)
DEBUG:numba.core.ssa:on stmt: idx_or_val = arg(1, name=idx_or_val)
DEBUG:numba.core.ssa:on stmt: $6binary_subscr.2 = getitem(value=A, index=idx_or_val, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $8return_value.3 = cast(value=$6binary_subscr.2)
DEBUG:numba.core.ssa:on stmt: return $8return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000017AA3E7FBB0>,
                                    0)],
             '$8return_value.3': [(<numba.core.ir.Assign object at 0x0000017AA3E7FB50>,
                                   0)],
             'A': [(<numba.core.ir.Assign object at 0x0000017AA3E7E290>, 0)],
             'idx_or_val': [(<numba.core.ir.Assign object at 0x0000017AA3E7F430>,
                             0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA3E7E5C0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=734)
           2	LOAD_FAST(arg=0, lineno=739)
           4	LOAD_FAST(arg=1, lineno=739)
           6	COMPARE_OP(arg=0, lineno=739)
           8	JUMP_IF_TRUE_OR_POP(arg=16, lineno=739)
          10	LOAD_GLOBAL(arg=0, lineno=739)
          12	LOAD_METHOD(arg=1, lineno=739)
          14	LOAD_FAST(arg=1, lineno=739)
          16	CALL_METHOD(arg=1, lineno=739)
          18	JUMP_IF_FALSE_OR_POP(arg=16, lineno=739)
          20	LOAD_GLOBAL(arg=0, lineno=739)
          22	LOAD_METHOD(arg=1, lineno=739)
          24	LOAD_FAST(arg=0, lineno=739)
          26	CALL_METHOD(arg=1, lineno=739)
          28	UNARY_NOT(arg=None, lineno=739)
>         30	RETURN_VALUE(arg=None, lineno=739)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=734)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=739)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=739)
DEBUG:numba.core.byteflow:stack ['$a2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=COMPARE_OP(arg=0, lineno=739)
DEBUG:numba.core.byteflow:stack ['$a2.0', '$b4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=JUMP_IF_TRUE_OR_POP(arg=16, lineno=739)
DEBUG:numba.core.byteflow:stack ['$6compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=10, stack=(), blockstack=(), npush=0), Edge(pc=30, stack=('$6compare_op.2',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=10 nstack_initial=0), State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=10 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=739)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_METHOD(arg=1, lineno=739)
DEBUG:numba.core.byteflow:stack ['$10load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=739)
DEBUG:numba.core.byteflow:stack ['$12load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=CALL_METHOD(arg=1, lineno=739)
DEBUG:numba.core.byteflow:stack ['$12load_method.1', '$b14.2']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=JUMP_IF_FALSE_OR_POP(arg=16, lineno=739)
DEBUG:numba.core.byteflow:stack ['$16call_method.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=20, stack=(), blockstack=(), npush=0), Edge(pc=30, stack=('$16call_method.3',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=1), State(pc_initial=20 nstack_initial=0), State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi30.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=30 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=30, inst=RETURN_VALUE(arg=None, lineno=739)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=20 nstack_initial=0), State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=20 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=0, lineno=739)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_METHOD(arg=1, lineno=739)
DEBUG:numba.core.byteflow:stack ['$20load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=739)
DEBUG:numba.core.byteflow:stack ['$22load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=739)
DEBUG:numba.core.byteflow:stack ['$22load_method.1', '$a24.2']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=UNARY_NOT(arg=None, lineno=739)
DEBUG:numba.core.byteflow:stack ['$26call_method.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=('$28unary_not.4',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=1), State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=10 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'}})
DEBUG:numba.core.byteflow:defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$16call_method.3',
                           State(pc_initial=10 nstack_initial=0)),
                          ('$28unary_not.4',
                           State(pc_initial=20 nstack_initial=0)),
                          ('$6compare_op.2',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$16call_method.3',
                           State(pc_initial=10 nstack_initial=0)),
                          ('$28unary_not.4',
                           State(pc_initial=20 nstack_initial=0)),
                          ('$6compare_op.2',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi30.0': {('$16call_method.3', State(pc_initial=10 nstack_initial=0)),
              ('$28unary_not.4', State(pc_initial=20 nstack_initial=0)),
              ('$6compare_op.2', State(pc_initial=0 nstack_initial=0))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$6compare_op.2'},
             State(pc_initial=10 nstack_initial=0): {'$phi30.0': '$16call_method.3'},
             State(pc_initial=20 nstack_initial=0): {'$phi30.0': '$28unary_not.4'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'res': '$b4.1'}), (6, {'lhs': '$a2.0', 'rhs': '$b4.1', 'res': '$6compare_op.2'}), (8, {'pred': '$6compare_op.2'})), outgoing_phis={'$phi30.0': '$6compare_op.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={10: (), 30: ('$6compare_op.2',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=10 nstack_initial=0):
AdaptBlockInfo(insts=((10, {'res': '$10load_global.0'}), (12, {'item': '$10load_global.0', 'res': '$12load_method.1'}), (14, {'res': '$b14.2'}), (16, {'func': '$12load_method.1', 'args': ['$b14.2'], 'res': '$16call_method.3'}), (18, {'pred': '$16call_method.3'})), outgoing_phis={'$phi30.0': '$16call_method.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={20: (), 30: ('$16call_method.3',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$20load_global.0'}), (22, {'item': '$20load_global.0', 'res': '$22load_method.1'}), (24, {'res': '$a24.2'}), (26, {'func': '$22load_method.1', 'args': ['$a24.2'], 'res': '$26call_method.3'}), (28, {'value': '$26call_method.3', 'res': '$28unary_not.4'})), outgoing_phis={'$phi30.0': '$28unary_not.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28unary_not.4',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'retval': '$phi30.0', 'castval': '$30return_value.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $6compare_op.2 = a < b                   ['$6compare_op.2', 'a', 'b']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, numpy_support.py:739),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    $phi30.0 = $6compare_op.2                ['$6compare_op.2', '$phi30.0']
    branch $8pred, 30, 10                    ['$8pred']
label 10:
    $10load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$10load_global.0']
    $12load_method.1 = getattr(value=$10load_global.0, attr=isnan) ['$10load_global.0', '$12load_method.1']
    $16call_method.3 = call $12load_method.1(b, func=$12load_method.1, args=[Var(b, numpy_support.py:734)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_method.1', '$16call_method.3', 'b']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
    $18pred = call bool18($16call_method.3, func=bool18, args=(Var($16call_method.3, numpy_support.py:739),), kws=(), vararg=None, varkwarg=None, target=None) ['$16call_method.3', '$18pred', 'bool18']
    $phi30.0 = $16call_method.3              ['$16call_method.3', '$phi30.0']
    branch $18pred, 20, 30                   ['$18pred']
label 20:
    $20load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$20load_global.0']
    $22load_method.1 = getattr(value=$20load_global.0, attr=isnan) ['$20load_global.0', '$22load_method.1']
    $26call_method.3 = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, numpy_support.py:734)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', '$26call_method.3', 'a']
    $28unary_not.4 = unary(fn=<built-in function not_>, value=$26call_method.3) ['$26call_method.3', '$28unary_not.4']
    $phi30.0 = $28unary_not.4                ['$28unary_not.4', '$phi30.0']
    jump 30                                  []
label 30:
    $30return_value.1 = cast(value=$phi30.0) ['$30return_value.1', '$phi30.0']
    return $30return_value.1                 ['$30return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E920B0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = a < b
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, numpy_support.py:739),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi30.0 = $6compare_op.2
DEBUG:numba.core.ssa:on stmt: branch $8pred, 30, 10
DEBUG:numba.core.ssa:==== SSA block analysis pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E920B0>
DEBUG:numba.core.ssa:on stmt: $10load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $12load_method.1 = getattr(value=$10load_global.0, attr=isnan)
DEBUG:numba.core.ssa:on stmt: $16call_method.3 = call $12load_method.1(b, func=$12load_method.1, args=[Var(b, numpy_support.py:734)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool18 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $18pred = call bool18($16call_method.3, func=bool18, args=(Var($16call_method.3, numpy_support.py:739),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi30.0 = $16call_method.3
DEBUG:numba.core.ssa:on stmt: branch $18pred, 20, 30
DEBUG:numba.core.ssa:==== SSA block analysis pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E920B0>
DEBUG:numba.core.ssa:on stmt: $20load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=isnan)
DEBUG:numba.core.ssa:on stmt: $26call_method.3 = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, numpy_support.py:734)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $28unary_not.4 = unary(fn=<built-in function not_>, value=$26call_method.3)
DEBUG:numba.core.ssa:on stmt: $phi30.0 = $28unary_not.4
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3E920B0>
DEBUG:numba.core.ssa:on stmt: $30return_value.1 = cast(value=$phi30.0)
DEBUG:numba.core.ssa:on stmt: return $30return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA3EA0CA0>,
                                   10)],
             '$12load_method.1': [(<numba.core.ir.Assign object at 0x0000017AA3EA0E20>,
                                   10)],
             '$16call_method.3': [(<numba.core.ir.Assign object at 0x0000017AA3EA1150>,
                                   10)],
             '$18pred': [(<numba.core.ir.Assign object at 0x0000017AA3EA1360>,
                          10)],
             '$20load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA3EA1600>,
                                   20)],
             '$22load_method.1': [(<numba.core.ir.Assign object at 0x0000017AA3EA1780>,
                                   20)],
             '$26call_method.3': [(<numba.core.ir.Assign object at 0x0000017AA3EA1AB0>,
                                   20)],
             '$28unary_not.4': [(<numba.core.ir.Assign object at 0x0000017AA3EA1BA0>,
                                 20)],
             '$30return_value.1': [(<numba.core.ir.Assign object at 0x0000017AA3EA1E40>,
                                    30)],
             '$6compare_op.2': [(<numba.core.ir.Assign object at 0x0000017AA3EA0790>,
                                 0)],
             '$8pred': [(<numba.core.ir.Assign object at 0x0000017AA3EA0A00>,
                         0)],
             '$phi30.0': [(<numba.core.ir.Assign object at 0x0000017AA3EA0460>,
                           0),
                          (<numba.core.ir.Assign object at 0x0000017AA3E8EC20>,
                           10),
                          (<numba.core.ir.Assign object at 0x0000017AA3EA18A0>,
                           20)],
             'a': [(<numba.core.ir.Assign object at 0x0000017AA3EA0280>, 0)],
             'b': [(<numba.core.ir.Assign object at 0x0000017AA3EA03A0>, 0)],
             'bool18': [(<numba.core.ir.Assign object at 0x0000017AA3EA1240>,
                         10)],
             'bool8': [(<numba.core.ir.Assign object at 0x0000017AA3EA08E0>,
                        0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA3E920B0>
DEBUG:numba.core.ssa:Fix SSA violator on var $phi30.0
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E92770>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = a < b
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, numpy_support.py:739),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi30.0 = $6compare_op.2
DEBUG:numba.core.ssa:first assign: $phi30.0
DEBUG:numba.core.ssa:replaced with: $phi30.0 = $6compare_op.2
DEBUG:numba.core.ssa:on stmt: branch $8pred, 30, 10
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E92770>
DEBUG:numba.core.ssa:on stmt: $10load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $12load_method.1 = getattr(value=$10load_global.0, attr=isnan)
DEBUG:numba.core.ssa:on stmt: $16call_method.3 = call $12load_method.1(b, func=$12load_method.1, args=[Var(b, numpy_support.py:734)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool18 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $18pred = call bool18($16call_method.3, func=bool18, args=(Var($16call_method.3, numpy_support.py:739),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi30.0 = $16call_method.3
DEBUG:numba.core.ssa:replaced with: $phi30.0.1 = $16call_method.3
DEBUG:numba.core.ssa:on stmt: branch $18pred, 20, 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E92770>
DEBUG:numba.core.ssa:on stmt: $20load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=isnan)
DEBUG:numba.core.ssa:on stmt: $26call_method.3 = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, numpy_support.py:734)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $28unary_not.4 = unary(fn=<built-in function not_>, value=$26call_method.3)
DEBUG:numba.core.ssa:on stmt: $phi30.0 = $28unary_not.4
DEBUG:numba.core.ssa:replaced with: $phi30.0.2 = $28unary_not.4
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3E92770>
DEBUG:numba.core.ssa:on stmt: $30return_value.1 = cast(value=$phi30.0)
DEBUG:numba.core.ssa:on stmt: return $30return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000017AA3E92350>],
             10: [<numba.core.ir.Assign object at 0x0000017AA3E92290>],
             20: [<numba.core.ir.Assign object at 0x0000017AA3E91B10>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3E92770>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = a < b
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, numpy_support.py:739),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi30.0 = $6compare_op.2
DEBUG:numba.core.ssa:on stmt: branch $8pred, 30, 10
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3E92770>
DEBUG:numba.core.ssa:on stmt: $10load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $12load_method.1 = getattr(value=$10load_global.0, attr=isnan)
DEBUG:numba.core.ssa:on stmt: $16call_method.3 = call $12load_method.1(b, func=$12load_method.1, args=[Var(b, numpy_support.py:734)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool18 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $18pred = call bool18($16call_method.3, func=bool18, args=(Var($16call_method.3, numpy_support.py:739),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi30.0.1 = $16call_method.3
DEBUG:numba.core.ssa:on stmt: branch $18pred, 20, 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3E92770>
DEBUG:numba.core.ssa:on stmt: $20load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=isnan)
DEBUG:numba.core.ssa:on stmt: $26call_method.3 = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, numpy_support.py:734)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $28unary_not.4 = unary(fn=<built-in function not_>, value=$26call_method.3)
DEBUG:numba.core.ssa:on stmt: $phi30.0.2 = $28unary_not.4
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3E92770>
DEBUG:numba.core.ssa:on stmt: $30return_value.1 = cast(value=$phi30.0)
DEBUG:numba.core.ssa:find_def var='$phi30.0' stmt=$30return_value.1 = cast(value=$phi30.0)
DEBUG:numba.core.ssa:find_def_from_top label 30
DEBUG:numba.core.ssa:insert phi node $phi30.0.3 = phi(incoming_values=[], incoming_blocks=[]) at 30
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def $phi30.0 = $6compare_op.2
DEBUG:numba.core.ssa:find_def_from_bottom label 10
DEBUG:numba.core.ssa:incoming_def $phi30.0.1 = $16call_method.3
DEBUG:numba.core.ssa:find_def_from_bottom label 20
DEBUG:numba.core.ssa:incoming_def $phi30.0.2 = $28unary_not.4
DEBUG:numba.core.ssa:replaced with: $30return_value.1 = cast(value=$phi30.0.3)
DEBUG:numba.core.ssa:on stmt: return $30return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=66)
           2	LOAD_FAST(arg=2, lineno=71)
           4	LOAD_CONST(arg=1, lineno=71)
           6	COMPARE_OP(arg=5, lineno=71)
           8	POP_JUMP_IF_TRUE(arg=8, lineno=71)
          10	LOAD_ASSERTION_ERROR(arg=None, lineno=71)
          12	RAISE_VARARGS(arg=1, lineno=71)
>         14	LOAD_FAST(arg=3, lineno=72)
          16	LOAD_FAST(arg=2, lineno=72)
          18	COMPARE_OP(arg=1, lineno=72)
          20	POP_JUMP_IF_FALSE(arg=14, lineno=72)
          22	LOAD_CONST(arg=2, lineno=73)
          24	RETURN_VALUE(arg=None, lineno=73)
>         26	LOAD_GLOBAL(arg=0, lineno=75)
          28	LOAD_FAST(arg=2, lineno=75)
          30	LOAD_CONST(arg=3, lineno=75)
          32	BINARY_ADD(arg=None, lineno=75)
          34	LOAD_FAST(arg=3, lineno=75)
          36	LOAD_CONST(arg=3, lineno=75)
          38	BINARY_ADD(arg=None, lineno=75)
          40	CALL_FUNCTION(arg=2, lineno=75)
          42	GET_ITER(arg=None, lineno=75)
>         44	FOR_ITER(arg=61, lineno=75)
          46	STORE_FAST(arg=4, lineno=75)
          48	LOAD_FAST(arg=1, lineno=76)
          50	LOAD_FAST(arg=4, lineno=76)
          52	BINARY_SUBSCR(arg=None, lineno=76)
          54	STORE_FAST(arg=5, lineno=76)
          56	LOAD_DEREF(arg=0, lineno=77)
          58	LOAD_FAST(arg=0, lineno=77)
          60	LOAD_FAST(arg=5, lineno=77)
          62	CALL_FUNCTION(arg=2, lineno=77)
          64	STORE_FAST(arg=6, lineno=77)
          66	LOAD_FAST(arg=4, lineno=79)
          68	STORE_FAST(arg=7, lineno=79)
          70	LOAD_FAST(arg=7, lineno=80)
          72	LOAD_FAST(arg=2, lineno=80)
          74	COMPARE_OP(arg=4, lineno=80)
          76	POP_JUMP_IF_FALSE(arg=80, lineno=80)
          78	LOAD_DEREF(arg=1, lineno=80)
          80	LOAD_FAST(arg=6, lineno=80)
          82	LOAD_DEREF(arg=0, lineno=80)
          84	LOAD_FAST(arg=0, lineno=80)
          86	LOAD_FAST(arg=1, lineno=80)
          88	LOAD_FAST(arg=7, lineno=80)
          90	LOAD_CONST(arg=3, lineno=80)
          92	BINARY_SUBTRACT(arg=None, lineno=80)
          94	BINARY_SUBSCR(arg=None, lineno=80)
          96	CALL_FUNCTION(arg=2, lineno=80)
          98	CALL_FUNCTION(arg=2, lineno=80)
         100	POP_JUMP_IF_FALSE(arg=80, lineno=80)
>        102	LOAD_FAST(arg=1, lineno=82)
         104	LOAD_FAST(arg=7, lineno=82)
         106	LOAD_CONST(arg=3, lineno=82)
         108	BINARY_SUBTRACT(arg=None, lineno=82)
         110	BINARY_SUBSCR(arg=None, lineno=82)
         112	LOAD_FAST(arg=1, lineno=82)
         114	LOAD_FAST(arg=7, lineno=82)
         116	STORE_SUBSCR(arg=None, lineno=82)
         118	LOAD_FAST(arg=7, lineno=83)
         120	LOAD_CONST(arg=3, lineno=83)
         122	INPLACE_SUBTRACT(arg=None, lineno=83)
         124	STORE_FAST(arg=7, lineno=83)
         126	LOAD_FAST(arg=7, lineno=80)
         128	LOAD_FAST(arg=2, lineno=80)
         130	COMPARE_OP(arg=4, lineno=80)
         132	POP_JUMP_IF_FALSE(arg=80, lineno=80)
         134	LOAD_DEREF(arg=1, lineno=80)
         136	LOAD_FAST(arg=6, lineno=80)
         138	LOAD_DEREF(arg=0, lineno=80)
         140	LOAD_FAST(arg=0, lineno=80)
         142	LOAD_FAST(arg=1, lineno=80)
         144	LOAD_FAST(arg=7, lineno=80)
         146	LOAD_CONST(arg=3, lineno=80)
         148	BINARY_SUBTRACT(arg=None, lineno=80)
         150	BINARY_SUBSCR(arg=None, lineno=80)
         152	CALL_FUNCTION(arg=2, lineno=80)
         154	CALL_FUNCTION(arg=2, lineno=80)
         156	POP_JUMP_IF_TRUE(arg=52, lineno=80)
>        158	LOAD_FAST(arg=5, lineno=84)
         160	LOAD_FAST(arg=1, lineno=84)
         162	LOAD_FAST(arg=7, lineno=84)
         164	STORE_SUBSCR(arg=None, lineno=84)
         166	JUMP_ABSOLUTE(arg=23, lineno=84)
>        168	LOAD_CONST(arg=2, lineno=75)
         170	RETURN_VALUE(arg=None, lineno=75)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=66)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=2, lineno=71)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=71)
DEBUG:numba.core.byteflow:stack ['$low2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=COMPARE_OP(arg=5, lineno=71)
DEBUG:numba.core.byteflow:stack ['$low2.0', '$const4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=POP_JUMP_IF_TRUE(arg=8, lineno=71)
DEBUG:numba.core.byteflow:stack ['$6compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=10, stack=(), blockstack=(), npush=0), Edge(pc=14, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=10 nstack_initial=0), State(pc_initial=14 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=10 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_ASSERTION_ERROR(arg=None, lineno=71)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RAISE_VARARGS(arg=1, lineno=71)
DEBUG:numba.core.byteflow:stack ['$assertion_error10.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=14 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=14 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=72)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=72)
DEBUG:numba.core.byteflow:stack ['$high14.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=COMPARE_OP(arg=1, lineno=72)
DEBUG:numba.core.byteflow:stack ['$high14.0', '$low16.1']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=POP_JUMP_IF_FALSE(arg=14, lineno=72)
DEBUG:numba.core.byteflow:stack ['$18compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=22, stack=(), blockstack=(), npush=0), Edge(pc=26, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=22 nstack_initial=0), State(pc_initial=26 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=22 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_CONST(arg=2, lineno=73)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=73)
DEBUG:numba.core.byteflow:stack ['$const22.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=26 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_GLOBAL(arg=0, lineno=75)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=2, lineno=75)
DEBUG:numba.core.byteflow:stack ['$26load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=75)
DEBUG:numba.core.byteflow:stack ['$26load_global.0', '$low28.1']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=BINARY_ADD(arg=None, lineno=75)
DEBUG:numba.core.byteflow:stack ['$26load_global.0', '$low28.1', '$const30.2']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=3, lineno=75)
DEBUG:numba.core.byteflow:stack ['$26load_global.0', '$32binary_add.3']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=75)
DEBUG:numba.core.byteflow:stack ['$26load_global.0', '$32binary_add.3', '$high34.4']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BINARY_ADD(arg=None, lineno=75)
DEBUG:numba.core.byteflow:stack ['$26load_global.0', '$32binary_add.3', '$high34.4', '$const36.5']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=CALL_FUNCTION(arg=2, lineno=75)
DEBUG:numba.core.byteflow:stack ['$26load_global.0', '$32binary_add.3', '$38binary_add.6']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=GET_ITER(arg=None, lineno=75)
DEBUG:numba.core.byteflow:stack ['$40call_function.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=('$42get_iter.8',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi44.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=44 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=44, inst=FOR_ITER(arg=61, lineno=75)
DEBUG:numba.core.byteflow:stack ['$phi44.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=168, stack=(), blockstack=(), npush=0), Edge(pc=46, stack=('$phi44.0', '$44for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=168 nstack_initial=0), State(pc_initial=46 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=168 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=75)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=170, inst=RETURN_VALUE(arg=None, lineno=75)
DEBUG:numba.core.byteflow:stack ['$const168.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=46 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi46.0', '$phi46.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=46 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=46, inst=STORE_FAST(arg=4, lineno=75)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$phi46.1']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=76)
DEBUG:numba.core.byteflow:stack ['$phi46.0']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=4, lineno=76)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$R48.2']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=BINARY_SUBSCR(arg=None, lineno=76)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$R48.2', '$i50.3']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=STORE_FAST(arg=5, lineno=76)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$52binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_DEREF(arg=0, lineno=77)
DEBUG:numba.core.byteflow:stack ['$phi46.0']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=77)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$56load_deref.5']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=5, lineno=77)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$56load_deref.5', '$A58.6']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=CALL_FUNCTION(arg=2, lineno=77)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$56load_deref.5', '$A58.6', '$k60.7']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=STORE_FAST(arg=6, lineno=77)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$62call_function.8']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=4, lineno=79)
DEBUG:numba.core.byteflow:stack ['$phi46.0']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=STORE_FAST(arg=7, lineno=79)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$i66.9']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=7, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi46.0']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=2, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$j70.10']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=COMPARE_OP(arg=4, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$j70.10', '$low72.11']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=POP_JUMP_IF_FALSE(arg=80, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$74compare_op.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=78, stack=('$phi46.0',), blockstack=(), npush=0), Edge(pc=158, stack=('$phi46.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=78 nstack_initial=1), State(pc_initial=158 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi78.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=78 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_DEREF(arg=1, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi78.0']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=6, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi78.0', '$78load_deref.1']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_DEREF(arg=0, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi78.0', '$78load_deref.1', '$v80.2']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi78.0', '$78load_deref.1', '$v80.2', '$82load_deref.3']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=1, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi78.0', '$78load_deref.1', '$v80.2', '$82load_deref.3', '$A84.4']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_FAST(arg=7, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi78.0', '$78load_deref.1', '$v80.2', '$82load_deref.3', '$A84.4', '$R86.5']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_CONST(arg=3, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi78.0', '$78load_deref.1', '$v80.2', '$82load_deref.3', '$A84.4', '$R86.5', '$j88.6']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=BINARY_SUBTRACT(arg=None, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi78.0', '$78load_deref.1', '$v80.2', '$82load_deref.3', '$A84.4', '$R86.5', '$j88.6', '$const90.7']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=BINARY_SUBSCR(arg=None, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi78.0', '$78load_deref.1', '$v80.2', '$82load_deref.3', '$A84.4', '$R86.5', '$92binary_subtract.8']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=CALL_FUNCTION(arg=2, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi78.0', '$78load_deref.1', '$v80.2', '$82load_deref.3', '$A84.4', '$94binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=CALL_FUNCTION(arg=2, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi78.0', '$78load_deref.1', '$v80.2', '$96call_function.10']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=POP_JUMP_IF_FALSE(arg=80, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi78.0', '$98call_function.11']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=102, stack=('$phi78.0',), blockstack=(), npush=0), Edge(pc=158, stack=('$phi78.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=158 nstack_initial=1), State(pc_initial=102 nstack_initial=1), State(pc_initial=158 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi158.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=158 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=158, inst=LOAD_FAST(arg=5, lineno=84)
DEBUG:numba.core.byteflow:stack ['$phi158.0']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=LOAD_FAST(arg=1, lineno=84)
DEBUG:numba.core.byteflow:stack ['$phi158.0', '$k158.1']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=LOAD_FAST(arg=7, lineno=84)
DEBUG:numba.core.byteflow:stack ['$phi158.0', '$k158.1', '$R160.2']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=STORE_SUBSCR(arg=None, lineno=84)
DEBUG:numba.core.byteflow:stack ['$phi158.0', '$k158.1', '$R160.2', '$j162.3']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=JUMP_ABSOLUTE(arg=23, lineno=84)
DEBUG:numba.core.byteflow:stack ['$phi158.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=('$phi158.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=1), State(pc_initial=158 nstack_initial=1), State(pc_initial=44 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi102.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=102 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=82)
DEBUG:numba.core.byteflow:stack ['$phi102.0']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_FAST(arg=7, lineno=82)
DEBUG:numba.core.byteflow:stack ['$phi102.0', '$R102.1']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_CONST(arg=3, lineno=82)
DEBUG:numba.core.byteflow:stack ['$phi102.0', '$R102.1', '$j104.2']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=BINARY_SUBTRACT(arg=None, lineno=82)
DEBUG:numba.core.byteflow:stack ['$phi102.0', '$R102.1', '$j104.2', '$const106.3']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=BINARY_SUBSCR(arg=None, lineno=82)
DEBUG:numba.core.byteflow:stack ['$phi102.0', '$R102.1', '$108binary_subtract.4']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_FAST(arg=1, lineno=82)
DEBUG:numba.core.byteflow:stack ['$phi102.0', '$110binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_FAST(arg=7, lineno=82)
DEBUG:numba.core.byteflow:stack ['$phi102.0', '$110binary_subscr.5', '$R112.6']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=STORE_SUBSCR(arg=None, lineno=82)
DEBUG:numba.core.byteflow:stack ['$phi102.0', '$110binary_subscr.5', '$R112.6', '$j114.7']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_FAST(arg=7, lineno=83)
DEBUG:numba.core.byteflow:stack ['$phi102.0']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_CONST(arg=3, lineno=83)
DEBUG:numba.core.byteflow:stack ['$phi102.0', '$j118.8']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=INPLACE_SUBTRACT(arg=None, lineno=83)
DEBUG:numba.core.byteflow:stack ['$phi102.0', '$j118.8', '$const120.9']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=STORE_FAST(arg=7, lineno=83)
DEBUG:numba.core.byteflow:stack ['$phi102.0', '$122inplace_subtract.10']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=7, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi102.0']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=2, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi102.0', '$j126.11']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=COMPARE_OP(arg=4, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi102.0', '$j126.11', '$low128.12']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=POP_JUMP_IF_FALSE(arg=80, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi102.0', '$130compare_op.13']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=134, stack=('$phi102.0',), blockstack=(), npush=0), Edge(pc=158, stack=('$phi102.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=158 nstack_initial=1), State(pc_initial=44 nstack_initial=1), State(pc_initial=134 nstack_initial=1), State(pc_initial=158 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=1), State(pc_initial=134 nstack_initial=1), State(pc_initial=158 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=134 nstack_initial=1), State(pc_initial=158 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi134.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=134 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_DEREF(arg=1, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi134.0']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_FAST(arg=6, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$134load_deref.1']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_DEREF(arg=0, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$134load_deref.1', '$v136.2']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=0, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$134load_deref.1', '$v136.2', '$138load_deref.3']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=LOAD_FAST(arg=1, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$134load_deref.1', '$v136.2', '$138load_deref.3', '$A140.4']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=LOAD_FAST(arg=7, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$134load_deref.1', '$v136.2', '$138load_deref.3', '$A140.4', '$R142.5']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_CONST(arg=3, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$134load_deref.1', '$v136.2', '$138load_deref.3', '$A140.4', '$R142.5', '$j144.6']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=BINARY_SUBTRACT(arg=None, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$134load_deref.1', '$v136.2', '$138load_deref.3', '$A140.4', '$R142.5', '$j144.6', '$const146.7']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=BINARY_SUBSCR(arg=None, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$134load_deref.1', '$v136.2', '$138load_deref.3', '$A140.4', '$R142.5', '$148binary_subtract.8']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=CALL_FUNCTION(arg=2, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$134load_deref.1', '$v136.2', '$138load_deref.3', '$A140.4', '$150binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=CALL_FUNCTION(arg=2, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$134load_deref.1', '$v136.2', '$152call_function.10']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=POP_JUMP_IF_TRUE(arg=52, lineno=80)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$154call_function.11']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=158, stack=('$phi134.0',), blockstack=(), npush=0), Edge(pc=102, stack=('$phi134.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=158 nstack_initial=1), State(pc_initial=158 nstack_initial=1), State(pc_initial=102 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=158 nstack_initial=1), State(pc_initial=102 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=10 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=22 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=1): {'$phi44.0'},
             State(pc_initial=46 nstack_initial=2): {'$phi46.1'},
             State(pc_initial=78 nstack_initial=1): set(),
             State(pc_initial=102 nstack_initial=1): set(),
             State(pc_initial=134 nstack_initial=1): set(),
             State(pc_initial=158 nstack_initial=1): set(),
             State(pc_initial=168 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi44.0': State(pc_initial=26 nstack_initial=0),
 '$phi46.1': State(pc_initial=44 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi134.0',
                            State(pc_initial=134 nstack_initial=1)),
                           ('$phi78.0', State(pc_initial=78 nstack_initial=1))},
             '$phi134.0': {('$phi102.0',
                            State(pc_initial=102 nstack_initial=1))},
             '$phi158.0': {('$phi102.0',
                            State(pc_initial=102 nstack_initial=1)),
                           ('$phi134.0',
                            State(pc_initial=134 nstack_initial=1)),
                           ('$phi46.0', State(pc_initial=46 nstack_initial=2)),
                           ('$phi78.0', State(pc_initial=78 nstack_initial=1))},
             '$phi44.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0)),
                          ('$phi158.0',
                           State(pc_initial=158 nstack_initial=1))},
             '$phi46.0': {('$phi44.0', State(pc_initial=44 nstack_initial=1))},
             '$phi46.1': {('$44for_iter.2',
                           State(pc_initial=44 nstack_initial=1))},
             '$phi78.0': {('$phi46.0', State(pc_initial=46 nstack_initial=2))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi102.0',
                            State(pc_initial=102 nstack_initial=1)),
                           ('$phi46.0', State(pc_initial=46 nstack_initial=2))},
             '$phi134.0': {('$phi46.0', State(pc_initial=46 nstack_initial=2))},
             '$phi158.0': {('$phi44.0', State(pc_initial=44 nstack_initial=1))},
             '$phi44.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0)),
                          ('$phi44.0', State(pc_initial=44 nstack_initial=1))},
             '$phi46.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0))},
             '$phi46.1': {('$44for_iter.2',
                           State(pc_initial=44 nstack_initial=1))},
             '$phi78.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$42get_iter.8',
                            State(pc_initial=26 nstack_initial=0))},
             '$phi134.0': {('$42get_iter.8',
                            State(pc_initial=26 nstack_initial=0))},
             '$phi158.0': {('$42get_iter.8',
                            State(pc_initial=26 nstack_initial=0))},
             '$phi44.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0))},
             '$phi46.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0))},
             '$phi46.1': {('$44for_iter.2',
                           State(pc_initial=44 nstack_initial=1))},
             '$phi78.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$42get_iter.8',
                            State(pc_initial=26 nstack_initial=0))},
             '$phi134.0': {('$42get_iter.8',
                            State(pc_initial=26 nstack_initial=0))},
             '$phi158.0': {('$42get_iter.8',
                            State(pc_initial=26 nstack_initial=0))},
             '$phi44.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0))},
             '$phi46.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0))},
             '$phi46.1': {('$44for_iter.2',
                           State(pc_initial=44 nstack_initial=1))},
             '$phi78.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi44.0': {('$42get_iter.8', State(pc_initial=26 nstack_initial=0))},
 '$phi46.1': {('$44for_iter.2', State(pc_initial=44 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=26 nstack_initial=0): {'$phi44.0': '$42get_iter.8'},
             State(pc_initial=44 nstack_initial=1): {'$phi46.1': '$44for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$low2.0'}), (4, {'res': '$const4.1'}), (6, {'lhs': '$low2.0', 'rhs': '$const4.1', 'res': '$6compare_op.2'}), (8, {'pred': '$6compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={10: (), 14: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=10 nstack_initial=0):
AdaptBlockInfo(insts=((10, {'res': '$assertion_error10.0'}), (12, {'exc': '$assertion_error10.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((14, {'res': '$high14.0'}), (16, {'res': '$low16.1'}), (18, {'lhs': '$high14.0', 'rhs': '$low16.1', 'res': '$18compare_op.2'}), (20, {'pred': '$18compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: (), 26: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=22 nstack_initial=0):
AdaptBlockInfo(insts=((22, {'res': '$const22.0'}), (24, {'retval': '$const22.0', 'castval': '$24return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$26load_global.0'}), (28, {'res': '$low28.1'}), (30, {'res': '$const30.2'}), (32, {'lhs': '$low28.1', 'rhs': '$const30.2', 'res': '$32binary_add.3'}), (34, {'res': '$high34.4'}), (36, {'res': '$const36.5'}), (38, {'lhs': '$high34.4', 'rhs': '$const36.5', 'res': '$38binary_add.6'}), (40, {'func': '$26load_global.0', 'args': ['$32binary_add.3', '$38binary_add.6'], 'res': '$40call_function.7'}), (42, {'value': '$40call_function.7', 'res': '$42get_iter.8'})), outgoing_phis={'$phi44.0': '$42get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: ('$42get_iter.8',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((44, {'iterator': '$phi44.0', 'pair': '$44for_iter.1', 'indval': '$44for_iter.2', 'pred': '$44for_iter.3'}),), outgoing_phis={'$phi46.1': '$44for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={168: (), 46: ('$phi44.0', '$44for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=46 nstack_initial=2):
AdaptBlockInfo(insts=((46, {'value': '$phi46.1'}), (48, {'res': '$R48.2'}), (50, {'res': '$i50.3'}), (52, {'index': '$i50.3', 'target': '$R48.2', 'res': '$52binary_subscr.4'}), (54, {'value': '$52binary_subscr.4'}), (56, {'res': '$56load_deref.5'}), (58, {'res': '$A58.6'}), (60, {'res': '$k60.7'}), (62, {'func': '$56load_deref.5', 'args': ['$A58.6', '$k60.7'], 'res': '$62call_function.8'}), (64, {'value': '$62call_function.8'}), (66, {'res': '$i66.9'}), (68, {'value': '$i66.9'}), (70, {'res': '$j70.10'}), (72, {'res': '$low72.11'}), (74, {'lhs': '$j70.10', 'rhs': '$low72.11', 'res': '$74compare_op.12'}), (76, {'pred': '$74compare_op.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ('$phi46.0',), 158: ('$phi46.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=78 nstack_initial=1):
AdaptBlockInfo(insts=((78, {'res': '$78load_deref.1'}), (80, {'res': '$v80.2'}), (82, {'res': '$82load_deref.3'}), (84, {'res': '$A84.4'}), (86, {'res': '$R86.5'}), (88, {'res': '$j88.6'}), (90, {'res': '$const90.7'}), (92, {'lhs': '$j88.6', 'rhs': '$const90.7', 'res': '$92binary_subtract.8'}), (94, {'index': '$92binary_subtract.8', 'target': '$R86.5', 'res': '$94binary_subscr.9'}), (96, {'func': '$82load_deref.3', 'args': ['$A84.4', '$94binary_subscr.9'], 'res': '$96call_function.10'}), (98, {'func': '$78load_deref.1', 'args': ['$v80.2', '$96call_function.10'], 'res': '$98call_function.11'}), (100, {'pred': '$98call_function.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: ('$phi78.0',), 158: ('$phi78.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=102 nstack_initial=1):
AdaptBlockInfo(insts=((102, {'res': '$R102.1'}), (104, {'res': '$j104.2'}), (106, {'res': '$const106.3'}), (108, {'lhs': '$j104.2', 'rhs': '$const106.3', 'res': '$108binary_subtract.4'}), (110, {'index': '$108binary_subtract.4', 'target': '$R102.1', 'res': '$110binary_subscr.5'}), (112, {'res': '$R112.6'}), (114, {'res': '$j114.7'}), (116, {'target': '$R112.6', 'index': '$j114.7', 'value': '$110binary_subscr.5'}), (118, {'res': '$j118.8'}), (120, {'res': '$const120.9'}), (122, {'lhs': '$j118.8', 'rhs': '$const120.9', 'res': '$122inplace_subtract.10'}), (124, {'value': '$122inplace_subtract.10'}), (126, {'res': '$j126.11'}), (128, {'res': '$low128.12'}), (130, {'lhs': '$j126.11', 'rhs': '$low128.12', 'res': '$130compare_op.13'}), (132, {'pred': '$130compare_op.13'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: ('$phi102.0',), 158: ('$phi102.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=134 nstack_initial=1):
AdaptBlockInfo(insts=((134, {'res': '$134load_deref.1'}), (136, {'res': '$v136.2'}), (138, {'res': '$138load_deref.3'}), (140, {'res': '$A140.4'}), (142, {'res': '$R142.5'}), (144, {'res': '$j144.6'}), (146, {'res': '$const146.7'}), (148, {'lhs': '$j144.6', 'rhs': '$const146.7', 'res': '$148binary_subtract.8'}), (150, {'index': '$148binary_subtract.8', 'target': '$R142.5', 'res': '$150binary_subscr.9'}), (152, {'func': '$138load_deref.3', 'args': ['$A140.4', '$150binary_subscr.9'], 'res': '$152call_function.10'}), (154, {'func': '$134load_deref.1', 'args': ['$v136.2', '$152call_function.10'], 'res': '$154call_function.11'}), (156, {'pred': '$154call_function.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={158: ('$phi134.0',), 102: ('$phi134.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=158 nstack_initial=1):
AdaptBlockInfo(insts=((158, {'res': '$k158.1'}), (160, {'res': '$R160.2'}), (162, {'res': '$j162.3'}), (164, {'target': '$R160.2', 'index': '$j162.3', 'value': '$k158.1'}), (166, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: ('$phi158.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=168 nstack_initial=0):
AdaptBlockInfo(insts=((168, {'res': '$const168.0'}), (170, {'retval': '$const168.0', 'castval': '$170return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    A = arg(0, name=A)                       ['A']
    R = arg(1, name=R)                       ['R']
    low = arg(2, name=low)                   ['low']
    high = arg(3, name=high)                 ['high']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6compare_op.2 = low >= $const4.1        ['$6compare_op.2', '$const4.1', 'low']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, quicksort.py:71),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    branch $8pred, 14, 10                    ['$8pred']
label 10:
    $assertion_error10.0 = global(AssertionError: <class 'AssertionError'>) ['$assertion_error10.0']
    raise $assertion_error10.0               ['$assertion_error10.0']
label 14:
    $18compare_op.2 = high <= low            ['$18compare_op.2', 'high', 'low']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, quicksort.py:72),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
    branch $20pred, 22, 26                   ['$20pred']
label 22:
    $const22.0 = const(NoneType, None)       ['$const22.0']
    $24return_value.1 = cast(value=$const22.0) ['$24return_value.1', '$const22.0']
    return $24return_value.1                 ['$24return_value.1']
label 26:
    $26load_global.0 = global(range: <class 'range'>) ['$26load_global.0']
    $const30.2 = const(int, 1)               ['$const30.2']
    $32binary_add.3 = low + $const30.2       ['$32binary_add.3', '$const30.2', 'low']
    $const36.5 = const(int, 1)               ['$const36.5']
    $38binary_add.6 = high + $const36.5      ['$38binary_add.6', '$const36.5', 'high']
    $40call_function.7 = call $26load_global.0($32binary_add.3, $38binary_add.6, func=$26load_global.0, args=[Var($32binary_add.3, quicksort.py:75), Var($38binary_add.6, quicksort.py:75)], kws=(), vararg=None, varkwarg=None, target=None) ['$26load_global.0', '$32binary_add.3', '$38binary_add.6', '$40call_function.7']
    $42get_iter.8 = getiter(value=$40call_function.7) ['$40call_function.7', '$42get_iter.8']
    $phi44.0 = $42get_iter.8                 ['$42get_iter.8', '$phi44.0']
    jump 44                                  []
label 44:
    $44for_iter.1 = iternext(value=$phi44.0) ['$44for_iter.1', '$phi44.0']
    $44for_iter.2 = pair_first(value=$44for_iter.1) ['$44for_iter.1', '$44for_iter.2']
    $44for_iter.3 = pair_second(value=$44for_iter.1) ['$44for_iter.1', '$44for_iter.3']
    $phi46.1 = $44for_iter.2                 ['$44for_iter.2', '$phi46.1']
    branch $44for_iter.3, 46, 168            ['$44for_iter.3']
label 46:
    i = $phi46.1                             ['$phi46.1', 'i']
    k = getitem(value=R, index=i, fn=<built-in function getitem>) ['R', 'i', 'k']
    $56load_deref.5 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>) ['$56load_deref.5']
    v = call $56load_deref.5(A, k, func=$56load_deref.5, args=[Var(A, quicksort.py:66), Var(k, quicksort.py:76)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_deref.5', 'A', 'k', 'v']
    j = i                                    ['i', 'j']
    $74compare_op.12 = j > low               ['$74compare_op.12', 'j', 'low']
    bool76 = global(bool: <class 'bool'>)    ['bool76']
    $76pred = call bool76($74compare_op.12, func=bool76, args=(Var($74compare_op.12, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None) ['$74compare_op.12', '$76pred', 'bool76']
    branch $76pred, 78, 158                  ['$76pred']
label 78:
    $78load_deref.1 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>) ['$78load_deref.1']
    $82load_deref.3 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>) ['$82load_deref.3']
    $const90.7 = const(int, 1)               ['$const90.7']
    $92binary_subtract.8 = j - $const90.7    ['$92binary_subtract.8', '$const90.7', 'j']
    $94binary_subscr.9 = getitem(value=R, index=$92binary_subtract.8, fn=<built-in function getitem>) ['$92binary_subtract.8', '$94binary_subscr.9', 'R']
    $96call_function.10 = call $82load_deref.3(A, $94binary_subscr.9, func=$82load_deref.3, args=[Var(A, quicksort.py:66), Var($94binary_subscr.9, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None) ['$82load_deref.3', '$94binary_subscr.9', '$96call_function.10', 'A']
    $98call_function.11 = call $78load_deref.1(v, $96call_function.10, func=$78load_deref.1, args=[Var(v, quicksort.py:77), Var($96call_function.10, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None) ['$78load_deref.1', '$96call_function.10', '$98call_function.11', 'v']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($98call_function.11, func=bool100, args=(Var($98call_function.11, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$98call_function.11', 'bool100']
    branch $100pred, 102, 158                ['$100pred']
label 102:
    $const106.3 = const(int, 1)              ['$const106.3']
    $108binary_subtract.4 = j - $const106.3  ['$108binary_subtract.4', '$const106.3', 'j']
    $110binary_subscr.5 = getitem(value=R, index=$108binary_subtract.4, fn=<built-in function getitem>) ['$108binary_subtract.4', '$110binary_subscr.5', 'R']
    R[j] = $110binary_subscr.5               ['$110binary_subscr.5', 'R', 'j']
    $const120.9 = const(int, 1)              ['$const120.9']
    $122inplace_subtract.10 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const120.9, static_lhs=Undefined, static_rhs=Undefined) ['$122inplace_subtract.10', '$const120.9', 'j']
    j = $122inplace_subtract.10              ['$122inplace_subtract.10', 'j']
    $130compare_op.13 = j > low              ['$130compare_op.13', 'j', 'low']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    $132pred = call bool132($130compare_op.13, func=bool132, args=(Var($130compare_op.13, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.13', '$132pred', 'bool132']
    branch $132pred, 134, 158                ['$132pred']
label 134:
    $134load_deref.1 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>) ['$134load_deref.1']
    $138load_deref.3 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>) ['$138load_deref.3']
    $const146.7 = const(int, 1)              ['$const146.7']
    $148binary_subtract.8 = j - $const146.7  ['$148binary_subtract.8', '$const146.7', 'j']
    $150binary_subscr.9 = getitem(value=R, index=$148binary_subtract.8, fn=<built-in function getitem>) ['$148binary_subtract.8', '$150binary_subscr.9', 'R']
    $152call_function.10 = call $138load_deref.3(A, $150binary_subscr.9, func=$138load_deref.3, args=[Var(A, quicksort.py:66), Var($150binary_subscr.9, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None) ['$138load_deref.3', '$150binary_subscr.9', '$152call_function.10', 'A']
    $154call_function.11 = call $134load_deref.1(v, $152call_function.10, func=$134load_deref.1, args=[Var(v, quicksort.py:77), Var($152call_function.10, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_deref.1', '$152call_function.10', '$154call_function.11', 'v']
    bool156 = global(bool: <class 'bool'>)   ['bool156']
    $156pred = call bool156($154call_function.11, func=bool156, args=(Var($154call_function.11, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None) ['$154call_function.11', '$156pred', 'bool156']
    branch $156pred, 102, 158                ['$156pred']
label 158:
    R[j] = k                                 ['R', 'j', 'k']
    jump 44                                  []
label 168:
    $const168.0 = const(NoneType, None)      ['$const168.0']
    $170return_value.1 = cast(value=$const168.0) ['$170return_value.1', '$const168.0']
    return $170return_value.1                ['$170return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3EA1E10>
DEBUG:numba.core.ssa:on stmt: A = arg(0, name=A)
DEBUG:numba.core.ssa:on stmt: R = arg(1, name=R)
DEBUG:numba.core.ssa:on stmt: low = arg(2, name=low)
DEBUG:numba.core.ssa:on stmt: high = arg(3, name=high)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = low >= $const4.1
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, quicksort.py:71),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 14, 10
DEBUG:numba.core.ssa:==== SSA block analysis pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3EA1E10>
DEBUG:numba.core.ssa:on stmt: $assertion_error10.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>
DEBUG:numba.core.ssa:==== SSA block analysis pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3EA1E10>
DEBUG:numba.core.ssa:on stmt: $18compare_op.2 = high <= low
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, quicksort.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 26
DEBUG:numba.core.ssa:==== SSA block analysis pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3EA1E10>
DEBUG:numba.core.ssa:on stmt: $const22.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $24return_value.1 = cast(value=$const22.0)
DEBUG:numba.core.ssa:on stmt: return $24return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3EA1E10>
DEBUG:numba.core.ssa:on stmt: $26load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const30.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $32binary_add.3 = low + $const30.2
DEBUG:numba.core.ssa:on stmt: $const36.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $38binary_add.6 = high + $const36.5
DEBUG:numba.core.ssa:on stmt: $40call_function.7 = call $26load_global.0($32binary_add.3, $38binary_add.6, func=$26load_global.0, args=[Var($32binary_add.3, quicksort.py:75), Var($38binary_add.6, quicksort.py:75)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $42get_iter.8 = getiter(value=$40call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi44.0 = $42get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 44
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3EA1E10>
DEBUG:numba.core.ssa:on stmt: $44for_iter.1 = iternext(value=$phi44.0)
DEBUG:numba.core.ssa:on stmt: $44for_iter.2 = pair_first(value=$44for_iter.1)
DEBUG:numba.core.ssa:on stmt: $44for_iter.3 = pair_second(value=$44for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi46.1 = $44for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $44for_iter.3, 46, 168
DEBUG:numba.core.ssa:==== SSA block analysis pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3EA1E10>
DEBUG:numba.core.ssa:on stmt: i = $phi46.1
DEBUG:numba.core.ssa:on stmt: k = getitem(value=R, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $56load_deref.5 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: v = call $56load_deref.5(A, k, func=$56load_deref.5, args=[Var(A, quicksort.py:66), Var(k, quicksort.py:76)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: j = i
DEBUG:numba.core.ssa:on stmt: $74compare_op.12 = j > low
DEBUG:numba.core.ssa:on stmt: bool76 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $76pred = call bool76($74compare_op.12, func=bool76, args=(Var($74compare_op.12, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $76pred, 78, 158
DEBUG:numba.core.ssa:==== SSA block analysis pass on 78
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3EA1E10>
DEBUG:numba.core.ssa:on stmt: $78load_deref.1 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $82load_deref.3 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $const90.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $92binary_subtract.8 = j - $const90.7
DEBUG:numba.core.ssa:on stmt: $94binary_subscr.9 = getitem(value=R, index=$92binary_subtract.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $96call_function.10 = call $82load_deref.3(A, $94binary_subscr.9, func=$82load_deref.3, args=[Var(A, quicksort.py:66), Var($94binary_subscr.9, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98call_function.11 = call $78load_deref.1(v, $96call_function.10, func=$78load_deref.1, args=[Var(v, quicksort.py:77), Var($96call_function.10, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98call_function.11, func=bool100, args=(Var($98call_function.11, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 102, 158
DEBUG:numba.core.ssa:==== SSA block analysis pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3EA1E10>
DEBUG:numba.core.ssa:on stmt: $const106.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $108binary_subtract.4 = j - $const106.3
DEBUG:numba.core.ssa:on stmt: $110binary_subscr.5 = getitem(value=R, index=$108binary_subtract.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[j] = $110binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const120.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $122inplace_subtract.10 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const120.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: j = $122inplace_subtract.10
DEBUG:numba.core.ssa:on stmt: $130compare_op.13 = j > low
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.13, func=bool132, args=(Var($130compare_op.13, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 158
DEBUG:numba.core.ssa:==== SSA block analysis pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3EA1E10>
DEBUG:numba.core.ssa:on stmt: $134load_deref.1 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $138load_deref.3 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $const146.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $148binary_subtract.8 = j - $const146.7
DEBUG:numba.core.ssa:on stmt: $150binary_subscr.9 = getitem(value=R, index=$148binary_subtract.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $152call_function.10 = call $138load_deref.3(A, $150binary_subscr.9, func=$138load_deref.3, args=[Var(A, quicksort.py:66), Var($150binary_subscr.9, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154call_function.11 = call $134load_deref.1(v, $152call_function.10, func=$134load_deref.1, args=[Var(v, quicksort.py:77), Var($152call_function.10, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool156 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $156pred = call bool156($154call_function.11, func=bool156, args=(Var($154call_function.11, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $156pred, 102, 158
DEBUG:numba.core.ssa:==== SSA block analysis pass on 158
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3EA1E10>
DEBUG:numba.core.ssa:on stmt: R[j] = k
DEBUG:numba.core.ssa:on stmt: jump 44
DEBUG:numba.core.ssa:==== SSA block analysis pass on 168
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA3EA1E10>
DEBUG:numba.core.ssa:on stmt: $const168.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=$const168.0)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100pred': [(<numba.core.ir.Assign object at 0x0000017A1F08CE50>,
                           78)],
             '$108binary_subtract.4': [(<numba.core.ir.Assign object at 0x0000017A1F08C610>,
                                        102)],
             '$110binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000017A1F08C550>,
                                      102)],
             '$122inplace_subtract.10': [(<numba.core.ir.Assign object at 0x0000017A1F08FB50>,
                                          102)],
             '$130compare_op.13': [(<numba.core.ir.Assign object at 0x0000017A1F08D030>,
                                    102)],
             '$132pred': [(<numba.core.ir.Assign object at 0x0000017A1F0C93F0>,
                           102)],
             '$134load_deref.1': [(<numba.core.ir.Assign object at 0x0000017A1F08EA40>,
                                   134)],
             '$138load_deref.3': [(<numba.core.ir.Assign object at 0x0000017A1F0CA6B0>,
                                   134)],
             '$148binary_subtract.8': [(<numba.core.ir.Assign object at 0x0000017A1F0C95A0>,
                                        134)],
             '$150binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000017A1F0CA8C0>,
                                      134)],
             '$152call_function.10': [(<numba.core.ir.Assign object at 0x0000017A1F0CA290>,
                                       134)],
             '$154call_function.11': [(<numba.core.ir.Assign object at 0x0000017A1F0CA590>,
                                       134)],
             '$156pred': [(<numba.core.ir.Assign object at 0x0000017A1F0CB010>,
                           134)],
             '$170return_value.1': [(<numba.core.ir.Assign object at 0x0000017A1F0CB910>,
                                     168)],
             '$18compare_op.2': [(<numba.core.ir.Assign object at 0x0000017AA3EB9750>,
                                  14)],
             '$20pred': [(<numba.core.ir.Assign object at 0x0000017AA3EB9450>,
                          14)],
             '$24return_value.1': [(<numba.core.ir.Assign object at 0x0000017AA3E25150>,
                                    22)],
             '$26load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA3E25570>,
                                   26)],
             '$32binary_add.3': [(<numba.core.ir.Assign object at 0x0000017AA3E26650>,
                                  26)],
             '$38binary_add.6': [(<numba.core.ir.Assign object at 0x0000017AA3D78280>,
                                  26)],
             '$40call_function.7': [(<numba.core.ir.Assign object at 0x0000017A1F08FA00>,
                                     26)],
             '$42get_iter.8': [(<numba.core.ir.Assign object at 0x0000017A1F08FF40>,
                                26)],
             '$44for_iter.1': [(<numba.core.ir.Assign object at 0x0000017A1F08C0D0>,
                                44)],
             '$44for_iter.2': [(<numba.core.ir.Assign object at 0x0000017A1F08FF10>,
                                44)],
             '$44for_iter.3': [(<numba.core.ir.Assign object at 0x0000017A1F08FEB0>,
                                44)],
             '$56load_deref.5': [(<numba.core.ir.Assign object at 0x0000017A1F08FD30>,
                                  46)],
             '$6compare_op.2': [(<numba.core.ir.Assign object at 0x0000017AA3DCA0E0>,
                                 0)],
             '$74compare_op.12': [(<numba.core.ir.Assign object at 0x0000017A1F08E3E0>,
                                   46)],
             '$76pred': [(<numba.core.ir.Assign object at 0x0000017A1F08DC90>,
                          46)],
             '$78load_deref.1': [(<numba.core.ir.Assign object at 0x0000017A1F08ED70>,
                                  78)],
             '$82load_deref.3': [(<numba.core.ir.Assign object at 0x0000017A1F08D690>,
                                  78)],
             '$8pred': [(<numba.core.ir.Assign object at 0x0000017AA3DC8D60>,
                         0)],
             '$92binary_subtract.8': [(<numba.core.ir.Assign object at 0x0000017AA3E7CE80>,
                                       78)],
             '$94binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000017AA3EA1F30>,
                                     78)],
             '$96call_function.10': [(<numba.core.ir.Assign object at 0x0000017A1F08D2A0>,
                                      78)],
             '$98call_function.11': [(<numba.core.ir.Assign object at 0x0000017A1F08D450>,
                                      78)],
             '$assertion_error10.0': [(<numba.core.ir.Assign object at 0x0000017AA3DC6CB0>,
                                       10)],
             '$const106.3': [(<numba.core.ir.Assign object at 0x0000017A1F08CC70>,
                              102)],
             '$const120.9': [(<numba.core.ir.Assign object at 0x0000017A1F08DD80>,
                              102)],
             '$const146.7': [(<numba.core.ir.Assign object at 0x0000017A1F0C86A0>,
                              134)],
             '$const168.0': [(<numba.core.ir.Assign object at 0x0000017A1F0CBF10>,
                              168)],
             '$const22.0': [(<numba.core.ir.Assign object at 0x0000017AA3E24A00>,
                             22)],
             '$const30.2': [(<numba.core.ir.Assign object at 0x0000017AA3E24700>,
                             26)],
             '$const36.5': [(<numba.core.ir.Assign object at 0x0000017AA3D51420>,
                             26)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x0000017AA3DCACB0>,
                            0)],
             '$const90.7': [(<numba.core.ir.Assign object at 0x0000017A1F08D8A0>,
                             78)],
             '$phi44.0': [(<numba.core.ir.Assign object at 0x0000017AA3E25780>,
                           26)],
             '$phi46.1': [(<numba.core.ir.Assign object at 0x0000017A1F08C130>,
                           44)],
             'A': [(<numba.core.ir.Assign object at 0x0000017AA3E47C70>, 0)],
             'R': [(<numba.core.ir.Assign object at 0x0000017AA3E47520>, 0)],
             'bool100': [(<numba.core.ir.Assign object at 0x0000017A1F08CA90>,
                          78)],
             'bool132': [(<numba.core.ir.Assign object at 0x0000017A1F0C90F0>,
                          102)],
             'bool156': [(<numba.core.ir.Assign object at 0x0000017A1F0CA8F0>,
                          134)],
             'bool20': [(<numba.core.ir.Assign object at 0x0000017AA3EB94B0>,
                         14)],
             'bool76': [(<numba.core.ir.Assign object at 0x0000017A1F08E110>,
                         46)],
             'bool8': [(<numba.core.ir.Assign object at 0x0000017AA3DC81F0>,
                        0)],
             'high': [(<numba.core.ir.Assign object at 0x0000017AA3DF5B10>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x0000017A1F08F310>, 46)],
             'j': [(<numba.core.ir.Assign object at 0x0000017A1F08E980>, 46),
                   (<numba.core.ir.Assign object at 0x0000017A1F08EAD0>, 102)],
             'k': [(<numba.core.ir.Assign object at 0x0000017A1F08F5E0>, 46)],
             'low': [(<numba.core.ir.Assign object at 0x0000017AA3D68760>, 0)],
             'v': [(<numba.core.ir.Assign object at 0x0000017A1F08E830>, 46)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA3EA1E10>
DEBUG:numba.core.ssa:Fix SSA violator on var j
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: A = arg(0, name=A)
DEBUG:numba.core.ssa:on stmt: R = arg(1, name=R)
DEBUG:numba.core.ssa:on stmt: low = arg(2, name=low)
DEBUG:numba.core.ssa:on stmt: high = arg(3, name=high)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = low >= $const4.1
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, quicksort.py:71),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 14, 10
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: $assertion_error10.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: $18compare_op.2 = high <= low
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, quicksort.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 26
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: $const22.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $24return_value.1 = cast(value=$const22.0)
DEBUG:numba.core.ssa:on stmt: return $24return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: $26load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const30.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $32binary_add.3 = low + $const30.2
DEBUG:numba.core.ssa:on stmt: $const36.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $38binary_add.6 = high + $const36.5
DEBUG:numba.core.ssa:on stmt: $40call_function.7 = call $26load_global.0($32binary_add.3, $38binary_add.6, func=$26load_global.0, args=[Var($32binary_add.3, quicksort.py:75), Var($38binary_add.6, quicksort.py:75)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $42get_iter.8 = getiter(value=$40call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi44.0 = $42get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 44
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: $44for_iter.1 = iternext(value=$phi44.0)
DEBUG:numba.core.ssa:on stmt: $44for_iter.2 = pair_first(value=$44for_iter.1)
DEBUG:numba.core.ssa:on stmt: $44for_iter.3 = pair_second(value=$44for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi46.1 = $44for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $44for_iter.3, 46, 168
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: i = $phi46.1
DEBUG:numba.core.ssa:on stmt: k = getitem(value=R, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $56load_deref.5 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: v = call $56load_deref.5(A, k, func=$56load_deref.5, args=[Var(A, quicksort.py:66), Var(k, quicksort.py:76)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: j = i
DEBUG:numba.core.ssa:first assign: j
DEBUG:numba.core.ssa:replaced with: j = i
DEBUG:numba.core.ssa:on stmt: $74compare_op.12 = j > low
DEBUG:numba.core.ssa:on stmt: bool76 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $76pred = call bool76($74compare_op.12, func=bool76, args=(Var($74compare_op.12, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $76pred, 78, 158
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 78
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: $78load_deref.1 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $82load_deref.3 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $const90.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $92binary_subtract.8 = j - $const90.7
DEBUG:numba.core.ssa:on stmt: $94binary_subscr.9 = getitem(value=R, index=$92binary_subtract.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $96call_function.10 = call $82load_deref.3(A, $94binary_subscr.9, func=$82load_deref.3, args=[Var(A, quicksort.py:66), Var($94binary_subscr.9, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98call_function.11 = call $78load_deref.1(v, $96call_function.10, func=$78load_deref.1, args=[Var(v, quicksort.py:77), Var($96call_function.10, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98call_function.11, func=bool100, args=(Var($98call_function.11, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 102, 158
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: $const106.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $108binary_subtract.4 = j - $const106.3
DEBUG:numba.core.ssa:on stmt: $110binary_subscr.5 = getitem(value=R, index=$108binary_subtract.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[j] = $110binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const120.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $122inplace_subtract.10 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const120.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: j = $122inplace_subtract.10
DEBUG:numba.core.ssa:replaced with: j.1 = $122inplace_subtract.10
DEBUG:numba.core.ssa:on stmt: $130compare_op.13 = j > low
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.13, func=bool132, args=(Var($130compare_op.13, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 158
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: $134load_deref.1 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $138load_deref.3 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $const146.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $148binary_subtract.8 = j - $const146.7
DEBUG:numba.core.ssa:on stmt: $150binary_subscr.9 = getitem(value=R, index=$148binary_subtract.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $152call_function.10 = call $138load_deref.3(A, $150binary_subscr.9, func=$138load_deref.3, args=[Var(A, quicksort.py:66), Var($150binary_subscr.9, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154call_function.11 = call $134load_deref.1(v, $152call_function.10, func=$134load_deref.1, args=[Var(v, quicksort.py:77), Var($152call_function.10, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool156 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $156pred = call bool156($154call_function.11, func=bool156, args=(Var($154call_function.11, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $156pred, 102, 158
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 158
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: R[j] = k
DEBUG:numba.core.ssa:on stmt: jump 44
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 168
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: $const168.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=$const168.0)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {46: [<numba.core.ir.Assign object at 0x0000017AA3EF6950>],
             102: [<numba.core.ir.Assign object at 0x0000017A1F0CACE0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: A = arg(0, name=A)
DEBUG:numba.core.ssa:on stmt: R = arg(1, name=R)
DEBUG:numba.core.ssa:on stmt: low = arg(2, name=low)
DEBUG:numba.core.ssa:on stmt: high = arg(3, name=high)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = low >= $const4.1
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, quicksort.py:71),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 14, 10
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: $assertion_error10.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: $18compare_op.2 = high <= low
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, quicksort.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 26
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: $const22.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $24return_value.1 = cast(value=$const22.0)
DEBUG:numba.core.ssa:on stmt: return $24return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: $26load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const30.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $32binary_add.3 = low + $const30.2
DEBUG:numba.core.ssa:on stmt: $const36.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $38binary_add.6 = high + $const36.5
DEBUG:numba.core.ssa:on stmt: $40call_function.7 = call $26load_global.0($32binary_add.3, $38binary_add.6, func=$26load_global.0, args=[Var($32binary_add.3, quicksort.py:75), Var($38binary_add.6, quicksort.py:75)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $42get_iter.8 = getiter(value=$40call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi44.0 = $42get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 44
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: $44for_iter.1 = iternext(value=$phi44.0)
DEBUG:numba.core.ssa:on stmt: $44for_iter.2 = pair_first(value=$44for_iter.1)
DEBUG:numba.core.ssa:on stmt: $44for_iter.3 = pair_second(value=$44for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi46.1 = $44for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $44for_iter.3, 46, 168
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: i = $phi46.1
DEBUG:numba.core.ssa:on stmt: k = getitem(value=R, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $56load_deref.5 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: v = call $56load_deref.5(A, k, func=$56load_deref.5, args=[Var(A, quicksort.py:66), Var(k, quicksort.py:76)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: j = i
DEBUG:numba.core.ssa:on stmt: $74compare_op.12 = j > low
DEBUG:numba.core.ssa:find_def var='j' stmt=$74compare_op.12 = j > low
DEBUG:numba.core.ssa:on stmt: bool76 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $76pred = call bool76($74compare_op.12, func=bool76, args=(Var($74compare_op.12, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $76pred, 78, 158
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 78
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: $78load_deref.1 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $82load_deref.3 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $const90.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $92binary_subtract.8 = j - $const90.7
DEBUG:numba.core.ssa:find_def var='j' stmt=$92binary_subtract.8 = j - $const90.7
DEBUG:numba.core.ssa:find_def_from_top label 78
DEBUG:numba.core.ssa:idom 46 from label 78
DEBUG:numba.core.ssa:find_def_from_bottom label 46
DEBUG:numba.core.ssa:on stmt: $94binary_subscr.9 = getitem(value=R, index=$92binary_subtract.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $96call_function.10 = call $82load_deref.3(A, $94binary_subscr.9, func=$82load_deref.3, args=[Var(A, quicksort.py:66), Var($94binary_subscr.9, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98call_function.11 = call $78load_deref.1(v, $96call_function.10, func=$78load_deref.1, args=[Var(v, quicksort.py:77), Var($96call_function.10, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98call_function.11, func=bool100, args=(Var($98call_function.11, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 102, 158
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: $const106.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $108binary_subtract.4 = j - $const106.3
DEBUG:numba.core.ssa:find_def var='j' stmt=$108binary_subtract.4 = j - $const106.3
DEBUG:numba.core.ssa:find_def_from_top label 102
DEBUG:numba.core.ssa:insert phi node j.2 = phi(incoming_values=[], incoming_blocks=[]) at 102
DEBUG:numba.core.ssa:find_def_from_bottom label 134
DEBUG:numba.core.ssa:find_def_from_top label 134
DEBUG:numba.core.ssa:idom 102 from label 134
DEBUG:numba.core.ssa:find_def_from_bottom label 102
DEBUG:numba.core.ssa:incoming_def j.1 = $122inplace_subtract.10
DEBUG:numba.core.ssa:find_def_from_bottom label 78
DEBUG:numba.core.ssa:find_def_from_top label 78
DEBUG:numba.core.ssa:idom 46 from label 78
DEBUG:numba.core.ssa:find_def_from_bottom label 46
DEBUG:numba.core.ssa:incoming_def j = i
DEBUG:numba.core.ssa:replaced with: $108binary_subtract.4 = j.2 - $const106.3
DEBUG:numba.core.ssa:on stmt: $110binary_subscr.5 = getitem(value=R, index=$108binary_subtract.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: R[j] = $110binary_subscr.5
DEBUG:numba.core.ssa:find_def var='j' stmt=R[j] = $110binary_subscr.5
DEBUG:numba.core.ssa:replaced with: R[j.2] = $110binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const120.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $122inplace_subtract.10 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const120.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='j' stmt=$122inplace_subtract.10 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const120.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:replaced with: $122inplace_subtract.10 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j.2, rhs=$const120.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: j.1 = $122inplace_subtract.10
DEBUG:numba.core.ssa:on stmt: $130compare_op.13 = j > low
DEBUG:numba.core.ssa:find_def var='j' stmt=$130compare_op.13 = j > low
DEBUG:numba.core.ssa:replaced with: $130compare_op.13 = j.1 > low
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.13, func=bool132, args=(Var($130compare_op.13, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 158
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: $134load_deref.1 = freevar(LT: <function lt_floats at 0x0000017A05CE6CB0>)
DEBUG:numba.core.ssa:on stmt: $138load_deref.3 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x0000017A331FFF40>)
DEBUG:numba.core.ssa:on stmt: $const146.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $148binary_subtract.8 = j - $const146.7
DEBUG:numba.core.ssa:find_def var='j' stmt=$148binary_subtract.8 = j - $const146.7
DEBUG:numba.core.ssa:find_def_from_top label 134
DEBUG:numba.core.ssa:idom 102 from label 134
DEBUG:numba.core.ssa:find_def_from_bottom label 102
DEBUG:numba.core.ssa:replaced with: $148binary_subtract.8 = j.1 - $const146.7
DEBUG:numba.core.ssa:on stmt: $150binary_subscr.9 = getitem(value=R, index=$148binary_subtract.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $152call_function.10 = call $138load_deref.3(A, $150binary_subscr.9, func=$138load_deref.3, args=[Var(A, quicksort.py:66), Var($150binary_subscr.9, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154call_function.11 = call $134load_deref.1(v, $152call_function.10, func=$134load_deref.1, args=[Var(v, quicksort.py:77), Var($152call_function.10, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool156 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $156pred = call bool156($154call_function.11, func=bool156, args=(Var($154call_function.11, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $156pred, 102, 158
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 158
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: R[j] = k
DEBUG:numba.core.ssa:find_def var='j' stmt=R[j] = k
DEBUG:numba.core.ssa:find_def_from_top label 158
DEBUG:numba.core.ssa:insert phi node j.3 = phi(incoming_values=[], incoming_blocks=[]) at 158
DEBUG:numba.core.ssa:find_def_from_bottom label 78
DEBUG:numba.core.ssa:find_def_from_top label 78
DEBUG:numba.core.ssa:idom 46 from label 78
DEBUG:numba.core.ssa:find_def_from_bottom label 46
DEBUG:numba.core.ssa:incoming_def j = i
DEBUG:numba.core.ssa:find_def_from_bottom label 102
DEBUG:numba.core.ssa:incoming_def j.1 = $122inplace_subtract.10
DEBUG:numba.core.ssa:find_def_from_bottom label 134
DEBUG:numba.core.ssa:find_def_from_top label 134
DEBUG:numba.core.ssa:idom 102 from label 134
DEBUG:numba.core.ssa:find_def_from_bottom label 102
DEBUG:numba.core.ssa:incoming_def j.1 = $122inplace_subtract.10
DEBUG:numba.core.ssa:find_def_from_bottom label 46
DEBUG:numba.core.ssa:incoming_def j = i
DEBUG:numba.core.ssa:replaced with: R[j.3] = k
DEBUG:numba.core.ssa:on stmt: jump 44
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 168
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA3F6C490>
DEBUG:numba.core.ssa:on stmt: $const168.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=$const168.0)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=143)
           2	LOAD_GLOBAL(arg=0, lineno=191)
           4	LOAD_METHOD(arg=1, lineno=191)
           6	LOAD_FAST(arg=1, lineno=191)
           8	CALL_METHOD(arg=1, lineno=191)
          10	LOAD_FAST(arg=4, lineno=191)
          12	BINARY_MULTIPLY(arg=None, lineno=191)
          14	STORE_FAST(arg=5, lineno=191)
          16	LOAD_GLOBAL(arg=0, lineno=192)
          18	LOAD_ATTR(arg=2, lineno=192)
          20	LOAD_FAST(arg=0, lineno=192)
          22	LOAD_ATTR(arg=3, lineno=192)
          24	LOAD_CONST(arg=1, lineno=192)
          26	BINARY_SUBSCR(arg=None, lineno=192)
          28	LOAD_GLOBAL(arg=0, lineno=192)
          30	LOAD_ATTR(arg=4, lineno=192)
          32	LOAD_CONST(arg=2, lineno=192)
          34	CALL_FUNCTION_KW(arg=2, lineno=192)
          36	STORE_FAST(arg=6, lineno=192)
          38	LOAD_GLOBAL(arg=0, lineno=193)
          40	LOAD_ATTR(arg=2, lineno=193)
          42	LOAD_FAST(arg=0, lineno=193)
          44	LOAD_ATTR(arg=3, lineno=193)
          46	LOAD_CONST(arg=1, lineno=193)
          48	BINARY_SUBSCR(arg=None, lineno=193)
          50	LOAD_GLOBAL(arg=0, lineno=193)
          52	LOAD_ATTR(arg=4, lineno=193)
          54	LOAD_CONST(arg=2, lineno=193)
          56	CALL_FUNCTION_KW(arg=2, lineno=193)
          58	STORE_FAST(arg=7, lineno=193)
          60	LOAD_GLOBAL(arg=0, lineno=195)
          62	LOAD_METHOD(arg=5, lineno=195)
          64	LOAD_FAST(arg=0, lineno=195)
          66	CALL_METHOD(arg=1, lineno=195)
          68	STORE_FAST(arg=8, lineno=195)
          70	LOAD_GLOBAL(arg=6, lineno=197)
          72	LOAD_FAST(arg=0, lineno=197)
          74	LOAD_ATTR(arg=3, lineno=197)
          76	LOAD_CONST(arg=1, lineno=197)
          78	BINARY_SUBSCR(arg=None, lineno=197)
          80	CALL_FUNCTION(arg=1, lineno=197)
          82	GET_ITER(arg=None, lineno=197)
>         84	FOR_ITER(arg=229, lineno=197)
          86	STORE_FAST(arg=9, lineno=197)
          88	LOAD_CONST(arg=3, lineno=198)
          90	STORE_FAST(arg=10, lineno=198)
          92	LOAD_GLOBAL(arg=7, lineno=199)
          94	STORE_FAST(arg=11, lineno=199)
          96	LOAD_CONST(arg=4, lineno=200)
          98	STORE_FAST(arg=12, lineno=200)
         100	LOAD_FAST(arg=0, lineno=203)
         102	LOAD_FAST(arg=9, lineno=203)
         104	BINARY_SUBSCR(arg=None, lineno=203)
         106	STORE_FAST(arg=13, lineno=203)
         108	LOAD_FAST(arg=13, lineno=204)
         110	LOAD_FAST(arg=13, lineno=204)
         112	LOAD_CONST(arg=3, lineno=204)
         114	COMPARE_OP(arg=4, lineno=204)
         116	BINARY_SUBSCR(arg=None, lineno=204)
         118	STORE_FAST(arg=14, lineno=204)
         120	LOAD_FAST(arg=14, lineno=205)
         122	LOAD_ATTR(arg=3, lineno=205)
         124	LOAD_CONST(arg=1, lineno=205)
         126	BINARY_SUBSCR(arg=None, lineno=205)
         128	LOAD_FAST(arg=3, lineno=205)
         130	COMPARE_OP(arg=5, lineno=205)
         132	POP_JUMP_IF_FALSE(arg=123, lineno=205)
         134	LOAD_GLOBAL(arg=8, lineno=206)
         136	LOAD_GLOBAL(arg=0, lineno=206)
         138	LOAD_METHOD(arg=9, lineno=206)
         140	LOAD_FAST(arg=3, lineno=206)
         142	CALL_METHOD(arg=1, lineno=206)
         144	CALL_FUNCTION(arg=1, lineno=206)
         146	STORE_FAST(arg=15, lineno=206)
         148	LOAD_FAST(arg=3, lineno=207)
         150	LOAD_FAST(arg=15, lineno=207)
         152	BINARY_SUBTRACT(arg=None, lineno=207)
         154	STORE_FAST(arg=16, lineno=207)
         156	LOAD_FAST(arg=15, lineno=208)
         158	LOAD_CONST(arg=1, lineno=208)
         160	COMPARE_OP(arg=4, lineno=208)
         162	POP_JUMP_IF_FALSE(arg=114, lineno=208)
         164	LOAD_FAST(arg=14, lineno=209)
         166	LOAD_FAST(arg=15, lineno=209)
         168	LOAD_CONST(arg=5, lineno=209)
         170	BINARY_SUBTRACT(arg=None, lineno=209)
         172	BINARY_SUBSCR(arg=None, lineno=209)
         174	LOAD_FAST(arg=6, lineno=209)
         176	LOAD_FAST(arg=9, lineno=209)
         178	STORE_SUBSCR(arg=None, lineno=209)
         180	LOAD_FAST(arg=16, lineno=210)
         182	LOAD_GLOBAL(arg=10, lineno=210)
         184	COMPARE_OP(arg=4, lineno=210)
         186	POP_JUMP_IF_FALSE(arg=113, lineno=210)
         188	LOAD_FAST(arg=6, lineno=211)
         190	LOAD_FAST(arg=9, lineno=211)
         192	DUP_TOP_TWO(arg=None, lineno=211)
         194	BINARY_SUBSCR(arg=None, lineno=211)
         196	LOAD_FAST(arg=16, lineno=211)
         198	LOAD_FAST(arg=14, lineno=212)
         200	LOAD_FAST(arg=15, lineno=212)
         202	BINARY_SUBSCR(arg=None, lineno=212)
         204	LOAD_FAST(arg=14, lineno=212)
         206	LOAD_FAST(arg=15, lineno=212)
         208	LOAD_CONST(arg=5, lineno=212)
         210	BINARY_SUBTRACT(arg=None, lineno=212)
         212	BINARY_SUBSCR(arg=None, lineno=212)
         214	BINARY_SUBTRACT(arg=None, lineno=212)
         216	BINARY_MULTIPLY(arg=None, lineno=211)
         218	INPLACE_ADD(arg=None, lineno=211)
         220	ROT_THREE(arg=None, lineno=211)
         222	STORE_SUBSCR(arg=None, lineno=211)
>        224	JUMP_FORWARD(arg=23, lineno=211)
>        226	LOAD_FAST(arg=16, lineno=215)
         228	LOAD_FAST(arg=14, lineno=215)
         230	LOAD_CONST(arg=1, lineno=215)
         232	BINARY_SUBSCR(arg=None, lineno=215)
         234	BINARY_MULTIPLY(arg=None, lineno=215)
         236	LOAD_FAST(arg=6, lineno=215)
         238	LOAD_FAST(arg=9, lineno=215)
         240	STORE_SUBSCR(arg=None, lineno=215)
         242	JUMP_FORWARD(arg=14, lineno=215)
>        244	LOAD_FAST(arg=14, lineno=216)
         246	LOAD_ATTR(arg=3, lineno=216)
         248	LOAD_CONST(arg=1, lineno=216)
         250	BINARY_SUBSCR(arg=None, lineno=216)
         252	LOAD_CONST(arg=1, lineno=216)
         254	COMPARE_OP(arg=4, lineno=216)
         256	POP_JUMP_IF_FALSE(arg=137, lineno=216)
         258	LOAD_GLOBAL(arg=0, lineno=217)
         260	LOAD_METHOD(arg=11, lineno=217)
         262	LOAD_FAST(arg=14, lineno=217)
         264	CALL_METHOD(arg=1, lineno=217)
         266	LOAD_FAST(arg=6, lineno=217)
         268	LOAD_FAST(arg=9, lineno=217)
         270	STORE_SUBSCR(arg=None, lineno=217)
>        272	LOAD_GLOBAL(arg=6, lineno=219)
         274	LOAD_FAST(arg=2, lineno=219)
         276	CALL_FUNCTION(arg=1, lineno=219)
         278	GET_ITER(arg=None, lineno=219)
>        280	FOR_ITER(arg=85, lineno=219)
         282	STORE_FAST(arg=17, lineno=219)
         284	LOAD_CONST(arg=3, lineno=221)
         286	STORE_FAST(arg=18, lineno=221)
         288	LOAD_GLOBAL(arg=6, lineno=222)
         290	LOAD_CONST(arg=5, lineno=222)
         292	LOAD_FAST(arg=0, lineno=222)
         294	LOAD_ATTR(arg=3, lineno=222)
         296	LOAD_CONST(arg=5, lineno=222)
         298	BINARY_SUBSCR(arg=None, lineno=222)
         300	CALL_FUNCTION(arg=2, lineno=222)
         302	GET_ITER(arg=None, lineno=222)
>        304	FOR_ITER(arg=31, lineno=222)
         306	STORE_FAST(arg=19, lineno=222)
         308	LOAD_FAST(arg=0, lineno=223)
         310	LOAD_FAST(arg=9, lineno=223)
         312	LOAD_FAST(arg=19, lineno=223)
         314	BUILD_TUPLE(arg=2, lineno=223)
         316	BINARY_SUBSCR(arg=None, lineno=223)
         318	LOAD_FAST(arg=6, lineno=223)
         320	LOAD_FAST(arg=9, lineno=223)
         322	BINARY_SUBSCR(arg=None, lineno=223)
         324	BINARY_SUBTRACT(arg=None, lineno=223)
         326	STORE_FAST(arg=20, lineno=223)
         328	LOAD_FAST(arg=20, lineno=224)
         330	LOAD_CONST(arg=1, lineno=224)
         332	COMPARE_OP(arg=4, lineno=224)
         334	POP_JUMP_IF_FALSE(arg=180, lineno=224)
         336	LOAD_FAST(arg=18, lineno=225)
         338	LOAD_GLOBAL(arg=0, lineno=225)
         340	LOAD_METHOD(arg=12, lineno=225)
         342	LOAD_FAST(arg=20, lineno=225)
         344	LOAD_FAST(arg=12, lineno=225)
         346	BINARY_TRUE_DIVIDE(arg=None, lineno=225)
         348	UNARY_NEGATIVE(arg=None, lineno=225)
         350	CALL_METHOD(arg=1, lineno=225)
         352	INPLACE_ADD(arg=None, lineno=225)
         354	STORE_FAST(arg=18, lineno=225)
         356	JUMP_ABSOLUTE(arg=153, lineno=225)
>        358	LOAD_FAST(arg=18, lineno=227)
         360	LOAD_CONST(arg=4, lineno=227)
         362	INPLACE_ADD(arg=None, lineno=227)
         364	STORE_FAST(arg=18, lineno=227)
         366	JUMP_ABSOLUTE(arg=153, lineno=227)
>        368	LOAD_GLOBAL(arg=0, lineno=229)
         370	LOAD_METHOD(arg=13, lineno=229)
         372	LOAD_FAST(arg=18, lineno=229)
         374	LOAD_FAST(arg=5, lineno=229)
         376	BINARY_SUBTRACT(arg=None, lineno=229)
         378	CALL_METHOD(arg=1, lineno=229)
         380	LOAD_GLOBAL(arg=10, lineno=229)
         382	COMPARE_OP(arg=0, lineno=229)
         384	POP_JUMP_IF_FALSE(arg=196, lineno=229)
         386	POP_TOP(arg=None, lineno=230)
         388	JUMP_FORWARD(arg=31, lineno=230)
>        390	LOAD_FAST(arg=18, lineno=232)
         392	LOAD_FAST(arg=5, lineno=232)
         394	COMPARE_OP(arg=4, lineno=232)
         396	POP_JUMP_IF_FALSE(arg=209, lineno=232)
         398	LOAD_FAST(arg=12, lineno=233)
         400	STORE_FAST(arg=11, lineno=233)
         402	LOAD_FAST(arg=10, lineno=234)
         404	LOAD_FAST(arg=11, lineno=234)
         406	BINARY_ADD(arg=None, lineno=234)
         408	LOAD_CONST(arg=6, lineno=234)
         410	BINARY_TRUE_DIVIDE(arg=None, lineno=234)
         412	STORE_FAST(arg=12, lineno=234)
         414	JUMP_ABSOLUTE(arg=141, lineno=234)
>        416	LOAD_FAST(arg=12, lineno=236)
         418	STORE_FAST(arg=10, lineno=236)
         420	LOAD_FAST(arg=11, lineno=237)
         422	LOAD_GLOBAL(arg=7, lineno=237)
         424	COMPARE_OP(arg=2, lineno=237)
         426	POP_JUMP_IF_FALSE(arg=220, lineno=237)
         428	LOAD_FAST(arg=12, lineno=238)
         430	LOAD_CONST(arg=7, lineno=238)
         432	INPLACE_MULTIPLY(arg=None, lineno=238)
         434	STORE_FAST(arg=12, lineno=238)
         436	JUMP_ABSOLUTE(arg=141, lineno=238)
>        438	LOAD_FAST(arg=10, lineno=240)
         440	LOAD_FAST(arg=11, lineno=240)
         442	BINARY_ADD(arg=None, lineno=240)
         444	LOAD_CONST(arg=6, lineno=240)
         446	BINARY_TRUE_DIVIDE(arg=None, lineno=240)
         448	STORE_FAST(arg=12, lineno=240)
         450	JUMP_ABSOLUTE(arg=141, lineno=240)
>        452	LOAD_FAST(arg=12, lineno=242)
         454	LOAD_FAST(arg=7, lineno=242)
         456	LOAD_FAST(arg=9, lineno=242)
         458	STORE_SUBSCR(arg=None, lineno=242)
         460	LOAD_FAST(arg=6, lineno=245)
         462	LOAD_FAST(arg=9, lineno=245)
         464	BINARY_SUBSCR(arg=None, lineno=245)
         466	LOAD_CONST(arg=3, lineno=245)
         468	COMPARE_OP(arg=4, lineno=245)
         470	POP_JUMP_IF_FALSE(arg=257, lineno=245)
         472	LOAD_GLOBAL(arg=0, lineno=246)
         474	LOAD_METHOD(arg=5, lineno=246)
         476	LOAD_FAST(arg=13, lineno=246)
         478	CALL_METHOD(arg=1, lineno=246)
         480	STORE_FAST(arg=21, lineno=246)
         482	LOAD_FAST(arg=7, lineno=247)
         484	LOAD_FAST(arg=9, lineno=247)
         486	BINARY_SUBSCR(arg=None, lineno=247)
         488	LOAD_GLOBAL(arg=14, lineno=247)
         490	LOAD_FAST(arg=21, lineno=247)
         492	BINARY_MULTIPLY(arg=None, lineno=247)
         494	COMPARE_OP(arg=0, lineno=247)
         496	POP_JUMP_IF_FALSE(arg=256, lineno=247)
         498	LOAD_GLOBAL(arg=14, lineno=248)
         500	LOAD_FAST(arg=21, lineno=248)
         502	BINARY_MULTIPLY(arg=None, lineno=248)
         504	LOAD_FAST(arg=7, lineno=248)
         506	LOAD_FAST(arg=9, lineno=248)
         508	STORE_SUBSCR(arg=None, lineno=248)
>        510	JUMP_ABSOLUTE(arg=43, lineno=248)
>        512	LOAD_FAST(arg=7, lineno=250)
         514	LOAD_FAST(arg=9, lineno=250)
         516	BINARY_SUBSCR(arg=None, lineno=250)
         518	LOAD_GLOBAL(arg=14, lineno=250)
         520	LOAD_FAST(arg=8, lineno=250)
         522	BINARY_MULTIPLY(arg=None, lineno=250)
         524	COMPARE_OP(arg=0, lineno=250)
         526	NOP(arg=1, lineno=250)
         528	POP_JUMP_IF_FALSE(arg=272, lineno=250)
         530	LOAD_GLOBAL(arg=14, lineno=251)
         532	LOAD_FAST(arg=8, lineno=251)
         534	BINARY_MULTIPLY(arg=None, lineno=251)
         536	LOAD_FAST(arg=7, lineno=251)
         538	LOAD_FAST(arg=9, lineno=251)
         540	STORE_SUBSCR(arg=None, lineno=251)
>        542	JUMP_ABSOLUTE(arg=43, lineno=251)
>        544	LOAD_FAST(arg=7, lineno=253)
         546	LOAD_FAST(arg=6, lineno=253)
         548	BUILD_TUPLE(arg=2, lineno=253)
         550	RETURN_VALUE(arg=None, lineno=253)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=143)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=191)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=191)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=191)
DEBUG:numba.core.byteflow:stack ['$4load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=CALL_METHOD(arg=1, lineno=191)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$k6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=4, lineno=191)
DEBUG:numba.core.byteflow:stack ['$8call_method.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=BINARY_MULTIPLY(arg=None, lineno=191)
DEBUG:numba.core.byteflow:stack ['$8call_method.3', '$bandwidth10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=STORE_FAST(arg=5, lineno=191)
DEBUG:numba.core.byteflow:stack ['$12binary_multiply.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=0, lineno=192)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_ATTR(arg=2, lineno=192)
DEBUG:numba.core.byteflow:stack ['$16load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=192)
DEBUG:numba.core.byteflow:stack ['$18load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_ATTR(arg=3, lineno=192)
DEBUG:numba.core.byteflow:stack ['$18load_attr.7', '$distances20.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_CONST(arg=1, lineno=192)
DEBUG:numba.core.byteflow:stack ['$18load_attr.7', '$22load_attr.9']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=192)
DEBUG:numba.core.byteflow:stack ['$18load_attr.7', '$22load_attr.9', '$const24.10']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_GLOBAL(arg=0, lineno=192)
DEBUG:numba.core.byteflow:stack ['$18load_attr.7', '$26binary_subscr.11']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_ATTR(arg=4, lineno=192)
DEBUG:numba.core.byteflow:stack ['$18load_attr.7', '$26binary_subscr.11', '$28load_global.12']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_CONST(arg=2, lineno=192)
DEBUG:numba.core.byteflow:stack ['$18load_attr.7', '$26binary_subscr.11', '$30load_attr.13']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=CALL_FUNCTION_KW(arg=2, lineno=192)
DEBUG:numba.core.byteflow:stack ['$18load_attr.7', '$26binary_subscr.11', '$30load_attr.13', '$const32.14']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=STORE_FAST(arg=6, lineno=192)
DEBUG:numba.core.byteflow:stack ['$34call_function_kw.15']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_GLOBAL(arg=0, lineno=193)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_ATTR(arg=2, lineno=193)
DEBUG:numba.core.byteflow:stack ['$38load_global.16']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=193)
DEBUG:numba.core.byteflow:stack ['$40load_attr.17']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_ATTR(arg=3, lineno=193)
DEBUG:numba.core.byteflow:stack ['$40load_attr.17', '$distances42.18']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_CONST(arg=1, lineno=193)
DEBUG:numba.core.byteflow:stack ['$40load_attr.17', '$44load_attr.19']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=BINARY_SUBSCR(arg=None, lineno=193)
DEBUG:numba.core.byteflow:stack ['$40load_attr.17', '$44load_attr.19', '$const46.20']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=193)
DEBUG:numba.core.byteflow:stack ['$40load_attr.17', '$48binary_subscr.21']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_ATTR(arg=4, lineno=193)
DEBUG:numba.core.byteflow:stack ['$40load_attr.17', '$48binary_subscr.21', '$50load_global.22']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=193)
DEBUG:numba.core.byteflow:stack ['$40load_attr.17', '$48binary_subscr.21', '$52load_attr.23']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=CALL_FUNCTION_KW(arg=2, lineno=193)
DEBUG:numba.core.byteflow:stack ['$40load_attr.17', '$48binary_subscr.21', '$52load_attr.23', '$const54.24']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=STORE_FAST(arg=7, lineno=193)
DEBUG:numba.core.byteflow:stack ['$56call_function_kw.25']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_GLOBAL(arg=0, lineno=195)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_METHOD(arg=5, lineno=195)
DEBUG:numba.core.byteflow:stack ['$60load_global.26']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=0, lineno=195)
DEBUG:numba.core.byteflow:stack ['$62load_method.27']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=CALL_METHOD(arg=1, lineno=195)
DEBUG:numba.core.byteflow:stack ['$62load_method.27', '$distances64.28']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=STORE_FAST(arg=8, lineno=195)
DEBUG:numba.core.byteflow:stack ['$66call_method.29']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_GLOBAL(arg=6, lineno=197)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=0, lineno=197)
DEBUG:numba.core.byteflow:stack ['$70load_global.30']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_ATTR(arg=3, lineno=197)
DEBUG:numba.core.byteflow:stack ['$70load_global.30', '$distances72.31']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_CONST(arg=1, lineno=197)
DEBUG:numba.core.byteflow:stack ['$70load_global.30', '$74load_attr.32']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=BINARY_SUBSCR(arg=None, lineno=197)
DEBUG:numba.core.byteflow:stack ['$70load_global.30', '$74load_attr.32', '$const76.33']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=CALL_FUNCTION(arg=1, lineno=197)
DEBUG:numba.core.byteflow:stack ['$70load_global.30', '$78binary_subscr.34']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=GET_ITER(arg=None, lineno=197)
DEBUG:numba.core.byteflow:stack ['$80call_function.35']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=84, stack=('$82get_iter.36',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=84 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi84.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=84 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=84, inst=FOR_ITER(arg=229, lineno=197)
DEBUG:numba.core.byteflow:stack ['$phi84.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=544, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=('$phi84.0', '$84for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=544 nstack_initial=0), State(pc_initial=86 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=544 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=544, inst=LOAD_FAST(arg=7, lineno=253)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=546, inst=LOAD_FAST(arg=6, lineno=253)
DEBUG:numba.core.byteflow:stack ['$result544.0']
DEBUG:numba.core.byteflow:dispatch pc=548, inst=BUILD_TUPLE(arg=2, lineno=253)
DEBUG:numba.core.byteflow:stack ['$result544.0', '$rho546.1']
DEBUG:numba.core.byteflow:dispatch pc=550, inst=RETURN_VALUE(arg=None, lineno=253)
DEBUG:numba.core.byteflow:stack ['$548build_tuple.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=86 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi86.0', '$phi86.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=86 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=86, inst=STORE_FAST(arg=9, lineno=197)
DEBUG:numba.core.byteflow:stack ['$phi86.0', '$phi86.1']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_CONST(arg=3, lineno=198)
DEBUG:numba.core.byteflow:stack ['$phi86.0']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=STORE_FAST(arg=10, lineno=198)
DEBUG:numba.core.byteflow:stack ['$phi86.0', '$const88.2']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_GLOBAL(arg=7, lineno=199)
DEBUG:numba.core.byteflow:stack ['$phi86.0']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=STORE_FAST(arg=11, lineno=199)
DEBUG:numba.core.byteflow:stack ['$phi86.0', '$92load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_CONST(arg=4, lineno=200)
DEBUG:numba.core.byteflow:stack ['$phi86.0']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=STORE_FAST(arg=12, lineno=200)
DEBUG:numba.core.byteflow:stack ['$phi86.0', '$const96.4']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_FAST(arg=0, lineno=203)
DEBUG:numba.core.byteflow:stack ['$phi86.0']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=9, lineno=203)
DEBUG:numba.core.byteflow:stack ['$phi86.0', '$distances100.5']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=BINARY_SUBSCR(arg=None, lineno=203)
DEBUG:numba.core.byteflow:stack ['$phi86.0', '$distances100.5', '$i102.6']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=STORE_FAST(arg=13, lineno=203)
DEBUG:numba.core.byteflow:stack ['$phi86.0', '$104binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_FAST(arg=13, lineno=204)
DEBUG:numba.core.byteflow:stack ['$phi86.0']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=13, lineno=204)
DEBUG:numba.core.byteflow:stack ['$phi86.0', '$ith_distances108.8']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_CONST(arg=3, lineno=204)
DEBUG:numba.core.byteflow:stack ['$phi86.0', '$ith_distances108.8', '$ith_distances110.9']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=COMPARE_OP(arg=4, lineno=204)
DEBUG:numba.core.byteflow:stack ['$phi86.0', '$ith_distances108.8', '$ith_distances110.9', '$const112.10']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BINARY_SUBSCR(arg=None, lineno=204)
DEBUG:numba.core.byteflow:stack ['$phi86.0', '$ith_distances108.8', '$114compare_op.11']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=STORE_FAST(arg=14, lineno=204)
DEBUG:numba.core.byteflow:stack ['$phi86.0', '$116binary_subscr.12']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_FAST(arg=14, lineno=205)
DEBUG:numba.core.byteflow:stack ['$phi86.0']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_ATTR(arg=3, lineno=205)
DEBUG:numba.core.byteflow:stack ['$phi86.0', '$non_zero_dists120.13']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_CONST(arg=1, lineno=205)
DEBUG:numba.core.byteflow:stack ['$phi86.0', '$122load_attr.14']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=205)
DEBUG:numba.core.byteflow:stack ['$phi86.0', '$122load_attr.14', '$const124.15']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=3, lineno=205)
DEBUG:numba.core.byteflow:stack ['$phi86.0', '$126binary_subscr.16']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=COMPARE_OP(arg=5, lineno=205)
DEBUG:numba.core.byteflow:stack ['$phi86.0', '$126binary_subscr.16', '$local_connectivity128.17']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=POP_JUMP_IF_FALSE(arg=123, lineno=205)
DEBUG:numba.core.byteflow:stack ['$phi86.0', '$130compare_op.18']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=134, stack=('$phi86.0',), blockstack=(), npush=0), Edge(pc=244, stack=('$phi86.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=134 nstack_initial=1), State(pc_initial=244 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi134.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=134 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_GLOBAL(arg=8, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi134.0']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_GLOBAL(arg=0, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$134load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_METHOD(arg=9, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$134load_global.1', '$136load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=3, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$134load_global.1', '$138load_method.3']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=CALL_METHOD(arg=1, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$134load_global.1', '$138load_method.3', '$local_connectivity140.4']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=CALL_FUNCTION(arg=1, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$134load_global.1', '$142call_method.5']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=STORE_FAST(arg=15, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$144call_function.6']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=3, lineno=207)
DEBUG:numba.core.byteflow:stack ['$phi134.0']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_FAST(arg=15, lineno=207)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$local_connectivity148.7']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=BINARY_SUBTRACT(arg=None, lineno=207)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$local_connectivity148.7', '$index150.8']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=STORE_FAST(arg=16, lineno=207)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$152binary_subtract.9']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=15, lineno=208)
DEBUG:numba.core.byteflow:stack ['$phi134.0']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=LOAD_CONST(arg=1, lineno=208)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$index156.10']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=COMPARE_OP(arg=4, lineno=208)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$index156.10', '$const158.11']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=POP_JUMP_IF_FALSE(arg=114, lineno=208)
DEBUG:numba.core.byteflow:stack ['$phi134.0', '$160compare_op.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=164, stack=('$phi134.0',), blockstack=(), npush=0), Edge(pc=226, stack=('$phi134.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=244 nstack_initial=1), State(pc_initial=164 nstack_initial=1), State(pc_initial=226 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi244.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=244 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=244, inst=LOAD_FAST(arg=14, lineno=216)
DEBUG:numba.core.byteflow:stack ['$phi244.0']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=LOAD_ATTR(arg=3, lineno=216)
DEBUG:numba.core.byteflow:stack ['$phi244.0', '$non_zero_dists244.1']
DEBUG:numba.core.byteflow:dispatch pc=248, inst=LOAD_CONST(arg=1, lineno=216)
DEBUG:numba.core.byteflow:stack ['$phi244.0', '$246load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=250, inst=BINARY_SUBSCR(arg=None, lineno=216)
DEBUG:numba.core.byteflow:stack ['$phi244.0', '$246load_attr.2', '$const248.3']
DEBUG:numba.core.byteflow:dispatch pc=252, inst=LOAD_CONST(arg=1, lineno=216)
DEBUG:numba.core.byteflow:stack ['$phi244.0', '$250binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=254, inst=COMPARE_OP(arg=4, lineno=216)
DEBUG:numba.core.byteflow:stack ['$phi244.0', '$250binary_subscr.4', '$const252.5']
DEBUG:numba.core.byteflow:dispatch pc=256, inst=POP_JUMP_IF_FALSE(arg=137, lineno=216)
DEBUG:numba.core.byteflow:stack ['$phi244.0', '$254compare_op.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=258, stack=('$phi244.0',), blockstack=(), npush=0), Edge(pc=272, stack=('$phi244.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=164 nstack_initial=1), State(pc_initial=226 nstack_initial=1), State(pc_initial=258 nstack_initial=1), State(pc_initial=272 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi164.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=164 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=164, inst=LOAD_FAST(arg=14, lineno=209)
DEBUG:numba.core.byteflow:stack ['$phi164.0']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_FAST(arg=15, lineno=209)
DEBUG:numba.core.byteflow:stack ['$phi164.0', '$non_zero_dists164.1']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_CONST(arg=5, lineno=209)
DEBUG:numba.core.byteflow:stack ['$phi164.0', '$non_zero_dists164.1', '$index166.2']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=BINARY_SUBTRACT(arg=None, lineno=209)
DEBUG:numba.core.byteflow:stack ['$phi164.0', '$non_zero_dists164.1', '$index166.2', '$const168.3']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=BINARY_SUBSCR(arg=None, lineno=209)
DEBUG:numba.core.byteflow:stack ['$phi164.0', '$non_zero_dists164.1', '$170binary_subtract.4']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=LOAD_FAST(arg=6, lineno=209)
DEBUG:numba.core.byteflow:stack ['$phi164.0', '$172binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=LOAD_FAST(arg=9, lineno=209)
DEBUG:numba.core.byteflow:stack ['$phi164.0', '$172binary_subscr.5', '$rho174.6']
DEBUG:numba.core.byteflow:dispatch pc=178, inst=STORE_SUBSCR(arg=None, lineno=209)
DEBUG:numba.core.byteflow:stack ['$phi164.0', '$172binary_subscr.5', '$rho174.6', '$i176.7']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_FAST(arg=16, lineno=210)
DEBUG:numba.core.byteflow:stack ['$phi164.0']
DEBUG:numba.core.byteflow:dispatch pc=182, inst=LOAD_GLOBAL(arg=10, lineno=210)
DEBUG:numba.core.byteflow:stack ['$phi164.0', '$interpolation180.8']
DEBUG:numba.core.byteflow:dispatch pc=184, inst=COMPARE_OP(arg=4, lineno=210)
DEBUG:numba.core.byteflow:stack ['$phi164.0', '$interpolation180.8', '$182load_global.9']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=POP_JUMP_IF_FALSE(arg=113, lineno=210)
DEBUG:numba.core.byteflow:stack ['$phi164.0', '$184compare_op.10']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=188, stack=('$phi164.0',), blockstack=(), npush=0), Edge(pc=224, stack=('$phi164.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=226 nstack_initial=1), State(pc_initial=258 nstack_initial=1), State(pc_initial=272 nstack_initial=1), State(pc_initial=188 nstack_initial=1), State(pc_initial=224 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi226.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=226 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=226, inst=LOAD_FAST(arg=16, lineno=215)
DEBUG:numba.core.byteflow:stack ['$phi226.0']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=LOAD_FAST(arg=14, lineno=215)
DEBUG:numba.core.byteflow:stack ['$phi226.0', '$interpolation226.1']
DEBUG:numba.core.byteflow:dispatch pc=230, inst=LOAD_CONST(arg=1, lineno=215)
DEBUG:numba.core.byteflow:stack ['$phi226.0', '$interpolation226.1', '$non_zero_dists228.2']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=BINARY_SUBSCR(arg=None, lineno=215)
DEBUG:numba.core.byteflow:stack ['$phi226.0', '$interpolation226.1', '$non_zero_dists228.2', '$const230.3']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=BINARY_MULTIPLY(arg=None, lineno=215)
DEBUG:numba.core.byteflow:stack ['$phi226.0', '$interpolation226.1', '$232binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=LOAD_FAST(arg=6, lineno=215)
DEBUG:numba.core.byteflow:stack ['$phi226.0', '$234binary_multiply.5']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=LOAD_FAST(arg=9, lineno=215)
DEBUG:numba.core.byteflow:stack ['$phi226.0', '$234binary_multiply.5', '$rho236.6']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=STORE_SUBSCR(arg=None, lineno=215)
DEBUG:numba.core.byteflow:stack ['$phi226.0', '$234binary_multiply.5', '$rho236.6', '$i238.7']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=JUMP_FORWARD(arg=14, lineno=215)
DEBUG:numba.core.byteflow:stack ['$phi226.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=272, stack=('$phi226.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=258 nstack_initial=1), State(pc_initial=272 nstack_initial=1), State(pc_initial=188 nstack_initial=1), State(pc_initial=224 nstack_initial=1), State(pc_initial=272 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi258.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=258 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=258, inst=LOAD_GLOBAL(arg=0, lineno=217)
DEBUG:numba.core.byteflow:stack ['$phi258.0']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=LOAD_METHOD(arg=11, lineno=217)
DEBUG:numba.core.byteflow:stack ['$phi258.0', '$258load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=14, lineno=217)
DEBUG:numba.core.byteflow:stack ['$phi258.0', '$260load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=264, inst=CALL_METHOD(arg=1, lineno=217)
DEBUG:numba.core.byteflow:stack ['$phi258.0', '$260load_method.2', '$non_zero_dists262.3']
DEBUG:numba.core.byteflow:dispatch pc=266, inst=LOAD_FAST(arg=6, lineno=217)
DEBUG:numba.core.byteflow:stack ['$phi258.0', '$264call_method.4']
DEBUG:numba.core.byteflow:dispatch pc=268, inst=LOAD_FAST(arg=9, lineno=217)
DEBUG:numba.core.byteflow:stack ['$phi258.0', '$264call_method.4', '$rho266.5']
DEBUG:numba.core.byteflow:dispatch pc=270, inst=STORE_SUBSCR(arg=None, lineno=217)
DEBUG:numba.core.byteflow:stack ['$phi258.0', '$264call_method.4', '$rho266.5', '$i268.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=272, stack=('$phi258.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=272 nstack_initial=1), State(pc_initial=188 nstack_initial=1), State(pc_initial=224 nstack_initial=1), State(pc_initial=272 nstack_initial=1), State(pc_initial=272 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi272.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=272 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=272, inst=LOAD_GLOBAL(arg=6, lineno=219)
DEBUG:numba.core.byteflow:stack ['$phi272.0']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=LOAD_FAST(arg=2, lineno=219)
DEBUG:numba.core.byteflow:stack ['$phi272.0', '$272load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=276, inst=CALL_FUNCTION(arg=1, lineno=219)
DEBUG:numba.core.byteflow:stack ['$phi272.0', '$272load_global.1', '$n_iter274.2']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=GET_ITER(arg=None, lineno=219)
DEBUG:numba.core.byteflow:stack ['$phi272.0', '$276call_function.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=280, stack=('$phi272.0', '$278get_iter.4'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=188 nstack_initial=1), State(pc_initial=224 nstack_initial=1), State(pc_initial=272 nstack_initial=1), State(pc_initial=272 nstack_initial=1), State(pc_initial=280 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi188.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=188 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=188, inst=LOAD_FAST(arg=6, lineno=211)
DEBUG:numba.core.byteflow:stack ['$phi188.0']
DEBUG:numba.core.byteflow:dispatch pc=190, inst=LOAD_FAST(arg=9, lineno=211)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$rho188.1']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=DUP_TOP_TWO(arg=None, lineno=211)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$rho188.1', '$i190.2']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=BINARY_SUBSCR(arg=None, lineno=211)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$rho188.1', '$i190.2', '$192dup_top_two.3', '$192dup_top_two.4']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=LOAD_FAST(arg=16, lineno=211)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$rho188.1', '$i190.2', '$194binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=LOAD_FAST(arg=14, lineno=212)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$rho188.1', '$i190.2', '$194binary_subscr.5', '$interpolation196.6']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=LOAD_FAST(arg=15, lineno=212)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$rho188.1', '$i190.2', '$194binary_subscr.5', '$interpolation196.6', '$non_zero_dists198.7']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=BINARY_SUBSCR(arg=None, lineno=212)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$rho188.1', '$i190.2', '$194binary_subscr.5', '$interpolation196.6', '$non_zero_dists198.7', '$index200.8']
DEBUG:numba.core.byteflow:dispatch pc=204, inst=LOAD_FAST(arg=14, lineno=212)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$rho188.1', '$i190.2', '$194binary_subscr.5', '$interpolation196.6', '$202binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=LOAD_FAST(arg=15, lineno=212)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$rho188.1', '$i190.2', '$194binary_subscr.5', '$interpolation196.6', '$202binary_subscr.9', '$non_zero_dists204.10']
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_CONST(arg=5, lineno=212)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$rho188.1', '$i190.2', '$194binary_subscr.5', '$interpolation196.6', '$202binary_subscr.9', '$non_zero_dists204.10', '$index206.11']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=BINARY_SUBTRACT(arg=None, lineno=212)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$rho188.1', '$i190.2', '$194binary_subscr.5', '$interpolation196.6', '$202binary_subscr.9', '$non_zero_dists204.10', '$index206.11', '$const208.12']
DEBUG:numba.core.byteflow:dispatch pc=212, inst=BINARY_SUBSCR(arg=None, lineno=212)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$rho188.1', '$i190.2', '$194binary_subscr.5', '$interpolation196.6', '$202binary_subscr.9', '$non_zero_dists204.10', '$210binary_subtract.13']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=BINARY_SUBTRACT(arg=None, lineno=212)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$rho188.1', '$i190.2', '$194binary_subscr.5', '$interpolation196.6', '$202binary_subscr.9', '$212binary_subscr.14']
DEBUG:numba.core.byteflow:dispatch pc=216, inst=BINARY_MULTIPLY(arg=None, lineno=211)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$rho188.1', '$i190.2', '$194binary_subscr.5', '$interpolation196.6', '$214binary_subtract.15']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=INPLACE_ADD(arg=None, lineno=211)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$rho188.1', '$i190.2', '$194binary_subscr.5', '$216binary_multiply.16']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=ROT_THREE(arg=None, lineno=211)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$rho188.1', '$i190.2', '$218inplace_add.17']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=STORE_SUBSCR(arg=None, lineno=211)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$218inplace_add.17', '$rho188.1', '$i190.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=224, stack=('$phi188.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=224 nstack_initial=1), State(pc_initial=272 nstack_initial=1), State(pc_initial=272 nstack_initial=1), State(pc_initial=280 nstack_initial=2), State(pc_initial=224 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi224.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=224 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=224, inst=JUMP_FORWARD(arg=23, lineno=211)
DEBUG:numba.core.byteflow:stack ['$phi224.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=272, stack=('$phi224.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=272 nstack_initial=1), State(pc_initial=272 nstack_initial=1), State(pc_initial=280 nstack_initial=2), State(pc_initial=224 nstack_initial=1), State(pc_initial=272 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=272 nstack_initial=1), State(pc_initial=280 nstack_initial=2), State(pc_initial=224 nstack_initial=1), State(pc_initial=272 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=280 nstack_initial=2), State(pc_initial=224 nstack_initial=1), State(pc_initial=272 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi280.0', '$phi280.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=280 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=280, inst=FOR_ITER(arg=85, lineno=219)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$phi280.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=452, stack=('$phi280.0',), blockstack=(), npush=0), Edge(pc=282, stack=('$phi280.0', '$phi280.1', '$280for_iter.3'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=224 nstack_initial=1), State(pc_initial=272 nstack_initial=1), State(pc_initial=452 nstack_initial=1), State(pc_initial=282 nstack_initial=3)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=272 nstack_initial=1), State(pc_initial=452 nstack_initial=1), State(pc_initial=282 nstack_initial=3)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=452 nstack_initial=1), State(pc_initial=282 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi452.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=452 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=452, inst=LOAD_FAST(arg=12, lineno=242)
DEBUG:numba.core.byteflow:stack ['$phi452.0']
DEBUG:numba.core.byteflow:dispatch pc=454, inst=LOAD_FAST(arg=7, lineno=242)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$mid452.1']
DEBUG:numba.core.byteflow:dispatch pc=456, inst=LOAD_FAST(arg=9, lineno=242)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$mid452.1', '$result454.2']
DEBUG:numba.core.byteflow:dispatch pc=458, inst=STORE_SUBSCR(arg=None, lineno=242)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$mid452.1', '$result454.2', '$i456.3']
DEBUG:numba.core.byteflow:dispatch pc=460, inst=LOAD_FAST(arg=6, lineno=245)
DEBUG:numba.core.byteflow:stack ['$phi452.0']
DEBUG:numba.core.byteflow:dispatch pc=462, inst=LOAD_FAST(arg=9, lineno=245)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$rho460.4']
DEBUG:numba.core.byteflow:dispatch pc=464, inst=BINARY_SUBSCR(arg=None, lineno=245)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$rho460.4', '$i462.5']
DEBUG:numba.core.byteflow:dispatch pc=466, inst=LOAD_CONST(arg=3, lineno=245)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$464binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=468, inst=COMPARE_OP(arg=4, lineno=245)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$464binary_subscr.6', '$const466.7']
DEBUG:numba.core.byteflow:dispatch pc=470, inst=POP_JUMP_IF_FALSE(arg=257, lineno=245)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$468compare_op.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=472, stack=('$phi452.0',), blockstack=(), npush=0), Edge(pc=512, stack=('$phi452.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=282 nstack_initial=3), State(pc_initial=472 nstack_initial=1), State(pc_initial=512 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi282.0', '$phi282.1', '$phi282.2']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=282 nstack_initial=3)
DEBUG:numba.core.byteflow:dispatch pc=282, inst=STORE_FAST(arg=17, lineno=219)
DEBUG:numba.core.byteflow:stack ['$phi282.0', '$phi282.1', '$phi282.2']
DEBUG:numba.core.byteflow:dispatch pc=284, inst=LOAD_CONST(arg=3, lineno=221)
DEBUG:numba.core.byteflow:stack ['$phi282.0', '$phi282.1']
DEBUG:numba.core.byteflow:dispatch pc=286, inst=STORE_FAST(arg=18, lineno=221)
DEBUG:numba.core.byteflow:stack ['$phi282.0', '$phi282.1', '$const284.3']
DEBUG:numba.core.byteflow:dispatch pc=288, inst=LOAD_GLOBAL(arg=6, lineno=222)
DEBUG:numba.core.byteflow:stack ['$phi282.0', '$phi282.1']
DEBUG:numba.core.byteflow:dispatch pc=290, inst=LOAD_CONST(arg=5, lineno=222)
DEBUG:numba.core.byteflow:stack ['$phi282.0', '$phi282.1', '$288load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=292, inst=LOAD_FAST(arg=0, lineno=222)
DEBUG:numba.core.byteflow:stack ['$phi282.0', '$phi282.1', '$288load_global.4', '$const290.5']
DEBUG:numba.core.byteflow:dispatch pc=294, inst=LOAD_ATTR(arg=3, lineno=222)
DEBUG:numba.core.byteflow:stack ['$phi282.0', '$phi282.1', '$288load_global.4', '$const290.5', '$distances292.6']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=LOAD_CONST(arg=5, lineno=222)
DEBUG:numba.core.byteflow:stack ['$phi282.0', '$phi282.1', '$288load_global.4', '$const290.5', '$294load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=298, inst=BINARY_SUBSCR(arg=None, lineno=222)
DEBUG:numba.core.byteflow:stack ['$phi282.0', '$phi282.1', '$288load_global.4', '$const290.5', '$294load_attr.7', '$const296.8']
DEBUG:numba.core.byteflow:dispatch pc=300, inst=CALL_FUNCTION(arg=2, lineno=222)
DEBUG:numba.core.byteflow:stack ['$phi282.0', '$phi282.1', '$288load_global.4', '$const290.5', '$298binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=302, inst=GET_ITER(arg=None, lineno=222)
DEBUG:numba.core.byteflow:stack ['$phi282.0', '$phi282.1', '$300call_function.10']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=304, stack=('$phi282.0', '$phi282.1', '$302get_iter.11'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=472 nstack_initial=1), State(pc_initial=512 nstack_initial=1), State(pc_initial=304 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi472.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=472 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=472, inst=LOAD_GLOBAL(arg=0, lineno=246)
DEBUG:numba.core.byteflow:stack ['$phi472.0']
DEBUG:numba.core.byteflow:dispatch pc=474, inst=LOAD_METHOD(arg=5, lineno=246)
DEBUG:numba.core.byteflow:stack ['$phi472.0', '$472load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=476, inst=LOAD_FAST(arg=13, lineno=246)
DEBUG:numba.core.byteflow:stack ['$phi472.0', '$474load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=478, inst=CALL_METHOD(arg=1, lineno=246)
DEBUG:numba.core.byteflow:stack ['$phi472.0', '$474load_method.2', '$ith_distances476.3']
DEBUG:numba.core.byteflow:dispatch pc=480, inst=STORE_FAST(arg=21, lineno=246)
DEBUG:numba.core.byteflow:stack ['$phi472.0', '$478call_method.4']
DEBUG:numba.core.byteflow:dispatch pc=482, inst=LOAD_FAST(arg=7, lineno=247)
DEBUG:numba.core.byteflow:stack ['$phi472.0']
DEBUG:numba.core.byteflow:dispatch pc=484, inst=LOAD_FAST(arg=9, lineno=247)
DEBUG:numba.core.byteflow:stack ['$phi472.0', '$result482.5']
DEBUG:numba.core.byteflow:dispatch pc=486, inst=BINARY_SUBSCR(arg=None, lineno=247)
DEBUG:numba.core.byteflow:stack ['$phi472.0', '$result482.5', '$i484.6']
DEBUG:numba.core.byteflow:dispatch pc=488, inst=LOAD_GLOBAL(arg=14, lineno=247)
DEBUG:numba.core.byteflow:stack ['$phi472.0', '$486binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=490, inst=LOAD_FAST(arg=21, lineno=247)
DEBUG:numba.core.byteflow:stack ['$phi472.0', '$486binary_subscr.7', '$488load_global.8']
DEBUG:numba.core.byteflow:dispatch pc=492, inst=BINARY_MULTIPLY(arg=None, lineno=247)
DEBUG:numba.core.byteflow:stack ['$phi472.0', '$486binary_subscr.7', '$488load_global.8', '$mean_ith_distances490.9']
DEBUG:numba.core.byteflow:dispatch pc=494, inst=COMPARE_OP(arg=0, lineno=247)
DEBUG:numba.core.byteflow:stack ['$phi472.0', '$486binary_subscr.7', '$492binary_multiply.10']
DEBUG:numba.core.byteflow:dispatch pc=496, inst=POP_JUMP_IF_FALSE(arg=256, lineno=247)
DEBUG:numba.core.byteflow:stack ['$phi472.0', '$494compare_op.11']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=498, stack=('$phi472.0',), blockstack=(), npush=0), Edge(pc=510, stack=('$phi472.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=512 nstack_initial=1), State(pc_initial=304 nstack_initial=3), State(pc_initial=498 nstack_initial=1), State(pc_initial=510 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi512.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=512 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=512, inst=LOAD_FAST(arg=7, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi512.0']
DEBUG:numba.core.byteflow:dispatch pc=514, inst=LOAD_FAST(arg=9, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi512.0', '$result512.1']
DEBUG:numba.core.byteflow:dispatch pc=516, inst=BINARY_SUBSCR(arg=None, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi512.0', '$result512.1', '$i514.2']
DEBUG:numba.core.byteflow:dispatch pc=518, inst=LOAD_GLOBAL(arg=14, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi512.0', '$516binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=520, inst=LOAD_FAST(arg=8, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi512.0', '$516binary_subscr.3', '$518load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=522, inst=BINARY_MULTIPLY(arg=None, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi512.0', '$516binary_subscr.3', '$518load_global.4', '$mean_distances520.5']
DEBUG:numba.core.byteflow:dispatch pc=524, inst=COMPARE_OP(arg=0, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi512.0', '$516binary_subscr.3', '$522binary_multiply.6']
DEBUG:numba.core.byteflow:dispatch pc=526, inst=NOP(arg=1, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi512.0', '$524compare_op.7']
DEBUG:numba.core.byteflow:dispatch pc=528, inst=POP_JUMP_IF_FALSE(arg=272, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi512.0', '$524compare_op.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=530, stack=('$phi512.0',), blockstack=(), npush=0), Edge(pc=542, stack=('$phi512.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=304 nstack_initial=3), State(pc_initial=498 nstack_initial=1), State(pc_initial=510 nstack_initial=1), State(pc_initial=530 nstack_initial=1), State(pc_initial=542 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi304.0', '$phi304.1', '$phi304.2']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=304 nstack_initial=3)
DEBUG:numba.core.byteflow:dispatch pc=304, inst=FOR_ITER(arg=31, lineno=222)
DEBUG:numba.core.byteflow:stack ['$phi304.0', '$phi304.1', '$phi304.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=368, stack=('$phi304.0', '$phi304.1'), blockstack=(), npush=0), Edge(pc=306, stack=('$phi304.0', '$phi304.1', '$phi304.2', '$304for_iter.4'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=498 nstack_initial=1), State(pc_initial=510 nstack_initial=1), State(pc_initial=530 nstack_initial=1), State(pc_initial=542 nstack_initial=1), State(pc_initial=368 nstack_initial=2), State(pc_initial=306 nstack_initial=4)])
DEBUG:numba.core.byteflow:stack: ['$phi498.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=498 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=498, inst=LOAD_GLOBAL(arg=14, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi498.0']
DEBUG:numba.core.byteflow:dispatch pc=500, inst=LOAD_FAST(arg=21, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi498.0', '$498load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=502, inst=BINARY_MULTIPLY(arg=None, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi498.0', '$498load_global.1', '$mean_ith_distances500.2']
DEBUG:numba.core.byteflow:dispatch pc=504, inst=LOAD_FAST(arg=7, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi498.0', '$502binary_multiply.3']
DEBUG:numba.core.byteflow:dispatch pc=506, inst=LOAD_FAST(arg=9, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi498.0', '$502binary_multiply.3', '$result504.4']
DEBUG:numba.core.byteflow:dispatch pc=508, inst=STORE_SUBSCR(arg=None, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi498.0', '$502binary_multiply.3', '$result504.4', '$i506.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=510, stack=('$phi498.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=510 nstack_initial=1), State(pc_initial=530 nstack_initial=1), State(pc_initial=542 nstack_initial=1), State(pc_initial=368 nstack_initial=2), State(pc_initial=306 nstack_initial=4), State(pc_initial=510 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi510.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=510 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=510, inst=JUMP_ABSOLUTE(arg=43, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi510.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=84, stack=('$phi510.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=530 nstack_initial=1), State(pc_initial=542 nstack_initial=1), State(pc_initial=368 nstack_initial=2), State(pc_initial=306 nstack_initial=4), State(pc_initial=510 nstack_initial=1), State(pc_initial=84 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi530.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=530 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=530, inst=LOAD_GLOBAL(arg=14, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi530.0']
DEBUG:numba.core.byteflow:dispatch pc=532, inst=LOAD_FAST(arg=8, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi530.0', '$530load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=534, inst=BINARY_MULTIPLY(arg=None, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi530.0', '$530load_global.1', '$mean_distances532.2']
DEBUG:numba.core.byteflow:dispatch pc=536, inst=LOAD_FAST(arg=7, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi530.0', '$534binary_multiply.3']
DEBUG:numba.core.byteflow:dispatch pc=538, inst=LOAD_FAST(arg=9, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi530.0', '$534binary_multiply.3', '$result536.4']
DEBUG:numba.core.byteflow:dispatch pc=540, inst=STORE_SUBSCR(arg=None, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi530.0', '$534binary_multiply.3', '$result536.4', '$i538.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=542, stack=('$phi530.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=542 nstack_initial=1), State(pc_initial=368 nstack_initial=2), State(pc_initial=306 nstack_initial=4), State(pc_initial=510 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=542 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi542.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=542 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=542, inst=JUMP_ABSOLUTE(arg=43, lineno=251)
DEBUG:numba.core.byteflow:stack ['$phi542.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=84, stack=('$phi542.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=368 nstack_initial=2), State(pc_initial=306 nstack_initial=4), State(pc_initial=510 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=542 nstack_initial=1), State(pc_initial=84 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi368.0', '$phi368.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=368 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=368, inst=LOAD_GLOBAL(arg=0, lineno=229)
DEBUG:numba.core.byteflow:stack ['$phi368.0', '$phi368.1']
DEBUG:numba.core.byteflow:dispatch pc=370, inst=LOAD_METHOD(arg=13, lineno=229)
DEBUG:numba.core.byteflow:stack ['$phi368.0', '$phi368.1', '$368load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=372, inst=LOAD_FAST(arg=18, lineno=229)
DEBUG:numba.core.byteflow:stack ['$phi368.0', '$phi368.1', '$370load_method.3']
DEBUG:numba.core.byteflow:dispatch pc=374, inst=LOAD_FAST(arg=5, lineno=229)
DEBUG:numba.core.byteflow:stack ['$phi368.0', '$phi368.1', '$370load_method.3', '$psum372.4']
DEBUG:numba.core.byteflow:dispatch pc=376, inst=BINARY_SUBTRACT(arg=None, lineno=229)
DEBUG:numba.core.byteflow:stack ['$phi368.0', '$phi368.1', '$370load_method.3', '$psum372.4', '$target374.5']
DEBUG:numba.core.byteflow:dispatch pc=378, inst=CALL_METHOD(arg=1, lineno=229)
DEBUG:numba.core.byteflow:stack ['$phi368.0', '$phi368.1', '$370load_method.3', '$376binary_subtract.6']
DEBUG:numba.core.byteflow:dispatch pc=380, inst=LOAD_GLOBAL(arg=10, lineno=229)
DEBUG:numba.core.byteflow:stack ['$phi368.0', '$phi368.1', '$378call_method.7']
DEBUG:numba.core.byteflow:dispatch pc=382, inst=COMPARE_OP(arg=0, lineno=229)
DEBUG:numba.core.byteflow:stack ['$phi368.0', '$phi368.1', '$378call_method.7', '$380load_global.8']
DEBUG:numba.core.byteflow:dispatch pc=384, inst=POP_JUMP_IF_FALSE(arg=196, lineno=229)
DEBUG:numba.core.byteflow:stack ['$phi368.0', '$phi368.1', '$382compare_op.9']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=386, stack=('$phi368.0', '$phi368.1'), blockstack=(), npush=0), Edge(pc=390, stack=('$phi368.0', '$phi368.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=306 nstack_initial=4), State(pc_initial=510 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=542 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=386 nstack_initial=2), State(pc_initial=390 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi306.0', '$phi306.1', '$phi306.2', '$phi306.3']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=306 nstack_initial=4)
DEBUG:numba.core.byteflow:dispatch pc=306, inst=STORE_FAST(arg=19, lineno=222)
DEBUG:numba.core.byteflow:stack ['$phi306.0', '$phi306.1', '$phi306.2', '$phi306.3']
DEBUG:numba.core.byteflow:dispatch pc=308, inst=LOAD_FAST(arg=0, lineno=223)
DEBUG:numba.core.byteflow:stack ['$phi306.0', '$phi306.1', '$phi306.2']
DEBUG:numba.core.byteflow:dispatch pc=310, inst=LOAD_FAST(arg=9, lineno=223)
DEBUG:numba.core.byteflow:stack ['$phi306.0', '$phi306.1', '$phi306.2', '$distances308.4']
DEBUG:numba.core.byteflow:dispatch pc=312, inst=LOAD_FAST(arg=19, lineno=223)
DEBUG:numba.core.byteflow:stack ['$phi306.0', '$phi306.1', '$phi306.2', '$distances308.4', '$i310.5']
DEBUG:numba.core.byteflow:dispatch pc=314, inst=BUILD_TUPLE(arg=2, lineno=223)
DEBUG:numba.core.byteflow:stack ['$phi306.0', '$phi306.1', '$phi306.2', '$distances308.4', '$i310.5', '$j312.6']
DEBUG:numba.core.byteflow:dispatch pc=316, inst=BINARY_SUBSCR(arg=None, lineno=223)
DEBUG:numba.core.byteflow:stack ['$phi306.0', '$phi306.1', '$phi306.2', '$distances308.4', '$314build_tuple.7']
DEBUG:numba.core.byteflow:dispatch pc=318, inst=LOAD_FAST(arg=6, lineno=223)
DEBUG:numba.core.byteflow:stack ['$phi306.0', '$phi306.1', '$phi306.2', '$316binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=320, inst=LOAD_FAST(arg=9, lineno=223)
DEBUG:numba.core.byteflow:stack ['$phi306.0', '$phi306.1', '$phi306.2', '$316binary_subscr.8', '$rho318.9']
DEBUG:numba.core.byteflow:dispatch pc=322, inst=BINARY_SUBSCR(arg=None, lineno=223)
DEBUG:numba.core.byteflow:stack ['$phi306.0', '$phi306.1', '$phi306.2', '$316binary_subscr.8', '$rho318.9', '$i320.10']
DEBUG:numba.core.byteflow:dispatch pc=324, inst=BINARY_SUBTRACT(arg=None, lineno=223)
DEBUG:numba.core.byteflow:stack ['$phi306.0', '$phi306.1', '$phi306.2', '$316binary_subscr.8', '$322binary_subscr.11']
DEBUG:numba.core.byteflow:dispatch pc=326, inst=STORE_FAST(arg=20, lineno=223)
DEBUG:numba.core.byteflow:stack ['$phi306.0', '$phi306.1', '$phi306.2', '$324binary_subtract.12']
DEBUG:numba.core.byteflow:dispatch pc=328, inst=LOAD_FAST(arg=20, lineno=224)
DEBUG:numba.core.byteflow:stack ['$phi306.0', '$phi306.1', '$phi306.2']
DEBUG:numba.core.byteflow:dispatch pc=330, inst=LOAD_CONST(arg=1, lineno=224)
DEBUG:numba.core.byteflow:stack ['$phi306.0', '$phi306.1', '$phi306.2', '$d328.13']
DEBUG:numba.core.byteflow:dispatch pc=332, inst=COMPARE_OP(arg=4, lineno=224)
DEBUG:numba.core.byteflow:stack ['$phi306.0', '$phi306.1', '$phi306.2', '$d328.13', '$const330.14']
DEBUG:numba.core.byteflow:dispatch pc=334, inst=POP_JUMP_IF_FALSE(arg=180, lineno=224)
DEBUG:numba.core.byteflow:stack ['$phi306.0', '$phi306.1', '$phi306.2', '$332compare_op.15']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=336, stack=('$phi306.0', '$phi306.1', '$phi306.2'), blockstack=(), npush=0), Edge(pc=358, stack=('$phi306.0', '$phi306.1', '$phi306.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=510 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=542 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=386 nstack_initial=2), State(pc_initial=390 nstack_initial=2), State(pc_initial=336 nstack_initial=3), State(pc_initial=358 nstack_initial=3)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=84 nstack_initial=1), State(pc_initial=542 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=386 nstack_initial=2), State(pc_initial=390 nstack_initial=2), State(pc_initial=336 nstack_initial=3), State(pc_initial=358 nstack_initial=3)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=542 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=386 nstack_initial=2), State(pc_initial=390 nstack_initial=2), State(pc_initial=336 nstack_initial=3), State(pc_initial=358 nstack_initial=3)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=84 nstack_initial=1), State(pc_initial=386 nstack_initial=2), State(pc_initial=390 nstack_initial=2), State(pc_initial=336 nstack_initial=3), State(pc_initial=358 nstack_initial=3)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=386 nstack_initial=2), State(pc_initial=390 nstack_initial=2), State(pc_initial=336 nstack_initial=3), State(pc_initial=358 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi386.0', '$phi386.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=386 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=386, inst=POP_TOP(arg=None, lineno=230)
DEBUG:numba.core.byteflow:stack ['$phi386.0', '$phi386.1']
DEBUG:numba.core.byteflow:dispatch pc=388, inst=JUMP_FORWARD(arg=31, lineno=230)
DEBUG:numba.core.byteflow:stack ['$phi386.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=452, stack=('$phi386.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=390 nstack_initial=2), State(pc_initial=336 nstack_initial=3), State(pc_initial=358 nstack_initial=3), State(pc_initial=452 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi390.0', '$phi390.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=390 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=390, inst=LOAD_FAST(arg=18, lineno=232)
DEBUG:numba.core.byteflow:stack ['$phi390.0', '$phi390.1']
DEBUG:numba.core.byteflow:dispatch pc=392, inst=LOAD_FAST(arg=5, lineno=232)
DEBUG:numba.core.byteflow:stack ['$phi390.0', '$phi390.1', '$psum390.2']
DEBUG:numba.core.byteflow:dispatch pc=394, inst=COMPARE_OP(arg=4, lineno=232)
DEBUG:numba.core.byteflow:stack ['$phi390.0', '$phi390.1', '$psum390.2', '$target392.3']
DEBUG:numba.core.byteflow:dispatch pc=396, inst=POP_JUMP_IF_FALSE(arg=209, lineno=232)
DEBUG:numba.core.byteflow:stack ['$phi390.0', '$phi390.1', '$394compare_op.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=398, stack=('$phi390.0', '$phi390.1'), blockstack=(), npush=0), Edge(pc=416, stack=('$phi390.0', '$phi390.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=336 nstack_initial=3), State(pc_initial=358 nstack_initial=3), State(pc_initial=452 nstack_initial=1), State(pc_initial=398 nstack_initial=2), State(pc_initial=416 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi336.0', '$phi336.1', '$phi336.2']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=336 nstack_initial=3)
DEBUG:numba.core.byteflow:dispatch pc=336, inst=LOAD_FAST(arg=18, lineno=225)
DEBUG:numba.core.byteflow:stack ['$phi336.0', '$phi336.1', '$phi336.2']
DEBUG:numba.core.byteflow:dispatch pc=338, inst=LOAD_GLOBAL(arg=0, lineno=225)
DEBUG:numba.core.byteflow:stack ['$phi336.0', '$phi336.1', '$phi336.2', '$psum336.3']
DEBUG:numba.core.byteflow:dispatch pc=340, inst=LOAD_METHOD(arg=12, lineno=225)
DEBUG:numba.core.byteflow:stack ['$phi336.0', '$phi336.1', '$phi336.2', '$psum336.3', '$338load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=342, inst=LOAD_FAST(arg=20, lineno=225)
DEBUG:numba.core.byteflow:stack ['$phi336.0', '$phi336.1', '$phi336.2', '$psum336.3', '$340load_method.5']
DEBUG:numba.core.byteflow:dispatch pc=344, inst=LOAD_FAST(arg=12, lineno=225)
DEBUG:numba.core.byteflow:stack ['$phi336.0', '$phi336.1', '$phi336.2', '$psum336.3', '$340load_method.5', '$d342.6']
DEBUG:numba.core.byteflow:dispatch pc=346, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=225)
DEBUG:numba.core.byteflow:stack ['$phi336.0', '$phi336.1', '$phi336.2', '$psum336.3', '$340load_method.5', '$d342.6', '$mid344.7']
DEBUG:numba.core.byteflow:dispatch pc=348, inst=UNARY_NEGATIVE(arg=None, lineno=225)
DEBUG:numba.core.byteflow:stack ['$phi336.0', '$phi336.1', '$phi336.2', '$psum336.3', '$340load_method.5', '$346binary_true_divide.8']
DEBUG:numba.core.byteflow:dispatch pc=350, inst=CALL_METHOD(arg=1, lineno=225)
DEBUG:numba.core.byteflow:stack ['$phi336.0', '$phi336.1', '$phi336.2', '$psum336.3', '$340load_method.5', '$348unary_negative.9']
DEBUG:numba.core.byteflow:dispatch pc=352, inst=INPLACE_ADD(arg=None, lineno=225)
DEBUG:numba.core.byteflow:stack ['$phi336.0', '$phi336.1', '$phi336.2', '$psum336.3', '$350call_method.10']
DEBUG:numba.core.byteflow:dispatch pc=354, inst=STORE_FAST(arg=18, lineno=225)
DEBUG:numba.core.byteflow:stack ['$phi336.0', '$phi336.1', '$phi336.2', '$352inplace_add.11']
DEBUG:numba.core.byteflow:dispatch pc=356, inst=JUMP_ABSOLUTE(arg=153, lineno=225)
DEBUG:numba.core.byteflow:stack ['$phi336.0', '$phi336.1', '$phi336.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=304, stack=('$phi336.0', '$phi336.1', '$phi336.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=358 nstack_initial=3), State(pc_initial=452 nstack_initial=1), State(pc_initial=398 nstack_initial=2), State(pc_initial=416 nstack_initial=2), State(pc_initial=304 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi358.0', '$phi358.1', '$phi358.2']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=358 nstack_initial=3)
DEBUG:numba.core.byteflow:dispatch pc=358, inst=LOAD_FAST(arg=18, lineno=227)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$phi358.1', '$phi358.2']
DEBUG:numba.core.byteflow:dispatch pc=360, inst=LOAD_CONST(arg=4, lineno=227)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$phi358.1', '$phi358.2', '$psum358.3']
DEBUG:numba.core.byteflow:dispatch pc=362, inst=INPLACE_ADD(arg=None, lineno=227)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$phi358.1', '$phi358.2', '$psum358.3', '$const360.4']
DEBUG:numba.core.byteflow:dispatch pc=364, inst=STORE_FAST(arg=18, lineno=227)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$phi358.1', '$phi358.2', '$362inplace_add.5']
DEBUG:numba.core.byteflow:dispatch pc=366, inst=JUMP_ABSOLUTE(arg=153, lineno=227)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$phi358.1', '$phi358.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=304, stack=('$phi358.0', '$phi358.1', '$phi358.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=452 nstack_initial=1), State(pc_initial=398 nstack_initial=2), State(pc_initial=416 nstack_initial=2), State(pc_initial=304 nstack_initial=3), State(pc_initial=304 nstack_initial=3)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=398 nstack_initial=2), State(pc_initial=416 nstack_initial=2), State(pc_initial=304 nstack_initial=3), State(pc_initial=304 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi398.0', '$phi398.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=398 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=398, inst=LOAD_FAST(arg=12, lineno=233)
DEBUG:numba.core.byteflow:stack ['$phi398.0', '$phi398.1']
DEBUG:numba.core.byteflow:dispatch pc=400, inst=STORE_FAST(arg=11, lineno=233)
DEBUG:numba.core.byteflow:stack ['$phi398.0', '$phi398.1', '$mid398.2']
DEBUG:numba.core.byteflow:dispatch pc=402, inst=LOAD_FAST(arg=10, lineno=234)
DEBUG:numba.core.byteflow:stack ['$phi398.0', '$phi398.1']
DEBUG:numba.core.byteflow:dispatch pc=404, inst=LOAD_FAST(arg=11, lineno=234)
DEBUG:numba.core.byteflow:stack ['$phi398.0', '$phi398.1', '$lo402.3']
DEBUG:numba.core.byteflow:dispatch pc=406, inst=BINARY_ADD(arg=None, lineno=234)
DEBUG:numba.core.byteflow:stack ['$phi398.0', '$phi398.1', '$lo402.3', '$hi404.4']
DEBUG:numba.core.byteflow:dispatch pc=408, inst=LOAD_CONST(arg=6, lineno=234)
DEBUG:numba.core.byteflow:stack ['$phi398.0', '$phi398.1', '$406binary_add.5']
DEBUG:numba.core.byteflow:dispatch pc=410, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=234)
DEBUG:numba.core.byteflow:stack ['$phi398.0', '$phi398.1', '$406binary_add.5', '$const408.6']
DEBUG:numba.core.byteflow:dispatch pc=412, inst=STORE_FAST(arg=12, lineno=234)
DEBUG:numba.core.byteflow:stack ['$phi398.0', '$phi398.1', '$410binary_true_divide.7']
DEBUG:numba.core.byteflow:dispatch pc=414, inst=JUMP_ABSOLUTE(arg=141, lineno=234)
DEBUG:numba.core.byteflow:stack ['$phi398.0', '$phi398.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=280, stack=('$phi398.0', '$phi398.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=416 nstack_initial=2), State(pc_initial=304 nstack_initial=3), State(pc_initial=304 nstack_initial=3), State(pc_initial=280 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi416.0', '$phi416.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=416 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=416, inst=LOAD_FAST(arg=12, lineno=236)
DEBUG:numba.core.byteflow:stack ['$phi416.0', '$phi416.1']
DEBUG:numba.core.byteflow:dispatch pc=418, inst=STORE_FAST(arg=10, lineno=236)
DEBUG:numba.core.byteflow:stack ['$phi416.0', '$phi416.1', '$mid416.2']
DEBUG:numba.core.byteflow:dispatch pc=420, inst=LOAD_FAST(arg=11, lineno=237)
DEBUG:numba.core.byteflow:stack ['$phi416.0', '$phi416.1']
DEBUG:numba.core.byteflow:dispatch pc=422, inst=LOAD_GLOBAL(arg=7, lineno=237)
DEBUG:numba.core.byteflow:stack ['$phi416.0', '$phi416.1', '$hi420.3']
DEBUG:numba.core.byteflow:dispatch pc=424, inst=COMPARE_OP(arg=2, lineno=237)
DEBUG:numba.core.byteflow:stack ['$phi416.0', '$phi416.1', '$hi420.3', '$422load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=426, inst=POP_JUMP_IF_FALSE(arg=220, lineno=237)
DEBUG:numba.core.byteflow:stack ['$phi416.0', '$phi416.1', '$424compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=428, stack=('$phi416.0', '$phi416.1'), blockstack=(), npush=0), Edge(pc=438, stack=('$phi416.0', '$phi416.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=304 nstack_initial=3), State(pc_initial=304 nstack_initial=3), State(pc_initial=280 nstack_initial=2), State(pc_initial=428 nstack_initial=2), State(pc_initial=438 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=304 nstack_initial=3), State(pc_initial=280 nstack_initial=2), State(pc_initial=428 nstack_initial=2), State(pc_initial=438 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=280 nstack_initial=2), State(pc_initial=428 nstack_initial=2), State(pc_initial=438 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=428 nstack_initial=2), State(pc_initial=438 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi428.0', '$phi428.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=428 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=428, inst=LOAD_FAST(arg=12, lineno=238)
DEBUG:numba.core.byteflow:stack ['$phi428.0', '$phi428.1']
DEBUG:numba.core.byteflow:dispatch pc=430, inst=LOAD_CONST(arg=7, lineno=238)
DEBUG:numba.core.byteflow:stack ['$phi428.0', '$phi428.1', '$mid428.2']
DEBUG:numba.core.byteflow:dispatch pc=432, inst=INPLACE_MULTIPLY(arg=None, lineno=238)
DEBUG:numba.core.byteflow:stack ['$phi428.0', '$phi428.1', '$mid428.2', '$const430.3']
DEBUG:numba.core.byteflow:dispatch pc=434, inst=STORE_FAST(arg=12, lineno=238)
DEBUG:numba.core.byteflow:stack ['$phi428.0', '$phi428.1', '$432inplace_multiply.4']
DEBUG:numba.core.byteflow:dispatch pc=436, inst=JUMP_ABSOLUTE(arg=141, lineno=238)
DEBUG:numba.core.byteflow:stack ['$phi428.0', '$phi428.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=280, stack=('$phi428.0', '$phi428.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=438 nstack_initial=2), State(pc_initial=280 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi438.0', '$phi438.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=438 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=438, inst=LOAD_FAST(arg=10, lineno=240)
DEBUG:numba.core.byteflow:stack ['$phi438.0', '$phi438.1']
DEBUG:numba.core.byteflow:dispatch pc=440, inst=LOAD_FAST(arg=11, lineno=240)
DEBUG:numba.core.byteflow:stack ['$phi438.0', '$phi438.1', '$lo438.2']
DEBUG:numba.core.byteflow:dispatch pc=442, inst=BINARY_ADD(arg=None, lineno=240)
DEBUG:numba.core.byteflow:stack ['$phi438.0', '$phi438.1', '$lo438.2', '$hi440.3']
DEBUG:numba.core.byteflow:dispatch pc=444, inst=LOAD_CONST(arg=6, lineno=240)
DEBUG:numba.core.byteflow:stack ['$phi438.0', '$phi438.1', '$442binary_add.4']
DEBUG:numba.core.byteflow:dispatch pc=446, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=240)
DEBUG:numba.core.byteflow:stack ['$phi438.0', '$phi438.1', '$442binary_add.4', '$const444.5']
DEBUG:numba.core.byteflow:dispatch pc=448, inst=STORE_FAST(arg=12, lineno=240)
DEBUG:numba.core.byteflow:stack ['$phi438.0', '$phi438.1', '$446binary_true_divide.6']
DEBUG:numba.core.byteflow:dispatch pc=450, inst=JUMP_ABSOLUTE(arg=141, lineno=240)
DEBUG:numba.core.byteflow:stack ['$phi438.0', '$phi438.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=280, stack=('$phi438.0', '$phi438.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=280 nstack_initial=2), State(pc_initial=280 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=280 nstack_initial=2)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=1): {'$phi84.0'},
             State(pc_initial=86 nstack_initial=2): {'$phi86.1'},
             State(pc_initial=134 nstack_initial=1): set(),
             State(pc_initial=164 nstack_initial=1): set(),
             State(pc_initial=188 nstack_initial=1): set(),
             State(pc_initial=224 nstack_initial=1): set(),
             State(pc_initial=226 nstack_initial=1): set(),
             State(pc_initial=244 nstack_initial=1): set(),
             State(pc_initial=258 nstack_initial=1): set(),
             State(pc_initial=272 nstack_initial=1): set(),
             State(pc_initial=280 nstack_initial=2): {'$phi280.1'},
             State(pc_initial=282 nstack_initial=3): {'$phi282.2'},
             State(pc_initial=304 nstack_initial=3): {'$phi304.2'},
             State(pc_initial=306 nstack_initial=4): {'$phi306.3'},
             State(pc_initial=336 nstack_initial=3): set(),
             State(pc_initial=358 nstack_initial=3): set(),
             State(pc_initial=368 nstack_initial=2): set(),
             State(pc_initial=386 nstack_initial=2): set(),
             State(pc_initial=390 nstack_initial=2): set(),
             State(pc_initial=398 nstack_initial=2): set(),
             State(pc_initial=416 nstack_initial=2): set(),
             State(pc_initial=428 nstack_initial=2): set(),
             State(pc_initial=438 nstack_initial=2): set(),
             State(pc_initial=452 nstack_initial=1): set(),
             State(pc_initial=472 nstack_initial=1): set(),
             State(pc_initial=498 nstack_initial=1): set(),
             State(pc_initial=510 nstack_initial=1): set(),
             State(pc_initial=512 nstack_initial=1): set(),
             State(pc_initial=530 nstack_initial=1): set(),
             State(pc_initial=542 nstack_initial=1): set(),
             State(pc_initial=544 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi280.1': State(pc_initial=272 nstack_initial=1),
 '$phi282.2': State(pc_initial=280 nstack_initial=2),
 '$phi304.2': State(pc_initial=282 nstack_initial=3),
 '$phi306.3': State(pc_initial=304 nstack_initial=3),
 '$phi84.0': State(pc_initial=0 nstack_initial=0),
 '$phi86.1': State(pc_initial=84 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi134.0': {('$phi86.0', State(pc_initial=86 nstack_initial=2))},
             '$phi164.0': {('$phi134.0',
                            State(pc_initial=134 nstack_initial=1))},
             '$phi188.0': {('$phi164.0',
                            State(pc_initial=164 nstack_initial=1))},
             '$phi224.0': {('$phi164.0',
                            State(pc_initial=164 nstack_initial=1)),
                           ('$phi188.0',
                            State(pc_initial=188 nstack_initial=1))},
             '$phi226.0': {('$phi134.0',
                            State(pc_initial=134 nstack_initial=1))},
             '$phi244.0': {('$phi86.0', State(pc_initial=86 nstack_initial=2))},
             '$phi258.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi272.0': {('$phi224.0',
                            State(pc_initial=224 nstack_initial=1)),
                           ('$phi226.0',
                            State(pc_initial=226 nstack_initial=1)),
                           ('$phi244.0',
                            State(pc_initial=244 nstack_initial=1)),
                           ('$phi258.0',
                            State(pc_initial=258 nstack_initial=1))},
             '$phi280.0': {('$phi272.0',
                            State(pc_initial=272 nstack_initial=1)),
                           ('$phi398.0',
                            State(pc_initial=398 nstack_initial=2)),
                           ('$phi428.0',
                            State(pc_initial=428 nstack_initial=2)),
                           ('$phi438.0',
                            State(pc_initial=438 nstack_initial=2))},
             '$phi280.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1)),
                           ('$phi398.1',
                            State(pc_initial=398 nstack_initial=2)),
                           ('$phi428.1',
                            State(pc_initial=428 nstack_initial=2)),
                           ('$phi438.1',
                            State(pc_initial=438 nstack_initial=2))},
             '$phi282.0': {('$phi280.0',
                            State(pc_initial=280 nstack_initial=2))},
             '$phi282.1': {('$phi280.1',
                            State(pc_initial=280 nstack_initial=2))},
             '$phi282.2': {('$280for_iter.3',
                            State(pc_initial=280 nstack_initial=2))},
             '$phi304.0': {('$phi282.0',
                            State(pc_initial=282 nstack_initial=3)),
                           ('$phi336.0',
                            State(pc_initial=336 nstack_initial=3)),
                           ('$phi358.0',
                            State(pc_initial=358 nstack_initial=3))},
             '$phi304.1': {('$phi282.1',
                            State(pc_initial=282 nstack_initial=3)),
                           ('$phi336.1',
                            State(pc_initial=336 nstack_initial=3)),
                           ('$phi358.1',
                            State(pc_initial=358 nstack_initial=3))},
             '$phi304.2': {('$302get_iter.11',
                            State(pc_initial=282 nstack_initial=3)),
                           ('$phi336.2',
                            State(pc_initial=336 nstack_initial=3)),
                           ('$phi358.2',
                            State(pc_initial=358 nstack_initial=3))},
             '$phi306.0': {('$phi304.0',
                            State(pc_initial=304 nstack_initial=3))},
             '$phi306.1': {('$phi304.1',
                            State(pc_initial=304 nstack_initial=3))},
             '$phi306.2': {('$phi304.2',
                            State(pc_initial=304 nstack_initial=3))},
             '$phi306.3': {('$304for_iter.4',
                            State(pc_initial=304 nstack_initial=3))},
             '$phi336.0': {('$phi306.0',
                            State(pc_initial=306 nstack_initial=4))},
             '$phi336.1': {('$phi306.1',
                            State(pc_initial=306 nstack_initial=4))},
             '$phi336.2': {('$phi306.2',
                            State(pc_initial=306 nstack_initial=4))},
             '$phi358.0': {('$phi306.0',
                            State(pc_initial=306 nstack_initial=4))},
             '$phi358.1': {('$phi306.1',
                            State(pc_initial=306 nstack_initial=4))},
             '$phi358.2': {('$phi306.2',
                            State(pc_initial=306 nstack_initial=4))},
             '$phi368.0': {('$phi304.0',
                            State(pc_initial=304 nstack_initial=3))},
             '$phi368.1': {('$phi304.1',
                            State(pc_initial=304 nstack_initial=3))},
             '$phi386.0': {('$phi368.0',
                            State(pc_initial=368 nstack_initial=2))},
             '$phi386.1': {('$phi368.1',
                            State(pc_initial=368 nstack_initial=2))},
             '$phi390.0': {('$phi368.0',
                            State(pc_initial=368 nstack_initial=2))},
             '$phi390.1': {('$phi368.1',
                            State(pc_initial=368 nstack_initial=2))},
             '$phi398.0': {('$phi390.0',
                            State(pc_initial=390 nstack_initial=2))},
             '$phi398.1': {('$phi390.1',
                            State(pc_initial=390 nstack_initial=2))},
             '$phi416.0': {('$phi390.0',
                            State(pc_initial=390 nstack_initial=2))},
             '$phi416.1': {('$phi390.1',
                            State(pc_initial=390 nstack_initial=2))},
             '$phi428.0': {('$phi416.0',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi428.1': {('$phi416.1',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi438.0': {('$phi416.0',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi438.1': {('$phi416.1',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi452.0': {('$phi280.0',
                            State(pc_initial=280 nstack_initial=2)),
                           ('$phi386.0',
                            State(pc_initial=386 nstack_initial=2))},
             '$phi472.0': {('$phi452.0',
                            State(pc_initial=452 nstack_initial=1))},
             '$phi498.0': {('$phi472.0',
                            State(pc_initial=472 nstack_initial=1))},
             '$phi510.0': {('$phi472.0',
                            State(pc_initial=472 nstack_initial=1)),
                           ('$phi498.0',
                            State(pc_initial=498 nstack_initial=1))},
             '$phi512.0': {('$phi452.0',
                            State(pc_initial=452 nstack_initial=1))},
             '$phi530.0': {('$phi512.0',
                            State(pc_initial=512 nstack_initial=1))},
             '$phi542.0': {('$phi512.0',
                            State(pc_initial=512 nstack_initial=1)),
                           ('$phi530.0',
                            State(pc_initial=530 nstack_initial=1))},
             '$phi84.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi510.0', State(pc_initial=510 nstack_initial=1)),
                          ('$phi542.0',
                           State(pc_initial=542 nstack_initial=1))},
             '$phi86.0': {('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi86.1': {('$84for_iter.2',
                           State(pc_initial=84 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi134.0': {('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi164.0': {('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi188.0': {('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi224.0': {('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi226.0': {('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi244.0': {('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi258.0': {('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi272.0': {('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi280.0': {('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi280.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1)),
                           ('$phi390.1',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.1',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi282.0': {('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi282.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1)),
                           ('$phi390.1',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.1',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi282.2': {('$280for_iter.3',
                            State(pc_initial=280 nstack_initial=2))},
             '$phi304.0': {('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi304.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1)),
                           ('$phi306.1',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.1',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.1',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi304.2': {('$302get_iter.11',
                            State(pc_initial=282 nstack_initial=3)),
                           ('$phi306.2',
                            State(pc_initial=306 nstack_initial=4))},
             '$phi306.0': {('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi306.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1)),
                           ('$phi306.1',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.1',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.1',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi306.2': {('$302get_iter.11',
                            State(pc_initial=282 nstack_initial=3)),
                           ('$phi306.2',
                            State(pc_initial=306 nstack_initial=4))},
             '$phi306.3': {('$304for_iter.4',
                            State(pc_initial=304 nstack_initial=3))},
             '$phi336.0': {('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi336.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1)),
                           ('$phi390.1',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.1',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi336.2': {('$302get_iter.11',
                            State(pc_initial=282 nstack_initial=3))},
             '$phi358.0': {('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi358.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1)),
                           ('$phi390.1',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.1',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi358.2': {('$302get_iter.11',
                            State(pc_initial=282 nstack_initial=3))},
             '$phi368.0': {('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi368.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1)),
                           ('$phi306.1',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.1',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.1',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi386.0': {('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi386.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1)),
                           ('$phi306.1',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.1',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.1',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi390.0': {('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi390.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1)),
                           ('$phi306.1',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.1',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.1',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi398.0': {('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi398.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1)),
                           ('$phi306.1',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi416.1',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi416.0': {('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi416.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1)),
                           ('$phi306.1',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi416.1',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi428.0': {('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi428.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1)),
                           ('$phi306.1',
                            State(pc_initial=306 nstack_initial=4))},
             '$phi438.0': {('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi438.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1)),
                           ('$phi306.1',
                            State(pc_initial=306 nstack_initial=4))},
             '$phi452.0': {('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi472.0': {('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi498.0': {('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi510.0': {('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi512.0': {('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi530.0': {('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi542.0': {('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi84.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi306.0', State(pc_initial=306 nstack_initial=4)),
                          ('$phi390.0', State(pc_initial=390 nstack_initial=2)),
                          ('$phi416.0', State(pc_initial=416 nstack_initial=2)),
                          ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi86.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi306.0', State(pc_initial=306 nstack_initial=4)),
                          ('$phi390.0', State(pc_initial=390 nstack_initial=2)),
                          ('$phi416.0',
                           State(pc_initial=416 nstack_initial=2))},
             '$phi86.1': {('$84for_iter.2',
                           State(pc_initial=84 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi134.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi164.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi188.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi224.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi226.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi244.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi258.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi272.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi306.0',
                            State(pc_initial=306 nstack_initial=4)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=2))},
             '$phi280.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi306.0',
                            State(pc_initial=306 nstack_initial=4))},
             '$phi280.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1)),
                           ('$phi306.1',
                            State(pc_initial=306 nstack_initial=4))},
             '$phi282.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi306.0',
                            State(pc_initial=306 nstack_initial=4))},
             '$phi282.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1)),
                           ('$phi306.1',
                            State(pc_initial=306 nstack_initial=4))},
             '$phi282.2': {('$280for_iter.3',
                            State(pc_initial=280 nstack_initial=2))},
             '$phi304.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi304.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi304.2': {('$302get_iter.11',
                            State(pc_initial=282 nstack_initial=3))},
             '$phi306.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi306.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi306.2': {('$302get_iter.11',
                            State(pc_initial=282 nstack_initial=3))},
             '$phi306.3': {('$304for_iter.4',
                            State(pc_initial=304 nstack_initial=3))},
             '$phi336.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi336.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi336.2': {('$302get_iter.11',
                            State(pc_initial=282 nstack_initial=3))},
             '$phi358.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi358.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi358.2': {('$302get_iter.11',
                            State(pc_initial=282 nstack_initial=3))},
             '$phi368.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi368.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi386.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi386.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi390.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi390.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi398.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi398.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi416.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi416.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi428.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2))},
             '$phi428.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi438.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi390.0',
                            State(pc_initial=390 nstack_initial=2))},
             '$phi438.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi452.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi472.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi498.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi510.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi512.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi530.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi542.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi86.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi86.1': {('$84for_iter.2',
                           State(pc_initial=84 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi134.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi164.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi188.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi224.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi226.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi244.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi258.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi272.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi282.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi282.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi282.2': {('$280for_iter.3',
                            State(pc_initial=280 nstack_initial=2))},
             '$phi304.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi304.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi304.2': {('$302get_iter.11',
                            State(pc_initial=282 nstack_initial=3))},
             '$phi306.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi306.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi306.2': {('$302get_iter.11',
                            State(pc_initial=282 nstack_initial=3))},
             '$phi306.3': {('$304for_iter.4',
                            State(pc_initial=304 nstack_initial=3))},
             '$phi336.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi336.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi336.2': {('$302get_iter.11',
                            State(pc_initial=282 nstack_initial=3))},
             '$phi358.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi358.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi358.2': {('$302get_iter.11',
                            State(pc_initial=282 nstack_initial=3))},
             '$phi368.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi368.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi386.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi386.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi390.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi390.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi398.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi398.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi416.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi416.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi428.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi428.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi438.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi438.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi452.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi472.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi498.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi510.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi512.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi530.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi542.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi86.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi86.1': {('$84for_iter.2',
                           State(pc_initial=84 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi134.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi164.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi188.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi224.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi226.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi244.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi258.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi272.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi282.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi282.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi282.2': {('$280for_iter.3',
                            State(pc_initial=280 nstack_initial=2))},
             '$phi304.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi304.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi304.2': {('$302get_iter.11',
                            State(pc_initial=282 nstack_initial=3))},
             '$phi306.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi306.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi306.2': {('$302get_iter.11',
                            State(pc_initial=282 nstack_initial=3))},
             '$phi306.3': {('$304for_iter.4',
                            State(pc_initial=304 nstack_initial=3))},
             '$phi336.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi336.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi336.2': {('$302get_iter.11',
                            State(pc_initial=282 nstack_initial=3))},
             '$phi358.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi358.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi358.2': {('$302get_iter.11',
                            State(pc_initial=282 nstack_initial=3))},
             '$phi368.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi368.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi386.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi386.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi390.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi390.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi398.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi398.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi416.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi416.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi428.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi428.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi438.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi438.1': {('$278get_iter.4',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi452.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi472.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi498.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi510.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi512.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi530.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi542.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi86.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi86.1': {('$84for_iter.2',
                           State(pc_initial=84 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi280.1': {('$278get_iter.4', State(pc_initial=272 nstack_initial=1))},
 '$phi282.2': {('$280for_iter.3', State(pc_initial=280 nstack_initial=2))},
 '$phi304.2': {('$302get_iter.11', State(pc_initial=282 nstack_initial=3))},
 '$phi306.3': {('$304for_iter.4', State(pc_initial=304 nstack_initial=3))},
 '$phi84.0': {('$82get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi86.1': {('$84for_iter.2', State(pc_initial=84 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi84.0': '$82get_iter.36'},
             State(pc_initial=84 nstack_initial=1): {'$phi86.1': '$84for_iter.2'},
             State(pc_initial=272 nstack_initial=1): {'$phi280.1': '$278get_iter.4'},
             State(pc_initial=280 nstack_initial=2): {'$phi282.2': '$280for_iter.3'},
             State(pc_initial=282 nstack_initial=3): {'$phi304.2': '$302get_iter.11'},
             State(pc_initial=304 nstack_initial=3): {'$phi306.3': '$304for_iter.4'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$k6.2'}), (8, {'func': '$4load_method.1', 'args': ['$k6.2'], 'res': '$8call_method.3'}), (10, {'res': '$bandwidth10.4'}), (12, {'lhs': '$8call_method.3', 'rhs': '$bandwidth10.4', 'res': '$12binary_multiply.5'}), (14, {'value': '$12binary_multiply.5'}), (16, {'res': '$16load_global.6'}), (18, {'item': '$16load_global.6', 'res': '$18load_attr.7'}), (20, {'res': '$distances20.8'}), (22, {'item': '$distances20.8', 'res': '$22load_attr.9'}), (24, {'res': '$const24.10'}), (26, {'index': '$const24.10', 'target': '$22load_attr.9', 'res': '$26binary_subscr.11'}), (28, {'res': '$28load_global.12'}), (30, {'item': '$28load_global.12', 'res': '$30load_attr.13'}), (32, {'res': '$const32.14'}), (34, {'func': '$18load_attr.7', 'args': ['$26binary_subscr.11', '$30load_attr.13'], 'names': '$const32.14', 'res': '$34call_function_kw.15'}), (36, {'value': '$34call_function_kw.15'}), (38, {'res': '$38load_global.16'}), (40, {'item': '$38load_global.16', 'res': '$40load_attr.17'}), (42, {'res': '$distances42.18'}), (44, {'item': '$distances42.18', 'res': '$44load_attr.19'}), (46, {'res': '$const46.20'}), (48, {'index': '$const46.20', 'target': '$44load_attr.19', 'res': '$48binary_subscr.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_attr.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$40load_attr.17', 'args': ['$48binary_subscr.21', '$52load_attr.23'], 'names': '$const54.24', 'res': '$56call_function_kw.25'}), (58, {'value': '$56call_function_kw.25'}), (60, {'res': '$60load_global.26'}), (62, {'item': '$60load_global.26', 'res': '$62load_method.27'}), (64, {'res': '$distances64.28'}), (66, {'func': '$62load_method.27', 'args': ['$distances64.28'], 'res': '$66call_method.29'}), (68, {'value': '$66call_method.29'}), (70, {'res': '$70load_global.30'}), (72, {'res': '$distances72.31'}), (74, {'item': '$distances72.31', 'res': '$74load_attr.32'}), (76, {'res': '$const76.33'}), (78, {'index': '$const76.33', 'target': '$74load_attr.32', 'res': '$78binary_subscr.34'}), (80, {'func': '$70load_global.30', 'args': ['$78binary_subscr.34'], 'res': '$80call_function.35'}), (82, {'value': '$80call_function.35', 'res': '$82get_iter.36'})), outgoing_phis={'$phi84.0': '$82get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: ('$82get_iter.36',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=84 nstack_initial=1):
AdaptBlockInfo(insts=((84, {'iterator': '$phi84.0', 'pair': '$84for_iter.1', 'indval': '$84for_iter.2', 'pred': '$84for_iter.3'}),), outgoing_phis={'$phi86.1': '$84for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={544: (), 86: ('$phi84.0', '$84for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=86 nstack_initial=2):
AdaptBlockInfo(insts=((86, {'value': '$phi86.1'}), (88, {'res': '$const88.2'}), (90, {'value': '$const88.2'}), (92, {'res': '$92load_global.3'}), (94, {'value': '$92load_global.3'}), (96, {'res': '$const96.4'}), (98, {'value': '$const96.4'}), (100, {'res': '$distances100.5'}), (102, {'res': '$i102.6'}), (104, {'index': '$i102.6', 'target': '$distances100.5', 'res': '$104binary_subscr.7'}), (106, {'value': '$104binary_subscr.7'}), (108, {'res': '$ith_distances108.8'}), (110, {'res': '$ith_distances110.9'}), (112, {'res': '$const112.10'}), (114, {'lhs': '$ith_distances110.9', 'rhs': '$const112.10', 'res': '$114compare_op.11'}), (116, {'index': '$114compare_op.11', 'target': '$ith_distances108.8', 'res': '$116binary_subscr.12'}), (118, {'value': '$116binary_subscr.12'}), (120, {'res': '$non_zero_dists120.13'}), (122, {'item': '$non_zero_dists120.13', 'res': '$122load_attr.14'}), (124, {'res': '$const124.15'}), (126, {'index': '$const124.15', 'target': '$122load_attr.14', 'res': '$126binary_subscr.16'}), (128, {'res': '$local_connectivity128.17'}), (130, {'lhs': '$126binary_subscr.16', 'rhs': '$local_connectivity128.17', 'res': '$130compare_op.18'}), (132, {'pred': '$130compare_op.18'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: ('$phi86.0',), 244: ('$phi86.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=134 nstack_initial=1):
AdaptBlockInfo(insts=((134, {'res': '$134load_global.1'}), (136, {'res': '$136load_global.2'}), (138, {'item': '$136load_global.2', 'res': '$138load_method.3'}), (140, {'res': '$local_connectivity140.4'}), (142, {'func': '$138load_method.3', 'args': ['$local_connectivity140.4'], 'res': '$142call_method.5'}), (144, {'func': '$134load_global.1', 'args': ['$142call_method.5'], 'res': '$144call_function.6'}), (146, {'value': '$144call_function.6'}), (148, {'res': '$local_connectivity148.7'}), (150, {'res': '$index150.8'}), (152, {'lhs': '$local_connectivity148.7', 'rhs': '$index150.8', 'res': '$152binary_subtract.9'}), (154, {'value': '$152binary_subtract.9'}), (156, {'res': '$index156.10'}), (158, {'res': '$const158.11'}), (160, {'lhs': '$index156.10', 'rhs': '$const158.11', 'res': '$160compare_op.12'}), (162, {'pred': '$160compare_op.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={164: ('$phi134.0',), 226: ('$phi134.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=164 nstack_initial=1):
AdaptBlockInfo(insts=((164, {'res': '$non_zero_dists164.1'}), (166, {'res': '$index166.2'}), (168, {'res': '$const168.3'}), (170, {'lhs': '$index166.2', 'rhs': '$const168.3', 'res': '$170binary_subtract.4'}), (172, {'index': '$170binary_subtract.4', 'target': '$non_zero_dists164.1', 'res': '$172binary_subscr.5'}), (174, {'res': '$rho174.6'}), (176, {'res': '$i176.7'}), (178, {'target': '$rho174.6', 'index': '$i176.7', 'value': '$172binary_subscr.5'}), (180, {'res': '$interpolation180.8'}), (182, {'res': '$182load_global.9'}), (184, {'lhs': '$interpolation180.8', 'rhs': '$182load_global.9', 'res': '$184compare_op.10'}), (186, {'pred': '$184compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: ('$phi164.0',), 224: ('$phi164.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=188 nstack_initial=1):
AdaptBlockInfo(insts=((188, {'res': '$rho188.1'}), (190, {'res': '$i190.2'}), (192, {'orig': ['$rho188.1', '$i190.2'], 'duped': ['$192dup_top_two.3', '$192dup_top_two.4']}), (194, {'index': '$192dup_top_two.4', 'target': '$192dup_top_two.3', 'res': '$194binary_subscr.5'}), (196, {'res': '$interpolation196.6'}), (198, {'res': '$non_zero_dists198.7'}), (200, {'res': '$index200.8'}), (202, {'index': '$index200.8', 'target': '$non_zero_dists198.7', 'res': '$202binary_subscr.9'}), (204, {'res': '$non_zero_dists204.10'}), (206, {'res': '$index206.11'}), (208, {'res': '$const208.12'}), (210, {'lhs': '$index206.11', 'rhs': '$const208.12', 'res': '$210binary_subtract.13'}), (212, {'index': '$210binary_subtract.13', 'target': '$non_zero_dists204.10', 'res': '$212binary_subscr.14'}), (214, {'lhs': '$202binary_subscr.9', 'rhs': '$212binary_subscr.14', 'res': '$214binary_subtract.15'}), (216, {'lhs': '$interpolation196.6', 'rhs': '$214binary_subtract.15', 'res': '$216binary_multiply.16'}), (218, {'lhs': '$194binary_subscr.5', 'rhs': '$216binary_multiply.16', 'res': '$218inplace_add.17'}), (222, {'target': '$rho188.1', 'index': '$i190.2', 'value': '$218inplace_add.17'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={224: ('$phi188.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=224 nstack_initial=1):
AdaptBlockInfo(insts=((224, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={272: ('$phi224.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=226 nstack_initial=1):
AdaptBlockInfo(insts=((226, {'res': '$interpolation226.1'}), (228, {'res': '$non_zero_dists228.2'}), (230, {'res': '$const230.3'}), (232, {'index': '$const230.3', 'target': '$non_zero_dists228.2', 'res': '$232binary_subscr.4'}), (234, {'lhs': '$interpolation226.1', 'rhs': '$232binary_subscr.4', 'res': '$234binary_multiply.5'}), (236, {'res': '$rho236.6'}), (238, {'res': '$i238.7'}), (240, {'target': '$rho236.6', 'index': '$i238.7', 'value': '$234binary_multiply.5'}), (242, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={272: ('$phi226.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=244 nstack_initial=1):
AdaptBlockInfo(insts=((244, {'res': '$non_zero_dists244.1'}), (246, {'item': '$non_zero_dists244.1', 'res': '$246load_attr.2'}), (248, {'res': '$const248.3'}), (250, {'index': '$const248.3', 'target': '$246load_attr.2', 'res': '$250binary_subscr.4'}), (252, {'res': '$const252.5'}), (254, {'lhs': '$250binary_subscr.4', 'rhs': '$const252.5', 'res': '$254compare_op.6'}), (256, {'pred': '$254compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={258: ('$phi244.0',), 272: ('$phi244.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=258 nstack_initial=1):
AdaptBlockInfo(insts=((258, {'res': '$258load_global.1'}), (260, {'item': '$258load_global.1', 'res': '$260load_method.2'}), (262, {'res': '$non_zero_dists262.3'}), (264, {'func': '$260load_method.2', 'args': ['$non_zero_dists262.3'], 'res': '$264call_method.4'}), (266, {'res': '$rho266.5'}), (268, {'res': '$i268.6'}), (270, {'target': '$rho266.5', 'index': '$i268.6', 'value': '$264call_method.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={272: ('$phi258.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=272 nstack_initial=1):
AdaptBlockInfo(insts=((272, {'res': '$272load_global.1'}), (274, {'res': '$n_iter274.2'}), (276, {'func': '$272load_global.1', 'args': ['$n_iter274.2'], 'res': '$276call_function.3'}), (278, {'value': '$276call_function.3', 'res': '$278get_iter.4'})), outgoing_phis={'$phi280.1': '$278get_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={280: ('$phi272.0', '$278get_iter.4')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=280 nstack_initial=2):
AdaptBlockInfo(insts=((280, {'iterator': '$phi280.1', 'pair': '$280for_iter.2', 'indval': '$280for_iter.3', 'pred': '$280for_iter.4'}),), outgoing_phis={'$phi282.2': '$280for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={452: ('$phi280.0',), 282: ('$phi280.0', '$phi280.1', '$280for_iter.3')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=282 nstack_initial=3):
AdaptBlockInfo(insts=((282, {'value': '$phi282.2'}), (284, {'res': '$const284.3'}), (286, {'value': '$const284.3'}), (288, {'res': '$288load_global.4'}), (290, {'res': '$const290.5'}), (292, {'res': '$distances292.6'}), (294, {'item': '$distances292.6', 'res': '$294load_attr.7'}), (296, {'res': '$const296.8'}), (298, {'index': '$const296.8', 'target': '$294load_attr.7', 'res': '$298binary_subscr.9'}), (300, {'func': '$288load_global.4', 'args': ['$const290.5', '$298binary_subscr.9'], 'res': '$300call_function.10'}), (302, {'value': '$300call_function.10', 'res': '$302get_iter.11'})), outgoing_phis={'$phi304.2': '$302get_iter.11'}, blockstack=(), active_try_block=None, outgoing_edgepushed={304: ('$phi282.0', '$phi282.1', '$302get_iter.11')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=304 nstack_initial=3):
AdaptBlockInfo(insts=((304, {'iterator': '$phi304.2', 'pair': '$304for_iter.3', 'indval': '$304for_iter.4', 'pred': '$304for_iter.5'}),), outgoing_phis={'$phi306.3': '$304for_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={368: ('$phi304.0', '$phi304.1'), 306: ('$phi304.0', '$phi304.1', '$phi304.2', '$304for_iter.4')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=306 nstack_initial=4):
AdaptBlockInfo(insts=((306, {'value': '$phi306.3'}), (308, {'res': '$distances308.4'}), (310, {'res': '$i310.5'}), (312, {'res': '$j312.6'}), (314, {'items': ['$i310.5', '$j312.6'], 'res': '$314build_tuple.7'}), (316, {'index': '$314build_tuple.7', 'target': '$distances308.4', 'res': '$316binary_subscr.8'}), (318, {'res': '$rho318.9'}), (320, {'res': '$i320.10'}), (322, {'index': '$i320.10', 'target': '$rho318.9', 'res': '$322binary_subscr.11'}), (324, {'lhs': '$316binary_subscr.8', 'rhs': '$322binary_subscr.11', 'res': '$324binary_subtract.12'}), (326, {'value': '$324binary_subtract.12'}), (328, {'res': '$d328.13'}), (330, {'res': '$const330.14'}), (332, {'lhs': '$d328.13', 'rhs': '$const330.14', 'res': '$332compare_op.15'}), (334, {'pred': '$332compare_op.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={336: ('$phi306.0', '$phi306.1', '$phi306.2'), 358: ('$phi306.0', '$phi306.1', '$phi306.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=336 nstack_initial=3):
AdaptBlockInfo(insts=((336, {'res': '$psum336.3'}), (338, {'res': '$338load_global.4'}), (340, {'item': '$338load_global.4', 'res': '$340load_method.5'}), (342, {'res': '$d342.6'}), (344, {'res': '$mid344.7'}), (346, {'lhs': '$d342.6', 'rhs': '$mid344.7', 'res': '$346binary_true_divide.8'}), (348, {'value': '$346binary_true_divide.8', 'res': '$348unary_negative.9'}), (350, {'func': '$340load_method.5', 'args': ['$348unary_negative.9'], 'res': '$350call_method.10'}), (352, {'lhs': '$psum336.3', 'rhs': '$350call_method.10', 'res': '$352inplace_add.11'}), (354, {'value': '$352inplace_add.11'}), (356, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={304: ('$phi336.0', '$phi336.1', '$phi336.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=358 nstack_initial=3):
AdaptBlockInfo(insts=((358, {'res': '$psum358.3'}), (360, {'res': '$const360.4'}), (362, {'lhs': '$psum358.3', 'rhs': '$const360.4', 'res': '$362inplace_add.5'}), (364, {'value': '$362inplace_add.5'}), (366, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={304: ('$phi358.0', '$phi358.1', '$phi358.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=368 nstack_initial=2):
AdaptBlockInfo(insts=((368, {'res': '$368load_global.2'}), (370, {'item': '$368load_global.2', 'res': '$370load_method.3'}), (372, {'res': '$psum372.4'}), (374, {'res': '$target374.5'}), (376, {'lhs': '$psum372.4', 'rhs': '$target374.5', 'res': '$376binary_subtract.6'}), (378, {'func': '$370load_method.3', 'args': ['$376binary_subtract.6'], 'res': '$378call_method.7'}), (380, {'res': '$380load_global.8'}), (382, {'lhs': '$378call_method.7', 'rhs': '$380load_global.8', 'res': '$382compare_op.9'}), (384, {'pred': '$382compare_op.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={386: ('$phi368.0', '$phi368.1'), 390: ('$phi368.0', '$phi368.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=386 nstack_initial=2):
AdaptBlockInfo(insts=((388, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={452: ('$phi386.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=390 nstack_initial=2):
AdaptBlockInfo(insts=((390, {'res': '$psum390.2'}), (392, {'res': '$target392.3'}), (394, {'lhs': '$psum390.2', 'rhs': '$target392.3', 'res': '$394compare_op.4'}), (396, {'pred': '$394compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={398: ('$phi390.0', '$phi390.1'), 416: ('$phi390.0', '$phi390.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=398 nstack_initial=2):
AdaptBlockInfo(insts=((398, {'res': '$mid398.2'}), (400, {'value': '$mid398.2'}), (402, {'res': '$lo402.3'}), (404, {'res': '$hi404.4'}), (406, {'lhs': '$lo402.3', 'rhs': '$hi404.4', 'res': '$406binary_add.5'}), (408, {'res': '$const408.6'}), (410, {'lhs': '$406binary_add.5', 'rhs': '$const408.6', 'res': '$410binary_true_divide.7'}), (412, {'value': '$410binary_true_divide.7'}), (414, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={280: ('$phi398.0', '$phi398.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=416 nstack_initial=2):
AdaptBlockInfo(insts=((416, {'res': '$mid416.2'}), (418, {'value': '$mid416.2'}), (420, {'res': '$hi420.3'}), (422, {'res': '$422load_global.4'}), (424, {'lhs': '$hi420.3', 'rhs': '$422load_global.4', 'res': '$424compare_op.5'}), (426, {'pred': '$424compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={428: ('$phi416.0', '$phi416.1'), 438: ('$phi416.0', '$phi416.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=428 nstack_initial=2):
AdaptBlockInfo(insts=((428, {'res': '$mid428.2'}), (430, {'res': '$const430.3'}), (432, {'lhs': '$mid428.2', 'rhs': '$const430.3', 'res': '$432inplace_multiply.4'}), (434, {'value': '$432inplace_multiply.4'}), (436, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={280: ('$phi428.0', '$phi428.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=438 nstack_initial=2):
AdaptBlockInfo(insts=((438, {'res': '$lo438.2'}), (440, {'res': '$hi440.3'}), (442, {'lhs': '$lo438.2', 'rhs': '$hi440.3', 'res': '$442binary_add.4'}), (444, {'res': '$const444.5'}), (446, {'lhs': '$442binary_add.4', 'rhs': '$const444.5', 'res': '$446binary_true_divide.6'}), (448, {'value': '$446binary_true_divide.6'}), (450, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={280: ('$phi438.0', '$phi438.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=452 nstack_initial=1):
AdaptBlockInfo(insts=((452, {'res': '$mid452.1'}), (454, {'res': '$result454.2'}), (456, {'res': '$i456.3'}), (458, {'target': '$result454.2', 'index': '$i456.3', 'value': '$mid452.1'}), (460, {'res': '$rho460.4'}), (462, {'res': '$i462.5'}), (464, {'index': '$i462.5', 'target': '$rho460.4', 'res': '$464binary_subscr.6'}), (466, {'res': '$const466.7'}), (468, {'lhs': '$464binary_subscr.6', 'rhs': '$const466.7', 'res': '$468compare_op.8'}), (470, {'pred': '$468compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={472: ('$phi452.0',), 512: ('$phi452.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=472 nstack_initial=1):
AdaptBlockInfo(insts=((472, {'res': '$472load_global.1'}), (474, {'item': '$472load_global.1', 'res': '$474load_method.2'}), (476, {'res': '$ith_distances476.3'}), (478, {'func': '$474load_method.2', 'args': ['$ith_distances476.3'], 'res': '$478call_method.4'}), (480, {'value': '$478call_method.4'}), (482, {'res': '$result482.5'}), (484, {'res': '$i484.6'}), (486, {'index': '$i484.6', 'target': '$result482.5', 'res': '$486binary_subscr.7'}), (488, {'res': '$488load_global.8'}), (490, {'res': '$mean_ith_distances490.9'}), (492, {'lhs': '$488load_global.8', 'rhs': '$mean_ith_distances490.9', 'res': '$492binary_multiply.10'}), (494, {'lhs': '$486binary_subscr.7', 'rhs': '$492binary_multiply.10', 'res': '$494compare_op.11'}), (496, {'pred': '$494compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={498: ('$phi472.0',), 510: ('$phi472.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=498 nstack_initial=1):
AdaptBlockInfo(insts=((498, {'res': '$498load_global.1'}), (500, {'res': '$mean_ith_distances500.2'}), (502, {'lhs': '$498load_global.1', 'rhs': '$mean_ith_distances500.2', 'res': '$502binary_multiply.3'}), (504, {'res': '$result504.4'}), (506, {'res': '$i506.5'}), (508, {'target': '$result504.4', 'index': '$i506.5', 'value': '$502binary_multiply.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={510: ('$phi498.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=510 nstack_initial=1):
AdaptBlockInfo(insts=((510, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: ('$phi510.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=512 nstack_initial=1):
AdaptBlockInfo(insts=((512, {'res': '$result512.1'}), (514, {'res': '$i514.2'}), (516, {'index': '$i514.2', 'target': '$result512.1', 'res': '$516binary_subscr.3'}), (518, {'res': '$518load_global.4'}), (520, {'res': '$mean_distances520.5'}), (522, {'lhs': '$518load_global.4', 'rhs': '$mean_distances520.5', 'res': '$522binary_multiply.6'}), (524, {'lhs': '$516binary_subscr.3', 'rhs': '$522binary_multiply.6', 'res': '$524compare_op.7'}), (526, {}), (528, {'pred': '$524compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={530: ('$phi512.0',), 542: ('$phi512.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=530 nstack_initial=1):
AdaptBlockInfo(insts=((530, {'res': '$530load_global.1'}), (532, {'res': '$mean_distances532.2'}), (534, {'lhs': '$530load_global.1', 'rhs': '$mean_distances532.2', 'res': '$534binary_multiply.3'}), (536, {'res': '$result536.4'}), (538, {'res': '$i538.5'}), (540, {'target': '$result536.4', 'index': '$i538.5', 'value': '$534binary_multiply.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={542: ('$phi530.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=542 nstack_initial=1):
AdaptBlockInfo(insts=((542, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: ('$phi542.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=544 nstack_initial=0):
AdaptBlockInfo(insts=((544, {'res': '$result544.0'}), (546, {'res': '$rho546.1'}), (548, {'items': ['$result544.0', '$rho546.1'], 'res': '$548build_tuple.2'}), (550, {'retval': '$548build_tuple.2', 'castval': '$550return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    distances = arg(0, name=distances)       ['distances']
    k = arg(1, name=k)                       ['k']
    n_iter = arg(2, name=n_iter)             ['n_iter']
    local_connectivity = arg(3, name=local_connectivity) ['local_connectivity']
    bandwidth = arg(4, name=bandwidth)       ['bandwidth']
    $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=log2) ['$2load_global.0', '$4load_method.1']
    $8call_method.3 = call $4load_method.1(k, func=$4load_method.1, args=[Var(k, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$8call_method.3', 'k']
    target = $8call_method.3 * bandwidth     ['$8call_method.3', 'bandwidth', 'target']
    $16load_global.6 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$16load_global.6']
    $18load_attr.7 = getattr(value=$16load_global.6, attr=zeros) ['$16load_global.6', '$18load_attr.7']
    $22load_attr.9 = getattr(value=distances, attr=shape) ['$22load_attr.9', 'distances']
    $const24.10 = const(int, 0)              ['$const24.10']
    $26binary_subscr.11 = getitem(value=$22load_attr.9, index=$const24.10, fn=<built-in function getitem>) ['$22load_attr.9', '$26binary_subscr.11', '$const24.10']
    $28load_global.12 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$28load_global.12']
    $30load_attr.13 = getattr(value=$28load_global.12, attr=float32) ['$28load_global.12', '$30load_attr.13']
    rho = call $18load_attr.7($26binary_subscr.11, func=$18load_attr.7, args=[Var($26binary_subscr.11, umap_.py:192)], kws=[('dtype', Var($30load_attr.13, umap_.py:192))], vararg=None, varkwarg=None, target=None) ['$18load_attr.7', '$26binary_subscr.11', '$30load_attr.13', 'rho']
    $38load_global.16 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$38load_global.16']
    $40load_attr.17 = getattr(value=$38load_global.16, attr=zeros) ['$38load_global.16', '$40load_attr.17']
    $44load_attr.19 = getattr(value=distances, attr=shape) ['$44load_attr.19', 'distances']
    $const46.20 = const(int, 0)              ['$const46.20']
    $48binary_subscr.21 = getitem(value=$44load_attr.19, index=$const46.20, fn=<built-in function getitem>) ['$44load_attr.19', '$48binary_subscr.21', '$const46.20']
    $50load_global.22 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$50load_global.22']
    $52load_attr.23 = getattr(value=$50load_global.22, attr=float32) ['$50load_global.22', '$52load_attr.23']
    result = call $40load_attr.17($48binary_subscr.21, func=$40load_attr.17, args=[Var($48binary_subscr.21, umap_.py:193)], kws=[('dtype', Var($52load_attr.23, umap_.py:193))], vararg=None, varkwarg=None, target=None) ['$40load_attr.17', '$48binary_subscr.21', '$52load_attr.23', 'result']
    $60load_global.26 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$60load_global.26']
    $62load_method.27 = getattr(value=$60load_global.26, attr=mean) ['$60load_global.26', '$62load_method.27']
    mean_distances = call $62load_method.27(distances, func=$62load_method.27, args=[Var(distances, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None) ['$62load_method.27', 'distances', 'mean_distances']
    $70load_global.30 = global(range: <class 'range'>) ['$70load_global.30']
    $74load_attr.32 = getattr(value=distances, attr=shape) ['$74load_attr.32', 'distances']
    $const76.33 = const(int, 0)              ['$const76.33']
    $78binary_subscr.34 = getitem(value=$74load_attr.32, index=$const76.33, fn=<built-in function getitem>) ['$74load_attr.32', '$78binary_subscr.34', '$const76.33']
    $80call_function.35 = call $70load_global.30($78binary_subscr.34, func=$70load_global.30, args=[Var($78binary_subscr.34, umap_.py:197)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_global.30', '$78binary_subscr.34', '$80call_function.35']
    $82get_iter.36 = getiter(value=$80call_function.35) ['$80call_function.35', '$82get_iter.36']
    $phi84.0 = $82get_iter.36                ['$82get_iter.36', '$phi84.0']
    jump 84                                  []
label 84:
    $84for_iter.1 = iternext(value=$phi84.0) ['$84for_iter.1', '$phi84.0']
    $84for_iter.2 = pair_first(value=$84for_iter.1) ['$84for_iter.1', '$84for_iter.2']
    $84for_iter.3 = pair_second(value=$84for_iter.1) ['$84for_iter.1', '$84for_iter.3']
    $phi86.1 = $84for_iter.2                 ['$84for_iter.2', '$phi86.1']
    branch $84for_iter.3, 86, 544            ['$84for_iter.3']
label 86:
    i = $phi86.1                             ['$phi86.1', 'i']
    lo = const(float, 0.0)                   ['lo']
    hi = global(NPY_INFINITY: inf)           ['hi']
    mid = const(float, 1.0)                  ['mid']
    ith_distances = getitem(value=distances, index=i, fn=<built-in function getitem>) ['distances', 'i', 'ith_distances']
    $const112.10 = const(float, 0.0)         ['$const112.10']
    $114compare_op.11 = ith_distances > $const112.10 ['$114compare_op.11', '$const112.10', 'ith_distances']
    non_zero_dists = getitem(value=ith_distances, index=$114compare_op.11, fn=<built-in function getitem>) ['$114compare_op.11', 'ith_distances', 'non_zero_dists']
    $122load_attr.14 = getattr(value=non_zero_dists, attr=shape) ['$122load_attr.14', 'non_zero_dists']
    $const124.15 = const(int, 0)             ['$const124.15']
    $126binary_subscr.16 = getitem(value=$122load_attr.14, index=$const124.15, fn=<built-in function getitem>) ['$122load_attr.14', '$126binary_subscr.16', '$const124.15']
    $130compare_op.18 = $126binary_subscr.16 >= local_connectivity ['$126binary_subscr.16', '$130compare_op.18', 'local_connectivity']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    $132pred = call bool132($130compare_op.18, func=bool132, args=(Var($130compare_op.18, umap_.py:205),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.18', '$132pred', 'bool132']
    branch $132pred, 134, 244                ['$132pred']
label 134:
    $134load_global.1 = global(int: <class 'int'>) ['$134load_global.1']
    $136load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$136load_global.2']
    $138load_method.3 = getattr(value=$136load_global.2, attr=floor) ['$136load_global.2', '$138load_method.3']
    $142call_method.5 = call $138load_method.3(local_connectivity, func=$138load_method.3, args=[Var(local_connectivity, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None) ['$138load_method.3', '$142call_method.5', 'local_connectivity']
    index = call $134load_global.1($142call_method.5, func=$134load_global.1, args=[Var($142call_method.5, umap_.py:206)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.1', '$142call_method.5', 'index']
    interpolation = local_connectivity - index ['index', 'interpolation', 'local_connectivity']
    $const158.11 = const(int, 0)             ['$const158.11']
    $160compare_op.12 = index > $const158.11 ['$160compare_op.12', '$const158.11', 'index']
    bool162 = global(bool: <class 'bool'>)   ['bool162']
    $162pred = call bool162($160compare_op.12, func=bool162, args=(Var($160compare_op.12, umap_.py:208),), kws=(), vararg=None, varkwarg=None, target=None) ['$160compare_op.12', '$162pred', 'bool162']
    branch $162pred, 164, 226                ['$162pred']
label 164:
    $const168.3 = const(int, 1)              ['$const168.3']
    $170binary_subtract.4 = index - $const168.3 ['$170binary_subtract.4', '$const168.3', 'index']
    $172binary_subscr.5 = getitem(value=non_zero_dists, index=$170binary_subtract.4, fn=<built-in function getitem>) ['$170binary_subtract.4', '$172binary_subscr.5', 'non_zero_dists']
    rho[i] = $172binary_subscr.5             ['$172binary_subscr.5', 'i', 'rho']
    $182load_global.9 = global(SMOOTH_K_TOLERANCE: 1e-05) ['$182load_global.9']
    $184compare_op.10 = interpolation > $182load_global.9 ['$182load_global.9', '$184compare_op.10', 'interpolation']
    bool186 = global(bool: <class 'bool'>)   ['bool186']
    $186pred = call bool186($184compare_op.10, func=bool186, args=(Var($184compare_op.10, umap_.py:210),), kws=(), vararg=None, varkwarg=None, target=None) ['$184compare_op.10', '$186pred', 'bool186']
    branch $186pred, 188, 224                ['$186pred']
label 188:
    $194binary_subscr.5 = getitem(value=rho, index=i, fn=<built-in function getitem>) ['$194binary_subscr.5', 'i', 'rho']
    $202binary_subscr.9 = getitem(value=non_zero_dists, index=index, fn=<built-in function getitem>) ['$202binary_subscr.9', 'index', 'non_zero_dists']
    $const208.12 = const(int, 1)             ['$const208.12']
    $210binary_subtract.13 = index - $const208.12 ['$210binary_subtract.13', '$const208.12', 'index']
    $212binary_subscr.14 = getitem(value=non_zero_dists, index=$210binary_subtract.13, fn=<built-in function getitem>) ['$210binary_subtract.13', '$212binary_subscr.14', 'non_zero_dists']
    $214binary_subtract.15 = $202binary_subscr.9 - $212binary_subscr.14 ['$202binary_subscr.9', '$212binary_subscr.14', '$214binary_subtract.15']
    $216binary_multiply.16 = interpolation * $214binary_subtract.15 ['$214binary_subtract.15', '$216binary_multiply.16', 'interpolation']
    $218inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$194binary_subscr.5, rhs=$216binary_multiply.16, static_lhs=Undefined, static_rhs=Undefined) ['$194binary_subscr.5', '$216binary_multiply.16', '$218inplace_add.17']
    rho[i] = $218inplace_add.17              ['$218inplace_add.17', 'i', 'rho']
    jump 224                                 []
label 224:
    jump 272                                 []
label 226:
    $const230.3 = const(int, 0)              ['$const230.3']
    $232binary_subscr.4 = getitem(value=non_zero_dists, index=$const230.3, fn=<built-in function getitem>) ['$232binary_subscr.4', '$const230.3', 'non_zero_dists']
    $234binary_multiply.5 = interpolation * $232binary_subscr.4 ['$232binary_subscr.4', '$234binary_multiply.5', 'interpolation']
    rho[i] = $234binary_multiply.5           ['$234binary_multiply.5', 'i', 'rho']
    jump 272                                 []
label 244:
    $246load_attr.2 = getattr(value=non_zero_dists, attr=shape) ['$246load_attr.2', 'non_zero_dists']
    $const248.3 = const(int, 0)              ['$const248.3']
    $250binary_subscr.4 = getitem(value=$246load_attr.2, index=$const248.3, fn=<built-in function getitem>) ['$246load_attr.2', '$250binary_subscr.4', '$const248.3']
    $const252.5 = const(int, 0)              ['$const252.5']
    $254compare_op.6 = $250binary_subscr.4 > $const252.5 ['$250binary_subscr.4', '$254compare_op.6', '$const252.5']
    bool256 = global(bool: <class 'bool'>)   ['bool256']
    $256pred = call bool256($254compare_op.6, func=bool256, args=(Var($254compare_op.6, umap_.py:216),), kws=(), vararg=None, varkwarg=None, target=None) ['$254compare_op.6', '$256pred', 'bool256']
    branch $256pred, 258, 272                ['$256pred']
label 258:
    $258load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$258load_global.1']
    $260load_method.2 = getattr(value=$258load_global.1, attr=max) ['$258load_global.1', '$260load_method.2']
    $264call_method.4 = call $260load_method.2(non_zero_dists, func=$260load_method.2, args=[Var(non_zero_dists, umap_.py:204)], kws=(), vararg=None, varkwarg=None, target=None) ['$260load_method.2', '$264call_method.4', 'non_zero_dists']
    rho[i] = $264call_method.4               ['$264call_method.4', 'i', 'rho']
    jump 272                                 []
label 272:
    $272load_global.1 = global(range: <class 'range'>) ['$272load_global.1']
    $276call_function.3 = call $272load_global.1(n_iter, func=$272load_global.1, args=[Var(n_iter, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None) ['$272load_global.1', '$276call_function.3', 'n_iter']
    $278get_iter.4 = getiter(value=$276call_function.3) ['$276call_function.3', '$278get_iter.4']
    $phi280.1 = $278get_iter.4               ['$278get_iter.4', '$phi280.1']
    jump 280                                 []
label 280:
    $280for_iter.2 = iternext(value=$phi280.1) ['$280for_iter.2', '$phi280.1']
    $280for_iter.3 = pair_first(value=$280for_iter.2) ['$280for_iter.2', '$280for_iter.3']
    $280for_iter.4 = pair_second(value=$280for_iter.2) ['$280for_iter.2', '$280for_iter.4']
    $phi282.2 = $280for_iter.3               ['$280for_iter.3', '$phi282.2']
    branch $280for_iter.4, 282, 452          ['$280for_iter.4']
label 282:
    n = $phi282.2                            ['$phi282.2', 'n']
    psum = const(float, 0.0)                 ['psum']
    $288load_global.4 = global(range: <class 'range'>) ['$288load_global.4']
    $const290.5 = const(int, 1)              ['$const290.5']
    $294load_attr.7 = getattr(value=distances, attr=shape) ['$294load_attr.7', 'distances']
    $const296.8 = const(int, 1)              ['$const296.8']
    $298binary_subscr.9 = getitem(value=$294load_attr.7, index=$const296.8, fn=<built-in function getitem>) ['$294load_attr.7', '$298binary_subscr.9', '$const296.8']
    $300call_function.10 = call $288load_global.4($const290.5, $298binary_subscr.9, func=$288load_global.4, args=[Var($const290.5, umap_.py:222), Var($298binary_subscr.9, umap_.py:222)], kws=(), vararg=None, varkwarg=None, target=None) ['$288load_global.4', '$298binary_subscr.9', '$300call_function.10', '$const290.5']
    $302get_iter.11 = getiter(value=$300call_function.10) ['$300call_function.10', '$302get_iter.11']
    $phi304.2 = $302get_iter.11              ['$302get_iter.11', '$phi304.2']
    jump 304                                 []
label 304:
    $304for_iter.3 = iternext(value=$phi304.2) ['$304for_iter.3', '$phi304.2']
    $304for_iter.4 = pair_first(value=$304for_iter.3) ['$304for_iter.3', '$304for_iter.4']
    $304for_iter.5 = pair_second(value=$304for_iter.3) ['$304for_iter.3', '$304for_iter.5']
    $phi306.3 = $304for_iter.4               ['$304for_iter.4', '$phi306.3']
    branch $304for_iter.5, 306, 368          ['$304for_iter.5']
label 306:
    j = $phi306.3                            ['$phi306.3', 'j']
    $314build_tuple.7 = build_tuple(items=[Var(i, umap_.py:197), Var(j, umap_.py:222)]) ['$314build_tuple.7', 'i', 'j']
    $316binary_subscr.8 = getitem(value=distances, index=$314build_tuple.7, fn=<built-in function getitem>) ['$314build_tuple.7', '$316binary_subscr.8', 'distances']
    $322binary_subscr.11 = getitem(value=rho, index=i, fn=<built-in function getitem>) ['$322binary_subscr.11', 'i', 'rho']
    d = $316binary_subscr.8 - $322binary_subscr.11 ['$316binary_subscr.8', '$322binary_subscr.11', 'd']
    $const330.14 = const(int, 0)             ['$const330.14']
    $332compare_op.15 = d > $const330.14     ['$332compare_op.15', '$const330.14', 'd']
    bool334 = global(bool: <class 'bool'>)   ['bool334']
    $334pred = call bool334($332compare_op.15, func=bool334, args=(Var($332compare_op.15, umap_.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$332compare_op.15', '$334pred', 'bool334']
    branch $334pred, 336, 358                ['$334pred']
label 336:
    $338load_global.4 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$338load_global.4']
    $340load_method.5 = getattr(value=$338load_global.4, attr=exp) ['$338load_global.4', '$340load_method.5']
    $346binary_true_divide.8 = d / mid       ['$346binary_true_divide.8', 'd', 'mid']
    $348unary_negative.9 = unary(fn=<built-in function neg>, value=$346binary_true_divide.8) ['$346binary_true_divide.8', '$348unary_negative.9']
    $350call_method.10 = call $340load_method.5($348unary_negative.9, func=$340load_method.5, args=[Var($348unary_negative.9, umap_.py:225)], kws=(), vararg=None, varkwarg=None, target=None) ['$340load_method.5', '$348unary_negative.9', '$350call_method.10']
    $352inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$350call_method.10, static_lhs=Undefined, static_rhs=Undefined) ['$350call_method.10', '$352inplace_add.11', 'psum']
    psum = $352inplace_add.11                ['$352inplace_add.11', 'psum']
    jump 304                                 []
label 358:
    $const360.4 = const(float, 1.0)          ['$const360.4']
    $362inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$const360.4, static_lhs=Undefined, static_rhs=Undefined) ['$362inplace_add.5', '$const360.4', 'psum']
    psum = $362inplace_add.5                 ['$362inplace_add.5', 'psum']
    jump 304                                 []
label 368:
    $368load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$368load_global.2']
    $370load_method.3 = getattr(value=$368load_global.2, attr=fabs) ['$368load_global.2', '$370load_method.3']
    $376binary_subtract.6 = psum - target    ['$376binary_subtract.6', 'psum', 'target']
    $378call_method.7 = call $370load_method.3($376binary_subtract.6, func=$370load_method.3, args=[Var($376binary_subtract.6, umap_.py:229)], kws=(), vararg=None, varkwarg=None, target=None) ['$370load_method.3', '$376binary_subtract.6', '$378call_method.7']
    $380load_global.8 = global(SMOOTH_K_TOLERANCE: 1e-05) ['$380load_global.8']
    $382compare_op.9 = $378call_method.7 < $380load_global.8 ['$378call_method.7', '$380load_global.8', '$382compare_op.9']
    bool384 = global(bool: <class 'bool'>)   ['bool384']
    $384pred = call bool384($382compare_op.9, func=bool384, args=(Var($382compare_op.9, umap_.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$382compare_op.9', '$384pred', 'bool384']
    branch $384pred, 386, 390                ['$384pred']
label 386:
    jump 452                                 []
label 390:
    $394compare_op.4 = psum > target         ['$394compare_op.4', 'psum', 'target']
    bool396 = global(bool: <class 'bool'>)   ['bool396']
    $396pred = call bool396($394compare_op.4, func=bool396, args=(Var($394compare_op.4, umap_.py:232),), kws=(), vararg=None, varkwarg=None, target=None) ['$394compare_op.4', '$396pred', 'bool396']
    branch $396pred, 398, 416                ['$396pred']
label 398:
    hi = mid                                 ['hi', 'mid']
    $406binary_add.5 = lo + hi               ['$406binary_add.5', 'hi', 'lo']
    $const408.6 = const(float, 2.0)          ['$const408.6']
    mid = $406binary_add.5 / $const408.6     ['$406binary_add.5', '$const408.6', 'mid']
    jump 280                                 []
label 416:
    lo = mid                                 ['lo', 'mid']
    $422load_global.4 = global(NPY_INFINITY: inf) ['$422load_global.4']
    $424compare_op.5 = hi == $422load_global.4 ['$422load_global.4', '$424compare_op.5', 'hi']
    bool426 = global(bool: <class 'bool'>)   ['bool426']
    $426pred = call bool426($424compare_op.5, func=bool426, args=(Var($424compare_op.5, umap_.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$424compare_op.5', '$426pred', 'bool426']
    branch $426pred, 428, 438                ['$426pred']
label 428:
    $const430.3 = const(int, 2)              ['$const430.3']
    $432inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid, rhs=$const430.3, static_lhs=Undefined, static_rhs=Undefined) ['$432inplace_multiply.4', '$const430.3', 'mid']
    mid = $432inplace_multiply.4             ['$432inplace_multiply.4', 'mid']
    jump 280                                 []
label 438:
    $442binary_add.4 = lo + hi               ['$442binary_add.4', 'hi', 'lo']
    $const444.5 = const(float, 2.0)          ['$const444.5']
    mid = $442binary_add.4 / $const444.5     ['$442binary_add.4', '$const444.5', 'mid']
    jump 280                                 []
label 452:
    result[i] = mid                          ['i', 'mid', 'result']
    $464binary_subscr.6 = getitem(value=rho, index=i, fn=<built-in function getitem>) ['$464binary_subscr.6', 'i', 'rho']
    $const466.7 = const(float, 0.0)          ['$const466.7']
    $468compare_op.8 = $464binary_subscr.6 > $const466.7 ['$464binary_subscr.6', '$468compare_op.8', '$const466.7']
    bool470 = global(bool: <class 'bool'>)   ['bool470']
    $470pred = call bool470($468compare_op.8, func=bool470, args=(Var($468compare_op.8, umap_.py:245),), kws=(), vararg=None, varkwarg=None, target=None) ['$468compare_op.8', '$470pred', 'bool470']
    branch $470pred, 472, 512                ['$470pred']
label 472:
    $472load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$472load_global.1']
    $474load_method.2 = getattr(value=$472load_global.1, attr=mean) ['$472load_global.1', '$474load_method.2']
    mean_ith_distances = call $474load_method.2(ith_distances, func=$474load_method.2, args=[Var(ith_distances, umap_.py:203)], kws=(), vararg=None, varkwarg=None, target=None) ['$474load_method.2', 'ith_distances', 'mean_ith_distances']
    $486binary_subscr.7 = getitem(value=result, index=i, fn=<built-in function getitem>) ['$486binary_subscr.7', 'i', 'result']
    $488load_global.8 = global(MIN_K_DIST_SCALE: 0.001) ['$488load_global.8']
    $492binary_multiply.10 = $488load_global.8 * mean_ith_distances ['$488load_global.8', '$492binary_multiply.10', 'mean_ith_distances']
    $494compare_op.11 = $486binary_subscr.7 < $492binary_multiply.10 ['$486binary_subscr.7', '$492binary_multiply.10', '$494compare_op.11']
    bool496 = global(bool: <class 'bool'>)   ['bool496']
    $496pred = call bool496($494compare_op.11, func=bool496, args=(Var($494compare_op.11, umap_.py:247),), kws=(), vararg=None, varkwarg=None, target=None) ['$494compare_op.11', '$496pred', 'bool496']
    branch $496pred, 498, 510                ['$496pred']
label 498:
    $498load_global.1 = global(MIN_K_DIST_SCALE: 0.001) ['$498load_global.1']
    $502binary_multiply.3 = $498load_global.1 * mean_ith_distances ['$498load_global.1', '$502binary_multiply.3', 'mean_ith_distances']
    result[i] = $502binary_multiply.3        ['$502binary_multiply.3', 'i', 'result']
    jump 510                                 []
label 510:
    jump 84                                  []
label 512:
    $516binary_subscr.3 = getitem(value=result, index=i, fn=<built-in function getitem>) ['$516binary_subscr.3', 'i', 'result']
    $518load_global.4 = global(MIN_K_DIST_SCALE: 0.001) ['$518load_global.4']
    $522binary_multiply.6 = $518load_global.4 * mean_distances ['$518load_global.4', '$522binary_multiply.6', 'mean_distances']
    $524compare_op.7 = $516binary_subscr.3 < $522binary_multiply.6 ['$516binary_subscr.3', '$522binary_multiply.6', '$524compare_op.7']
    bool528 = global(bool: <class 'bool'>)   ['bool528']
    $528pred = call bool528($524compare_op.7, func=bool528, args=(Var($524compare_op.7, umap_.py:250),), kws=(), vararg=None, varkwarg=None, target=None) ['$524compare_op.7', '$528pred', 'bool528']
    branch $528pred, 530, 542                ['$528pred']
label 530:
    $530load_global.1 = global(MIN_K_DIST_SCALE: 0.001) ['$530load_global.1']
    $534binary_multiply.3 = $530load_global.1 * mean_distances ['$530load_global.1', '$534binary_multiply.3', 'mean_distances']
    result[i] = $534binary_multiply.3        ['$534binary_multiply.3', 'i', 'result']
    jump 542                                 []
label 542:
    jump 84                                  []
label 544:
    $548build_tuple.2 = build_tuple(items=[Var(result, umap_.py:193), Var(rho, umap_.py:192)]) ['$548build_tuple.2', 'result', 'rho']
    $550return_value.3 = cast(value=$548build_tuple.2) ['$548build_tuple.2', '$550return_value.3']
    return $550return_value.3                ['$550return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: distances = arg(0, name=distances)
DEBUG:numba.core.ssa:on stmt: k = arg(1, name=k)
DEBUG:numba.core.ssa:on stmt: n_iter = arg(2, name=n_iter)
DEBUG:numba.core.ssa:on stmt: local_connectivity = arg(3, name=local_connectivity)
DEBUG:numba.core.ssa:on stmt: bandwidth = arg(4, name=bandwidth)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $8call_method.3 = call $4load_method.1(k, func=$4load_method.1, args=[Var(k, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: target = $8call_method.3 * bandwidth
DEBUG:numba.core.ssa:on stmt: $16load_global.6 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $18load_attr.7 = getattr(value=$16load_global.6, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $22load_attr.9 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const24.10 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26binary_subscr.11 = static_getitem(value=$22load_attr.9, index=0, index_var=$const24.10, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $28load_global.12 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.13 = getattr(value=$28load_global.12, attr=float32)
DEBUG:numba.core.ssa:on stmt: rho = call $18load_attr.7($26binary_subscr.11, func=$18load_attr.7, args=[Var($26binary_subscr.11, umap_.py:192)], kws=[('dtype', Var($30load_attr.13, umap_.py:192))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $38load_global.16 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_attr.17 = getattr(value=$38load_global.16, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $44load_attr.19 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.20 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.21 = static_getitem(value=$44load_attr.19, index=0, index_var=$const46.20, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50load_global.22 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $52load_attr.23 = getattr(value=$50load_global.22, attr=float32)
DEBUG:numba.core.ssa:on stmt: result = call $40load_attr.17($48binary_subscr.21, func=$40load_attr.17, args=[Var($48binary_subscr.21, umap_.py:193)], kws=[('dtype', Var($52load_attr.23, umap_.py:193))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $60load_global.26 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $62load_method.27 = getattr(value=$60load_global.26, attr=mean)
DEBUG:numba.core.ssa:on stmt: mean_distances = call $62load_method.27(distances, func=$62load_method.27, args=[Var(distances, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $70load_global.30 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $74load_attr.32 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const76.33 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $78binary_subscr.34 = static_getitem(value=$74load_attr.32, index=0, index_var=$const76.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $80call_function.35 = call $70load_global.30($78binary_subscr.34, func=$70load_global.30, args=[Var($78binary_subscr.34, umap_.py:197)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $82get_iter.36 = getiter(value=$80call_function.35)
DEBUG:numba.core.ssa:on stmt: $phi84.0 = $82get_iter.36
DEBUG:numba.core.ssa:on stmt: jump 84
DEBUG:numba.core.ssa:==== SSA block analysis pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $84for_iter.1 = iternext(value=$phi84.0)
DEBUG:numba.core.ssa:on stmt: $84for_iter.2 = pair_first(value=$84for_iter.1)
DEBUG:numba.core.ssa:on stmt: $84for_iter.3 = pair_second(value=$84for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi86.1 = $84for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $84for_iter.3, 86, 544
DEBUG:numba.core.ssa:==== SSA block analysis pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: i = $phi86.1
DEBUG:numba.core.ssa:on stmt: lo = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: hi = global(NPY_INFINITY: inf)
DEBUG:numba.core.ssa:on stmt: mid = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: ith_distances = getitem(value=distances, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const112.10 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $114compare_op.11 = ith_distances > $const112.10
DEBUG:numba.core.ssa:on stmt: non_zero_dists = getitem(value=ith_distances, index=$114compare_op.11, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.14 = getattr(value=non_zero_dists, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const124.15 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $126binary_subscr.16 = static_getitem(value=$122load_attr.14, index=0, index_var=$const124.15, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $130compare_op.18 = $126binary_subscr.16 >= local_connectivity
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.18, func=bool132, args=(Var($130compare_op.18, umap_.py:205),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 244
DEBUG:numba.core.ssa:==== SSA block analysis pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $134load_global.1 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $136load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.3 = getattr(value=$136load_global.2, attr=floor)
DEBUG:numba.core.ssa:on stmt: $142call_method.5 = call $138load_method.3(local_connectivity, func=$138load_method.3, args=[Var(local_connectivity, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: index = call $134load_global.1($142call_method.5, func=$134load_global.1, args=[Var($142call_method.5, umap_.py:206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: interpolation = local_connectivity - index
DEBUG:numba.core.ssa:on stmt: $const158.11 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $160compare_op.12 = index > $const158.11
DEBUG:numba.core.ssa:on stmt: bool162 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $162pred = call bool162($160compare_op.12, func=bool162, args=(Var($160compare_op.12, umap_.py:208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $162pred, 164, 226
DEBUG:numba.core.ssa:==== SSA block analysis pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $const168.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.4 = index - $const168.3
DEBUG:numba.core.ssa:on stmt: $172binary_subscr.5 = getitem(value=non_zero_dists, index=$170binary_subtract.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: rho[i] = $172binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $182load_global.9 = global(SMOOTH_K_TOLERANCE: 1e-05)
DEBUG:numba.core.ssa:on stmt: $184compare_op.10 = interpolation > $182load_global.9
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.10, func=bool186, args=(Var($184compare_op.10, umap_.py:210),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 224
DEBUG:numba.core.ssa:==== SSA block analysis pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.5 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $202binary_subscr.9 = getitem(value=non_zero_dists, index=index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const208.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $210binary_subtract.13 = index - $const208.12
DEBUG:numba.core.ssa:on stmt: $212binary_subscr.14 = getitem(value=non_zero_dists, index=$210binary_subtract.13, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $214binary_subtract.15 = $202binary_subscr.9 - $212binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.16 = interpolation * $214binary_subtract.15
DEBUG:numba.core.ssa:on stmt: $218inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$194binary_subscr.5, rhs=$216binary_multiply.16, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: rho[i] = $218inplace_add.17
DEBUG:numba.core.ssa:on stmt: jump 224
DEBUG:numba.core.ssa:==== SSA block analysis pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block analysis pass on 226
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $const230.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.4 = static_getitem(value=non_zero_dists, index=0, index_var=$const230.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234binary_multiply.5 = interpolation * $232binary_subscr.4
DEBUG:numba.core.ssa:on stmt: rho[i] = $234binary_multiply.5
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block analysis pass on 244
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $246load_attr.2 = getattr(value=non_zero_dists, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const248.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.4 = static_getitem(value=$246load_attr.2, index=0, index_var=$const248.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const252.5 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $254compare_op.6 = $250binary_subscr.4 > $const252.5
DEBUG:numba.core.ssa:on stmt: bool256 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $256pred = call bool256($254compare_op.6, func=bool256, args=(Var($254compare_op.6, umap_.py:216),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $256pred, 258, 272
DEBUG:numba.core.ssa:==== SSA block analysis pass on 258
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $258load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $260load_method.2 = getattr(value=$258load_global.1, attr=max)
DEBUG:numba.core.ssa:on stmt: $264call_method.4 = call $260load_method.2(non_zero_dists, func=$260load_method.2, args=[Var(non_zero_dists, umap_.py:204)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: rho[i] = $264call_method.4
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block analysis pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $272load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $276call_function.3 = call $272load_global.1(n_iter, func=$272load_global.1, args=[Var(n_iter, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $278get_iter.4 = getiter(value=$276call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi280.1 = $278get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 280
DEBUG:numba.core.ssa:==== SSA block analysis pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $280for_iter.2 = iternext(value=$phi280.1)
DEBUG:numba.core.ssa:on stmt: $280for_iter.3 = pair_first(value=$280for_iter.2)
DEBUG:numba.core.ssa:on stmt: $280for_iter.4 = pair_second(value=$280for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi282.2 = $280for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $280for_iter.4, 282, 452
DEBUG:numba.core.ssa:==== SSA block analysis pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: n = $phi282.2
DEBUG:numba.core.ssa:on stmt: psum = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $288load_global.4 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const290.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $294load_attr.7 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const296.8 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $298binary_subscr.9 = static_getitem(value=$294load_attr.7, index=1, index_var=$const296.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $300call_function.10 = call $288load_global.4($const290.5, $298binary_subscr.9, func=$288load_global.4, args=[Var($const290.5, umap_.py:222), Var($298binary_subscr.9, umap_.py:222)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $302get_iter.11 = getiter(value=$300call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi304.2 = $302get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 304
DEBUG:numba.core.ssa:==== SSA block analysis pass on 304
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $304for_iter.3 = iternext(value=$phi304.2)
DEBUG:numba.core.ssa:on stmt: $304for_iter.4 = pair_first(value=$304for_iter.3)
DEBUG:numba.core.ssa:on stmt: $304for_iter.5 = pair_second(value=$304for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi306.3 = $304for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $304for_iter.5, 306, 368
DEBUG:numba.core.ssa:==== SSA block analysis pass on 306
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: j = $phi306.3
DEBUG:numba.core.ssa:on stmt: $314build_tuple.7 = build_tuple(items=[Var(i, umap_.py:197), Var(j, umap_.py:222)])
DEBUG:numba.core.ssa:on stmt: $316binary_subscr.8 = getitem(value=distances, index=$314build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $322binary_subscr.11 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: d = $316binary_subscr.8 - $322binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $const330.14 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $332compare_op.15 = d > $const330.14
DEBUG:numba.core.ssa:on stmt: bool334 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $334pred = call bool334($332compare_op.15, func=bool334, args=(Var($332compare_op.15, umap_.py:224),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $334pred, 336, 358
DEBUG:numba.core.ssa:==== SSA block analysis pass on 336
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $338load_global.4 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $340load_method.5 = getattr(value=$338load_global.4, attr=exp)
DEBUG:numba.core.ssa:on stmt: $346binary_true_divide.8 = d / mid
DEBUG:numba.core.ssa:on stmt: $348unary_negative.9 = unary(fn=<built-in function neg>, value=$346binary_true_divide.8)
DEBUG:numba.core.ssa:on stmt: $350call_method.10 = call $340load_method.5($348unary_negative.9, func=$340load_method.5, args=[Var($348unary_negative.9, umap_.py:225)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $352inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$350call_method.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: psum = $352inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 547
DEBUG:numba.core.ssa:==== SSA block analysis pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $const360.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $362inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$const360.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: psum = $362inplace_add.5
DEBUG:numba.core.ssa:on stmt: jump 547
DEBUG:numba.core.ssa:==== SSA block analysis pass on 368
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $368load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $370load_method.3 = getattr(value=$368load_global.2, attr=fabs)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.6 = psum - target
DEBUG:numba.core.ssa:on stmt: $378call_method.7 = call $370load_method.3($376binary_subtract.6, func=$370load_method.3, args=[Var($376binary_subtract.6, umap_.py:229)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $380load_global.8 = global(SMOOTH_K_TOLERANCE: 1e-05)
DEBUG:numba.core.ssa:on stmt: $382compare_op.9 = $378call_method.7 < $380load_global.8
DEBUG:numba.core.ssa:on stmt: bool384 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $384pred = call bool384($382compare_op.9, func=bool384, args=(Var($382compare_op.9, umap_.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $384pred, 386, 390
DEBUG:numba.core.ssa:==== SSA block analysis pass on 386
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: jump 452
DEBUG:numba.core.ssa:==== SSA block analysis pass on 390
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $394compare_op.4 = psum > target
DEBUG:numba.core.ssa:on stmt: bool396 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $396pred = call bool396($394compare_op.4, func=bool396, args=(Var($394compare_op.4, umap_.py:232),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $396pred, 398, 416
DEBUG:numba.core.ssa:==== SSA block analysis pass on 398
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: hi = mid
DEBUG:numba.core.ssa:on stmt: $406binary_add.5 = lo + hi
DEBUG:numba.core.ssa:on stmt: $const408.6 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: mid = $406binary_add.5 / $const408.6
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block analysis pass on 416
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: lo = mid
DEBUG:numba.core.ssa:on stmt: $422load_global.4 = global(NPY_INFINITY: inf)
DEBUG:numba.core.ssa:on stmt: $424compare_op.5 = hi == $422load_global.4
DEBUG:numba.core.ssa:on stmt: bool426 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $426pred = call bool426($424compare_op.5, func=bool426, args=(Var($424compare_op.5, umap_.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $426pred, 428, 438
DEBUG:numba.core.ssa:==== SSA block analysis pass on 428
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $const430.3 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $432inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid, rhs=$const430.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: mid = $432inplace_multiply.4
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block analysis pass on 438
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $442binary_add.4 = lo + hi
DEBUG:numba.core.ssa:on stmt: $const444.5 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: mid = $442binary_add.4 / $const444.5
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block analysis pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: result[i] = mid
DEBUG:numba.core.ssa:on stmt: $464binary_subscr.6 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const466.7 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $468compare_op.8 = $464binary_subscr.6 > $const466.7
DEBUG:numba.core.ssa:on stmt: bool470 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $470pred = call bool470($468compare_op.8, func=bool470, args=(Var($468compare_op.8, umap_.py:245),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $470pred, 472, 512
DEBUG:numba.core.ssa:==== SSA block analysis pass on 472
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $472load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $474load_method.2 = getattr(value=$472load_global.1, attr=mean)
DEBUG:numba.core.ssa:on stmt: mean_ith_distances = call $474load_method.2(ith_distances, func=$474load_method.2, args=[Var(ith_distances, umap_.py:203)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $486binary_subscr.7 = getitem(value=result, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $488load_global.8 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $492binary_multiply.10 = $488load_global.8 * mean_ith_distances
DEBUG:numba.core.ssa:on stmt: $494compare_op.11 = $486binary_subscr.7 < $492binary_multiply.10
DEBUG:numba.core.ssa:on stmt: bool496 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $496pred = call bool496($494compare_op.11, func=bool496, args=(Var($494compare_op.11, umap_.py:247),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $496pred, 498, 510
DEBUG:numba.core.ssa:==== SSA block analysis pass on 498
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $498load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $502binary_multiply.3 = $498load_global.1 * mean_ith_distances
DEBUG:numba.core.ssa:on stmt: result[i] = $502binary_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 510
DEBUG:numba.core.ssa:==== SSA block analysis pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: jump 546
DEBUG:numba.core.ssa:==== SSA block analysis pass on 512
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.3 = getitem(value=result, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $518load_global.4 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $522binary_multiply.6 = $518load_global.4 * mean_distances
DEBUG:numba.core.ssa:on stmt: $524compare_op.7 = $516binary_subscr.3 < $522binary_multiply.6
DEBUG:numba.core.ssa:on stmt: bool528 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $528pred = call bool528($524compare_op.7, func=bool528, args=(Var($524compare_op.7, umap_.py:250),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $528pred, 530, 542
DEBUG:numba.core.ssa:==== SSA block analysis pass on 530
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $530load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $534binary_multiply.3 = $530load_global.1 * mean_distances
DEBUG:numba.core.ssa:on stmt: result[i] = $534binary_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 542
DEBUG:numba.core.ssa:==== SSA block analysis pass on 542
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: jump 546
DEBUG:numba.core.ssa:==== SSA block analysis pass on 544
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: $548build_tuple.2 = build_tuple(items=[Var(result, umap_.py:193), Var(rho, umap_.py:192)])
DEBUG:numba.core.ssa:on stmt: $550return_value.3 = cast(value=$548build_tuple.2)
DEBUG:numba.core.ssa:on stmt: return $550return_value.3
DEBUG:numba.core.ssa:==== SSA block analysis pass on 545
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: jump 280
DEBUG:numba.core.ssa:==== SSA block analysis pass on 546
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: jump 84
DEBUG:numba.core.ssa:==== SSA block analysis pass on 547
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA41237C0>
DEBUG:numba.core.ssa:on stmt: jump 304
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$114compare_op.11': [(<numba.core.ir.Assign object at 0x0000017AA4171210>,
                                    86)],
             '$122load_attr.14': [(<numba.core.ir.Assign object at 0x0000017AA4171720>,
                                   86)],
             '$126binary_subscr.16': [(<numba.core.ir.Assign object at 0x0000017AA4053790>,
                                       86)],
             '$130compare_op.18': [(<numba.core.ir.Assign object at 0x0000017AA4171CF0>,
                                    86)],
             '$132pred': [(<numba.core.ir.Assign object at 0x0000017AA4171F60>,
                           86)],
             '$134load_global.1': [(<numba.core.ir.Assign object at 0x0000017AA4170A90>,
                                    134)],
             '$136load_global.2': [(<numba.core.ir.Assign object at 0x0000017AA4171510>,
                                    134)],
             '$138load_method.3': [(<numba.core.ir.Assign object at 0x0000017AA41720E0>,
                                    134)],
             '$142call_method.5': [(<numba.core.ir.Assign object at 0x0000017AA4172410>,
                                    134)],
             '$160compare_op.12': [(<numba.core.ir.Assign object at 0x0000017AA4172F50>,
                                    134)],
             '$162pred': [(<numba.core.ir.Assign object at 0x0000017AA41731C0>,
                           134)],
             '$16load_global.6': [(<numba.core.ir.Assign object at 0x0000017AA4168B20>,
                                   0)],
             '$170binary_subtract.4': [(<numba.core.ir.Assign object at 0x0000017AA4173610>,
                                        164)],
             '$172binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000017AA4173790>,
                                      164)],
             '$182load_global.9': [(<numba.core.ir.Assign object at 0x0000017AA4173D00>,
                                    164)],
             '$184compare_op.10': [(<numba.core.ir.Assign object at 0x0000017AA4173EB0>,
                                    164)],
             '$186pred': [(<numba.core.ir.Assign object at 0x0000017AA4178160>,
                           164)],
             '$18load_attr.7': [(<numba.core.ir.Assign object at 0x0000017AA4168CA0>,
                                 0)],
             '$194binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000017AA4178670>,
                                      188)],
             '$202binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000017AA4178B50>,
                                      188)],
             '$210binary_subtract.13': [(<numba.core.ir.Assign object at 0x0000017AA4179090>,
                                         188)],
             '$212binary_subscr.14': [(<numba.core.ir.Assign object at 0x0000017AA4179210>,
                                       188)],
             '$214binary_subtract.15': [(<numba.core.ir.Assign object at 0x0000017AA4179390>,
                                         188)],
             '$216binary_multiply.16': [(<numba.core.ir.Assign object at 0x0000017AA4179510>,
                                         188)],
             '$218inplace_add.17': [(<numba.core.ir.Assign object at 0x0000017AA4179690>,
                                     188)],
             '$22load_attr.9': [(<numba.core.ir.Assign object at 0x0000017AA4168F40>,
                                 0)],
             '$232binary_subscr.4': [(<numba.core.ir.Assign object at 0x0000017AA4052C20>,
                                      226)],
             '$234binary_multiply.5': [(<numba.core.ir.Assign object at 0x0000017AA4179D50>,
                                        226)],
             '$246load_attr.2': [(<numba.core.ir.Assign object at 0x0000017AA417A2C0>,
                                  244)],
             '$250binary_subscr.4': [(<numba.core.ir.Assign object at 0x0000017AA4060FA0>,
                                      244)],
             '$254compare_op.6': [(<numba.core.ir.Assign object at 0x0000017AA417A8F0>,
                                   244)],
             '$256pred': [(<numba.core.ir.Assign object at 0x0000017AA417AB60>,
                           244)],
             '$258load_global.1': [(<numba.core.ir.Assign object at 0x0000017AA417ADA0>,
                                    258)],
             '$260load_method.2': [(<numba.core.ir.Assign object at 0x0000017AA417AF20>,
                                    258)],
             '$264call_method.4': [(<numba.core.ir.Assign object at 0x0000017AA417B250>,
                                    258)],
             '$26binary_subscr.11': [(<numba.core.ir.Assign object at 0x0000017A1F06F8B0>,
                                      0)],
             '$272load_global.1': [(<numba.core.ir.Assign object at 0x0000017AA417B640>,
                                    272)],
             '$276call_function.3': [(<numba.core.ir.Assign object at 0x0000017AA417B940>,
                                      272)],
             '$278get_iter.4': [(<numba.core.ir.Assign object at 0x0000017AA417BA60>,
                                 272)],
             '$280for_iter.2': [(<numba.core.ir.Assign object at 0x0000017AA417BD90>,
                                 280)],
             '$280for_iter.3': [(<numba.core.ir.Assign object at 0x0000017AA417BEB0>,
                                 280)],
             '$280for_iter.4': [(<numba.core.ir.Assign object at 0x0000017AA417BFD0>,
                                 280)],
             '$288load_global.4': [(<numba.core.ir.Assign object at 0x0000017AA40D5900>,
                                    282)],
             '$28load_global.12': [(<numba.core.ir.Assign object at 0x0000017AA41693C0>,
                                    0)],
             '$294load_attr.7': [(<numba.core.ir.Assign object at 0x0000017AA40D5420>,
                                  282)],
             '$298binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000017AA4060850>,
                                      282)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA41681C0>,
                                  0)],
             '$300call_function.10': [(<numba.core.ir.Assign object at 0x0000017AA40D4BE0>,
                                       282)],
             '$302get_iter.11': [(<numba.core.ir.Assign object at 0x0000017AA40D60E0>,
                                  282)],
             '$304for_iter.3': [(<numba.core.ir.Assign object at 0x0000017AA40D48B0>,
                                 304)],
             '$304for_iter.4': [(<numba.core.ir.Assign object at 0x0000017AA40D4B20>,
                                 304)],
             '$304for_iter.5': [(<numba.core.ir.Assign object at 0x0000017AA40D4670>,
                                 304)],
             '$30load_attr.13': [(<numba.core.ir.Assign object at 0x0000017AA4169540>,
                                  0)],
             '$314build_tuple.7': [(<numba.core.ir.Assign object at 0x0000017AA40D5FF0>,
                                    306)],
             '$316binary_subscr.8': [(<numba.core.ir.Assign object at 0x0000017AA40D5D50>,
                                      306)],
             '$322binary_subscr.11': [(<numba.core.ir.Assign object at 0x0000017AA40D4DF0>,
                                       306)],
             '$332compare_op.15': [(<numba.core.ir.Assign object at 0x0000017AA4113C70>,
                                    306)],
             '$334pred': [(<numba.core.ir.Assign object at 0x0000017AA4113730>,
                           306)],
             '$338load_global.4': [(<numba.core.ir.Assign object at 0x0000017AA41138E0>,
                                    336)],
             '$340load_method.5': [(<numba.core.ir.Assign object at 0x0000017AA41137C0>,
                                    336)],
             '$346binary_true_divide.8': [(<numba.core.ir.Assign object at 0x0000017AA4113010>,
                                           336)],
             '$348unary_negative.9': [(<numba.core.ir.Assign object at 0x0000017AA4112FE0>,
                                       336)],
             '$350call_method.10': [(<numba.core.ir.Assign object at 0x0000017AA4113760>,
                                     336)],
             '$352inplace_add.11': [(<numba.core.ir.Assign object at 0x0000017AA4113310>,
                                     336)],
             '$362inplace_add.5': [(<numba.core.ir.Assign object at 0x0000017AA4112830>,
                                    358)],
             '$368load_global.2': [(<numba.core.ir.Assign object at 0x0000017AA4113F40>,
                                    368)],
             '$370load_method.3': [(<numba.core.ir.Assign object at 0x0000017AA41122F0>,
                                    368)],
             '$376binary_subtract.6': [(<numba.core.ir.Assign object at 0x0000017AA4112200>,
                                        368)],
             '$378call_method.7': [(<numba.core.ir.Assign object at 0x0000017AA4111BD0>,
                                    368)],
             '$380load_global.8': [(<numba.core.ir.Assign object at 0x0000017AA4111C30>,
                                    368)],
             '$382compare_op.9': [(<numba.core.ir.Assign object at 0x0000017AA4111A50>,
                                   368)],
             '$384pred': [(<numba.core.ir.Assign object at 0x0000017AA4111630>,
                           368)],
             '$38load_global.16': [(<numba.core.ir.Assign object at 0x0000017AA4169B40>,
                                    0)],
             '$394compare_op.4': [(<numba.core.ir.Assign object at 0x0000017AA41112D0>,
                                   390)],
             '$396pred': [(<numba.core.ir.Assign object at 0x0000017AA4110C10>,
                           390)],
             '$406binary_add.5': [(<numba.core.ir.Assign object at 0x0000017AA4110850>,
                                   398)],
             '$40load_attr.17': [(<numba.core.ir.Assign object at 0x0000017AA4169CC0>,
                                  0)],
             '$422load_global.4': [(<numba.core.ir.Assign object at 0x0000017AA41131F0>,
                                    416)],
             '$424compare_op.5': [(<numba.core.ir.Assign object at 0x0000017AA40525F0>,
                                   416)],
             '$426pred': [(<numba.core.ir.Assign object at 0x0000017AA4051840>,
                           416)],
             '$432inplace_multiply.4': [(<numba.core.ir.Assign object at 0x0000017AA4053CA0>,
                                         428)],
             '$442binary_add.4': [(<numba.core.ir.Assign object at 0x0000017AA40537C0>,
                                   438)],
             '$44load_attr.19': [(<numba.core.ir.Assign object at 0x0000017AA4169F60>,
                                  0)],
             '$464binary_subscr.6': [(<numba.core.ir.Assign object at 0x0000017AA4051870>,
                                      452)],
             '$468compare_op.8': [(<numba.core.ir.Assign object at 0x0000017AA4050D90>,
                                   452)],
             '$470pred': [(<numba.core.ir.Assign object at 0x0000017AA40525C0>,
                           452)],
             '$472load_global.1': [(<numba.core.ir.Assign object at 0x0000017AA40521A0>,
                                    472)],
             '$474load_method.2': [(<numba.core.ir.Assign object at 0x0000017AA40514E0>,
                                    472)],
             '$486binary_subscr.7': [(<numba.core.ir.Assign object at 0x0000017AA4050F70>,
                                      472)],
             '$488load_global.8': [(<numba.core.ir.Assign object at 0x0000017AA4050850>,
                                    472)],
             '$48binary_subscr.21': [(<numba.core.ir.Assign object at 0x0000017A1F06E470>,
                                      0)],
             '$492binary_multiply.10': [(<numba.core.ir.Assign object at 0x0000017AA4050A00>,
                                         472)],
             '$494compare_op.11': [(<numba.core.ir.Assign object at 0x0000017AA40507F0>,
                                    472)],
             '$496pred': [(<numba.core.ir.Assign object at 0x0000017AA4053400>,
                           472)],
             '$498load_global.1': [(<numba.core.ir.Assign object at 0x0000017AA4053C40>,
                                    498)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x0000017AA4168340>,
                                  0)],
             '$502binary_multiply.3': [(<numba.core.ir.Assign object at 0x0000017AA4052C50>,
                                        498)],
             '$50load_global.22': [(<numba.core.ir.Assign object at 0x0000017AA416A3E0>,
                                    0)],
             '$516binary_subscr.3': [(<numba.core.ir.Assign object at 0x0000017AA40511E0>,
                                      512)],
             '$518load_global.4': [(<numba.core.ir.Assign object at 0x0000017AA40528C0>,
                                    512)],
             '$522binary_multiply.6': [(<numba.core.ir.Assign object at 0x0000017AA4123C40>,
                                        512)],
             '$524compare_op.7': [(<numba.core.ir.Assign object at 0x0000017AA4120190>,
                                   512)],
             '$528pred': [(<numba.core.ir.Assign object at 0x0000017AA4123E80>,
                           512)],
             '$52load_attr.23': [(<numba.core.ir.Assign object at 0x0000017AA416A560>,
                                  0)],
             '$530load_global.1': [(<numba.core.ir.Assign object at 0x0000017AA4123A00>,
                                    530)],
             '$534binary_multiply.3': [(<numba.core.ir.Assign object at 0x0000017AA4123820>,
                                        530)],
             '$548build_tuple.2': [(<numba.core.ir.Assign object at 0x0000017AA4122CE0>,
                                    544)],
             '$550return_value.3': [(<numba.core.ir.Assign object at 0x0000017AA4122E60>,
                                     544)],
             '$60load_global.26': [(<numba.core.ir.Assign object at 0x0000017AA416AB60>,
                                    0)],
             '$62load_method.27': [(<numba.core.ir.Assign object at 0x0000017AA416ACE0>,
                                    0)],
             '$70load_global.30': [(<numba.core.ir.Assign object at 0x0000017AA416B220>,
                                    0)],
             '$74load_attr.32': [(<numba.core.ir.Assign object at 0x0000017AA416B4C0>,
                                  0)],
             '$78binary_subscr.34': [(<numba.core.ir.Assign object at 0x0000017A1F06E0E0>,
                                      0)],
             '$80call_function.35': [(<numba.core.ir.Assign object at 0x0000017AA416B9A0>,
                                      0)],
             '$82get_iter.36': [(<numba.core.ir.Assign object at 0x0000017AA416BAC0>,
                                 0)],
             '$84for_iter.1': [(<numba.core.ir.Assign object at 0x0000017AA416B070>,
                                84)],
             '$84for_iter.2': [(<numba.core.ir.Assign object at 0x0000017AA416BBB0>,
                                84)],
             '$84for_iter.3': [(<numba.core.ir.Assign object at 0x0000017AA416BCD0>,
                                84)],
             '$8call_method.3': [(<numba.core.ir.Assign object at 0x0000017AA4168670>,
                                  0)],
             '$const112.10': [(<numba.core.ir.Assign object at 0x0000017AA4171060>,
                               86)],
             '$const124.15': [(<numba.core.ir.Assign object at 0x0000017AA41718A0>,
                               86)],
             '$const158.11': [(<numba.core.ir.Assign object at 0x0000017AA4172DA0>,
                               134)],
             '$const168.3': [(<numba.core.ir.Assign object at 0x0000017AA4173460>,
                              164)],
             '$const208.12': [(<numba.core.ir.Assign object at 0x0000017AA4178EE0>,
                               188)],
             '$const230.3': [(<numba.core.ir.Assign object at 0x0000017AA4179A20>,
                              226)],
             '$const24.10': [(<numba.core.ir.Assign object at 0x0000017AA41690C0>,
                              0)],
             '$const248.3': [(<numba.core.ir.Assign object at 0x0000017AA417A440>,
                              244)],
             '$const252.5': [(<numba.core.ir.Assign object at 0x0000017AA417A740>,
                              244)],
             '$const290.5': [(<numba.core.ir.Assign object at 0x0000017AA40D5720>,
                              282)],
             '$const296.8': [(<numba.core.ir.Assign object at 0x0000017AA40D5300>,
                              282)],
             '$const330.14': [(<numba.core.ir.Assign object at 0x0000017AA4113E20>,
                               306)],
             '$const360.4': [(<numba.core.ir.Assign object at 0x0000017AA41124D0>,
                              358)],
             '$const408.6': [(<numba.core.ir.Assign object at 0x0000017AA4110A90>,
                              398)],
             '$const430.3': [(<numba.core.ir.Assign object at 0x0000017AA4053CD0>,
                              428)],
             '$const444.5': [(<numba.core.ir.Assign object at 0x0000017AA4053B20>,
                              438)],
             '$const46.20': [(<numba.core.ir.Assign object at 0x0000017AA416A0E0>,
                              0)],
             '$const466.7': [(<numba.core.ir.Assign object at 0x0000017AA4051C30>,
                              452)],
             '$const76.33': [(<numba.core.ir.Assign object at 0x0000017AA416B640>,
                              0)],
             '$phi280.1': [(<numba.core.ir.Assign object at 0x0000017AA417B7F0>,
                            272)],
             '$phi282.2': [(<numba.core.ir.Assign object at 0x0000017AA417BCD0>,
                            280)],
             '$phi304.2': [(<numba.core.ir.Assign object at 0x0000017AA40D5B40>,
                            282)],
             '$phi306.3': [(<numba.core.ir.Assign object at 0x0000017AA40D4910>,
                            304)],
             '$phi84.0': [(<numba.core.ir.Assign object at 0x0000017AA4168460>,
                           0)],
             '$phi86.1': [(<numba.core.ir.Assign object at 0x0000017AA416A7A0>,
                           84)],
             'bandwidth': [(<numba.core.ir.Assign object at 0x0000017AA4168040>,
                            0)],
             'bool132': [(<numba.core.ir.Assign object at 0x0000017AA4171E40>,
                          86)],
             'bool162': [(<numba.core.ir.Assign object at 0x0000017AA41730A0>,
                          134)],
             'bool186': [(<numba.core.ir.Assign object at 0x0000017AA4178040>,
                          164)],
             'bool256': [(<numba.core.ir.Assign object at 0x0000017AA417AA40>,
                          244)],
             'bool334': [(<numba.core.ir.Assign object at 0x0000017AA4113B20>,
                          306)],
             'bool384': [(<numba.core.ir.Assign object at 0x0000017AA41116C0>,
                          368)],
             'bool396': [(<numba.core.ir.Assign object at 0x0000017AA4110FA0>,
                          390)],
             'bool426': [(<numba.core.ir.Assign object at 0x0000017AA4052CE0>,
                          416)],
             'bool470': [(<numba.core.ir.Assign object at 0x0000017AA4050FA0>,
                          452)],
             'bool496': [(<numba.core.ir.Assign object at 0x0000017AA40526B0>,
                          472)],
             'bool528': [(<numba.core.ir.Assign object at 0x0000017AA41217B0>,
                          512)],
             'd': [(<numba.core.ir.Assign object at 0x0000017AA4112D10>, 306)],
             'distances': [(<numba.core.ir.Assign object at 0x0000017AA40D6980>,
                            0)],
             'hi': [(<numba.core.ir.Assign object at 0x0000017AA4170400>, 86),
                    (<numba.core.ir.Assign object at 0x0000017AA4110430>, 398)],
             'i': [(<numba.core.ir.Assign object at 0x0000017AA416BFA0>, 86)],
             'index': [(<numba.core.ir.Assign object at 0x0000017AA4172560>,
                        134)],
             'interpolation': [(<numba.core.ir.Assign object at 0x0000017AA4172A10>,
                                134)],
             'ith_distances': [(<numba.core.ir.Assign object at 0x0000017AA4170BB0>,
                                86)],
             'j': [(<numba.core.ir.Assign object at 0x0000017AA40D4370>, 306)],
             'k': [(<numba.core.ir.Assign object at 0x0000017AA40D7E80>, 0)],
             'lo': [(<numba.core.ir.Assign object at 0x0000017AA4170160>, 86),
                    (<numba.core.ir.Assign object at 0x0000017AA4110130>, 416)],
             'local_connectivity': [(<numba.core.ir.Assign object at 0x0000017AA40D7FA0>,
                                     0)],
             'mean_distances': [(<numba.core.ir.Assign object at 0x0000017AA416B010>,
                                 0)],
             'mean_ith_distances': [(<numba.core.ir.Assign object at 0x0000017AA4050910>,
                                     472)],
             'mid': [(<numba.core.ir.Assign object at 0x0000017AA41706A0>, 86),
                     (<numba.core.ir.Assign object at 0x0000017AA4110580>, 398),
                     (<numba.core.ir.Assign object at 0x0000017AA4052E30>, 428),
                     (<numba.core.ir.Assign object at 0x0000017AA40523E0>,
                      438)],
             'n': [(<numba.core.ir.Assign object at 0x0000017AA40D5CF0>, 282)],
             'n_iter': [(<numba.core.ir.Assign object at 0x0000017AA40D68F0>,
                         0)],
             'non_zero_dists': [(<numba.core.ir.Assign object at 0x0000017AA4171390>,
                                 86)],
             'psum': [(<numba.core.ir.Assign object at 0x0000017AA40D5BD0>,
                       282),
                      (<numba.core.ir.Assign object at 0x0000017AA41130A0>,
                       336),
                      (<numba.core.ir.Assign object at 0x0000017AA41126E0>,
                       358)],
             'result': [(<numba.core.ir.Assign object at 0x0000017AA416A9E0>,
                         0)],
             'rho': [(<numba.core.ir.Assign object at 0x0000017AA41699C0>, 0)],
             'target': [(<numba.core.ir.Assign object at 0x0000017AA41688B0>,
                         0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA40EB880>
DEBUG:numba.core.ssa:Fix SSA violator on var lo
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: distances = arg(0, name=distances)
DEBUG:numba.core.ssa:on stmt: k = arg(1, name=k)
DEBUG:numba.core.ssa:on stmt: n_iter = arg(2, name=n_iter)
DEBUG:numba.core.ssa:on stmt: local_connectivity = arg(3, name=local_connectivity)
DEBUG:numba.core.ssa:on stmt: bandwidth = arg(4, name=bandwidth)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $8call_method.3 = call $4load_method.1(k, func=$4load_method.1, args=[Var(k, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: target = $8call_method.3 * bandwidth
DEBUG:numba.core.ssa:on stmt: $16load_global.6 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $18load_attr.7 = getattr(value=$16load_global.6, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $22load_attr.9 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const24.10 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26binary_subscr.11 = static_getitem(value=$22load_attr.9, index=0, index_var=$const24.10, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $28load_global.12 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.13 = getattr(value=$28load_global.12, attr=float32)
DEBUG:numba.core.ssa:on stmt: rho = call $18load_attr.7($26binary_subscr.11, func=$18load_attr.7, args=[Var($26binary_subscr.11, umap_.py:192)], kws=[('dtype', Var($30load_attr.13, umap_.py:192))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $38load_global.16 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_attr.17 = getattr(value=$38load_global.16, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $44load_attr.19 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.20 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.21 = static_getitem(value=$44load_attr.19, index=0, index_var=$const46.20, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50load_global.22 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $52load_attr.23 = getattr(value=$50load_global.22, attr=float32)
DEBUG:numba.core.ssa:on stmt: result = call $40load_attr.17($48binary_subscr.21, func=$40load_attr.17, args=[Var($48binary_subscr.21, umap_.py:193)], kws=[('dtype', Var($52load_attr.23, umap_.py:193))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $60load_global.26 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $62load_method.27 = getattr(value=$60load_global.26, attr=mean)
DEBUG:numba.core.ssa:on stmt: mean_distances = call $62load_method.27(distances, func=$62load_method.27, args=[Var(distances, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $70load_global.30 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $74load_attr.32 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const76.33 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $78binary_subscr.34 = static_getitem(value=$74load_attr.32, index=0, index_var=$const76.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $80call_function.35 = call $70load_global.30($78binary_subscr.34, func=$70load_global.30, args=[Var($78binary_subscr.34, umap_.py:197)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $82get_iter.36 = getiter(value=$80call_function.35)
DEBUG:numba.core.ssa:on stmt: $phi84.0 = $82get_iter.36
DEBUG:numba.core.ssa:on stmt: jump 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $84for_iter.1 = iternext(value=$phi84.0)
DEBUG:numba.core.ssa:on stmt: $84for_iter.2 = pair_first(value=$84for_iter.1)
DEBUG:numba.core.ssa:on stmt: $84for_iter.3 = pair_second(value=$84for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi86.1 = $84for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $84for_iter.3, 86, 544
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: i = $phi86.1
DEBUG:numba.core.ssa:on stmt: lo = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: lo
DEBUG:numba.core.ssa:replaced with: lo = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: hi = global(NPY_INFINITY: inf)
DEBUG:numba.core.ssa:on stmt: mid = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: ith_distances = getitem(value=distances, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const112.10 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $114compare_op.11 = ith_distances > $const112.10
DEBUG:numba.core.ssa:on stmt: non_zero_dists = getitem(value=ith_distances, index=$114compare_op.11, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.14 = getattr(value=non_zero_dists, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const124.15 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $126binary_subscr.16 = static_getitem(value=$122load_attr.14, index=0, index_var=$const124.15, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $130compare_op.18 = $126binary_subscr.16 >= local_connectivity
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.18, func=bool132, args=(Var($130compare_op.18, umap_.py:205),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 244
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $134load_global.1 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $136load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.3 = getattr(value=$136load_global.2, attr=floor)
DEBUG:numba.core.ssa:on stmt: $142call_method.5 = call $138load_method.3(local_connectivity, func=$138load_method.3, args=[Var(local_connectivity, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: index = call $134load_global.1($142call_method.5, func=$134load_global.1, args=[Var($142call_method.5, umap_.py:206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: interpolation = local_connectivity - index
DEBUG:numba.core.ssa:on stmt: $const158.11 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $160compare_op.12 = index > $const158.11
DEBUG:numba.core.ssa:on stmt: bool162 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $162pred = call bool162($160compare_op.12, func=bool162, args=(Var($160compare_op.12, umap_.py:208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $162pred, 164, 226
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $const168.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.4 = index - $const168.3
DEBUG:numba.core.ssa:on stmt: $172binary_subscr.5 = getitem(value=non_zero_dists, index=$170binary_subtract.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: rho[i] = $172binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $182load_global.9 = global(SMOOTH_K_TOLERANCE: 1e-05)
DEBUG:numba.core.ssa:on stmt: $184compare_op.10 = interpolation > $182load_global.9
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.10, func=bool186, args=(Var($184compare_op.10, umap_.py:210),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.5 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $202binary_subscr.9 = getitem(value=non_zero_dists, index=index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const208.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $210binary_subtract.13 = index - $const208.12
DEBUG:numba.core.ssa:on stmt: $212binary_subscr.14 = getitem(value=non_zero_dists, index=$210binary_subtract.13, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $214binary_subtract.15 = $202binary_subscr.9 - $212binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.16 = interpolation * $214binary_subtract.15
DEBUG:numba.core.ssa:on stmt: $218inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$194binary_subscr.5, rhs=$216binary_multiply.16, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: rho[i] = $218inplace_add.17
DEBUG:numba.core.ssa:on stmt: jump 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 226
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $const230.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.4 = static_getitem(value=non_zero_dists, index=0, index_var=$const230.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234binary_multiply.5 = interpolation * $232binary_subscr.4
DEBUG:numba.core.ssa:on stmt: rho[i] = $234binary_multiply.5
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 244
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $246load_attr.2 = getattr(value=non_zero_dists, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const248.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.4 = static_getitem(value=$246load_attr.2, index=0, index_var=$const248.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const252.5 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $254compare_op.6 = $250binary_subscr.4 > $const252.5
DEBUG:numba.core.ssa:on stmt: bool256 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $256pred = call bool256($254compare_op.6, func=bool256, args=(Var($254compare_op.6, umap_.py:216),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $256pred, 258, 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 258
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $258load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $260load_method.2 = getattr(value=$258load_global.1, attr=max)
DEBUG:numba.core.ssa:on stmt: $264call_method.4 = call $260load_method.2(non_zero_dists, func=$260load_method.2, args=[Var(non_zero_dists, umap_.py:204)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: rho[i] = $264call_method.4
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $272load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $276call_function.3 = call $272load_global.1(n_iter, func=$272load_global.1, args=[Var(n_iter, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $278get_iter.4 = getiter(value=$276call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi280.1 = $278get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $280for_iter.2 = iternext(value=$phi280.1)
DEBUG:numba.core.ssa:on stmt: $280for_iter.3 = pair_first(value=$280for_iter.2)
DEBUG:numba.core.ssa:on stmt: $280for_iter.4 = pair_second(value=$280for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi282.2 = $280for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $280for_iter.4, 282, 452
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: n = $phi282.2
DEBUG:numba.core.ssa:on stmt: psum = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $288load_global.4 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const290.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $294load_attr.7 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const296.8 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $298binary_subscr.9 = static_getitem(value=$294load_attr.7, index=1, index_var=$const296.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $300call_function.10 = call $288load_global.4($const290.5, $298binary_subscr.9, func=$288load_global.4, args=[Var($const290.5, umap_.py:222), Var($298binary_subscr.9, umap_.py:222)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $302get_iter.11 = getiter(value=$300call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi304.2 = $302get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 304
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 304
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $304for_iter.3 = iternext(value=$phi304.2)
DEBUG:numba.core.ssa:on stmt: $304for_iter.4 = pair_first(value=$304for_iter.3)
DEBUG:numba.core.ssa:on stmt: $304for_iter.5 = pair_second(value=$304for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi306.3 = $304for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $304for_iter.5, 306, 368
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 306
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: j = $phi306.3
DEBUG:numba.core.ssa:on stmt: $314build_tuple.7 = build_tuple(items=[Var(i, umap_.py:197), Var(j, umap_.py:222)])
DEBUG:numba.core.ssa:on stmt: $316binary_subscr.8 = getitem(value=distances, index=$314build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $322binary_subscr.11 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: d = $316binary_subscr.8 - $322binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $const330.14 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $332compare_op.15 = d > $const330.14
DEBUG:numba.core.ssa:on stmt: bool334 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $334pred = call bool334($332compare_op.15, func=bool334, args=(Var($332compare_op.15, umap_.py:224),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $334pred, 336, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 336
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $338load_global.4 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $340load_method.5 = getattr(value=$338load_global.4, attr=exp)
DEBUG:numba.core.ssa:on stmt: $346binary_true_divide.8 = d / mid
DEBUG:numba.core.ssa:on stmt: $348unary_negative.9 = unary(fn=<built-in function neg>, value=$346binary_true_divide.8)
DEBUG:numba.core.ssa:on stmt: $350call_method.10 = call $340load_method.5($348unary_negative.9, func=$340load_method.5, args=[Var($348unary_negative.9, umap_.py:225)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $352inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$350call_method.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: psum = $352inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 547
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $const360.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $362inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$const360.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: psum = $362inplace_add.5
DEBUG:numba.core.ssa:on stmt: jump 547
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 368
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $368load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $370load_method.3 = getattr(value=$368load_global.2, attr=fabs)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.6 = psum - target
DEBUG:numba.core.ssa:on stmt: $378call_method.7 = call $370load_method.3($376binary_subtract.6, func=$370load_method.3, args=[Var($376binary_subtract.6, umap_.py:229)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $380load_global.8 = global(SMOOTH_K_TOLERANCE: 1e-05)
DEBUG:numba.core.ssa:on stmt: $382compare_op.9 = $378call_method.7 < $380load_global.8
DEBUG:numba.core.ssa:on stmt: bool384 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $384pred = call bool384($382compare_op.9, func=bool384, args=(Var($382compare_op.9, umap_.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $384pred, 386, 390
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 386
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 452
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 390
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $394compare_op.4 = psum > target
DEBUG:numba.core.ssa:on stmt: bool396 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $396pred = call bool396($394compare_op.4, func=bool396, args=(Var($394compare_op.4, umap_.py:232),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $396pred, 398, 416
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 398
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: hi = mid
DEBUG:numba.core.ssa:on stmt: $406binary_add.5 = lo + hi
DEBUG:numba.core.ssa:on stmt: $const408.6 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: mid = $406binary_add.5 / $const408.6
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 416
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: lo = mid
DEBUG:numba.core.ssa:replaced with: lo.1 = mid
DEBUG:numba.core.ssa:on stmt: $422load_global.4 = global(NPY_INFINITY: inf)
DEBUG:numba.core.ssa:on stmt: $424compare_op.5 = hi == $422load_global.4
DEBUG:numba.core.ssa:on stmt: bool426 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $426pred = call bool426($424compare_op.5, func=bool426, args=(Var($424compare_op.5, umap_.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $426pred, 428, 438
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 428
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $const430.3 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $432inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid, rhs=$const430.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: mid = $432inplace_multiply.4
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 438
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $442binary_add.4 = lo + hi
DEBUG:numba.core.ssa:on stmt: $const444.5 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: mid = $442binary_add.4 / $const444.5
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: result[i] = mid
DEBUG:numba.core.ssa:on stmt: $464binary_subscr.6 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const466.7 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $468compare_op.8 = $464binary_subscr.6 > $const466.7
DEBUG:numba.core.ssa:on stmt: bool470 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $470pred = call bool470($468compare_op.8, func=bool470, args=(Var($468compare_op.8, umap_.py:245),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $470pred, 472, 512
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 472
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $472load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $474load_method.2 = getattr(value=$472load_global.1, attr=mean)
DEBUG:numba.core.ssa:on stmt: mean_ith_distances = call $474load_method.2(ith_distances, func=$474load_method.2, args=[Var(ith_distances, umap_.py:203)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $486binary_subscr.7 = getitem(value=result, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $488load_global.8 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $492binary_multiply.10 = $488load_global.8 * mean_ith_distances
DEBUG:numba.core.ssa:on stmt: $494compare_op.11 = $486binary_subscr.7 < $492binary_multiply.10
DEBUG:numba.core.ssa:on stmt: bool496 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $496pred = call bool496($494compare_op.11, func=bool496, args=(Var($494compare_op.11, umap_.py:247),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $496pred, 498, 510
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 498
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $498load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $502binary_multiply.3 = $498load_global.1 * mean_ith_distances
DEBUG:numba.core.ssa:on stmt: result[i] = $502binary_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 510
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 546
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 512
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.3 = getitem(value=result, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $518load_global.4 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $522binary_multiply.6 = $518load_global.4 * mean_distances
DEBUG:numba.core.ssa:on stmt: $524compare_op.7 = $516binary_subscr.3 < $522binary_multiply.6
DEBUG:numba.core.ssa:on stmt: bool528 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $528pred = call bool528($524compare_op.7, func=bool528, args=(Var($524compare_op.7, umap_.py:250),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $528pred, 530, 542
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 530
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $530load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $534binary_multiply.3 = $530load_global.1 * mean_distances
DEBUG:numba.core.ssa:on stmt: result[i] = $534binary_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 542
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 542
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 546
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 544
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $548build_tuple.2 = build_tuple(items=[Var(result, umap_.py:193), Var(rho, umap_.py:192)])
DEBUG:numba.core.ssa:on stmt: $550return_value.3 = cast(value=$548build_tuple.2)
DEBUG:numba.core.ssa:on stmt: return $550return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 545
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 546
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 547
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 304
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {86: [<numba.core.ir.Assign object at 0x0000017AA40D7EE0>],
             416: [<numba.core.ir.Assign object at 0x0000017A1F06E230>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: distances = arg(0, name=distances)
DEBUG:numba.core.ssa:on stmt: k = arg(1, name=k)
DEBUG:numba.core.ssa:on stmt: n_iter = arg(2, name=n_iter)
DEBUG:numba.core.ssa:on stmt: local_connectivity = arg(3, name=local_connectivity)
DEBUG:numba.core.ssa:on stmt: bandwidth = arg(4, name=bandwidth)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $8call_method.3 = call $4load_method.1(k, func=$4load_method.1, args=[Var(k, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: target = $8call_method.3 * bandwidth
DEBUG:numba.core.ssa:on stmt: $16load_global.6 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $18load_attr.7 = getattr(value=$16load_global.6, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $22load_attr.9 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const24.10 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26binary_subscr.11 = static_getitem(value=$22load_attr.9, index=0, index_var=$const24.10, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $28load_global.12 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.13 = getattr(value=$28load_global.12, attr=float32)
DEBUG:numba.core.ssa:on stmt: rho = call $18load_attr.7($26binary_subscr.11, func=$18load_attr.7, args=[Var($26binary_subscr.11, umap_.py:192)], kws=[('dtype', Var($30load_attr.13, umap_.py:192))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $38load_global.16 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_attr.17 = getattr(value=$38load_global.16, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $44load_attr.19 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.20 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.21 = static_getitem(value=$44load_attr.19, index=0, index_var=$const46.20, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50load_global.22 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $52load_attr.23 = getattr(value=$50load_global.22, attr=float32)
DEBUG:numba.core.ssa:on stmt: result = call $40load_attr.17($48binary_subscr.21, func=$40load_attr.17, args=[Var($48binary_subscr.21, umap_.py:193)], kws=[('dtype', Var($52load_attr.23, umap_.py:193))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $60load_global.26 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $62load_method.27 = getattr(value=$60load_global.26, attr=mean)
DEBUG:numba.core.ssa:on stmt: mean_distances = call $62load_method.27(distances, func=$62load_method.27, args=[Var(distances, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $70load_global.30 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $74load_attr.32 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const76.33 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $78binary_subscr.34 = static_getitem(value=$74load_attr.32, index=0, index_var=$const76.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $80call_function.35 = call $70load_global.30($78binary_subscr.34, func=$70load_global.30, args=[Var($78binary_subscr.34, umap_.py:197)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $82get_iter.36 = getiter(value=$80call_function.35)
DEBUG:numba.core.ssa:on stmt: $phi84.0 = $82get_iter.36
DEBUG:numba.core.ssa:on stmt: jump 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $84for_iter.1 = iternext(value=$phi84.0)
DEBUG:numba.core.ssa:on stmt: $84for_iter.2 = pair_first(value=$84for_iter.1)
DEBUG:numba.core.ssa:on stmt: $84for_iter.3 = pair_second(value=$84for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi86.1 = $84for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $84for_iter.3, 86, 544
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: i = $phi86.1
DEBUG:numba.core.ssa:on stmt: lo = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: hi = global(NPY_INFINITY: inf)
DEBUG:numba.core.ssa:on stmt: mid = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: ith_distances = getitem(value=distances, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const112.10 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $114compare_op.11 = ith_distances > $const112.10
DEBUG:numba.core.ssa:on stmt: non_zero_dists = getitem(value=ith_distances, index=$114compare_op.11, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.14 = getattr(value=non_zero_dists, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const124.15 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $126binary_subscr.16 = static_getitem(value=$122load_attr.14, index=0, index_var=$const124.15, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $130compare_op.18 = $126binary_subscr.16 >= local_connectivity
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.18, func=bool132, args=(Var($130compare_op.18, umap_.py:205),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 244
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $134load_global.1 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $136load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.3 = getattr(value=$136load_global.2, attr=floor)
DEBUG:numba.core.ssa:on stmt: $142call_method.5 = call $138load_method.3(local_connectivity, func=$138load_method.3, args=[Var(local_connectivity, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: index = call $134load_global.1($142call_method.5, func=$134load_global.1, args=[Var($142call_method.5, umap_.py:206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: interpolation = local_connectivity - index
DEBUG:numba.core.ssa:on stmt: $const158.11 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $160compare_op.12 = index > $const158.11
DEBUG:numba.core.ssa:on stmt: bool162 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $162pred = call bool162($160compare_op.12, func=bool162, args=(Var($160compare_op.12, umap_.py:208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $162pred, 164, 226
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $const168.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.4 = index - $const168.3
DEBUG:numba.core.ssa:on stmt: $172binary_subscr.5 = getitem(value=non_zero_dists, index=$170binary_subtract.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: rho[i] = $172binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $182load_global.9 = global(SMOOTH_K_TOLERANCE: 1e-05)
DEBUG:numba.core.ssa:on stmt: $184compare_op.10 = interpolation > $182load_global.9
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.10, func=bool186, args=(Var($184compare_op.10, umap_.py:210),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.5 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $202binary_subscr.9 = getitem(value=non_zero_dists, index=index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const208.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $210binary_subtract.13 = index - $const208.12
DEBUG:numba.core.ssa:on stmt: $212binary_subscr.14 = getitem(value=non_zero_dists, index=$210binary_subtract.13, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $214binary_subtract.15 = $202binary_subscr.9 - $212binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.16 = interpolation * $214binary_subtract.15
DEBUG:numba.core.ssa:on stmt: $218inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$194binary_subscr.5, rhs=$216binary_multiply.16, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: rho[i] = $218inplace_add.17
DEBUG:numba.core.ssa:on stmt: jump 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 226
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $const230.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.4 = static_getitem(value=non_zero_dists, index=0, index_var=$const230.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234binary_multiply.5 = interpolation * $232binary_subscr.4
DEBUG:numba.core.ssa:on stmt: rho[i] = $234binary_multiply.5
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 244
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $246load_attr.2 = getattr(value=non_zero_dists, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const248.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.4 = static_getitem(value=$246load_attr.2, index=0, index_var=$const248.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const252.5 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $254compare_op.6 = $250binary_subscr.4 > $const252.5
DEBUG:numba.core.ssa:on stmt: bool256 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $256pred = call bool256($254compare_op.6, func=bool256, args=(Var($254compare_op.6, umap_.py:216),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $256pred, 258, 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 258
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $258load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $260load_method.2 = getattr(value=$258load_global.1, attr=max)
DEBUG:numba.core.ssa:on stmt: $264call_method.4 = call $260load_method.2(non_zero_dists, func=$260load_method.2, args=[Var(non_zero_dists, umap_.py:204)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: rho[i] = $264call_method.4
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $272load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $276call_function.3 = call $272load_global.1(n_iter, func=$272load_global.1, args=[Var(n_iter, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $278get_iter.4 = getiter(value=$276call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi280.1 = $278get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $280for_iter.2 = iternext(value=$phi280.1)
DEBUG:numba.core.ssa:on stmt: $280for_iter.3 = pair_first(value=$280for_iter.2)
DEBUG:numba.core.ssa:on stmt: $280for_iter.4 = pair_second(value=$280for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi282.2 = $280for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $280for_iter.4, 282, 452
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: n = $phi282.2
DEBUG:numba.core.ssa:on stmt: psum = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $288load_global.4 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const290.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $294load_attr.7 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const296.8 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $298binary_subscr.9 = static_getitem(value=$294load_attr.7, index=1, index_var=$const296.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $300call_function.10 = call $288load_global.4($const290.5, $298binary_subscr.9, func=$288load_global.4, args=[Var($const290.5, umap_.py:222), Var($298binary_subscr.9, umap_.py:222)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $302get_iter.11 = getiter(value=$300call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi304.2 = $302get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 304
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 304
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $304for_iter.3 = iternext(value=$phi304.2)
DEBUG:numba.core.ssa:on stmt: $304for_iter.4 = pair_first(value=$304for_iter.3)
DEBUG:numba.core.ssa:on stmt: $304for_iter.5 = pair_second(value=$304for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi306.3 = $304for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $304for_iter.5, 306, 368
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 306
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: j = $phi306.3
DEBUG:numba.core.ssa:on stmt: $314build_tuple.7 = build_tuple(items=[Var(i, umap_.py:197), Var(j, umap_.py:222)])
DEBUG:numba.core.ssa:on stmt: $316binary_subscr.8 = getitem(value=distances, index=$314build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $322binary_subscr.11 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: d = $316binary_subscr.8 - $322binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $const330.14 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $332compare_op.15 = d > $const330.14
DEBUG:numba.core.ssa:on stmt: bool334 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $334pred = call bool334($332compare_op.15, func=bool334, args=(Var($332compare_op.15, umap_.py:224),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $334pred, 336, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 336
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $338load_global.4 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $340load_method.5 = getattr(value=$338load_global.4, attr=exp)
DEBUG:numba.core.ssa:on stmt: $346binary_true_divide.8 = d / mid
DEBUG:numba.core.ssa:on stmt: $348unary_negative.9 = unary(fn=<built-in function neg>, value=$346binary_true_divide.8)
DEBUG:numba.core.ssa:on stmt: $350call_method.10 = call $340load_method.5($348unary_negative.9, func=$340load_method.5, args=[Var($348unary_negative.9, umap_.py:225)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $352inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$350call_method.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: psum = $352inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 547
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $const360.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $362inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$const360.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: psum = $362inplace_add.5
DEBUG:numba.core.ssa:on stmt: jump 547
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 368
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $368load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $370load_method.3 = getattr(value=$368load_global.2, attr=fabs)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.6 = psum - target
DEBUG:numba.core.ssa:on stmt: $378call_method.7 = call $370load_method.3($376binary_subtract.6, func=$370load_method.3, args=[Var($376binary_subtract.6, umap_.py:229)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $380load_global.8 = global(SMOOTH_K_TOLERANCE: 1e-05)
DEBUG:numba.core.ssa:on stmt: $382compare_op.9 = $378call_method.7 < $380load_global.8
DEBUG:numba.core.ssa:on stmt: bool384 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $384pred = call bool384($382compare_op.9, func=bool384, args=(Var($382compare_op.9, umap_.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $384pred, 386, 390
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 386
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 452
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 390
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $394compare_op.4 = psum > target
DEBUG:numba.core.ssa:on stmt: bool396 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $396pred = call bool396($394compare_op.4, func=bool396, args=(Var($394compare_op.4, umap_.py:232),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $396pred, 398, 416
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 398
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: hi = mid
DEBUG:numba.core.ssa:on stmt: $406binary_add.5 = lo + hi
DEBUG:numba.core.ssa:find_def var='lo' stmt=$406binary_add.5 = lo + hi
DEBUG:numba.core.ssa:find_def_from_top label 398
DEBUG:numba.core.ssa:idom 390 from label 398
DEBUG:numba.core.ssa:find_def_from_bottom label 390
DEBUG:numba.core.ssa:find_def_from_top label 390
DEBUG:numba.core.ssa:idom 368 from label 390
DEBUG:numba.core.ssa:find_def_from_bottom label 368
DEBUG:numba.core.ssa:find_def_from_top label 368
DEBUG:numba.core.ssa:idom 304 from label 368
DEBUG:numba.core.ssa:find_def_from_bottom label 304
DEBUG:numba.core.ssa:find_def_from_top label 304
DEBUG:numba.core.ssa:idom 282 from label 304
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:find_def_from_top label 282
DEBUG:numba.core.ssa:idom 280 from label 282
DEBUG:numba.core.ssa:find_def_from_bottom label 280
DEBUG:numba.core.ssa:find_def_from_top label 280
DEBUG:numba.core.ssa:insert phi node lo.2 = phi(incoming_values=[], incoming_blocks=[]) at 280
DEBUG:numba.core.ssa:find_def_from_bottom label 272
DEBUG:numba.core.ssa:find_def_from_top label 272
DEBUG:numba.core.ssa:idom 86 from label 272
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:incoming_def lo = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 545
DEBUG:numba.core.ssa:find_def_from_top label 545
DEBUG:numba.core.ssa:insert phi node lo.3 = phi(incoming_values=[], incoming_blocks=[]) at 545
DEBUG:numba.core.ssa:find_def_from_bottom label 428
DEBUG:numba.core.ssa:find_def_from_top label 428
DEBUG:numba.core.ssa:idom 416 from label 428
DEBUG:numba.core.ssa:find_def_from_bottom label 416
DEBUG:numba.core.ssa:incoming_def lo.1 = mid
DEBUG:numba.core.ssa:find_def_from_bottom label 438
DEBUG:numba.core.ssa:find_def_from_top label 438
DEBUG:numba.core.ssa:idom 416 from label 438
DEBUG:numba.core.ssa:find_def_from_bottom label 416
DEBUG:numba.core.ssa:incoming_def lo.1 = mid
DEBUG:numba.core.ssa:find_def_from_bottom label 398
DEBUG:numba.core.ssa:find_def_from_top label 398
DEBUG:numba.core.ssa:idom 390 from label 398
DEBUG:numba.core.ssa:find_def_from_bottom label 390
DEBUG:numba.core.ssa:find_def_from_top label 390
DEBUG:numba.core.ssa:idom 368 from label 390
DEBUG:numba.core.ssa:find_def_from_bottom label 368
DEBUG:numba.core.ssa:find_def_from_top label 368
DEBUG:numba.core.ssa:idom 304 from label 368
DEBUG:numba.core.ssa:find_def_from_bottom label 304
DEBUG:numba.core.ssa:find_def_from_top label 304
DEBUG:numba.core.ssa:idom 282 from label 304
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:find_def_from_top label 282
DEBUG:numba.core.ssa:idom 280 from label 282
DEBUG:numba.core.ssa:find_def_from_bottom label 280
DEBUG:numba.core.ssa:incoming_def lo.2 = phi(incoming_values=[Var(lo, umap_.py:198)], incoming_blocks=[272])
DEBUG:numba.core.ssa:incoming_def lo.3 = phi(incoming_values=[Var(lo.1, umap_.py:236), Var(lo.1, umap_.py:236), Var(lo.2, umap_.py:233)], incoming_blocks=[428, 438, 398])
DEBUG:numba.core.ssa:replaced with: $406binary_add.5 = lo.2 + hi
DEBUG:numba.core.ssa:on stmt: $const408.6 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: mid = $406binary_add.5 / $const408.6
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 416
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: lo.1 = mid
DEBUG:numba.core.ssa:on stmt: $422load_global.4 = global(NPY_INFINITY: inf)
DEBUG:numba.core.ssa:on stmt: $424compare_op.5 = hi == $422load_global.4
DEBUG:numba.core.ssa:on stmt: bool426 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $426pred = call bool426($424compare_op.5, func=bool426, args=(Var($424compare_op.5, umap_.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $426pred, 428, 438
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 428
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $const430.3 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $432inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid, rhs=$const430.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: mid = $432inplace_multiply.4
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 438
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $442binary_add.4 = lo + hi
DEBUG:numba.core.ssa:find_def var='lo' stmt=$442binary_add.4 = lo + hi
DEBUG:numba.core.ssa:find_def_from_top label 438
DEBUG:numba.core.ssa:idom 416 from label 438
DEBUG:numba.core.ssa:find_def_from_bottom label 416
DEBUG:numba.core.ssa:replaced with: $442binary_add.4 = lo.1 + hi
DEBUG:numba.core.ssa:on stmt: $const444.5 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: mid = $442binary_add.4 / $const444.5
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: result[i] = mid
DEBUG:numba.core.ssa:on stmt: $464binary_subscr.6 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const466.7 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $468compare_op.8 = $464binary_subscr.6 > $const466.7
DEBUG:numba.core.ssa:on stmt: bool470 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $470pred = call bool470($468compare_op.8, func=bool470, args=(Var($468compare_op.8, umap_.py:245),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $470pred, 472, 512
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 472
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $472load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $474load_method.2 = getattr(value=$472load_global.1, attr=mean)
DEBUG:numba.core.ssa:on stmt: mean_ith_distances = call $474load_method.2(ith_distances, func=$474load_method.2, args=[Var(ith_distances, umap_.py:203)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $486binary_subscr.7 = getitem(value=result, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $488load_global.8 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $492binary_multiply.10 = $488load_global.8 * mean_ith_distances
DEBUG:numba.core.ssa:on stmt: $494compare_op.11 = $486binary_subscr.7 < $492binary_multiply.10
DEBUG:numba.core.ssa:on stmt: bool496 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $496pred = call bool496($494compare_op.11, func=bool496, args=(Var($494compare_op.11, umap_.py:247),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $496pred, 498, 510
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 498
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $498load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $502binary_multiply.3 = $498load_global.1 * mean_ith_distances
DEBUG:numba.core.ssa:on stmt: result[i] = $502binary_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 510
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 546
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 512
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.3 = getitem(value=result, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $518load_global.4 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $522binary_multiply.6 = $518load_global.4 * mean_distances
DEBUG:numba.core.ssa:on stmt: $524compare_op.7 = $516binary_subscr.3 < $522binary_multiply.6
DEBUG:numba.core.ssa:on stmt: bool528 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $528pred = call bool528($524compare_op.7, func=bool528, args=(Var($524compare_op.7, umap_.py:250),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $528pred, 530, 542
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 530
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $530load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $534binary_multiply.3 = $530load_global.1 * mean_distances
DEBUG:numba.core.ssa:on stmt: result[i] = $534binary_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 542
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 542
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 546
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 544
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $548build_tuple.2 = build_tuple(items=[Var(result, umap_.py:193), Var(rho, umap_.py:192)])
DEBUG:numba.core.ssa:on stmt: $550return_value.3 = cast(value=$548build_tuple.2)
DEBUG:numba.core.ssa:on stmt: return $550return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 545
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 546
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 547
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 304
DEBUG:numba.core.ssa:Fix SSA violator on var hi
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: distances = arg(0, name=distances)
DEBUG:numba.core.ssa:on stmt: k = arg(1, name=k)
DEBUG:numba.core.ssa:on stmt: n_iter = arg(2, name=n_iter)
DEBUG:numba.core.ssa:on stmt: local_connectivity = arg(3, name=local_connectivity)
DEBUG:numba.core.ssa:on stmt: bandwidth = arg(4, name=bandwidth)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $8call_method.3 = call $4load_method.1(k, func=$4load_method.1, args=[Var(k, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: target = $8call_method.3 * bandwidth
DEBUG:numba.core.ssa:on stmt: $16load_global.6 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $18load_attr.7 = getattr(value=$16load_global.6, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $22load_attr.9 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const24.10 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26binary_subscr.11 = static_getitem(value=$22load_attr.9, index=0, index_var=$const24.10, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $28load_global.12 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.13 = getattr(value=$28load_global.12, attr=float32)
DEBUG:numba.core.ssa:on stmt: rho = call $18load_attr.7($26binary_subscr.11, func=$18load_attr.7, args=[Var($26binary_subscr.11, umap_.py:192)], kws=[('dtype', Var($30load_attr.13, umap_.py:192))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $38load_global.16 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_attr.17 = getattr(value=$38load_global.16, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $44load_attr.19 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.20 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.21 = static_getitem(value=$44load_attr.19, index=0, index_var=$const46.20, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50load_global.22 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $52load_attr.23 = getattr(value=$50load_global.22, attr=float32)
DEBUG:numba.core.ssa:on stmt: result = call $40load_attr.17($48binary_subscr.21, func=$40load_attr.17, args=[Var($48binary_subscr.21, umap_.py:193)], kws=[('dtype', Var($52load_attr.23, umap_.py:193))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $60load_global.26 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $62load_method.27 = getattr(value=$60load_global.26, attr=mean)
DEBUG:numba.core.ssa:on stmt: mean_distances = call $62load_method.27(distances, func=$62load_method.27, args=[Var(distances, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $70load_global.30 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $74load_attr.32 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const76.33 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $78binary_subscr.34 = static_getitem(value=$74load_attr.32, index=0, index_var=$const76.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $80call_function.35 = call $70load_global.30($78binary_subscr.34, func=$70load_global.30, args=[Var($78binary_subscr.34, umap_.py:197)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $82get_iter.36 = getiter(value=$80call_function.35)
DEBUG:numba.core.ssa:on stmt: $phi84.0 = $82get_iter.36
DEBUG:numba.core.ssa:on stmt: jump 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: $84for_iter.1 = iternext(value=$phi84.0)
DEBUG:numba.core.ssa:on stmt: $84for_iter.2 = pair_first(value=$84for_iter.1)
DEBUG:numba.core.ssa:on stmt: $84for_iter.3 = pair_second(value=$84for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi86.1 = $84for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $84for_iter.3, 86, 544
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: i = $phi86.1
DEBUG:numba.core.ssa:on stmt: lo = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: hi = global(NPY_INFINITY: inf)
DEBUG:numba.core.ssa:first assign: hi
DEBUG:numba.core.ssa:replaced with: hi = global(NPY_INFINITY: inf)
DEBUG:numba.core.ssa:on stmt: mid = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: ith_distances = getitem(value=distances, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const112.10 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $114compare_op.11 = ith_distances > $const112.10
DEBUG:numba.core.ssa:on stmt: non_zero_dists = getitem(value=ith_distances, index=$114compare_op.11, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.14 = getattr(value=non_zero_dists, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const124.15 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $126binary_subscr.16 = static_getitem(value=$122load_attr.14, index=0, index_var=$const124.15, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $130compare_op.18 = $126binary_subscr.16 >= local_connectivity
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.18, func=bool132, args=(Var($130compare_op.18, umap_.py:205),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 244
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: $134load_global.1 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $136load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.3 = getattr(value=$136load_global.2, attr=floor)
DEBUG:numba.core.ssa:on stmt: $142call_method.5 = call $138load_method.3(local_connectivity, func=$138load_method.3, args=[Var(local_connectivity, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: index = call $134load_global.1($142call_method.5, func=$134load_global.1, args=[Var($142call_method.5, umap_.py:206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: interpolation = local_connectivity - index
DEBUG:numba.core.ssa:on stmt: $const158.11 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $160compare_op.12 = index > $const158.11
DEBUG:numba.core.ssa:on stmt: bool162 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $162pred = call bool162($160compare_op.12, func=bool162, args=(Var($160compare_op.12, umap_.py:208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $162pred, 164, 226
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: $const168.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.4 = index - $const168.3
DEBUG:numba.core.ssa:on stmt: $172binary_subscr.5 = getitem(value=non_zero_dists, index=$170binary_subtract.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: rho[i] = $172binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $182load_global.9 = global(SMOOTH_K_TOLERANCE: 1e-05)
DEBUG:numba.core.ssa:on stmt: $184compare_op.10 = interpolation > $182load_global.9
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.10, func=bool186, args=(Var($184compare_op.10, umap_.py:210),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.5 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $202binary_subscr.9 = getitem(value=non_zero_dists, index=index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const208.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $210binary_subtract.13 = index - $const208.12
DEBUG:numba.core.ssa:on stmt: $212binary_subscr.14 = getitem(value=non_zero_dists, index=$210binary_subtract.13, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $214binary_subtract.15 = $202binary_subscr.9 - $212binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.16 = interpolation * $214binary_subtract.15
DEBUG:numba.core.ssa:on stmt: $218inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$194binary_subscr.5, rhs=$216binary_multiply.16, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: rho[i] = $218inplace_add.17
DEBUG:numba.core.ssa:on stmt: jump 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 226
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: $const230.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.4 = static_getitem(value=non_zero_dists, index=0, index_var=$const230.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234binary_multiply.5 = interpolation * $232binary_subscr.4
DEBUG:numba.core.ssa:on stmt: rho[i] = $234binary_multiply.5
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 244
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: $246load_attr.2 = getattr(value=non_zero_dists, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const248.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.4 = static_getitem(value=$246load_attr.2, index=0, index_var=$const248.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const252.5 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $254compare_op.6 = $250binary_subscr.4 > $const252.5
DEBUG:numba.core.ssa:on stmt: bool256 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $256pred = call bool256($254compare_op.6, func=bool256, args=(Var($254compare_op.6, umap_.py:216),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $256pred, 258, 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 258
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: $258load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $260load_method.2 = getattr(value=$258load_global.1, attr=max)
DEBUG:numba.core.ssa:on stmt: $264call_method.4 = call $260load_method.2(non_zero_dists, func=$260load_method.2, args=[Var(non_zero_dists, umap_.py:204)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: rho[i] = $264call_method.4
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: $272load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $276call_function.3 = call $272load_global.1(n_iter, func=$272load_global.1, args=[Var(n_iter, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $278get_iter.4 = getiter(value=$276call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi280.1 = $278get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: lo.2 = phi(incoming_values=[Var(lo, umap_.py:198), Var(lo.3, umap_.py:233)], incoming_blocks=[272, 545])
DEBUG:numba.core.ssa:on stmt: $280for_iter.2 = iternext(value=$phi280.1)
DEBUG:numba.core.ssa:on stmt: $280for_iter.3 = pair_first(value=$280for_iter.2)
DEBUG:numba.core.ssa:on stmt: $280for_iter.4 = pair_second(value=$280for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi282.2 = $280for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $280for_iter.4, 282, 452
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: n = $phi282.2
DEBUG:numba.core.ssa:on stmt: psum = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $288load_global.4 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const290.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $294load_attr.7 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const296.8 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $298binary_subscr.9 = static_getitem(value=$294load_attr.7, index=1, index_var=$const296.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $300call_function.10 = call $288load_global.4($const290.5, $298binary_subscr.9, func=$288load_global.4, args=[Var($const290.5, umap_.py:222), Var($298binary_subscr.9, umap_.py:222)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $302get_iter.11 = getiter(value=$300call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi304.2 = $302get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 304
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 304
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: $304for_iter.3 = iternext(value=$phi304.2)
DEBUG:numba.core.ssa:on stmt: $304for_iter.4 = pair_first(value=$304for_iter.3)
DEBUG:numba.core.ssa:on stmt: $304for_iter.5 = pair_second(value=$304for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi306.3 = $304for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $304for_iter.5, 306, 368
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 306
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: j = $phi306.3
DEBUG:numba.core.ssa:on stmt: $314build_tuple.7 = build_tuple(items=[Var(i, umap_.py:197), Var(j, umap_.py:222)])
DEBUG:numba.core.ssa:on stmt: $316binary_subscr.8 = getitem(value=distances, index=$314build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $322binary_subscr.11 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: d = $316binary_subscr.8 - $322binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $const330.14 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $332compare_op.15 = d > $const330.14
DEBUG:numba.core.ssa:on stmt: bool334 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $334pred = call bool334($332compare_op.15, func=bool334, args=(Var($332compare_op.15, umap_.py:224),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $334pred, 336, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 336
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: $338load_global.4 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $340load_method.5 = getattr(value=$338load_global.4, attr=exp)
DEBUG:numba.core.ssa:on stmt: $346binary_true_divide.8 = d / mid
DEBUG:numba.core.ssa:on stmt: $348unary_negative.9 = unary(fn=<built-in function neg>, value=$346binary_true_divide.8)
DEBUG:numba.core.ssa:on stmt: $350call_method.10 = call $340load_method.5($348unary_negative.9, func=$340load_method.5, args=[Var($348unary_negative.9, umap_.py:225)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $352inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$350call_method.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: psum = $352inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 547
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: $const360.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $362inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$const360.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: psum = $362inplace_add.5
DEBUG:numba.core.ssa:on stmt: jump 547
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 368
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: $368load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $370load_method.3 = getattr(value=$368load_global.2, attr=fabs)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.6 = psum - target
DEBUG:numba.core.ssa:on stmt: $378call_method.7 = call $370load_method.3($376binary_subtract.6, func=$370load_method.3, args=[Var($376binary_subtract.6, umap_.py:229)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $380load_global.8 = global(SMOOTH_K_TOLERANCE: 1e-05)
DEBUG:numba.core.ssa:on stmt: $382compare_op.9 = $378call_method.7 < $380load_global.8
DEBUG:numba.core.ssa:on stmt: bool384 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $384pred = call bool384($382compare_op.9, func=bool384, args=(Var($382compare_op.9, umap_.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $384pred, 386, 390
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 386
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: jump 452
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 390
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: $394compare_op.4 = psum > target
DEBUG:numba.core.ssa:on stmt: bool396 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $396pred = call bool396($394compare_op.4, func=bool396, args=(Var($394compare_op.4, umap_.py:232),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $396pred, 398, 416
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 398
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: hi = mid
DEBUG:numba.core.ssa:replaced with: hi.1 = mid
DEBUG:numba.core.ssa:on stmt: $406binary_add.5 = lo.2 + hi
DEBUG:numba.core.ssa:on stmt: $const408.6 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: mid = $406binary_add.5 / $const408.6
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 416
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: lo.1 = mid
DEBUG:numba.core.ssa:on stmt: $422load_global.4 = global(NPY_INFINITY: inf)
DEBUG:numba.core.ssa:on stmt: $424compare_op.5 = hi == $422load_global.4
DEBUG:numba.core.ssa:on stmt: bool426 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $426pred = call bool426($424compare_op.5, func=bool426, args=(Var($424compare_op.5, umap_.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $426pred, 428, 438
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 428
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: $const430.3 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $432inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid, rhs=$const430.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: mid = $432inplace_multiply.4
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 438
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: $442binary_add.4 = lo.1 + hi
DEBUG:numba.core.ssa:on stmt: $const444.5 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: mid = $442binary_add.4 / $const444.5
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: result[i] = mid
DEBUG:numba.core.ssa:on stmt: $464binary_subscr.6 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const466.7 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $468compare_op.8 = $464binary_subscr.6 > $const466.7
DEBUG:numba.core.ssa:on stmt: bool470 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $470pred = call bool470($468compare_op.8, func=bool470, args=(Var($468compare_op.8, umap_.py:245),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $470pred, 472, 512
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 472
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: $472load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $474load_method.2 = getattr(value=$472load_global.1, attr=mean)
DEBUG:numba.core.ssa:on stmt: mean_ith_distances = call $474load_method.2(ith_distances, func=$474load_method.2, args=[Var(ith_distances, umap_.py:203)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $486binary_subscr.7 = getitem(value=result, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $488load_global.8 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $492binary_multiply.10 = $488load_global.8 * mean_ith_distances
DEBUG:numba.core.ssa:on stmt: $494compare_op.11 = $486binary_subscr.7 < $492binary_multiply.10
DEBUG:numba.core.ssa:on stmt: bool496 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $496pred = call bool496($494compare_op.11, func=bool496, args=(Var($494compare_op.11, umap_.py:247),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $496pred, 498, 510
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 498
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: $498load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $502binary_multiply.3 = $498load_global.1 * mean_ith_distances
DEBUG:numba.core.ssa:on stmt: result[i] = $502binary_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 510
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: jump 546
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 512
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.3 = getitem(value=result, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $518load_global.4 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $522binary_multiply.6 = $518load_global.4 * mean_distances
DEBUG:numba.core.ssa:on stmt: $524compare_op.7 = $516binary_subscr.3 < $522binary_multiply.6
DEBUG:numba.core.ssa:on stmt: bool528 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $528pred = call bool528($524compare_op.7, func=bool528, args=(Var($524compare_op.7, umap_.py:250),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $528pred, 530, 542
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 530
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: $530load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $534binary_multiply.3 = $530load_global.1 * mean_distances
DEBUG:numba.core.ssa:on stmt: result[i] = $534binary_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 542
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 542
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: jump 546
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 544
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: $548build_tuple.2 = build_tuple(items=[Var(result, umap_.py:193), Var(rho, umap_.py:192)])
DEBUG:numba.core.ssa:on stmt: $550return_value.3 = cast(value=$548build_tuple.2)
DEBUG:numba.core.ssa:on stmt: return $550return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 545
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: lo.3 = phi(incoming_values=[Var(lo.1, umap_.py:236), Var(lo.1, umap_.py:236), Var(lo.2, umap_.py:233)], incoming_blocks=[428, 438, 398])
DEBUG:numba.core.ssa:on stmt: jump 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 546
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: jump 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 547
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06E080>
DEBUG:numba.core.ssa:on stmt: jump 304
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {86: [<numba.core.ir.Assign object at 0x0000017A1F06C490>],
             398: [<numba.core.ir.Assign object at 0x0000017AA40D7130>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: distances = arg(0, name=distances)
DEBUG:numba.core.ssa:on stmt: k = arg(1, name=k)
DEBUG:numba.core.ssa:on stmt: n_iter = arg(2, name=n_iter)
DEBUG:numba.core.ssa:on stmt: local_connectivity = arg(3, name=local_connectivity)
DEBUG:numba.core.ssa:on stmt: bandwidth = arg(4, name=bandwidth)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $8call_method.3 = call $4load_method.1(k, func=$4load_method.1, args=[Var(k, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: target = $8call_method.3 * bandwidth
DEBUG:numba.core.ssa:on stmt: $16load_global.6 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $18load_attr.7 = getattr(value=$16load_global.6, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $22load_attr.9 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const24.10 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26binary_subscr.11 = static_getitem(value=$22load_attr.9, index=0, index_var=$const24.10, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $28load_global.12 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.13 = getattr(value=$28load_global.12, attr=float32)
DEBUG:numba.core.ssa:on stmt: rho = call $18load_attr.7($26binary_subscr.11, func=$18load_attr.7, args=[Var($26binary_subscr.11, umap_.py:192)], kws=[('dtype', Var($30load_attr.13, umap_.py:192))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $38load_global.16 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_attr.17 = getattr(value=$38load_global.16, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $44load_attr.19 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.20 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.21 = static_getitem(value=$44load_attr.19, index=0, index_var=$const46.20, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50load_global.22 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $52load_attr.23 = getattr(value=$50load_global.22, attr=float32)
DEBUG:numba.core.ssa:on stmt: result = call $40load_attr.17($48binary_subscr.21, func=$40load_attr.17, args=[Var($48binary_subscr.21, umap_.py:193)], kws=[('dtype', Var($52load_attr.23, umap_.py:193))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $60load_global.26 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $62load_method.27 = getattr(value=$60load_global.26, attr=mean)
DEBUG:numba.core.ssa:on stmt: mean_distances = call $62load_method.27(distances, func=$62load_method.27, args=[Var(distances, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $70load_global.30 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $74load_attr.32 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const76.33 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $78binary_subscr.34 = static_getitem(value=$74load_attr.32, index=0, index_var=$const76.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $80call_function.35 = call $70load_global.30($78binary_subscr.34, func=$70load_global.30, args=[Var($78binary_subscr.34, umap_.py:197)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $82get_iter.36 = getiter(value=$80call_function.35)
DEBUG:numba.core.ssa:on stmt: $phi84.0 = $82get_iter.36
DEBUG:numba.core.ssa:on stmt: jump 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $84for_iter.1 = iternext(value=$phi84.0)
DEBUG:numba.core.ssa:on stmt: $84for_iter.2 = pair_first(value=$84for_iter.1)
DEBUG:numba.core.ssa:on stmt: $84for_iter.3 = pair_second(value=$84for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi86.1 = $84for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $84for_iter.3, 86, 544
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: i = $phi86.1
DEBUG:numba.core.ssa:on stmt: lo = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: hi = global(NPY_INFINITY: inf)
DEBUG:numba.core.ssa:on stmt: mid = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: ith_distances = getitem(value=distances, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const112.10 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $114compare_op.11 = ith_distances > $const112.10
DEBUG:numba.core.ssa:on stmt: non_zero_dists = getitem(value=ith_distances, index=$114compare_op.11, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.14 = getattr(value=non_zero_dists, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const124.15 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $126binary_subscr.16 = static_getitem(value=$122load_attr.14, index=0, index_var=$const124.15, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $130compare_op.18 = $126binary_subscr.16 >= local_connectivity
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.18, func=bool132, args=(Var($130compare_op.18, umap_.py:205),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 244
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $134load_global.1 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $136load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.3 = getattr(value=$136load_global.2, attr=floor)
DEBUG:numba.core.ssa:on stmt: $142call_method.5 = call $138load_method.3(local_connectivity, func=$138load_method.3, args=[Var(local_connectivity, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: index = call $134load_global.1($142call_method.5, func=$134load_global.1, args=[Var($142call_method.5, umap_.py:206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: interpolation = local_connectivity - index
DEBUG:numba.core.ssa:on stmt: $const158.11 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $160compare_op.12 = index > $const158.11
DEBUG:numba.core.ssa:on stmt: bool162 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $162pred = call bool162($160compare_op.12, func=bool162, args=(Var($160compare_op.12, umap_.py:208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $162pred, 164, 226
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $const168.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.4 = index - $const168.3
DEBUG:numba.core.ssa:on stmt: $172binary_subscr.5 = getitem(value=non_zero_dists, index=$170binary_subtract.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: rho[i] = $172binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $182load_global.9 = global(SMOOTH_K_TOLERANCE: 1e-05)
DEBUG:numba.core.ssa:on stmt: $184compare_op.10 = interpolation > $182load_global.9
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.10, func=bool186, args=(Var($184compare_op.10, umap_.py:210),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.5 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $202binary_subscr.9 = getitem(value=non_zero_dists, index=index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const208.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $210binary_subtract.13 = index - $const208.12
DEBUG:numba.core.ssa:on stmt: $212binary_subscr.14 = getitem(value=non_zero_dists, index=$210binary_subtract.13, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $214binary_subtract.15 = $202binary_subscr.9 - $212binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.16 = interpolation * $214binary_subtract.15
DEBUG:numba.core.ssa:on stmt: $218inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$194binary_subscr.5, rhs=$216binary_multiply.16, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: rho[i] = $218inplace_add.17
DEBUG:numba.core.ssa:on stmt: jump 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 226
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $const230.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.4 = static_getitem(value=non_zero_dists, index=0, index_var=$const230.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234binary_multiply.5 = interpolation * $232binary_subscr.4
DEBUG:numba.core.ssa:on stmt: rho[i] = $234binary_multiply.5
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 244
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $246load_attr.2 = getattr(value=non_zero_dists, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const248.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.4 = static_getitem(value=$246load_attr.2, index=0, index_var=$const248.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const252.5 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $254compare_op.6 = $250binary_subscr.4 > $const252.5
DEBUG:numba.core.ssa:on stmt: bool256 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $256pred = call bool256($254compare_op.6, func=bool256, args=(Var($254compare_op.6, umap_.py:216),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $256pred, 258, 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 258
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $258load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $260load_method.2 = getattr(value=$258load_global.1, attr=max)
DEBUG:numba.core.ssa:on stmt: $264call_method.4 = call $260load_method.2(non_zero_dists, func=$260load_method.2, args=[Var(non_zero_dists, umap_.py:204)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: rho[i] = $264call_method.4
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $272load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $276call_function.3 = call $272load_global.1(n_iter, func=$272load_global.1, args=[Var(n_iter, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $278get_iter.4 = getiter(value=$276call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi280.1 = $278get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: lo.2 = phi(incoming_values=[Var(lo, umap_.py:198), Var(lo.3, umap_.py:233)], incoming_blocks=[272, 545])
DEBUG:numba.core.ssa:on stmt: $280for_iter.2 = iternext(value=$phi280.1)
DEBUG:numba.core.ssa:on stmt: $280for_iter.3 = pair_first(value=$280for_iter.2)
DEBUG:numba.core.ssa:on stmt: $280for_iter.4 = pair_second(value=$280for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi282.2 = $280for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $280for_iter.4, 282, 452
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: n = $phi282.2
DEBUG:numba.core.ssa:on stmt: psum = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $288load_global.4 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const290.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $294load_attr.7 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const296.8 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $298binary_subscr.9 = static_getitem(value=$294load_attr.7, index=1, index_var=$const296.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $300call_function.10 = call $288load_global.4($const290.5, $298binary_subscr.9, func=$288load_global.4, args=[Var($const290.5, umap_.py:222), Var($298binary_subscr.9, umap_.py:222)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $302get_iter.11 = getiter(value=$300call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi304.2 = $302get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 304
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 304
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $304for_iter.3 = iternext(value=$phi304.2)
DEBUG:numba.core.ssa:on stmt: $304for_iter.4 = pair_first(value=$304for_iter.3)
DEBUG:numba.core.ssa:on stmt: $304for_iter.5 = pair_second(value=$304for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi306.3 = $304for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $304for_iter.5, 306, 368
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 306
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: j = $phi306.3
DEBUG:numba.core.ssa:on stmt: $314build_tuple.7 = build_tuple(items=[Var(i, umap_.py:197), Var(j, umap_.py:222)])
DEBUG:numba.core.ssa:on stmt: $316binary_subscr.8 = getitem(value=distances, index=$314build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $322binary_subscr.11 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: d = $316binary_subscr.8 - $322binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $const330.14 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $332compare_op.15 = d > $const330.14
DEBUG:numba.core.ssa:on stmt: bool334 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $334pred = call bool334($332compare_op.15, func=bool334, args=(Var($332compare_op.15, umap_.py:224),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $334pred, 336, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 336
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $338load_global.4 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $340load_method.5 = getattr(value=$338load_global.4, attr=exp)
DEBUG:numba.core.ssa:on stmt: $346binary_true_divide.8 = d / mid
DEBUG:numba.core.ssa:on stmt: $348unary_negative.9 = unary(fn=<built-in function neg>, value=$346binary_true_divide.8)
DEBUG:numba.core.ssa:on stmt: $350call_method.10 = call $340load_method.5($348unary_negative.9, func=$340load_method.5, args=[Var($348unary_negative.9, umap_.py:225)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $352inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$350call_method.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: psum = $352inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 547
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $const360.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $362inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$const360.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: psum = $362inplace_add.5
DEBUG:numba.core.ssa:on stmt: jump 547
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 368
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $368load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $370load_method.3 = getattr(value=$368load_global.2, attr=fabs)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.6 = psum - target
DEBUG:numba.core.ssa:on stmt: $378call_method.7 = call $370load_method.3($376binary_subtract.6, func=$370load_method.3, args=[Var($376binary_subtract.6, umap_.py:229)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $380load_global.8 = global(SMOOTH_K_TOLERANCE: 1e-05)
DEBUG:numba.core.ssa:on stmt: $382compare_op.9 = $378call_method.7 < $380load_global.8
DEBUG:numba.core.ssa:on stmt: bool384 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $384pred = call bool384($382compare_op.9, func=bool384, args=(Var($382compare_op.9, umap_.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $384pred, 386, 390
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 386
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 452
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 390
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $394compare_op.4 = psum > target
DEBUG:numba.core.ssa:on stmt: bool396 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $396pred = call bool396($394compare_op.4, func=bool396, args=(Var($394compare_op.4, umap_.py:232),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $396pred, 398, 416
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 398
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: hi.1 = mid
DEBUG:numba.core.ssa:on stmt: $406binary_add.5 = lo.2 + hi
DEBUG:numba.core.ssa:find_def var='hi' stmt=$406binary_add.5 = lo.2 + hi
DEBUG:numba.core.ssa:replaced with: $406binary_add.5 = lo.2 + hi.1
DEBUG:numba.core.ssa:on stmt: $const408.6 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: mid = $406binary_add.5 / $const408.6
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 416
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: lo.1 = mid
DEBUG:numba.core.ssa:on stmt: $422load_global.4 = global(NPY_INFINITY: inf)
DEBUG:numba.core.ssa:on stmt: $424compare_op.5 = hi == $422load_global.4
DEBUG:numba.core.ssa:find_def var='hi' stmt=$424compare_op.5 = hi == $422load_global.4
DEBUG:numba.core.ssa:find_def_from_top label 416
DEBUG:numba.core.ssa:idom 390 from label 416
DEBUG:numba.core.ssa:find_def_from_bottom label 390
DEBUG:numba.core.ssa:find_def_from_top label 390
DEBUG:numba.core.ssa:idom 368 from label 390
DEBUG:numba.core.ssa:find_def_from_bottom label 368
DEBUG:numba.core.ssa:find_def_from_top label 368
DEBUG:numba.core.ssa:idom 304 from label 368
DEBUG:numba.core.ssa:find_def_from_bottom label 304
DEBUG:numba.core.ssa:find_def_from_top label 304
DEBUG:numba.core.ssa:idom 282 from label 304
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:find_def_from_top label 282
DEBUG:numba.core.ssa:idom 280 from label 282
DEBUG:numba.core.ssa:find_def_from_bottom label 280
DEBUG:numba.core.ssa:find_def_from_top label 280
DEBUG:numba.core.ssa:insert phi node hi.2 = phi(incoming_values=[], incoming_blocks=[]) at 280
DEBUG:numba.core.ssa:find_def_from_bottom label 272
DEBUG:numba.core.ssa:find_def_from_top label 272
DEBUG:numba.core.ssa:idom 86 from label 272
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:incoming_def hi = global(NPY_INFINITY: inf)
DEBUG:numba.core.ssa:find_def_from_bottom label 545
DEBUG:numba.core.ssa:find_def_from_top label 545
DEBUG:numba.core.ssa:insert phi node hi.3 = phi(incoming_values=[], incoming_blocks=[]) at 545
DEBUG:numba.core.ssa:find_def_from_bottom label 428
DEBUG:numba.core.ssa:find_def_from_top label 428
DEBUG:numba.core.ssa:idom 416 from label 428
DEBUG:numba.core.ssa:find_def_from_bottom label 416
DEBUG:numba.core.ssa:find_def_from_top label 416
DEBUG:numba.core.ssa:idom 390 from label 416
DEBUG:numba.core.ssa:find_def_from_bottom label 390
DEBUG:numba.core.ssa:find_def_from_top label 390
DEBUG:numba.core.ssa:idom 368 from label 390
DEBUG:numba.core.ssa:find_def_from_bottom label 368
DEBUG:numba.core.ssa:find_def_from_top label 368
DEBUG:numba.core.ssa:idom 304 from label 368
DEBUG:numba.core.ssa:find_def_from_bottom label 304
DEBUG:numba.core.ssa:find_def_from_top label 304
DEBUG:numba.core.ssa:idom 282 from label 304
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:find_def_from_top label 282
DEBUG:numba.core.ssa:idom 280 from label 282
DEBUG:numba.core.ssa:find_def_from_bottom label 280
DEBUG:numba.core.ssa:incoming_def hi.2 = phi(incoming_values=[Var(hi, umap_.py:199)], incoming_blocks=[272])
DEBUG:numba.core.ssa:find_def_from_bottom label 438
DEBUG:numba.core.ssa:find_def_from_top label 438
DEBUG:numba.core.ssa:idom 416 from label 438
DEBUG:numba.core.ssa:find_def_from_bottom label 416
DEBUG:numba.core.ssa:find_def_from_top label 416
DEBUG:numba.core.ssa:idom 390 from label 416
DEBUG:numba.core.ssa:find_def_from_bottom label 390
DEBUG:numba.core.ssa:find_def_from_top label 390
DEBUG:numba.core.ssa:idom 368 from label 390
DEBUG:numba.core.ssa:find_def_from_bottom label 368
DEBUG:numba.core.ssa:find_def_from_top label 368
DEBUG:numba.core.ssa:idom 304 from label 368
DEBUG:numba.core.ssa:find_def_from_bottom label 304
DEBUG:numba.core.ssa:find_def_from_top label 304
DEBUG:numba.core.ssa:idom 282 from label 304
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:find_def_from_top label 282
DEBUG:numba.core.ssa:idom 280 from label 282
DEBUG:numba.core.ssa:find_def_from_bottom label 280
DEBUG:numba.core.ssa:incoming_def hi.2 = phi(incoming_values=[Var(hi, umap_.py:199)], incoming_blocks=[272])
DEBUG:numba.core.ssa:find_def_from_bottom label 398
DEBUG:numba.core.ssa:incoming_def hi.1 = mid
DEBUG:numba.core.ssa:incoming_def hi.3 = phi(incoming_values=[Var(hi.2, umap_.py:236), Var(hi.2, umap_.py:236), Var(hi.1, umap_.py:233)], incoming_blocks=[428, 438, 398])
DEBUG:numba.core.ssa:replaced with: $424compare_op.5 = hi.2 == $422load_global.4
DEBUG:numba.core.ssa:on stmt: bool426 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $426pred = call bool426($424compare_op.5, func=bool426, args=(Var($424compare_op.5, umap_.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $426pred, 428, 438
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 428
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $const430.3 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $432inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid, rhs=$const430.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: mid = $432inplace_multiply.4
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 438
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $442binary_add.4 = lo.1 + hi
DEBUG:numba.core.ssa:find_def var='hi' stmt=$442binary_add.4 = lo.1 + hi
DEBUG:numba.core.ssa:find_def_from_top label 438
DEBUG:numba.core.ssa:idom 416 from label 438
DEBUG:numba.core.ssa:find_def_from_bottom label 416
DEBUG:numba.core.ssa:find_def_from_top label 416
DEBUG:numba.core.ssa:idom 390 from label 416
DEBUG:numba.core.ssa:find_def_from_bottom label 390
DEBUG:numba.core.ssa:find_def_from_top label 390
DEBUG:numba.core.ssa:idom 368 from label 390
DEBUG:numba.core.ssa:find_def_from_bottom label 368
DEBUG:numba.core.ssa:find_def_from_top label 368
DEBUG:numba.core.ssa:idom 304 from label 368
DEBUG:numba.core.ssa:find_def_from_bottom label 304
DEBUG:numba.core.ssa:find_def_from_top label 304
DEBUG:numba.core.ssa:idom 282 from label 304
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:find_def_from_top label 282
DEBUG:numba.core.ssa:idom 280 from label 282
DEBUG:numba.core.ssa:find_def_from_bottom label 280
DEBUG:numba.core.ssa:replaced with: $442binary_add.4 = lo.1 + hi.2
DEBUG:numba.core.ssa:on stmt: $const444.5 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: mid = $442binary_add.4 / $const444.5
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: result[i] = mid
DEBUG:numba.core.ssa:on stmt: $464binary_subscr.6 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const466.7 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $468compare_op.8 = $464binary_subscr.6 > $const466.7
DEBUG:numba.core.ssa:on stmt: bool470 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $470pred = call bool470($468compare_op.8, func=bool470, args=(Var($468compare_op.8, umap_.py:245),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $470pred, 472, 512
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 472
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $472load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $474load_method.2 = getattr(value=$472load_global.1, attr=mean)
DEBUG:numba.core.ssa:on stmt: mean_ith_distances = call $474load_method.2(ith_distances, func=$474load_method.2, args=[Var(ith_distances, umap_.py:203)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $486binary_subscr.7 = getitem(value=result, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $488load_global.8 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $492binary_multiply.10 = $488load_global.8 * mean_ith_distances
DEBUG:numba.core.ssa:on stmt: $494compare_op.11 = $486binary_subscr.7 < $492binary_multiply.10
DEBUG:numba.core.ssa:on stmt: bool496 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $496pred = call bool496($494compare_op.11, func=bool496, args=(Var($494compare_op.11, umap_.py:247),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $496pred, 498, 510
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 498
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $498load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $502binary_multiply.3 = $498load_global.1 * mean_ith_distances
DEBUG:numba.core.ssa:on stmt: result[i] = $502binary_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 510
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 546
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 512
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.3 = getitem(value=result, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $518load_global.4 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $522binary_multiply.6 = $518load_global.4 * mean_distances
DEBUG:numba.core.ssa:on stmt: $524compare_op.7 = $516binary_subscr.3 < $522binary_multiply.6
DEBUG:numba.core.ssa:on stmt: bool528 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $528pred = call bool528($524compare_op.7, func=bool528, args=(Var($524compare_op.7, umap_.py:250),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $528pred, 530, 542
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 530
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $530load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $534binary_multiply.3 = $530load_global.1 * mean_distances
DEBUG:numba.core.ssa:on stmt: result[i] = $534binary_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 542
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 542
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 546
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 544
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $548build_tuple.2 = build_tuple(items=[Var(result, umap_.py:193), Var(rho, umap_.py:192)])
DEBUG:numba.core.ssa:on stmt: $550return_value.3 = cast(value=$548build_tuple.2)
DEBUG:numba.core.ssa:on stmt: return $550return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 545
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: lo.3 = phi(incoming_values=[Var(lo.1, umap_.py:236), Var(lo.1, umap_.py:236), Var(lo.2, umap_.py:233)], incoming_blocks=[428, 438, 398])
DEBUG:numba.core.ssa:on stmt: jump 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 546
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 547
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 304
DEBUG:numba.core.ssa:Fix SSA violator on var mid
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: distances = arg(0, name=distances)
DEBUG:numba.core.ssa:on stmt: k = arg(1, name=k)
DEBUG:numba.core.ssa:on stmt: n_iter = arg(2, name=n_iter)
DEBUG:numba.core.ssa:on stmt: local_connectivity = arg(3, name=local_connectivity)
DEBUG:numba.core.ssa:on stmt: bandwidth = arg(4, name=bandwidth)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $8call_method.3 = call $4load_method.1(k, func=$4load_method.1, args=[Var(k, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: target = $8call_method.3 * bandwidth
DEBUG:numba.core.ssa:on stmt: $16load_global.6 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $18load_attr.7 = getattr(value=$16load_global.6, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $22load_attr.9 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const24.10 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26binary_subscr.11 = static_getitem(value=$22load_attr.9, index=0, index_var=$const24.10, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $28load_global.12 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.13 = getattr(value=$28load_global.12, attr=float32)
DEBUG:numba.core.ssa:on stmt: rho = call $18load_attr.7($26binary_subscr.11, func=$18load_attr.7, args=[Var($26binary_subscr.11, umap_.py:192)], kws=[('dtype', Var($30load_attr.13, umap_.py:192))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $38load_global.16 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_attr.17 = getattr(value=$38load_global.16, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $44load_attr.19 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.20 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.21 = static_getitem(value=$44load_attr.19, index=0, index_var=$const46.20, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50load_global.22 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $52load_attr.23 = getattr(value=$50load_global.22, attr=float32)
DEBUG:numba.core.ssa:on stmt: result = call $40load_attr.17($48binary_subscr.21, func=$40load_attr.17, args=[Var($48binary_subscr.21, umap_.py:193)], kws=[('dtype', Var($52load_attr.23, umap_.py:193))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $60load_global.26 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $62load_method.27 = getattr(value=$60load_global.26, attr=mean)
DEBUG:numba.core.ssa:on stmt: mean_distances = call $62load_method.27(distances, func=$62load_method.27, args=[Var(distances, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $70load_global.30 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $74load_attr.32 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const76.33 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $78binary_subscr.34 = static_getitem(value=$74load_attr.32, index=0, index_var=$const76.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $80call_function.35 = call $70load_global.30($78binary_subscr.34, func=$70load_global.30, args=[Var($78binary_subscr.34, umap_.py:197)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $82get_iter.36 = getiter(value=$80call_function.35)
DEBUG:numba.core.ssa:on stmt: $phi84.0 = $82get_iter.36
DEBUG:numba.core.ssa:on stmt: jump 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: $84for_iter.1 = iternext(value=$phi84.0)
DEBUG:numba.core.ssa:on stmt: $84for_iter.2 = pair_first(value=$84for_iter.1)
DEBUG:numba.core.ssa:on stmt: $84for_iter.3 = pair_second(value=$84for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi86.1 = $84for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $84for_iter.3, 86, 544
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: i = $phi86.1
DEBUG:numba.core.ssa:on stmt: lo = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: hi = global(NPY_INFINITY: inf)
DEBUG:numba.core.ssa:on stmt: mid = const(float, 1.0)
DEBUG:numba.core.ssa:first assign: mid
DEBUG:numba.core.ssa:replaced with: mid = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: ith_distances = getitem(value=distances, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const112.10 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $114compare_op.11 = ith_distances > $const112.10
DEBUG:numba.core.ssa:on stmt: non_zero_dists = getitem(value=ith_distances, index=$114compare_op.11, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.14 = getattr(value=non_zero_dists, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const124.15 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $126binary_subscr.16 = static_getitem(value=$122load_attr.14, index=0, index_var=$const124.15, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $130compare_op.18 = $126binary_subscr.16 >= local_connectivity
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.18, func=bool132, args=(Var($130compare_op.18, umap_.py:205),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 244
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: $134load_global.1 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $136load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.3 = getattr(value=$136load_global.2, attr=floor)
DEBUG:numba.core.ssa:on stmt: $142call_method.5 = call $138load_method.3(local_connectivity, func=$138load_method.3, args=[Var(local_connectivity, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: index = call $134load_global.1($142call_method.5, func=$134load_global.1, args=[Var($142call_method.5, umap_.py:206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: interpolation = local_connectivity - index
DEBUG:numba.core.ssa:on stmt: $const158.11 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $160compare_op.12 = index > $const158.11
DEBUG:numba.core.ssa:on stmt: bool162 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $162pred = call bool162($160compare_op.12, func=bool162, args=(Var($160compare_op.12, umap_.py:208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $162pred, 164, 226
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: $const168.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.4 = index - $const168.3
DEBUG:numba.core.ssa:on stmt: $172binary_subscr.5 = getitem(value=non_zero_dists, index=$170binary_subtract.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: rho[i] = $172binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $182load_global.9 = global(SMOOTH_K_TOLERANCE: 1e-05)
DEBUG:numba.core.ssa:on stmt: $184compare_op.10 = interpolation > $182load_global.9
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.10, func=bool186, args=(Var($184compare_op.10, umap_.py:210),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.5 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $202binary_subscr.9 = getitem(value=non_zero_dists, index=index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const208.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $210binary_subtract.13 = index - $const208.12
DEBUG:numba.core.ssa:on stmt: $212binary_subscr.14 = getitem(value=non_zero_dists, index=$210binary_subtract.13, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $214binary_subtract.15 = $202binary_subscr.9 - $212binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.16 = interpolation * $214binary_subtract.15
DEBUG:numba.core.ssa:on stmt: $218inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$194binary_subscr.5, rhs=$216binary_multiply.16, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: rho[i] = $218inplace_add.17
DEBUG:numba.core.ssa:on stmt: jump 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 226
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: $const230.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.4 = static_getitem(value=non_zero_dists, index=0, index_var=$const230.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234binary_multiply.5 = interpolation * $232binary_subscr.4
DEBUG:numba.core.ssa:on stmt: rho[i] = $234binary_multiply.5
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 244
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: $246load_attr.2 = getattr(value=non_zero_dists, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const248.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.4 = static_getitem(value=$246load_attr.2, index=0, index_var=$const248.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const252.5 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $254compare_op.6 = $250binary_subscr.4 > $const252.5
DEBUG:numba.core.ssa:on stmt: bool256 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $256pred = call bool256($254compare_op.6, func=bool256, args=(Var($254compare_op.6, umap_.py:216),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $256pred, 258, 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 258
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: $258load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $260load_method.2 = getattr(value=$258load_global.1, attr=max)
DEBUG:numba.core.ssa:on stmt: $264call_method.4 = call $260load_method.2(non_zero_dists, func=$260load_method.2, args=[Var(non_zero_dists, umap_.py:204)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: rho[i] = $264call_method.4
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: $272load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $276call_function.3 = call $272load_global.1(n_iter, func=$272load_global.1, args=[Var(n_iter, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $278get_iter.4 = getiter(value=$276call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi280.1 = $278get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: hi.2 = phi(incoming_values=[Var(hi, umap_.py:199), Var(hi.3, umap_.py:236)], incoming_blocks=[272, 545])
DEBUG:numba.core.ssa:on stmt: lo.2 = phi(incoming_values=[Var(lo, umap_.py:198), Var(lo.3, umap_.py:233)], incoming_blocks=[272, 545])
DEBUG:numba.core.ssa:on stmt: $280for_iter.2 = iternext(value=$phi280.1)
DEBUG:numba.core.ssa:on stmt: $280for_iter.3 = pair_first(value=$280for_iter.2)
DEBUG:numba.core.ssa:on stmt: $280for_iter.4 = pair_second(value=$280for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi282.2 = $280for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $280for_iter.4, 282, 452
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: n = $phi282.2
DEBUG:numba.core.ssa:on stmt: psum = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $288load_global.4 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const290.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $294load_attr.7 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const296.8 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $298binary_subscr.9 = static_getitem(value=$294load_attr.7, index=1, index_var=$const296.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $300call_function.10 = call $288load_global.4($const290.5, $298binary_subscr.9, func=$288load_global.4, args=[Var($const290.5, umap_.py:222), Var($298binary_subscr.9, umap_.py:222)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $302get_iter.11 = getiter(value=$300call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi304.2 = $302get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 304
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 304
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: $304for_iter.3 = iternext(value=$phi304.2)
DEBUG:numba.core.ssa:on stmt: $304for_iter.4 = pair_first(value=$304for_iter.3)
DEBUG:numba.core.ssa:on stmt: $304for_iter.5 = pair_second(value=$304for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi306.3 = $304for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $304for_iter.5, 306, 368
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 306
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: j = $phi306.3
DEBUG:numba.core.ssa:on stmt: $314build_tuple.7 = build_tuple(items=[Var(i, umap_.py:197), Var(j, umap_.py:222)])
DEBUG:numba.core.ssa:on stmt: $316binary_subscr.8 = getitem(value=distances, index=$314build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $322binary_subscr.11 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: d = $316binary_subscr.8 - $322binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $const330.14 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $332compare_op.15 = d > $const330.14
DEBUG:numba.core.ssa:on stmt: bool334 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $334pred = call bool334($332compare_op.15, func=bool334, args=(Var($332compare_op.15, umap_.py:224),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $334pred, 336, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 336
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: $338load_global.4 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $340load_method.5 = getattr(value=$338load_global.4, attr=exp)
DEBUG:numba.core.ssa:on stmt: $346binary_true_divide.8 = d / mid
DEBUG:numba.core.ssa:on stmt: $348unary_negative.9 = unary(fn=<built-in function neg>, value=$346binary_true_divide.8)
DEBUG:numba.core.ssa:on stmt: $350call_method.10 = call $340load_method.5($348unary_negative.9, func=$340load_method.5, args=[Var($348unary_negative.9, umap_.py:225)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $352inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$350call_method.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: psum = $352inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 547
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: $const360.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $362inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$const360.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: psum = $362inplace_add.5
DEBUG:numba.core.ssa:on stmt: jump 547
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 368
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: $368load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $370load_method.3 = getattr(value=$368load_global.2, attr=fabs)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.6 = psum - target
DEBUG:numba.core.ssa:on stmt: $378call_method.7 = call $370load_method.3($376binary_subtract.6, func=$370load_method.3, args=[Var($376binary_subtract.6, umap_.py:229)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $380load_global.8 = global(SMOOTH_K_TOLERANCE: 1e-05)
DEBUG:numba.core.ssa:on stmt: $382compare_op.9 = $378call_method.7 < $380load_global.8
DEBUG:numba.core.ssa:on stmt: bool384 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $384pred = call bool384($382compare_op.9, func=bool384, args=(Var($382compare_op.9, umap_.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $384pred, 386, 390
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 386
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: jump 452
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 390
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: $394compare_op.4 = psum > target
DEBUG:numba.core.ssa:on stmt: bool396 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $396pred = call bool396($394compare_op.4, func=bool396, args=(Var($394compare_op.4, umap_.py:232),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $396pred, 398, 416
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 398
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: hi.1 = mid
DEBUG:numba.core.ssa:on stmt: $406binary_add.5 = lo.2 + hi.1
DEBUG:numba.core.ssa:on stmt: $const408.6 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: mid = $406binary_add.5 / $const408.6
DEBUG:numba.core.ssa:replaced with: mid.1 = $406binary_add.5 / $const408.6
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 416
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: lo.1 = mid
DEBUG:numba.core.ssa:on stmt: $422load_global.4 = global(NPY_INFINITY: inf)
DEBUG:numba.core.ssa:on stmt: $424compare_op.5 = hi.2 == $422load_global.4
DEBUG:numba.core.ssa:on stmt: bool426 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $426pred = call bool426($424compare_op.5, func=bool426, args=(Var($424compare_op.5, umap_.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $426pred, 428, 438
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 428
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: $const430.3 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $432inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid, rhs=$const430.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: mid = $432inplace_multiply.4
DEBUG:numba.core.ssa:replaced with: mid.2 = $432inplace_multiply.4
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 438
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: $442binary_add.4 = lo.1 + hi.2
DEBUG:numba.core.ssa:on stmt: $const444.5 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: mid = $442binary_add.4 / $const444.5
DEBUG:numba.core.ssa:replaced with: mid.3 = $442binary_add.4 / $const444.5
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: result[i] = mid
DEBUG:numba.core.ssa:on stmt: $464binary_subscr.6 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const466.7 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $468compare_op.8 = $464binary_subscr.6 > $const466.7
DEBUG:numba.core.ssa:on stmt: bool470 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $470pred = call bool470($468compare_op.8, func=bool470, args=(Var($468compare_op.8, umap_.py:245),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $470pred, 472, 512
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 472
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: $472load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $474load_method.2 = getattr(value=$472load_global.1, attr=mean)
DEBUG:numba.core.ssa:on stmt: mean_ith_distances = call $474load_method.2(ith_distances, func=$474load_method.2, args=[Var(ith_distances, umap_.py:203)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $486binary_subscr.7 = getitem(value=result, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $488load_global.8 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $492binary_multiply.10 = $488load_global.8 * mean_ith_distances
DEBUG:numba.core.ssa:on stmt: $494compare_op.11 = $486binary_subscr.7 < $492binary_multiply.10
DEBUG:numba.core.ssa:on stmt: bool496 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $496pred = call bool496($494compare_op.11, func=bool496, args=(Var($494compare_op.11, umap_.py:247),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $496pred, 498, 510
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 498
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: $498load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $502binary_multiply.3 = $498load_global.1 * mean_ith_distances
DEBUG:numba.core.ssa:on stmt: result[i] = $502binary_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 510
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: jump 546
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 512
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.3 = getitem(value=result, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $518load_global.4 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $522binary_multiply.6 = $518load_global.4 * mean_distances
DEBUG:numba.core.ssa:on stmt: $524compare_op.7 = $516binary_subscr.3 < $522binary_multiply.6
DEBUG:numba.core.ssa:on stmt: bool528 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $528pred = call bool528($524compare_op.7, func=bool528, args=(Var($524compare_op.7, umap_.py:250),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $528pred, 530, 542
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 530
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: $530load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $534binary_multiply.3 = $530load_global.1 * mean_distances
DEBUG:numba.core.ssa:on stmt: result[i] = $534binary_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 542
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 542
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: jump 546
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 544
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: $548build_tuple.2 = build_tuple(items=[Var(result, umap_.py:193), Var(rho, umap_.py:192)])
DEBUG:numba.core.ssa:on stmt: $550return_value.3 = cast(value=$548build_tuple.2)
DEBUG:numba.core.ssa:on stmt: return $550return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 545
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: hi.3 = phi(incoming_values=[Var(hi.2, umap_.py:236), Var(hi.2, umap_.py:236), Var(hi.1, umap_.py:233)], incoming_blocks=[428, 438, 398])
DEBUG:numba.core.ssa:on stmt: lo.3 = phi(incoming_values=[Var(lo.1, umap_.py:236), Var(lo.1, umap_.py:236), Var(lo.2, umap_.py:233)], incoming_blocks=[428, 438, 398])
DEBUG:numba.core.ssa:on stmt: jump 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 546
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: jump 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 547
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB8B0>
DEBUG:numba.core.ssa:on stmt: jump 304
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {86: [<numba.core.ir.Assign object at 0x0000017AA40D6D70>],
             398: [<numba.core.ir.Assign object at 0x0000017A1F06E1A0>],
             428: [<numba.core.ir.Assign object at 0x0000017A1F06F2B0>],
             438: [<numba.core.ir.Assign object at 0x0000017A1F06DE70>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: distances = arg(0, name=distances)
DEBUG:numba.core.ssa:on stmt: k = arg(1, name=k)
DEBUG:numba.core.ssa:on stmt: n_iter = arg(2, name=n_iter)
DEBUG:numba.core.ssa:on stmt: local_connectivity = arg(3, name=local_connectivity)
DEBUG:numba.core.ssa:on stmt: bandwidth = arg(4, name=bandwidth)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $8call_method.3 = call $4load_method.1(k, func=$4load_method.1, args=[Var(k, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: target = $8call_method.3 * bandwidth
DEBUG:numba.core.ssa:on stmt: $16load_global.6 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $18load_attr.7 = getattr(value=$16load_global.6, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $22load_attr.9 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const24.10 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26binary_subscr.11 = static_getitem(value=$22load_attr.9, index=0, index_var=$const24.10, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $28load_global.12 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.13 = getattr(value=$28load_global.12, attr=float32)
DEBUG:numba.core.ssa:on stmt: rho = call $18load_attr.7($26binary_subscr.11, func=$18load_attr.7, args=[Var($26binary_subscr.11, umap_.py:192)], kws=[('dtype', Var($30load_attr.13, umap_.py:192))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $38load_global.16 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_attr.17 = getattr(value=$38load_global.16, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $44load_attr.19 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.20 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.21 = static_getitem(value=$44load_attr.19, index=0, index_var=$const46.20, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50load_global.22 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $52load_attr.23 = getattr(value=$50load_global.22, attr=float32)
DEBUG:numba.core.ssa:on stmt: result = call $40load_attr.17($48binary_subscr.21, func=$40load_attr.17, args=[Var($48binary_subscr.21, umap_.py:193)], kws=[('dtype', Var($52load_attr.23, umap_.py:193))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $60load_global.26 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $62load_method.27 = getattr(value=$60load_global.26, attr=mean)
DEBUG:numba.core.ssa:on stmt: mean_distances = call $62load_method.27(distances, func=$62load_method.27, args=[Var(distances, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $70load_global.30 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $74load_attr.32 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const76.33 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $78binary_subscr.34 = static_getitem(value=$74load_attr.32, index=0, index_var=$const76.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $80call_function.35 = call $70load_global.30($78binary_subscr.34, func=$70load_global.30, args=[Var($78binary_subscr.34, umap_.py:197)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $82get_iter.36 = getiter(value=$80call_function.35)
DEBUG:numba.core.ssa:on stmt: $phi84.0 = $82get_iter.36
DEBUG:numba.core.ssa:on stmt: jump 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $84for_iter.1 = iternext(value=$phi84.0)
DEBUG:numba.core.ssa:on stmt: $84for_iter.2 = pair_first(value=$84for_iter.1)
DEBUG:numba.core.ssa:on stmt: $84for_iter.3 = pair_second(value=$84for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi86.1 = $84for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $84for_iter.3, 86, 544
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: i = $phi86.1
DEBUG:numba.core.ssa:on stmt: lo = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: hi = global(NPY_INFINITY: inf)
DEBUG:numba.core.ssa:on stmt: mid = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: ith_distances = getitem(value=distances, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const112.10 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $114compare_op.11 = ith_distances > $const112.10
DEBUG:numba.core.ssa:on stmt: non_zero_dists = getitem(value=ith_distances, index=$114compare_op.11, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.14 = getattr(value=non_zero_dists, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const124.15 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $126binary_subscr.16 = static_getitem(value=$122load_attr.14, index=0, index_var=$const124.15, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $130compare_op.18 = $126binary_subscr.16 >= local_connectivity
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.18, func=bool132, args=(Var($130compare_op.18, umap_.py:205),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 244
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $134load_global.1 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $136load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.3 = getattr(value=$136load_global.2, attr=floor)
DEBUG:numba.core.ssa:on stmt: $142call_method.5 = call $138load_method.3(local_connectivity, func=$138load_method.3, args=[Var(local_connectivity, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: index = call $134load_global.1($142call_method.5, func=$134load_global.1, args=[Var($142call_method.5, umap_.py:206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: interpolation = local_connectivity - index
DEBUG:numba.core.ssa:on stmt: $const158.11 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $160compare_op.12 = index > $const158.11
DEBUG:numba.core.ssa:on stmt: bool162 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $162pred = call bool162($160compare_op.12, func=bool162, args=(Var($160compare_op.12, umap_.py:208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $162pred, 164, 226
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $const168.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.4 = index - $const168.3
DEBUG:numba.core.ssa:on stmt: $172binary_subscr.5 = getitem(value=non_zero_dists, index=$170binary_subtract.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: rho[i] = $172binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $182load_global.9 = global(SMOOTH_K_TOLERANCE: 1e-05)
DEBUG:numba.core.ssa:on stmt: $184compare_op.10 = interpolation > $182load_global.9
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.10, func=bool186, args=(Var($184compare_op.10, umap_.py:210),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.5 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $202binary_subscr.9 = getitem(value=non_zero_dists, index=index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const208.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $210binary_subtract.13 = index - $const208.12
DEBUG:numba.core.ssa:on stmt: $212binary_subscr.14 = getitem(value=non_zero_dists, index=$210binary_subtract.13, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $214binary_subtract.15 = $202binary_subscr.9 - $212binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.16 = interpolation * $214binary_subtract.15
DEBUG:numba.core.ssa:on stmt: $218inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$194binary_subscr.5, rhs=$216binary_multiply.16, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: rho[i] = $218inplace_add.17
DEBUG:numba.core.ssa:on stmt: jump 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 226
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $const230.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.4 = static_getitem(value=non_zero_dists, index=0, index_var=$const230.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234binary_multiply.5 = interpolation * $232binary_subscr.4
DEBUG:numba.core.ssa:on stmt: rho[i] = $234binary_multiply.5
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 244
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $246load_attr.2 = getattr(value=non_zero_dists, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const248.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.4 = static_getitem(value=$246load_attr.2, index=0, index_var=$const248.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const252.5 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $254compare_op.6 = $250binary_subscr.4 > $const252.5
DEBUG:numba.core.ssa:on stmt: bool256 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $256pred = call bool256($254compare_op.6, func=bool256, args=(Var($254compare_op.6, umap_.py:216),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $256pred, 258, 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 258
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $258load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $260load_method.2 = getattr(value=$258load_global.1, attr=max)
DEBUG:numba.core.ssa:on stmt: $264call_method.4 = call $260load_method.2(non_zero_dists, func=$260load_method.2, args=[Var(non_zero_dists, umap_.py:204)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: rho[i] = $264call_method.4
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $272load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $276call_function.3 = call $272load_global.1(n_iter, func=$272load_global.1, args=[Var(n_iter, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $278get_iter.4 = getiter(value=$276call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi280.1 = $278get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: hi.2 = phi(incoming_values=[Var(hi, umap_.py:199), Var(hi.3, umap_.py:236)], incoming_blocks=[272, 545])
DEBUG:numba.core.ssa:on stmt: lo.2 = phi(incoming_values=[Var(lo, umap_.py:198), Var(lo.3, umap_.py:233)], incoming_blocks=[272, 545])
DEBUG:numba.core.ssa:on stmt: $280for_iter.2 = iternext(value=$phi280.1)
DEBUG:numba.core.ssa:on stmt: $280for_iter.3 = pair_first(value=$280for_iter.2)
DEBUG:numba.core.ssa:on stmt: $280for_iter.4 = pair_second(value=$280for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi282.2 = $280for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $280for_iter.4, 282, 452
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: n = $phi282.2
DEBUG:numba.core.ssa:on stmt: psum = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $288load_global.4 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const290.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $294load_attr.7 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const296.8 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $298binary_subscr.9 = static_getitem(value=$294load_attr.7, index=1, index_var=$const296.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $300call_function.10 = call $288load_global.4($const290.5, $298binary_subscr.9, func=$288load_global.4, args=[Var($const290.5, umap_.py:222), Var($298binary_subscr.9, umap_.py:222)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $302get_iter.11 = getiter(value=$300call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi304.2 = $302get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 304
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 304
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $304for_iter.3 = iternext(value=$phi304.2)
DEBUG:numba.core.ssa:on stmt: $304for_iter.4 = pair_first(value=$304for_iter.3)
DEBUG:numba.core.ssa:on stmt: $304for_iter.5 = pair_second(value=$304for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi306.3 = $304for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $304for_iter.5, 306, 368
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 306
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: j = $phi306.3
DEBUG:numba.core.ssa:on stmt: $314build_tuple.7 = build_tuple(items=[Var(i, umap_.py:197), Var(j, umap_.py:222)])
DEBUG:numba.core.ssa:on stmt: $316binary_subscr.8 = getitem(value=distances, index=$314build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $322binary_subscr.11 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: d = $316binary_subscr.8 - $322binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $const330.14 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $332compare_op.15 = d > $const330.14
DEBUG:numba.core.ssa:on stmt: bool334 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $334pred = call bool334($332compare_op.15, func=bool334, args=(Var($332compare_op.15, umap_.py:224),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $334pred, 336, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 336
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $338load_global.4 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $340load_method.5 = getattr(value=$338load_global.4, attr=exp)
DEBUG:numba.core.ssa:on stmt: $346binary_true_divide.8 = d / mid
DEBUG:numba.core.ssa:find_def var='mid' stmt=$346binary_true_divide.8 = d / mid
DEBUG:numba.core.ssa:find_def_from_top label 336
DEBUG:numba.core.ssa:idom 306 from label 336
DEBUG:numba.core.ssa:find_def_from_bottom label 306
DEBUG:numba.core.ssa:find_def_from_top label 306
DEBUG:numba.core.ssa:idom 304 from label 306
DEBUG:numba.core.ssa:find_def_from_bottom label 304
DEBUG:numba.core.ssa:find_def_from_top label 304
DEBUG:numba.core.ssa:idom 282 from label 304
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:find_def_from_top label 282
DEBUG:numba.core.ssa:idom 280 from label 282
DEBUG:numba.core.ssa:find_def_from_bottom label 280
DEBUG:numba.core.ssa:find_def_from_top label 280
DEBUG:numba.core.ssa:insert phi node mid.4 = phi(incoming_values=[], incoming_blocks=[]) at 280
DEBUG:numba.core.ssa:find_def_from_bottom label 272
DEBUG:numba.core.ssa:find_def_from_top label 272
DEBUG:numba.core.ssa:idom 86 from label 272
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:incoming_def mid = const(float, 1.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 545
DEBUG:numba.core.ssa:find_def_from_top label 545
DEBUG:numba.core.ssa:insert phi node mid.5 = phi(incoming_values=[], incoming_blocks=[]) at 545
DEBUG:numba.core.ssa:find_def_from_bottom label 428
DEBUG:numba.core.ssa:incoming_def mid.2 = $432inplace_multiply.4
DEBUG:numba.core.ssa:find_def_from_bottom label 438
DEBUG:numba.core.ssa:incoming_def mid.3 = $442binary_add.4 / $const444.5
DEBUG:numba.core.ssa:find_def_from_bottom label 398
DEBUG:numba.core.ssa:incoming_def mid.1 = $406binary_add.5 / $const408.6
DEBUG:numba.core.ssa:incoming_def mid.5 = phi(incoming_values=[Var(mid.2, umap_.py:238), Var(mid.3, umap_.py:240), Var(mid.1, umap_.py:234)], incoming_blocks=[428, 438, 398])
DEBUG:numba.core.ssa:replaced with: $346binary_true_divide.8 = d / mid.4
DEBUG:numba.core.ssa:on stmt: $348unary_negative.9 = unary(fn=<built-in function neg>, value=$346binary_true_divide.8)
DEBUG:numba.core.ssa:on stmt: $350call_method.10 = call $340load_method.5($348unary_negative.9, func=$340load_method.5, args=[Var($348unary_negative.9, umap_.py:225)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $352inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$350call_method.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: psum = $352inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 547
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $const360.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $362inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$const360.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: psum = $362inplace_add.5
DEBUG:numba.core.ssa:on stmt: jump 547
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 368
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $368load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $370load_method.3 = getattr(value=$368load_global.2, attr=fabs)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.6 = psum - target
DEBUG:numba.core.ssa:on stmt: $378call_method.7 = call $370load_method.3($376binary_subtract.6, func=$370load_method.3, args=[Var($376binary_subtract.6, umap_.py:229)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $380load_global.8 = global(SMOOTH_K_TOLERANCE: 1e-05)
DEBUG:numba.core.ssa:on stmt: $382compare_op.9 = $378call_method.7 < $380load_global.8
DEBUG:numba.core.ssa:on stmt: bool384 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $384pred = call bool384($382compare_op.9, func=bool384, args=(Var($382compare_op.9, umap_.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $384pred, 386, 390
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 386
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 452
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 390
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $394compare_op.4 = psum > target
DEBUG:numba.core.ssa:on stmt: bool396 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $396pred = call bool396($394compare_op.4, func=bool396, args=(Var($394compare_op.4, umap_.py:232),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $396pred, 398, 416
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 398
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: hi.1 = mid
DEBUG:numba.core.ssa:find_def var='mid' stmt=hi.1 = mid
DEBUG:numba.core.ssa:find_def_from_top label 398
DEBUG:numba.core.ssa:idom 390 from label 398
DEBUG:numba.core.ssa:find_def_from_bottom label 390
DEBUG:numba.core.ssa:find_def_from_top label 390
DEBUG:numba.core.ssa:idom 368 from label 390
DEBUG:numba.core.ssa:find_def_from_bottom label 368
DEBUG:numba.core.ssa:find_def_from_top label 368
DEBUG:numba.core.ssa:idom 304 from label 368
DEBUG:numba.core.ssa:find_def_from_bottom label 304
DEBUG:numba.core.ssa:find_def_from_top label 304
DEBUG:numba.core.ssa:idom 282 from label 304
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:find_def_from_top label 282
DEBUG:numba.core.ssa:idom 280 from label 282
DEBUG:numba.core.ssa:find_def_from_bottom label 280
DEBUG:numba.core.ssa:replaced with: hi.1 = mid.4
DEBUG:numba.core.ssa:on stmt: $406binary_add.5 = lo.2 + hi.1
DEBUG:numba.core.ssa:on stmt: $const408.6 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: mid.1 = $406binary_add.5 / $const408.6
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 416
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: lo.1 = mid
DEBUG:numba.core.ssa:find_def var='mid' stmt=lo.1 = mid
DEBUG:numba.core.ssa:find_def_from_top label 416
DEBUG:numba.core.ssa:idom 390 from label 416
DEBUG:numba.core.ssa:find_def_from_bottom label 390
DEBUG:numba.core.ssa:find_def_from_top label 390
DEBUG:numba.core.ssa:idom 368 from label 390
DEBUG:numba.core.ssa:find_def_from_bottom label 368
DEBUG:numba.core.ssa:find_def_from_top label 368
DEBUG:numba.core.ssa:idom 304 from label 368
DEBUG:numba.core.ssa:find_def_from_bottom label 304
DEBUG:numba.core.ssa:find_def_from_top label 304
DEBUG:numba.core.ssa:idom 282 from label 304
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:find_def_from_top label 282
DEBUG:numba.core.ssa:idom 280 from label 282
DEBUG:numba.core.ssa:find_def_from_bottom label 280
DEBUG:numba.core.ssa:replaced with: lo.1 = mid.4
DEBUG:numba.core.ssa:on stmt: $422load_global.4 = global(NPY_INFINITY: inf)
DEBUG:numba.core.ssa:on stmt: $424compare_op.5 = hi.2 == $422load_global.4
DEBUG:numba.core.ssa:on stmt: bool426 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $426pred = call bool426($424compare_op.5, func=bool426, args=(Var($424compare_op.5, umap_.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $426pred, 428, 438
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 428
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $const430.3 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $432inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid, rhs=$const430.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='mid' stmt=$432inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid, rhs=$const430.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 428
DEBUG:numba.core.ssa:idom 416 from label 428
DEBUG:numba.core.ssa:find_def_from_bottom label 416
DEBUG:numba.core.ssa:find_def_from_top label 416
DEBUG:numba.core.ssa:idom 390 from label 416
DEBUG:numba.core.ssa:find_def_from_bottom label 390
DEBUG:numba.core.ssa:find_def_from_top label 390
DEBUG:numba.core.ssa:idom 368 from label 390
DEBUG:numba.core.ssa:find_def_from_bottom label 368
DEBUG:numba.core.ssa:find_def_from_top label 368
DEBUG:numba.core.ssa:idom 304 from label 368
DEBUG:numba.core.ssa:find_def_from_bottom label 304
DEBUG:numba.core.ssa:find_def_from_top label 304
DEBUG:numba.core.ssa:idom 282 from label 304
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:find_def_from_top label 282
DEBUG:numba.core.ssa:idom 280 from label 282
DEBUG:numba.core.ssa:find_def_from_bottom label 280
DEBUG:numba.core.ssa:replaced with: $432inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid.4, rhs=$const430.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: mid.2 = $432inplace_multiply.4
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 438
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $442binary_add.4 = lo.1 + hi.2
DEBUG:numba.core.ssa:on stmt: $const444.5 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: mid.3 = $442binary_add.4 / $const444.5
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: result[i] = mid
DEBUG:numba.core.ssa:find_def var='mid' stmt=result[i] = mid
DEBUG:numba.core.ssa:find_def_from_top label 452
DEBUG:numba.core.ssa:idom 280 from label 452
DEBUG:numba.core.ssa:find_def_from_bottom label 280
DEBUG:numba.core.ssa:replaced with: result[i] = mid.4
DEBUG:numba.core.ssa:on stmt: $464binary_subscr.6 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const466.7 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $468compare_op.8 = $464binary_subscr.6 > $const466.7
DEBUG:numba.core.ssa:on stmt: bool470 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $470pred = call bool470($468compare_op.8, func=bool470, args=(Var($468compare_op.8, umap_.py:245),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $470pred, 472, 512
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 472
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $472load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $474load_method.2 = getattr(value=$472load_global.1, attr=mean)
DEBUG:numba.core.ssa:on stmt: mean_ith_distances = call $474load_method.2(ith_distances, func=$474load_method.2, args=[Var(ith_distances, umap_.py:203)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $486binary_subscr.7 = getitem(value=result, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $488load_global.8 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $492binary_multiply.10 = $488load_global.8 * mean_ith_distances
DEBUG:numba.core.ssa:on stmt: $494compare_op.11 = $486binary_subscr.7 < $492binary_multiply.10
DEBUG:numba.core.ssa:on stmt: bool496 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $496pred = call bool496($494compare_op.11, func=bool496, args=(Var($494compare_op.11, umap_.py:247),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $496pred, 498, 510
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 498
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $498load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $502binary_multiply.3 = $498load_global.1 * mean_ith_distances
DEBUG:numba.core.ssa:on stmt: result[i] = $502binary_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 510
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 546
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 512
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.3 = getitem(value=result, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $518load_global.4 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $522binary_multiply.6 = $518load_global.4 * mean_distances
DEBUG:numba.core.ssa:on stmt: $524compare_op.7 = $516binary_subscr.3 < $522binary_multiply.6
DEBUG:numba.core.ssa:on stmt: bool528 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $528pred = call bool528($524compare_op.7, func=bool528, args=(Var($524compare_op.7, umap_.py:250),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $528pred, 530, 542
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 530
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $530load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $534binary_multiply.3 = $530load_global.1 * mean_distances
DEBUG:numba.core.ssa:on stmt: result[i] = $534binary_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 542
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 542
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 546
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 544
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $548build_tuple.2 = build_tuple(items=[Var(result, umap_.py:193), Var(rho, umap_.py:192)])
DEBUG:numba.core.ssa:on stmt: $550return_value.3 = cast(value=$548build_tuple.2)
DEBUG:numba.core.ssa:on stmt: return $550return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 545
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: hi.3 = phi(incoming_values=[Var(hi.2, umap_.py:236), Var(hi.2, umap_.py:236), Var(hi.1, umap_.py:233)], incoming_blocks=[428, 438, 398])
DEBUG:numba.core.ssa:on stmt: lo.3 = phi(incoming_values=[Var(lo.1, umap_.py:236), Var(lo.1, umap_.py:236), Var(lo.2, umap_.py:233)], incoming_blocks=[428, 438, 398])
DEBUG:numba.core.ssa:on stmt: jump 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 546
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 547
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 304
DEBUG:numba.core.ssa:Fix SSA violator on var psum
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: distances = arg(0, name=distances)
DEBUG:numba.core.ssa:on stmt: k = arg(1, name=k)
DEBUG:numba.core.ssa:on stmt: n_iter = arg(2, name=n_iter)
DEBUG:numba.core.ssa:on stmt: local_connectivity = arg(3, name=local_connectivity)
DEBUG:numba.core.ssa:on stmt: bandwidth = arg(4, name=bandwidth)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $8call_method.3 = call $4load_method.1(k, func=$4load_method.1, args=[Var(k, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: target = $8call_method.3 * bandwidth
DEBUG:numba.core.ssa:on stmt: $16load_global.6 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $18load_attr.7 = getattr(value=$16load_global.6, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $22load_attr.9 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const24.10 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26binary_subscr.11 = static_getitem(value=$22load_attr.9, index=0, index_var=$const24.10, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $28load_global.12 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.13 = getattr(value=$28load_global.12, attr=float32)
DEBUG:numba.core.ssa:on stmt: rho = call $18load_attr.7($26binary_subscr.11, func=$18load_attr.7, args=[Var($26binary_subscr.11, umap_.py:192)], kws=[('dtype', Var($30load_attr.13, umap_.py:192))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $38load_global.16 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_attr.17 = getattr(value=$38load_global.16, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $44load_attr.19 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.20 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.21 = static_getitem(value=$44load_attr.19, index=0, index_var=$const46.20, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50load_global.22 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $52load_attr.23 = getattr(value=$50load_global.22, attr=float32)
DEBUG:numba.core.ssa:on stmt: result = call $40load_attr.17($48binary_subscr.21, func=$40load_attr.17, args=[Var($48binary_subscr.21, umap_.py:193)], kws=[('dtype', Var($52load_attr.23, umap_.py:193))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $60load_global.26 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $62load_method.27 = getattr(value=$60load_global.26, attr=mean)
DEBUG:numba.core.ssa:on stmt: mean_distances = call $62load_method.27(distances, func=$62load_method.27, args=[Var(distances, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $70load_global.30 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $74load_attr.32 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const76.33 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $78binary_subscr.34 = static_getitem(value=$74load_attr.32, index=0, index_var=$const76.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $80call_function.35 = call $70load_global.30($78binary_subscr.34, func=$70load_global.30, args=[Var($78binary_subscr.34, umap_.py:197)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $82get_iter.36 = getiter(value=$80call_function.35)
DEBUG:numba.core.ssa:on stmt: $phi84.0 = $82get_iter.36
DEBUG:numba.core.ssa:on stmt: jump 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: $84for_iter.1 = iternext(value=$phi84.0)
DEBUG:numba.core.ssa:on stmt: $84for_iter.2 = pair_first(value=$84for_iter.1)
DEBUG:numba.core.ssa:on stmt: $84for_iter.3 = pair_second(value=$84for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi86.1 = $84for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $84for_iter.3, 86, 544
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: i = $phi86.1
DEBUG:numba.core.ssa:on stmt: lo = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: hi = global(NPY_INFINITY: inf)
DEBUG:numba.core.ssa:on stmt: mid = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: ith_distances = getitem(value=distances, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const112.10 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $114compare_op.11 = ith_distances > $const112.10
DEBUG:numba.core.ssa:on stmt: non_zero_dists = getitem(value=ith_distances, index=$114compare_op.11, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.14 = getattr(value=non_zero_dists, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const124.15 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $126binary_subscr.16 = static_getitem(value=$122load_attr.14, index=0, index_var=$const124.15, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $130compare_op.18 = $126binary_subscr.16 >= local_connectivity
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.18, func=bool132, args=(Var($130compare_op.18, umap_.py:205),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 244
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: $134load_global.1 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $136load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.3 = getattr(value=$136load_global.2, attr=floor)
DEBUG:numba.core.ssa:on stmt: $142call_method.5 = call $138load_method.3(local_connectivity, func=$138load_method.3, args=[Var(local_connectivity, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: index = call $134load_global.1($142call_method.5, func=$134load_global.1, args=[Var($142call_method.5, umap_.py:206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: interpolation = local_connectivity - index
DEBUG:numba.core.ssa:on stmt: $const158.11 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $160compare_op.12 = index > $const158.11
DEBUG:numba.core.ssa:on stmt: bool162 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $162pred = call bool162($160compare_op.12, func=bool162, args=(Var($160compare_op.12, umap_.py:208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $162pred, 164, 226
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: $const168.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.4 = index - $const168.3
DEBUG:numba.core.ssa:on stmt: $172binary_subscr.5 = getitem(value=non_zero_dists, index=$170binary_subtract.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: rho[i] = $172binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $182load_global.9 = global(SMOOTH_K_TOLERANCE: 1e-05)
DEBUG:numba.core.ssa:on stmt: $184compare_op.10 = interpolation > $182load_global.9
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.10, func=bool186, args=(Var($184compare_op.10, umap_.py:210),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.5 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $202binary_subscr.9 = getitem(value=non_zero_dists, index=index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const208.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $210binary_subtract.13 = index - $const208.12
DEBUG:numba.core.ssa:on stmt: $212binary_subscr.14 = getitem(value=non_zero_dists, index=$210binary_subtract.13, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $214binary_subtract.15 = $202binary_subscr.9 - $212binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.16 = interpolation * $214binary_subtract.15
DEBUG:numba.core.ssa:on stmt: $218inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$194binary_subscr.5, rhs=$216binary_multiply.16, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: rho[i] = $218inplace_add.17
DEBUG:numba.core.ssa:on stmt: jump 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 226
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: $const230.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.4 = static_getitem(value=non_zero_dists, index=0, index_var=$const230.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234binary_multiply.5 = interpolation * $232binary_subscr.4
DEBUG:numba.core.ssa:on stmt: rho[i] = $234binary_multiply.5
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 244
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: $246load_attr.2 = getattr(value=non_zero_dists, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const248.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.4 = static_getitem(value=$246load_attr.2, index=0, index_var=$const248.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const252.5 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $254compare_op.6 = $250binary_subscr.4 > $const252.5
DEBUG:numba.core.ssa:on stmt: bool256 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $256pred = call bool256($254compare_op.6, func=bool256, args=(Var($254compare_op.6, umap_.py:216),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $256pred, 258, 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 258
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: $258load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $260load_method.2 = getattr(value=$258load_global.1, attr=max)
DEBUG:numba.core.ssa:on stmt: $264call_method.4 = call $260load_method.2(non_zero_dists, func=$260load_method.2, args=[Var(non_zero_dists, umap_.py:204)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: rho[i] = $264call_method.4
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: $272load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $276call_function.3 = call $272load_global.1(n_iter, func=$272load_global.1, args=[Var(n_iter, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $278get_iter.4 = getiter(value=$276call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi280.1 = $278get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: mid.4 = phi(incoming_values=[Var(mid, umap_.py:200), Var(mid.5, umap_.py:225)], incoming_blocks=[272, 545])
DEBUG:numba.core.ssa:on stmt: hi.2 = phi(incoming_values=[Var(hi, umap_.py:199), Var(hi.3, umap_.py:236)], incoming_blocks=[272, 545])
DEBUG:numba.core.ssa:on stmt: lo.2 = phi(incoming_values=[Var(lo, umap_.py:198), Var(lo.3, umap_.py:233)], incoming_blocks=[272, 545])
DEBUG:numba.core.ssa:on stmt: $280for_iter.2 = iternext(value=$phi280.1)
DEBUG:numba.core.ssa:on stmt: $280for_iter.3 = pair_first(value=$280for_iter.2)
DEBUG:numba.core.ssa:on stmt: $280for_iter.4 = pair_second(value=$280for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi282.2 = $280for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $280for_iter.4, 282, 452
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: n = $phi282.2
DEBUG:numba.core.ssa:on stmt: psum = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: psum
DEBUG:numba.core.ssa:replaced with: psum = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $288load_global.4 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const290.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $294load_attr.7 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const296.8 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $298binary_subscr.9 = static_getitem(value=$294load_attr.7, index=1, index_var=$const296.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $300call_function.10 = call $288load_global.4($const290.5, $298binary_subscr.9, func=$288load_global.4, args=[Var($const290.5, umap_.py:222), Var($298binary_subscr.9, umap_.py:222)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $302get_iter.11 = getiter(value=$300call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi304.2 = $302get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 304
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 304
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: $304for_iter.3 = iternext(value=$phi304.2)
DEBUG:numba.core.ssa:on stmt: $304for_iter.4 = pair_first(value=$304for_iter.3)
DEBUG:numba.core.ssa:on stmt: $304for_iter.5 = pair_second(value=$304for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi306.3 = $304for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $304for_iter.5, 306, 368
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 306
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: j = $phi306.3
DEBUG:numba.core.ssa:on stmt: $314build_tuple.7 = build_tuple(items=[Var(i, umap_.py:197), Var(j, umap_.py:222)])
DEBUG:numba.core.ssa:on stmt: $316binary_subscr.8 = getitem(value=distances, index=$314build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $322binary_subscr.11 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: d = $316binary_subscr.8 - $322binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $const330.14 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $332compare_op.15 = d > $const330.14
DEBUG:numba.core.ssa:on stmt: bool334 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $334pred = call bool334($332compare_op.15, func=bool334, args=(Var($332compare_op.15, umap_.py:224),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $334pred, 336, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 336
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: $338load_global.4 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $340load_method.5 = getattr(value=$338load_global.4, attr=exp)
DEBUG:numba.core.ssa:on stmt: $346binary_true_divide.8 = d / mid.4
DEBUG:numba.core.ssa:on stmt: $348unary_negative.9 = unary(fn=<built-in function neg>, value=$346binary_true_divide.8)
DEBUG:numba.core.ssa:on stmt: $350call_method.10 = call $340load_method.5($348unary_negative.9, func=$340load_method.5, args=[Var($348unary_negative.9, umap_.py:225)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $352inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$350call_method.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: psum = $352inplace_add.11
DEBUG:numba.core.ssa:replaced with: psum.1 = $352inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 547
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: $const360.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $362inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$const360.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: psum = $362inplace_add.5
DEBUG:numba.core.ssa:replaced with: psum.2 = $362inplace_add.5
DEBUG:numba.core.ssa:on stmt: jump 547
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 368
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: $368load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $370load_method.3 = getattr(value=$368load_global.2, attr=fabs)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.6 = psum - target
DEBUG:numba.core.ssa:on stmt: $378call_method.7 = call $370load_method.3($376binary_subtract.6, func=$370load_method.3, args=[Var($376binary_subtract.6, umap_.py:229)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $380load_global.8 = global(SMOOTH_K_TOLERANCE: 1e-05)
DEBUG:numba.core.ssa:on stmt: $382compare_op.9 = $378call_method.7 < $380load_global.8
DEBUG:numba.core.ssa:on stmt: bool384 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $384pred = call bool384($382compare_op.9, func=bool384, args=(Var($382compare_op.9, umap_.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $384pred, 386, 390
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 386
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: jump 452
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 390
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: $394compare_op.4 = psum > target
DEBUG:numba.core.ssa:on stmt: bool396 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $396pred = call bool396($394compare_op.4, func=bool396, args=(Var($394compare_op.4, umap_.py:232),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $396pred, 398, 416
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 398
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: hi.1 = mid.4
DEBUG:numba.core.ssa:on stmt: $406binary_add.5 = lo.2 + hi.1
DEBUG:numba.core.ssa:on stmt: $const408.6 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: mid.1 = $406binary_add.5 / $const408.6
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 416
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: lo.1 = mid.4
DEBUG:numba.core.ssa:on stmt: $422load_global.4 = global(NPY_INFINITY: inf)
DEBUG:numba.core.ssa:on stmt: $424compare_op.5 = hi.2 == $422load_global.4
DEBUG:numba.core.ssa:on stmt: bool426 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $426pred = call bool426($424compare_op.5, func=bool426, args=(Var($424compare_op.5, umap_.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $426pred, 428, 438
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 428
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: $const430.3 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $432inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid.4, rhs=$const430.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: mid.2 = $432inplace_multiply.4
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 438
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: $442binary_add.4 = lo.1 + hi.2
DEBUG:numba.core.ssa:on stmt: $const444.5 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: mid.3 = $442binary_add.4 / $const444.5
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: result[i] = mid.4
DEBUG:numba.core.ssa:on stmt: $464binary_subscr.6 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const466.7 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $468compare_op.8 = $464binary_subscr.6 > $const466.7
DEBUG:numba.core.ssa:on stmt: bool470 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $470pred = call bool470($468compare_op.8, func=bool470, args=(Var($468compare_op.8, umap_.py:245),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $470pred, 472, 512
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 472
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: $472load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $474load_method.2 = getattr(value=$472load_global.1, attr=mean)
DEBUG:numba.core.ssa:on stmt: mean_ith_distances = call $474load_method.2(ith_distances, func=$474load_method.2, args=[Var(ith_distances, umap_.py:203)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $486binary_subscr.7 = getitem(value=result, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $488load_global.8 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $492binary_multiply.10 = $488load_global.8 * mean_ith_distances
DEBUG:numba.core.ssa:on stmt: $494compare_op.11 = $486binary_subscr.7 < $492binary_multiply.10
DEBUG:numba.core.ssa:on stmt: bool496 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $496pred = call bool496($494compare_op.11, func=bool496, args=(Var($494compare_op.11, umap_.py:247),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $496pred, 498, 510
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 498
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: $498load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $502binary_multiply.3 = $498load_global.1 * mean_ith_distances
DEBUG:numba.core.ssa:on stmt: result[i] = $502binary_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 510
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: jump 546
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 512
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.3 = getitem(value=result, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $518load_global.4 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $522binary_multiply.6 = $518load_global.4 * mean_distances
DEBUG:numba.core.ssa:on stmt: $524compare_op.7 = $516binary_subscr.3 < $522binary_multiply.6
DEBUG:numba.core.ssa:on stmt: bool528 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $528pred = call bool528($524compare_op.7, func=bool528, args=(Var($524compare_op.7, umap_.py:250),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $528pred, 530, 542
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 530
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: $530load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $534binary_multiply.3 = $530load_global.1 * mean_distances
DEBUG:numba.core.ssa:on stmt: result[i] = $534binary_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 542
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 542
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: jump 546
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 544
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: $548build_tuple.2 = build_tuple(items=[Var(result, umap_.py:193), Var(rho, umap_.py:192)])
DEBUG:numba.core.ssa:on stmt: $550return_value.3 = cast(value=$548build_tuple.2)
DEBUG:numba.core.ssa:on stmt: return $550return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 545
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: mid.5 = phi(incoming_values=[Var(mid.2, umap_.py:238), Var(mid.3, umap_.py:240), Var(mid.1, umap_.py:234)], incoming_blocks=[428, 438, 398])
DEBUG:numba.core.ssa:on stmt: hi.3 = phi(incoming_values=[Var(hi.2, umap_.py:236), Var(hi.2, umap_.py:236), Var(hi.1, umap_.py:233)], incoming_blocks=[428, 438, 398])
DEBUG:numba.core.ssa:on stmt: lo.3 = phi(incoming_values=[Var(lo.1, umap_.py:236), Var(lo.1, umap_.py:236), Var(lo.2, umap_.py:233)], incoming_blocks=[428, 438, 398])
DEBUG:numba.core.ssa:on stmt: jump 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 546
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: jump 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 547
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A1F06C460>
DEBUG:numba.core.ssa:on stmt: jump 304
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {282: [<numba.core.ir.Assign object at 0x0000017AA40D7EB0>],
             336: [<numba.core.ir.Assign object at 0x0000017AA40D6680>],
             358: [<numba.core.ir.Assign object at 0x0000017AA40D6EC0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: distances = arg(0, name=distances)
DEBUG:numba.core.ssa:on stmt: k = arg(1, name=k)
DEBUG:numba.core.ssa:on stmt: n_iter = arg(2, name=n_iter)
DEBUG:numba.core.ssa:on stmt: local_connectivity = arg(3, name=local_connectivity)
DEBUG:numba.core.ssa:on stmt: bandwidth = arg(4, name=bandwidth)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=log2)
DEBUG:numba.core.ssa:on stmt: $8call_method.3 = call $4load_method.1(k, func=$4load_method.1, args=[Var(k, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: target = $8call_method.3 * bandwidth
DEBUG:numba.core.ssa:on stmt: $16load_global.6 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $18load_attr.7 = getattr(value=$16load_global.6, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $22load_attr.9 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const24.10 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26binary_subscr.11 = static_getitem(value=$22load_attr.9, index=0, index_var=$const24.10, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $28load_global.12 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.13 = getattr(value=$28load_global.12, attr=float32)
DEBUG:numba.core.ssa:on stmt: rho = call $18load_attr.7($26binary_subscr.11, func=$18load_attr.7, args=[Var($26binary_subscr.11, umap_.py:192)], kws=[('dtype', Var($30load_attr.13, umap_.py:192))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $38load_global.16 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_attr.17 = getattr(value=$38load_global.16, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $44load_attr.19 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const46.20 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.21 = static_getitem(value=$44load_attr.19, index=0, index_var=$const46.20, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $50load_global.22 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $52load_attr.23 = getattr(value=$50load_global.22, attr=float32)
DEBUG:numba.core.ssa:on stmt: result = call $40load_attr.17($48binary_subscr.21, func=$40load_attr.17, args=[Var($48binary_subscr.21, umap_.py:193)], kws=[('dtype', Var($52load_attr.23, umap_.py:193))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $60load_global.26 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $62load_method.27 = getattr(value=$60load_global.26, attr=mean)
DEBUG:numba.core.ssa:on stmt: mean_distances = call $62load_method.27(distances, func=$62load_method.27, args=[Var(distances, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $70load_global.30 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $74load_attr.32 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const76.33 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $78binary_subscr.34 = static_getitem(value=$74load_attr.32, index=0, index_var=$const76.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $80call_function.35 = call $70load_global.30($78binary_subscr.34, func=$70load_global.30, args=[Var($78binary_subscr.34, umap_.py:197)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $82get_iter.36 = getiter(value=$80call_function.35)
DEBUG:numba.core.ssa:on stmt: $phi84.0 = $82get_iter.36
DEBUG:numba.core.ssa:on stmt: jump 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $84for_iter.1 = iternext(value=$phi84.0)
DEBUG:numba.core.ssa:on stmt: $84for_iter.2 = pair_first(value=$84for_iter.1)
DEBUG:numba.core.ssa:on stmt: $84for_iter.3 = pair_second(value=$84for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi86.1 = $84for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $84for_iter.3, 86, 544
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: i = $phi86.1
DEBUG:numba.core.ssa:on stmt: lo = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: hi = global(NPY_INFINITY: inf)
DEBUG:numba.core.ssa:on stmt: mid = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: ith_distances = getitem(value=distances, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const112.10 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $114compare_op.11 = ith_distances > $const112.10
DEBUG:numba.core.ssa:on stmt: non_zero_dists = getitem(value=ith_distances, index=$114compare_op.11, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.14 = getattr(value=non_zero_dists, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const124.15 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $126binary_subscr.16 = static_getitem(value=$122load_attr.14, index=0, index_var=$const124.15, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $130compare_op.18 = $126binary_subscr.16 >= local_connectivity
DEBUG:numba.core.ssa:on stmt: bool132 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $132pred = call bool132($130compare_op.18, func=bool132, args=(Var($130compare_op.18, umap_.py:205),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $132pred, 134, 244
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $134load_global.1 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $136load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $138load_method.3 = getattr(value=$136load_global.2, attr=floor)
DEBUG:numba.core.ssa:on stmt: $142call_method.5 = call $138load_method.3(local_connectivity, func=$138load_method.3, args=[Var(local_connectivity, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: index = call $134load_global.1($142call_method.5, func=$134load_global.1, args=[Var($142call_method.5, umap_.py:206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: interpolation = local_connectivity - index
DEBUG:numba.core.ssa:on stmt: $const158.11 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $160compare_op.12 = index > $const158.11
DEBUG:numba.core.ssa:on stmt: bool162 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $162pred = call bool162($160compare_op.12, func=bool162, args=(Var($160compare_op.12, umap_.py:208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $162pred, 164, 226
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $const168.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.4 = index - $const168.3
DEBUG:numba.core.ssa:on stmt: $172binary_subscr.5 = getitem(value=non_zero_dists, index=$170binary_subtract.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: rho[i] = $172binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $182load_global.9 = global(SMOOTH_K_TOLERANCE: 1e-05)
DEBUG:numba.core.ssa:on stmt: $184compare_op.10 = interpolation > $182load_global.9
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($184compare_op.10, func=bool186, args=(Var($184compare_op.10, umap_.py:210),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.5 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $202binary_subscr.9 = getitem(value=non_zero_dists, index=index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const208.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $210binary_subtract.13 = index - $const208.12
DEBUG:numba.core.ssa:on stmt: $212binary_subscr.14 = getitem(value=non_zero_dists, index=$210binary_subtract.13, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $214binary_subtract.15 = $202binary_subscr.9 - $212binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.16 = interpolation * $214binary_subtract.15
DEBUG:numba.core.ssa:on stmt: $218inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$194binary_subscr.5, rhs=$216binary_multiply.16, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: rho[i] = $218inplace_add.17
DEBUG:numba.core.ssa:on stmt: jump 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 226
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $const230.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.4 = static_getitem(value=non_zero_dists, index=0, index_var=$const230.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234binary_multiply.5 = interpolation * $232binary_subscr.4
DEBUG:numba.core.ssa:on stmt: rho[i] = $234binary_multiply.5
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 244
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $246load_attr.2 = getattr(value=non_zero_dists, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const248.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.4 = static_getitem(value=$246load_attr.2, index=0, index_var=$const248.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const252.5 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $254compare_op.6 = $250binary_subscr.4 > $const252.5
DEBUG:numba.core.ssa:on stmt: bool256 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $256pred = call bool256($254compare_op.6, func=bool256, args=(Var($254compare_op.6, umap_.py:216),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $256pred, 258, 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 258
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $258load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $260load_method.2 = getattr(value=$258load_global.1, attr=max)
DEBUG:numba.core.ssa:on stmt: $264call_method.4 = call $260load_method.2(non_zero_dists, func=$260load_method.2, args=[Var(non_zero_dists, umap_.py:204)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: rho[i] = $264call_method.4
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $272load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $276call_function.3 = call $272load_global.1(n_iter, func=$272load_global.1, args=[Var(n_iter, umap_.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $278get_iter.4 = getiter(value=$276call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi280.1 = $278get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: mid.4 = phi(incoming_values=[Var(mid, umap_.py:200), Var(mid.5, umap_.py:225)], incoming_blocks=[272, 545])
DEBUG:numba.core.ssa:on stmt: hi.2 = phi(incoming_values=[Var(hi, umap_.py:199), Var(hi.3, umap_.py:236)], incoming_blocks=[272, 545])
DEBUG:numba.core.ssa:on stmt: lo.2 = phi(incoming_values=[Var(lo, umap_.py:198), Var(lo.3, umap_.py:233)], incoming_blocks=[272, 545])
DEBUG:numba.core.ssa:on stmt: $280for_iter.2 = iternext(value=$phi280.1)
DEBUG:numba.core.ssa:on stmt: $280for_iter.3 = pair_first(value=$280for_iter.2)
DEBUG:numba.core.ssa:on stmt: $280for_iter.4 = pair_second(value=$280for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi282.2 = $280for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $280for_iter.4, 282, 452
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: n = $phi282.2
DEBUG:numba.core.ssa:on stmt: psum = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $288load_global.4 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const290.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $294load_attr.7 = getattr(value=distances, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const296.8 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $298binary_subscr.9 = static_getitem(value=$294load_attr.7, index=1, index_var=$const296.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $300call_function.10 = call $288load_global.4($const290.5, $298binary_subscr.9, func=$288load_global.4, args=[Var($const290.5, umap_.py:222), Var($298binary_subscr.9, umap_.py:222)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $302get_iter.11 = getiter(value=$300call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi304.2 = $302get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 304
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 304
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $304for_iter.3 = iternext(value=$phi304.2)
DEBUG:numba.core.ssa:on stmt: $304for_iter.4 = pair_first(value=$304for_iter.3)
DEBUG:numba.core.ssa:on stmt: $304for_iter.5 = pair_second(value=$304for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi306.3 = $304for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $304for_iter.5, 306, 368
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 306
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: j = $phi306.3
DEBUG:numba.core.ssa:on stmt: $314build_tuple.7 = build_tuple(items=[Var(i, umap_.py:197), Var(j, umap_.py:222)])
DEBUG:numba.core.ssa:on stmt: $316binary_subscr.8 = getitem(value=distances, index=$314build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $322binary_subscr.11 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: d = $316binary_subscr.8 - $322binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $const330.14 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $332compare_op.15 = d > $const330.14
DEBUG:numba.core.ssa:on stmt: bool334 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $334pred = call bool334($332compare_op.15, func=bool334, args=(Var($332compare_op.15, umap_.py:224),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $334pred, 336, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 336
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $338load_global.4 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $340load_method.5 = getattr(value=$338load_global.4, attr=exp)
DEBUG:numba.core.ssa:on stmt: $346binary_true_divide.8 = d / mid.4
DEBUG:numba.core.ssa:on stmt: $348unary_negative.9 = unary(fn=<built-in function neg>, value=$346binary_true_divide.8)
DEBUG:numba.core.ssa:on stmt: $350call_method.10 = call $340load_method.5($348unary_negative.9, func=$340load_method.5, args=[Var($348unary_negative.9, umap_.py:225)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $352inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$350call_method.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='psum' stmt=$352inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$350call_method.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 336
DEBUG:numba.core.ssa:idom 306 from label 336
DEBUG:numba.core.ssa:find_def_from_bottom label 306
DEBUG:numba.core.ssa:find_def_from_top label 306
DEBUG:numba.core.ssa:idom 304 from label 306
DEBUG:numba.core.ssa:find_def_from_bottom label 304
DEBUG:numba.core.ssa:find_def_from_top label 304
DEBUG:numba.core.ssa:insert phi node psum.3 = phi(incoming_values=[], incoming_blocks=[]) at 304
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:incoming_def psum = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 547
DEBUG:numba.core.ssa:find_def_from_top label 547
DEBUG:numba.core.ssa:insert phi node psum.4 = phi(incoming_values=[], incoming_blocks=[]) at 547
DEBUG:numba.core.ssa:find_def_from_bottom label 336
DEBUG:numba.core.ssa:incoming_def psum.1 = $352inplace_add.11
DEBUG:numba.core.ssa:find_def_from_bottom label 358
DEBUG:numba.core.ssa:incoming_def psum.2 = $362inplace_add.5
DEBUG:numba.core.ssa:incoming_def psum.4 = phi(incoming_values=[Var(psum.1, umap_.py:225), Var(psum.2, umap_.py:227)], incoming_blocks=[336, 358])
DEBUG:numba.core.ssa:replaced with: $352inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum.3, rhs=$350call_method.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: psum.1 = $352inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 547
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $const360.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $362inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$const360.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='psum' stmt=$362inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$const360.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 358
DEBUG:numba.core.ssa:idom 306 from label 358
DEBUG:numba.core.ssa:find_def_from_bottom label 306
DEBUG:numba.core.ssa:find_def_from_top label 306
DEBUG:numba.core.ssa:idom 304 from label 306
DEBUG:numba.core.ssa:find_def_from_bottom label 304
DEBUG:numba.core.ssa:replaced with: $362inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum.3, rhs=$const360.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: psum.2 = $362inplace_add.5
DEBUG:numba.core.ssa:on stmt: jump 547
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 368
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $368load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $370load_method.3 = getattr(value=$368load_global.2, attr=fabs)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.6 = psum - target
DEBUG:numba.core.ssa:find_def var='psum' stmt=$376binary_subtract.6 = psum - target
DEBUG:numba.core.ssa:find_def_from_top label 368
DEBUG:numba.core.ssa:idom 304 from label 368
DEBUG:numba.core.ssa:find_def_from_bottom label 304
DEBUG:numba.core.ssa:replaced with: $376binary_subtract.6 = psum.3 - target
DEBUG:numba.core.ssa:on stmt: $378call_method.7 = call $370load_method.3($376binary_subtract.6, func=$370load_method.3, args=[Var($376binary_subtract.6, umap_.py:229)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $380load_global.8 = global(SMOOTH_K_TOLERANCE: 1e-05)
DEBUG:numba.core.ssa:on stmt: $382compare_op.9 = $378call_method.7 < $380load_global.8
DEBUG:numba.core.ssa:on stmt: bool384 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $384pred = call bool384($382compare_op.9, func=bool384, args=(Var($382compare_op.9, umap_.py:229),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $384pred, 386, 390
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 386
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 452
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 390
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $394compare_op.4 = psum > target
DEBUG:numba.core.ssa:find_def var='psum' stmt=$394compare_op.4 = psum > target
DEBUG:numba.core.ssa:find_def_from_top label 390
DEBUG:numba.core.ssa:idom 368 from label 390
DEBUG:numba.core.ssa:find_def_from_bottom label 368
DEBUG:numba.core.ssa:find_def_from_top label 368
DEBUG:numba.core.ssa:idom 304 from label 368
DEBUG:numba.core.ssa:find_def_from_bottom label 304
DEBUG:numba.core.ssa:replaced with: $394compare_op.4 = psum.3 > target
DEBUG:numba.core.ssa:on stmt: bool396 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $396pred = call bool396($394compare_op.4, func=bool396, args=(Var($394compare_op.4, umap_.py:232),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $396pred, 398, 416
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 398
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: hi.1 = mid.4
DEBUG:numba.core.ssa:on stmt: $406binary_add.5 = lo.2 + hi.1
DEBUG:numba.core.ssa:on stmt: $const408.6 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: mid.1 = $406binary_add.5 / $const408.6
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 416
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: lo.1 = mid.4
DEBUG:numba.core.ssa:on stmt: $422load_global.4 = global(NPY_INFINITY: inf)
DEBUG:numba.core.ssa:on stmt: $424compare_op.5 = hi.2 == $422load_global.4
DEBUG:numba.core.ssa:on stmt: bool426 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $426pred = call bool426($424compare_op.5, func=bool426, args=(Var($424compare_op.5, umap_.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $426pred, 428, 438
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 428
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $const430.3 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $432inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid.4, rhs=$const430.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: mid.2 = $432inplace_multiply.4
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 438
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $442binary_add.4 = lo.1 + hi.2
DEBUG:numba.core.ssa:on stmt: $const444.5 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: mid.3 = $442binary_add.4 / $const444.5
DEBUG:numba.core.ssa:on stmt: jump 545
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: result[i] = mid.4
DEBUG:numba.core.ssa:on stmt: $464binary_subscr.6 = getitem(value=rho, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const466.7 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $468compare_op.8 = $464binary_subscr.6 > $const466.7
DEBUG:numba.core.ssa:on stmt: bool470 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $470pred = call bool470($468compare_op.8, func=bool470, args=(Var($468compare_op.8, umap_.py:245),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $470pred, 472, 512
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 472
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $472load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $474load_method.2 = getattr(value=$472load_global.1, attr=mean)
DEBUG:numba.core.ssa:on stmt: mean_ith_distances = call $474load_method.2(ith_distances, func=$474load_method.2, args=[Var(ith_distances, umap_.py:203)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $486binary_subscr.7 = getitem(value=result, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $488load_global.8 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $492binary_multiply.10 = $488load_global.8 * mean_ith_distances
DEBUG:numba.core.ssa:on stmt: $494compare_op.11 = $486binary_subscr.7 < $492binary_multiply.10
DEBUG:numba.core.ssa:on stmt: bool496 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $496pred = call bool496($494compare_op.11, func=bool496, args=(Var($494compare_op.11, umap_.py:247),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $496pred, 498, 510
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 498
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $498load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $502binary_multiply.3 = $498load_global.1 * mean_ith_distances
DEBUG:numba.core.ssa:on stmt: result[i] = $502binary_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 510
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 546
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 512
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.3 = getitem(value=result, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $518load_global.4 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $522binary_multiply.6 = $518load_global.4 * mean_distances
DEBUG:numba.core.ssa:on stmt: $524compare_op.7 = $516binary_subscr.3 < $522binary_multiply.6
DEBUG:numba.core.ssa:on stmt: bool528 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $528pred = call bool528($524compare_op.7, func=bool528, args=(Var($524compare_op.7, umap_.py:250),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $528pred, 530, 542
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 530
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $530load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
DEBUG:numba.core.ssa:on stmt: $534binary_multiply.3 = $530load_global.1 * mean_distances
DEBUG:numba.core.ssa:on stmt: result[i] = $534binary_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 542
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 542
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 546
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 544
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: $548build_tuple.2 = build_tuple(items=[Var(result, umap_.py:193), Var(rho, umap_.py:192)])
DEBUG:numba.core.ssa:on stmt: $550return_value.3 = cast(value=$548build_tuple.2)
DEBUG:numba.core.ssa:on stmt: return $550return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 545
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: mid.5 = phi(incoming_values=[Var(mid.2, umap_.py:238), Var(mid.3, umap_.py:240), Var(mid.1, umap_.py:234)], incoming_blocks=[428, 438, 398])
DEBUG:numba.core.ssa:on stmt: hi.3 = phi(incoming_values=[Var(hi.2, umap_.py:236), Var(hi.2, umap_.py:236), Var(hi.1, umap_.py:233)], incoming_blocks=[428, 438, 398])
DEBUG:numba.core.ssa:on stmt: lo.3 = phi(incoming_values=[Var(lo.1, umap_.py:236), Var(lo.1, umap_.py:236), Var(lo.2, umap_.py:233)], incoming_blocks=[428, 438, 398])
DEBUG:numba.core.ssa:on stmt: jump 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 546
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 84
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 547
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40EB910>
DEBUG:numba.core.ssa:on stmt: jump 304
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4456)
           2	LOAD_GLOBAL(arg=0, lineno=4457)
           4	LOAD_ATTR(arg=1, lineno=4457)
           6	LOAD_FAST(arg=0, lineno=4457)
           8	LOAD_FAST(arg=1, lineno=4457)
          10	LOAD_CONST(arg=1, lineno=4457)
          12	CALL_FUNCTION_KW(arg=2, lineno=4457)
          14	STORE_FAST(arg=2, lineno=4457)
          16	LOAD_FAST(arg=2, lineno=4458)
          18	LOAD_METHOD(arg=2, lineno=4458)
          20	CALL_METHOD(arg=0, lineno=4458)
          22	POP_TOP(arg=None, lineno=4458)
          24	LOAD_FAST(arg=2, lineno=4459)
          26	RETURN_VALUE(arg=None, lineno=4459)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4456)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4457)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=4457)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4457)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=4457)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$shape6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=4457)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$shape6.2', '$dtype8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=CALL_FUNCTION_KW(arg=2, lineno=4457)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$shape6.2', '$dtype8.3', '$const10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=STORE_FAST(arg=2, lineno=4457)
DEBUG:numba.core.byteflow:stack ['$12call_function_kw.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=4458)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=4458)
DEBUG:numba.core.byteflow:stack ['$arr16.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=CALL_METHOD(arg=0, lineno=4458)
DEBUG:numba.core.byteflow:stack ['$18load_method.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=POP_TOP(arg=None, lineno=4458)
DEBUG:numba.core.byteflow:stack ['$20call_method.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=4459)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=4459)
DEBUG:numba.core.byteflow:stack ['$arr24.9']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$shape6.2'}), (8, {'res': '$dtype8.3'}), (10, {'res': '$const10.4'}), (12, {'func': '$4load_attr.1', 'args': ['$shape6.2', '$dtype8.3'], 'names': '$const10.4', 'res': '$12call_function_kw.5'}), (14, {'value': '$12call_function_kw.5'}), (16, {'res': '$arr16.6'}), (18, {'item': '$arr16.6', 'res': '$18load_method.7'}), (20, {'func': '$18load_method.7', 'args': [], 'res': '$20call_method.8'}), (24, {'res': '$arr24.9'}), (26, {'retval': '$arr24.9', 'castval': '$26return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4456)], kws=[('dtype', Var(dtype, arrayobj.py:4456))], vararg=None, varkwarg=None, target=None) ['$4load_attr.1', 'arr', 'dtype', 'shape']
    $18load_method.7 = getattr(value=arr, attr=_zero_fill) ['$18load_method.7', 'arr']
    $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.7', '$20call_method.8']
    $26return_value.10 = cast(value=arr)     ['$26return_value.10', 'arr']
    return $26return_value.10                ['$26return_value.10']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A0A0D49A0>
DEBUG:numba.core.ssa:on stmt: shape = arg(0, name=shape)
DEBUG:numba.core.ssa:on stmt: dtype = arg(1, name=dtype)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
DEBUG:numba.core.ssa:on stmt: arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4456)], kws=[('dtype', Var(dtype, arrayobj.py:4456))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $18load_method.7 = getattr(value=arr, attr=_zero_fill)
DEBUG:numba.core.ssa:on stmt: $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26return_value.10 = cast(value=arr)
DEBUG:numba.core.ssa:on stmt: return $26return_value.10
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$18load_method.7': [(<numba.core.ir.Assign object at 0x0000017A0A0D60B0>,
                                   0)],
             '$20call_method.8': [(<numba.core.ir.Assign object at 0x0000017A0A0D62C0>,
                                   0)],
             '$26return_value.10': [(<numba.core.ir.Assign object at 0x0000017A0A0D64D0>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x0000017A0A0D41C0>,
                                  0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x0000017A0A0D5750>,
                                0)],
             'arr': [(<numba.core.ir.Assign object at 0x0000017A0A0D5E10>, 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x0000017A0A0D5240>,
                        0)],
             'shape': [(<numba.core.ir.Assign object at 0x0000017A0A0D4CD0>,
                        0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017A0A0D49A0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4388)
           2	LOAD_GLOBAL(arg=0, lineno=4389)
           4	LOAD_FAST(arg=0, lineno=4389)
           6	LOAD_FAST(arg=1, lineno=4389)
           8	LOAD_DEREF(arg=0, lineno=4389)
          10	CALL_FUNCTION(arg=3, lineno=4389)
          12	RETURN_VALUE(arg=None, lineno=4389)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4388)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4389)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$shape4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$10call_function.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(float32, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($8load_deref.3, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A0A0D4820>
DEBUG:numba.core.ssa:on stmt: shape = arg(0, name=shape)
DEBUG:numba.core.ssa:on stmt: dtype = arg(1, name=dtype)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
DEBUG:numba.core.ssa:on stmt: $8load_deref.3 = freevar(retty: array(float32, 1d, C))
DEBUG:numba.core.ssa:on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($8load_deref.3, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $12return_value.5 = cast(value=$10call_function.4)
DEBUG:numba.core.ssa:on stmt: return $12return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x0000017A0A0C9DE0>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x0000017A0A0C9F00>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x0000017A0A0C9840>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x0000017A0A0C9C00>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x0000017A0A0C86D0>,
                        0)],
             'shape': [(<numba.core.ir.Assign object at 0x0000017A0A0C8D00>,
                        0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017A0A0D4820>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4447)
           2	LOAD_GLOBAL(arg=0, lineno=4448)
           4	LOAD_FAST(arg=0, lineno=4448)
           6	CALL_FUNCTION(arg=1, lineno=4448)
           8	POP_TOP(arg=None, lineno=4448)
          10	LOAD_CONST(arg=0, lineno=4448)
          12	RETURN_VALUE(arg=None, lineno=4448)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4447)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4448)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4448)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=4448)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$self4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=POP_TOP(arg=None, lineno=4448)
DEBUG:numba.core.byteflow:stack ['$6call_function.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=0, lineno=4448)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4448)
DEBUG:numba.core.byteflow:stack ['$const10.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$self4.1'}), (6, {'func': '$2load_global.0', 'args': ['$self4.1'], 'res': '$6call_function.2'}), (10, {'res': '$const10.3'}), (12, {'retval': '$const10.3', 'castval': '$12return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4447)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'self']
    $const10.3 = const(NoneType, None)       ['$const10.3']
    $12return_value.4 = cast(value=$const10.3) ['$12return_value.4', '$const10.3']
    return $12return_value.4                 ['$12return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A0A101EA0>
DEBUG:numba.core.ssa:on stmt: self = arg(0, name=self)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4447)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const10.3 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $12return_value.4 = cast(value=$const10.3)
DEBUG:numba.core.ssa:on stmt: return $12return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12return_value.4': [(<numba.core.ir.Assign object at 0x0000017A0A1025C0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x0000017A0A1016F0>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x0000017A0A101900>,
                                    0)],
             '$const10.3': [(<numba.core.ir.Assign object at 0x0000017A0A102440>,
                             0)],
             'self': [(<numba.core.ir.Assign object at 0x0000017A0A101C60>,
                       0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017A0A101EA0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	LOAD_DEREF(arg=0, lineno=440)
           4	STORE_FAST(arg=1, lineno=440)
           6	LOAD_GLOBAL(arg=0, lineno=441)
           8	LOAD_METHOD(arg=1, lineno=441)
          10	LOAD_FAST(arg=0, lineno=441)
          12	CALL_METHOD(arg=1, lineno=441)
          14	GET_ITER(arg=None, lineno=441)
>         16	FOR_ITER(arg=8, lineno=441)
          18	STORE_FAST(arg=2, lineno=441)
          20	LOAD_FAST(arg=1, lineno=442)
          22	LOAD_FAST(arg=2, lineno=442)
          24	LOAD_METHOD(arg=2, lineno=442)
          26	CALL_METHOD(arg=0, lineno=442)
          28	INPLACE_ADD(arg=None, lineno=442)
          30	STORE_FAST(arg=1, lineno=442)
          32	JUMP_ABSOLUTE(arg=9, lineno=442)
>         34	LOAD_FAST(arg=1, lineno=443)
          36	LOAD_FAST(arg=0, lineno=443)
          38	LOAD_ATTR(arg=3, lineno=443)
          40	BINARY_TRUE_DIVIDE(arg=None, lineno=443)
          42	RETURN_VALUE(arg=None, lineno=443)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=437)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_DEREF(arg=0, lineno=440)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack ['$2load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=441)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_METHOD(arg=1, lineno=441)
DEBUG:numba.core.byteflow:stack ['$6load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=441)
DEBUG:numba.core.byteflow:stack ['$8load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=CALL_METHOD(arg=1, lineno=441)
DEBUG:numba.core.byteflow:stack ['$8load_method.2', '$a10.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=GET_ITER(arg=None, lineno=441)
DEBUG:numba.core.byteflow:stack ['$12call_method.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=('$14get_iter.5',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi16.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=16 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=16, inst=FOR_ITER(arg=8, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi16.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=34, stack=(), blockstack=(), npush=0), Edge(pc=18, stack=('$phi16.0', '$16for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=18 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=34 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=443)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=443)
DEBUG:numba.core.byteflow:stack ['$c34.0']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_ATTR(arg=3, lineno=443)
DEBUG:numba.core.byteflow:stack ['$c34.0', '$a36.1']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=443)
DEBUG:numba.core.byteflow:stack ['$c34.0', '$38load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=443)
DEBUG:numba.core.byteflow:stack ['$40binary_true_divide.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=18 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi18.0', '$phi18.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=18 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=2, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$phi18.1']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=442)
DEBUG:numba.core.byteflow:stack ['$phi18.0']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=2, lineno=442)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$c20.2']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_METHOD(arg=2, lineno=442)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$c20.2', '$v22.3']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL_METHOD(arg=0, lineno=442)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$c20.2', '$24load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=INPLACE_ADD(arg=None, lineno=442)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$c20.2', '$26call_method.5']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_FAST(arg=1, lineno=442)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$28inplace_add.6']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=JUMP_ABSOLUTE(arg=9, lineno=442)
DEBUG:numba.core.byteflow:stack ['$phi18.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=('$phi18.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=18 nstack_initial=2): {'$phi18.1'},
             State(pc_initial=34 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi16.0': State(pc_initial=0 nstack_initial=0),
 '$phi18.1': State(pc_initial=16 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2))},
             '$phi18.0': {('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi16.0': {('$14get_iter.5', State(pc_initial=0 nstack_initial=0))},
 '$phi18.1': {('$16for_iter.2', State(pc_initial=16 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi16.0': '$14get_iter.5'},
             State(pc_initial=16 nstack_initial=1): {'$phi18.1': '$16for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'value': '$2load_deref.0'}), (6, {'res': '$6load_global.1'}), (8, {'item': '$6load_global.1', 'res': '$8load_method.2'}), (10, {'res': '$a10.3'}), (12, {'func': '$8load_method.2', 'args': ['$a10.3'], 'res': '$12call_method.4'}), (14, {'value': '$12call_method.4', 'res': '$14get_iter.5'})), outgoing_phis={'$phi16.0': '$14get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$14get_iter.5',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'iterator': '$phi16.0', 'pair': '$16for_iter.1', 'indval': '$16for_iter.2', 'pred': '$16for_iter.3'}),), outgoing_phis={'$phi18.1': '$16for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: (), 18: ('$phi16.0', '$16for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=18 nstack_initial=2):
AdaptBlockInfo(insts=((18, {'value': '$phi18.1'}), (20, {'res': '$c20.2'}), (22, {'res': '$v22.3'}), (24, {'item': '$v22.3', 'res': '$24load_method.4'}), (26, {'func': '$24load_method.4', 'args': [], 'res': '$26call_method.5'}), (28, {'lhs': '$c20.2', 'rhs': '$26call_method.5', 'res': '$28inplace_add.6'}), (30, {'value': '$28inplace_add.6'}), (32, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$phi18.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$c34.0'}), (36, {'res': '$a36.1'}), (38, {'item': '$a36.1', 'res': '$38load_attr.2'}), (40, {'lhs': '$c34.0', 'rhs': '$38load_attr.2', 'res': '$40binary_true_divide.3'}), (42, {'retval': '$40binary_true_divide.3', 'castval': '$42return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $6load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$6load_global.1']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    jump 16                                  []
label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
label 18:
    v = $phi18.1                             ['$phi18.1', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    jump 16                                  []
label 34:
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A0A18A9B0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:on stmt: $6load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
DEBUG:numba.core.ssa:on stmt: $phi16.0 = $14get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block analysis pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A0A18A9B0>
DEBUG:numba.core.ssa:on stmt: $16for_iter.1 = iternext(value=$phi16.0)
DEBUG:numba.core.ssa:on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi18.1 = $16for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $16for_iter.3, 18, 34
DEBUG:numba.core.ssa:==== SSA block analysis pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A0A18A9B0>
DEBUG:numba.core.ssa:on stmt: v = $phi18.1
DEBUG:numba.core.ssa:on stmt: $24load_method.4 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c = $28inplace_add.6
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A0A18A9B0>
DEBUG:numba.core.ssa:on stmt: $38load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $40binary_true_divide.3 = c / $38load_attr.2
DEBUG:numba.core.ssa:on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
DEBUG:numba.core.ssa:on stmt: return $42return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12call_method.4': [(<numba.core.ir.Assign object at 0x0000017A0A16BEE0>,
                                   0)],
             '$14get_iter.5': [(<numba.core.ir.Assign object at 0x0000017A0A16BFD0>,
                                0)],
             '$16for_iter.1': [(<numba.core.ir.Assign object at 0x0000017A0A1882E0>,
                                16)],
             '$16for_iter.2': [(<numba.core.ir.Assign object at 0x0000017A0A188400>,
                                16)],
             '$16for_iter.3': [(<numba.core.ir.Assign object at 0x0000017A0A188520>,
                                16)],
             '$24load_method.4': [(<numba.core.ir.Assign object at 0x0000017A0A188BB0>,
                                   18)],
             '$26call_method.5': [(<numba.core.ir.Assign object at 0x0000017A0A188DC0>,
                                   18)],
             '$28inplace_add.6': [(<numba.core.ir.Assign object at 0x0000017A0A188EE0>,
                                   18)],
             '$38load_attr.2': [(<numba.core.ir.Assign object at 0x0000017A0A1893F0>,
                                 34)],
             '$40binary_true_divide.3': [(<numba.core.ir.Assign object at 0x0000017A0A1895A0>,
                                          34)],
             '$42return_value.4': [(<numba.core.ir.Assign object at 0x0000017A0A1896F0>,
                                    34)],
             '$6load_global.1': [(<numba.core.ir.Assign object at 0x0000017A0A16BA30>,
                                  0)],
             '$8load_method.2': [(<numba.core.ir.Assign object at 0x0000017A0A16BBB0>,
                                  0)],
             '$phi16.0': [(<numba.core.ir.Assign object at 0x0000017A0A16B940>,
                           0)],
             '$phi18.1': [(<numba.core.ir.Assign object at 0x0000017A0A188220>,
                           16)],
             'a': [(<numba.core.ir.Assign object at 0x0000017A0A16B610>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x0000017A0A16B790>, 0),
                   (<numba.core.ir.Assign object at 0x0000017A0A188FA0>, 18)],
             'v': [(<numba.core.ir.Assign object at 0x0000017A0A1887F0>, 18)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017A0A18A9B0>
DEBUG:numba.core.ssa:Fix SSA violator on var c
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A18A830>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:first assign: c
DEBUG:numba.core.ssa:replaced with: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:on stmt: $6load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
DEBUG:numba.core.ssa:on stmt: $phi16.0 = $14get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A18A830>
DEBUG:numba.core.ssa:on stmt: $16for_iter.1 = iternext(value=$phi16.0)
DEBUG:numba.core.ssa:on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi18.1 = $16for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $16for_iter.3, 18, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A18A830>
DEBUG:numba.core.ssa:on stmt: v = $phi18.1
DEBUG:numba.core.ssa:on stmt: $24load_method.4 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c = $28inplace_add.6
DEBUG:numba.core.ssa:replaced with: c.1 = $28inplace_add.6
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A18A830>
DEBUG:numba.core.ssa:on stmt: $38load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $40binary_true_divide.3 = c / $38load_attr.2
DEBUG:numba.core.ssa:on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
DEBUG:numba.core.ssa:on stmt: return $42return_value.4
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000017A0A18A7D0>],
             18: [<numba.core.ir.Assign object at 0x0000017A0A18AC80>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A0A18A830>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:on stmt: $6load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
DEBUG:numba.core.ssa:on stmt: $phi16.0 = $14get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A0A18A830>
DEBUG:numba.core.ssa:on stmt: $16for_iter.1 = iternext(value=$phi16.0)
DEBUG:numba.core.ssa:on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi18.1 = $16for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $16for_iter.3, 18, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A0A18A830>
DEBUG:numba.core.ssa:on stmt: v = $phi18.1
DEBUG:numba.core.ssa:on stmt: $24load_method.4 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='c' stmt=$28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 18
DEBUG:numba.core.ssa:idom 16 from label 18
DEBUG:numba.core.ssa:find_def_from_bottom label 16
DEBUG:numba.core.ssa:find_def_from_top label 16
DEBUG:numba.core.ssa:insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 16
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 18
DEBUG:numba.core.ssa:incoming_def c.1 = $28inplace_add.6
DEBUG:numba.core.ssa:replaced with: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c.1 = $28inplace_add.6
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017A0A18A830>
DEBUG:numba.core.ssa:on stmt: $38load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $40binary_true_divide.3 = c / $38load_attr.2
DEBUG:numba.core.ssa:find_def var='c' stmt=$40binary_true_divide.3 = c / $38load_attr.2
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 16 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 16
DEBUG:numba.core.ssa:replaced with: $40binary_true_divide.3 = c.2 / $38load_attr.2
DEBUG:numba.core.ssa:on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
DEBUG:numba.core.ssa:on stmt: return $42return_value.4
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3535)
           2	LOAD_GLOBAL(arg=0, lineno=3536)
           4	LOAD_FAST(arg=0, lineno=3536)
           6	CALL_FUNCTION(arg=1, lineno=3536)
           8	STORE_FAST(arg=2, lineno=3536)
          10	LOAD_GLOBAL(arg=1, lineno=3537)
          12	LOAD_FAST(arg=2, lineno=3537)
          14	CALL_FUNCTION(arg=1, lineno=3537)
          16	GET_ITER(arg=None, lineno=3537)
>         18	FOR_ITER(arg=20, lineno=3537)
          20	STORE_FAST(arg=3, lineno=3537)
          22	LOAD_FAST(arg=0, lineno=3538)
          24	LOAD_FAST(arg=3, lineno=3538)
          26	BINARY_SUBSCR(arg=None, lineno=3538)
          28	LOAD_FAST(arg=1, lineno=3538)
          30	LOAD_GLOBAL(arg=0, lineno=3538)
          32	LOAD_FAST(arg=1, lineno=3538)
          34	CALL_FUNCTION(arg=1, lineno=3538)
          36	LOAD_FAST(arg=2, lineno=3538)
          38	BINARY_SUBTRACT(arg=None, lineno=3538)
          40	LOAD_FAST(arg=3, lineno=3538)
          42	BINARY_ADD(arg=None, lineno=3538)
          44	BINARY_SUBSCR(arg=None, lineno=3538)
          46	COMPARE_OP(arg=3, lineno=3538)
          48	POP_JUMP_IF_FALSE(arg=30, lineno=3538)
          50	LOAD_GLOBAL(arg=2, lineno=3539)
          52	LOAD_CONST(arg=1, lineno=3539)
          54	CALL_FUNCTION(arg=1, lineno=3539)
          56	RAISE_VARARGS(arg=1, lineno=3539)
>         58	JUMP_ABSOLUTE(arg=10, lineno=3538)
>         60	LOAD_CONST(arg=0, lineno=3537)
          62	RETURN_VALUE(arg=None, lineno=3537)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3535)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3536)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=3536)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=3536)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$shape4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=2, lineno=3536)
DEBUG:numba.core.byteflow:stack ['$6call_function.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=3537)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=2, lineno=3537)
DEBUG:numba.core.byteflow:stack ['$10load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=3537)
DEBUG:numba.core.byteflow:stack ['$10load_global.3', '$n12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=GET_ITER(arg=None, lineno=3537)
DEBUG:numba.core.byteflow:stack ['$14call_function.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=18, stack=('$16get_iter.6',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=18 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi18.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=18 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=18, inst=FOR_ITER(arg=20, lineno=3537)
DEBUG:numba.core.byteflow:stack ['$phi18.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=('$phi18.0', '$18for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=20 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=60 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_CONST(arg=0, lineno=3537)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=62, inst=RETURN_VALUE(arg=None, lineno=3537)
DEBUG:numba.core.byteflow:stack ['$const60.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=20 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi20.0', '$phi20.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=20 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=20, inst=STORE_FAST(arg=3, lineno=3537)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$phi20.1']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=3538)
DEBUG:numba.core.byteflow:stack ['$phi20.0']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=3538)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$shape22.2']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=3538)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$shape22.2', '$i24.3']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=3538)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$26binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_GLOBAL(arg=0, lineno=3538)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=3538)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$30load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=CALL_FUNCTION(arg=1, lineno=3538)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$30load_global.6', '$main_shape32.7']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=3538)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$34call_function.8']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BINARY_SUBTRACT(arg=None, lineno=3538)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$34call_function.8', '$n36.9']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=3, lineno=3538)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$38binary_subtract.10']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BINARY_ADD(arg=None, lineno=3538)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$38binary_subtract.10', '$i40.11']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=3538)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$42binary_add.12']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=COMPARE_OP(arg=3, lineno=3538)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$26binary_subscr.4', '$44binary_subscr.13']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=POP_JUMP_IF_FALSE(arg=30, lineno=3538)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$46compare_op.14']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=50, stack=('$phi20.0',), blockstack=(), npush=0), Edge(pc=58, stack=('$phi20.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=58 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi50.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=50 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_GLOBAL(arg=2, lineno=3539)
DEBUG:numba.core.byteflow:stack ['$phi50.0']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=3539)
DEBUG:numba.core.byteflow:stack ['$phi50.0', '$50load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=CALL_FUNCTION(arg=1, lineno=3539)
DEBUG:numba.core.byteflow:stack ['$phi50.0', '$50load_global.1', '$const52.2']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=3539)
DEBUG:numba.core.byteflow:stack ['$phi50.0', '$54call_function.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi58.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=58 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=58, inst=JUMP_ABSOLUTE(arg=10, lineno=3538)
DEBUG:numba.core.byteflow:stack ['$phi58.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=18, stack=('$phi58.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=18 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=1): {'$phi18.0'},
             State(pc_initial=20 nstack_initial=2): {'$phi20.1'},
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=58 nstack_initial=1): set(),
             State(pc_initial=60 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi18.0': State(pc_initial=0 nstack_initial=0),
 '$phi20.1': State(pc_initial=18 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi58.0', State(pc_initial=58 nstack_initial=1))},
             '$phi20.0': {('$phi18.0', State(pc_initial=18 nstack_initial=1))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi58.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi18.0': {('$16get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi20.1': {('$18for_iter.2', State(pc_initial=18 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi18.0': '$16get_iter.6'},
             State(pc_initial=18 nstack_initial=1): {'$phi20.1': '$18for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'func': '$2load_global.0', 'args': ['$shape4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'res': '$n12.4'}), (14, {'func': '$10load_global.3', 'args': ['$n12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5', 'res': '$16get_iter.6'})), outgoing_phis={'$phi18.0': '$16get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$16get_iter.6',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=18 nstack_initial=1):
AdaptBlockInfo(insts=((18, {'iterator': '$phi18.0', 'pair': '$18for_iter.1', 'indval': '$18for_iter.2', 'pred': '$18for_iter.3'}),), outgoing_phis={'$phi20.1': '$18for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 20: ('$phi18.0', '$18for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=20 nstack_initial=2):
AdaptBlockInfo(insts=((20, {'value': '$phi20.1'}), (22, {'res': '$shape22.2'}), (24, {'res': '$i24.3'}), (26, {'index': '$i24.3', 'target': '$shape22.2', 'res': '$26binary_subscr.4'}), (28, {'res': '$main_shape28.5'}), (30, {'res': '$30load_global.6'}), (32, {'res': '$main_shape32.7'}), (34, {'func': '$30load_global.6', 'args': ['$main_shape32.7'], 'res': '$34call_function.8'}), (36, {'res': '$n36.9'}), (38, {'lhs': '$34call_function.8', 'rhs': '$n36.9', 'res': '$38binary_subtract.10'}), (40, {'res': '$i40.11'}), (42, {'lhs': '$38binary_subtract.10', 'rhs': '$i40.11', 'res': '$42binary_add.12'}), (44, {'index': '$42binary_add.12', 'target': '$main_shape28.5', 'res': '$44binary_subscr.13'}), (46, {'lhs': '$26binary_subscr.4', 'rhs': '$44binary_subscr.13', 'res': '$46compare_op.14'}), (48, {'pred': '$46compare_op.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi20.0',), 58: ('$phi20.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'res': '$50load_global.1'}), (52, {'res': '$const52.2'}), (54, {'func': '$50load_global.1', 'args': ['$const52.2'], 'res': '$54call_function.3'}), (56, {'exc': '$54call_function.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=1):
AdaptBlockInfo(insts=((58, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$phi58.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$const60.0'}), (62, {'retval': '$const60.0', 'castval': '$62return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    shape = arg(0, name=shape)               ['shape']
    main_shape = arg(1, name=main_shape)     ['main_shape']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    n = call $2load_global.0(shape, func=$2load_global.0, args=[Var(shape, arrayobj.py:3535)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'n', 'shape']
    $10load_global.3 = global(range: <class 'range'>) ['$10load_global.3']
    $14call_function.5 = call $10load_global.3(n, func=$10load_global.3, args=[Var(n, arrayobj.py:3536)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'n']
    $16get_iter.6 = getiter(value=$14call_function.5) ['$14call_function.5', '$16get_iter.6']
    $phi18.0 = $16get_iter.6                 ['$16get_iter.6', '$phi18.0']
    jump 18                                  []
label 18:
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    branch $18for_iter.3, 20, 60             ['$18for_iter.3']
label 20:
    i = $phi20.1                             ['$phi20.1', 'i']
    $26binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$26binary_subscr.4', 'i', 'shape']
    $30load_global.6 = global(len: <built-in function len>) ['$30load_global.6']
    $34call_function.8 = call $30load_global.6(main_shape, func=$30load_global.6, args=[Var(main_shape, arrayobj.py:3535)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.6', '$34call_function.8', 'main_shape']
    $38binary_subtract.10 = $34call_function.8 - n ['$34call_function.8', '$38binary_subtract.10', 'n']
    $42binary_add.12 = $38binary_subtract.10 + i ['$38binary_subtract.10', '$42binary_add.12', 'i']
    $44binary_subscr.13 = getitem(value=main_shape, index=$42binary_add.12, fn=<built-in function getitem>) ['$42binary_add.12', '$44binary_subscr.13', 'main_shape']
    $46compare_op.14 = $26binary_subscr.4 != $44binary_subscr.13 ['$26binary_subscr.4', '$44binary_subscr.13', '$46compare_op.14']
    bool48 = global(bool: <class 'bool'>)    ['bool48']
    $48pred = call bool48($46compare_op.14, func=bool48, args=(Var($46compare_op.14, arrayobj.py:3538),), kws=(), vararg=None, varkwarg=None, target=None) ['$46compare_op.14', '$48pred', 'bool48']
    branch $48pred, 50, 58                   ['$48pred']
label 50:
    $50load_global.1 = global(ValueError: <class 'ValueError'>) ['$50load_global.1']
    $const52.2 = const(str, nditer(): operands could not be broadcast together) ['$const52.2']
    $54call_function.3 = call $50load_global.1($const52.2, func=$50load_global.1, args=[Var($const52.2, arrayobj.py:3539)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.1', '$54call_function.3', '$const52.2']
    raise $54call_function.3                 ['$54call_function.3']
label 58:
    jump 18                                  []
label 60:
    $const60.0 = const(NoneType, None)       ['$const60.0']
    $62return_value.1 = cast(value=$const60.0) ['$62return_value.1', '$const60.0']
    return $62return_value.1                 ['$62return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA4390370>
DEBUG:numba.core.ssa:on stmt: shape = arg(0, name=shape)
DEBUG:numba.core.ssa:on stmt: main_shape = arg(1, name=main_shape)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: n = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $10load_global.3 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $14call_function.5 = call $10load_global.3(n, func=$10load_global.3, args=[Var(n, arrayobj.py:3536)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.6 = getiter(value=$14call_function.5)
DEBUG:numba.core.ssa:on stmt: $phi18.0 = $16get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block analysis pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA4390370>
DEBUG:numba.core.ssa:on stmt: $18for_iter.1 = iternext(value=$phi18.0)
DEBUG:numba.core.ssa:on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi20.1 = $18for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $18for_iter.3, 20, 60
DEBUG:numba.core.ssa:==== SSA block analysis pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA4390370>
DEBUG:numba.core.ssa:on stmt: i = $phi20.1
DEBUG:numba.core.ssa:on stmt: $26binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $30load_global.6 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $34call_function.8 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $38binary_subtract.10 = $34call_function.8 - n
DEBUG:numba.core.ssa:on stmt: $42binary_add.12 = $38binary_subtract.10 + i
DEBUG:numba.core.ssa:on stmt: $44binary_subscr.13 = getitem(value=main_shape, index=$42binary_add.12, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $46compare_op.14 = $26binary_subscr.4 != $44binary_subscr.13
DEBUG:numba.core.ssa:on stmt: bool48 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $48pred = call bool48($46compare_op.14, func=bool48, args=(Var($46compare_op.14, arrayobj.py:3538),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $48pred, 50, 58
DEBUG:numba.core.ssa:==== SSA block analysis pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA4390370>
DEBUG:numba.core.ssa:on stmt: $50load_global.1 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const52.2 = const(str, nditer(): operands could not be broadcast together)
DEBUG:numba.core.ssa:on stmt: $54call_function.3 = call $50load_global.1($const52.2, func=$50load_global.1, args=[Var($const52.2, arrayobj.py:3539)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('nditer(): operands could not be broadcast together')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA4390370>
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block analysis pass on 60
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA4390370>
DEBUG:numba.core.ssa:on stmt: $const60.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $62return_value.1 = cast(value=$const60.0)
DEBUG:numba.core.ssa:on stmt: return $62return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10load_global.3': [(<numba.core.ir.Assign object at 0x0000017AA4393D60>,
                                   0)],
             '$14call_function.5': [(<numba.core.ir.Assign object at 0x0000017AA43B40A0>,
                                     0)],
             '$16get_iter.6': [(<numba.core.ir.Assign object at 0x0000017AA43B41C0>,
                                0)],
             '$18for_iter.1': [(<numba.core.ir.Assign object at 0x0000017AA43B4430>,
                                18)],
             '$18for_iter.2': [(<numba.core.ir.Assign object at 0x0000017AA43B4550>,
                                18)],
             '$18for_iter.3': [(<numba.core.ir.Assign object at 0x0000017AA43B4670>,
                                18)],
             '$26binary_subscr.4': [(<numba.core.ir.Assign object at 0x0000017AA43B4D30>,
                                     20)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA4393820>,
                                  0)],
             '$30load_global.6': [(<numba.core.ir.Assign object at 0x0000017AA43B4FA0>,
                                   20)],
             '$34call_function.8': [(<numba.core.ir.Assign object at 0x0000017AA43B52A0>,
                                     20)],
             '$38binary_subtract.10': [(<numba.core.ir.Assign object at 0x0000017AA43B5510>,
                                        20)],
             '$42binary_add.12': [(<numba.core.ir.Assign object at 0x0000017AA43B57B0>,
                                   20)],
             '$44binary_subscr.13': [(<numba.core.ir.Assign object at 0x0000017AA43B5930>,
                                      20)],
             '$46compare_op.14': [(<numba.core.ir.Assign object at 0x0000017AA43B5AB0>,
                                   20)],
             '$48pred': [(<numba.core.ir.Assign object at 0x0000017AA43B5D20>,
                          20)],
             '$50load_global.1': [(<numba.core.ir.Assign object at 0x0000017AA43B5600>,
                                   50)],
             '$54call_function.3': [(<numba.core.ir.Assign object at 0x0000017AA4393250>,
                                     50)],
             '$62return_value.1': [(<numba.core.ir.Assign object at 0x0000017AA4392800>,
                                    60)],
             '$const52.2': [(<numba.core.ir.Assign object at 0x0000017AA4393430>,
                             50)],
             '$const60.0': [(<numba.core.ir.Assign object at 0x0000017AA4392980>,
                             60)],
             '$phi18.0': [(<numba.core.ir.Assign object at 0x0000017AA43939D0>,
                           0)],
             '$phi20.1': [(<numba.core.ir.Assign object at 0x0000017AA43B4370>,
                           18)],
             'bool48': [(<numba.core.ir.Assign object at 0x0000017AA43B5C00>,
                         20)],
             'i': [(<numba.core.ir.Assign object at 0x0000017AA43B4940>, 20)],
             'main_shape': [(<numba.core.ir.Assign object at 0x0000017AA43936A0>,
                             0)],
             'n': [(<numba.core.ir.Assign object at 0x0000017AA4393B20>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x0000017AA4393580>,
                        0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA4390370>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	LOAD_FAST(arg=0, lineno=571)
           4	LOAD_ATTR(arg=0, lineno=571)
           6	LOAD_CONST(arg=1, lineno=571)
           8	COMPARE_OP(arg=2, lineno=571)
          10	POP_JUMP_IF_FALSE(arg=11, lineno=571)
          12	LOAD_GLOBAL(arg=1, lineno=572)
          14	LOAD_CONST(arg=2, lineno=572)
          16	CALL_FUNCTION(arg=1, lineno=572)
          18	RAISE_VARARGS(arg=1, lineno=572)
>         20	LOAD_GLOBAL(arg=2, lineno=575)
          22	LOAD_METHOD(arg=3, lineno=575)
          24	LOAD_FAST(arg=0, lineno=575)
          26	CALL_METHOD(arg=1, lineno=575)
          28	STORE_FAST(arg=1, lineno=575)
          30	LOAD_GLOBAL(arg=4, lineno=576)
          32	LOAD_FAST(arg=1, lineno=576)
          34	CALL_FUNCTION(arg=1, lineno=576)
          36	LOAD_METHOD(arg=5, lineno=576)
          38	LOAD_CONST(arg=1, lineno=576)
          40	CALL_METHOD(arg=1, lineno=576)
          42	STORE_FAST(arg=2, lineno=576)
          44	LOAD_DEREF(arg=1, lineno=577)
          46	LOAD_FAST(arg=2, lineno=577)
          48	CALL_FUNCTION(arg=1, lineno=577)
          50	POP_JUMP_IF_FALSE(arg=29, lineno=577)
          52	LOAD_FAST(arg=2, lineno=578)
          54	RETURN_VALUE(arg=None, lineno=578)
>         56	LOAD_FAST(arg=1, lineno=580)
          58	GET_ITER(arg=None, lineno=580)
>         60	FOR_ITER(arg=21, lineno=580)
          62	STORE_FAST(arg=3, lineno=580)
          64	LOAD_FAST(arg=3, lineno=581)
          66	LOAD_METHOD(arg=6, lineno=581)
          68	CALL_METHOD(arg=0, lineno=581)
          70	STORE_FAST(arg=4, lineno=581)
          72	LOAD_DEREF(arg=1, lineno=582)
          74	LOAD_FAST(arg=4, lineno=582)
          76	CALL_FUNCTION(arg=1, lineno=582)
          78	POP_JUMP_IF_FALSE(arg=45, lineno=582)
          80	LOAD_FAST(arg=4, lineno=583)
          82	ROT_TWO(arg=None, lineno=583)
          84	POP_TOP(arg=None, lineno=583)
          86	RETURN_VALUE(arg=None, lineno=583)
>         88	LOAD_DEREF(arg=0, lineno=584)
          90	LOAD_FAST(arg=4, lineno=584)
          92	LOAD_FAST(arg=2, lineno=584)
          94	CALL_FUNCTION(arg=2, lineno=584)
          96	POP_JUMP_IF_FALSE(arg=52, lineno=584)
          98	LOAD_FAST(arg=4, lineno=585)
         100	STORE_FAST(arg=2, lineno=585)
>        102	JUMP_ABSOLUTE(arg=31, lineno=585)
>        104	LOAD_FAST(arg=2, lineno=586)
         106	RETURN_VALUE(arg=None, lineno=586)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=570)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=571)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=571)
DEBUG:numba.core.byteflow:stack ['$a2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=571)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=COMPARE_OP(arg=2, lineno=571)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$const6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=POP_JUMP_IF_FALSE(arg=11, lineno=571)
DEBUG:numba.core.byteflow:stack ['$8compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=12, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=12 nstack_initial=0), State(pc_initial=20 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=12 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=572)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=572)
DEBUG:numba.core.byteflow:stack ['$12load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=CALL_FUNCTION(arg=1, lineno=572)
DEBUG:numba.core.byteflow:stack ['$12load_global.0', '$const14.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=RAISE_VARARGS(arg=1, lineno=572)
DEBUG:numba.core.byteflow:stack ['$16call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=20 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=20 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=2, lineno=575)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_METHOD(arg=3, lineno=575)
DEBUG:numba.core.byteflow:stack ['$20load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=575)
DEBUG:numba.core.byteflow:stack ['$22load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$22load_method.1', '$a24.2']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=STORE_FAST(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$26call_method.3']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_GLOBAL(arg=4, lineno=576)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=576)
DEBUG:numba.core.byteflow:stack ['$30load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=CALL_FUNCTION(arg=1, lineno=576)
DEBUG:numba.core.byteflow:stack ['$30load_global.4', '$it32.5']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_METHOD(arg=5, lineno=576)
DEBUG:numba.core.byteflow:stack ['$34call_function.6']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=576)
DEBUG:numba.core.byteflow:stack ['$36load_method.7']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=CALL_METHOD(arg=1, lineno=576)
DEBUG:numba.core.byteflow:stack ['$36load_method.7', '$const38.8']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=STORE_FAST(arg=2, lineno=576)
DEBUG:numba.core.byteflow:stack ['$40call_method.9']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_DEREF(arg=1, lineno=577)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=2, lineno=577)
DEBUG:numba.core.byteflow:stack ['$44load_deref.10']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=CALL_FUNCTION(arg=1, lineno=577)
DEBUG:numba.core.byteflow:stack ['$44load_deref.10', '$max_value46.11']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=29, lineno=577)
DEBUG:numba.core.byteflow:stack ['$48call_function.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=52 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=2, lineno=578)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=578)
DEBUG:numba.core.byteflow:stack ['$max_value52.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=56 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=1, lineno=580)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=58, inst=GET_ITER(arg=None, lineno=580)
DEBUG:numba.core.byteflow:stack ['$it56.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=60, stack=('$58get_iter.1',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=60 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi60.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=60 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=60, inst=FOR_ITER(arg=21, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi60.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=62, stack=('$phi60.0', '$60for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=62 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=104 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=586)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=106, inst=RETURN_VALUE(arg=None, lineno=586)
DEBUG:numba.core.byteflow:stack ['$max_value104.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=62 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi62.0', '$phi62.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=62 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=62, inst=STORE_FAST(arg=3, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi62.0', '$phi62.1']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=3, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi62.0']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_METHOD(arg=6, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi62.0', '$view64.2']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=CALL_METHOD(arg=0, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi62.0', '$66load_method.3']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=STORE_FAST(arg=4, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi62.0', '$68call_method.4']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_DEREF(arg=1, lineno=582)
DEBUG:numba.core.byteflow:stack ['$phi62.0']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=4, lineno=582)
DEBUG:numba.core.byteflow:stack ['$phi62.0', '$72load_deref.5']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=CALL_FUNCTION(arg=1, lineno=582)
DEBUG:numba.core.byteflow:stack ['$phi62.0', '$72load_deref.5', '$v74.6']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=POP_JUMP_IF_FALSE(arg=45, lineno=582)
DEBUG:numba.core.byteflow:stack ['$phi62.0', '$76call_function.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=80, stack=('$phi62.0',), blockstack=(), npush=0), Edge(pc=88, stack=('$phi62.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=88 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi80.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=80 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=4, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi80.0']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=ROT_TWO(arg=None, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi80.0', '$v80.1']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=POP_TOP(arg=None, lineno=583)
DEBUG:numba.core.byteflow:stack ['$v80.1', '$phi80.0']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=RETURN_VALUE(arg=None, lineno=583)
DEBUG:numba.core.byteflow:stack ['$v80.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=88 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi88.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=88 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_DEREF(arg=0, lineno=584)
DEBUG:numba.core.byteflow:stack ['$phi88.0']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=4, lineno=584)
DEBUG:numba.core.byteflow:stack ['$phi88.0', '$88load_deref.1']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_FAST(arg=2, lineno=584)
DEBUG:numba.core.byteflow:stack ['$phi88.0', '$88load_deref.1', '$v90.2']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=CALL_FUNCTION(arg=2, lineno=584)
DEBUG:numba.core.byteflow:stack ['$phi88.0', '$88load_deref.1', '$v90.2', '$max_value92.3']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=52, lineno=584)
DEBUG:numba.core.byteflow:stack ['$phi88.0', '$94call_function.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=98, stack=('$phi88.0',), blockstack=(), npush=0), Edge(pc=102, stack=('$phi88.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=102 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi98.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=98 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=585)
DEBUG:numba.core.byteflow:stack ['$phi98.0']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=STORE_FAST(arg=2, lineno=585)
DEBUG:numba.core.byteflow:stack ['$phi98.0', '$v98.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=102, stack=('$phi98.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=1), State(pc_initial=102 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi102.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=102 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=102, inst=JUMP_ABSOLUTE(arg=31, lineno=585)
DEBUG:numba.core.byteflow:stack ['$phi102.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=60, stack=('$phi102.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=1), State(pc_initial=60 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=60 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=12 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=1): {'$phi60.0'},
             State(pc_initial=62 nstack_initial=2): {'$phi62.1'},
             State(pc_initial=80 nstack_initial=1): set(),
             State(pc_initial=88 nstack_initial=1): set(),
             State(pc_initial=98 nstack_initial=1): set(),
             State(pc_initial=102 nstack_initial=1): set(),
             State(pc_initial=104 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi60.0': State(pc_initial=56 nstack_initial=0),
 '$phi62.1': State(pc_initial=60 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi88.0', State(pc_initial=88 nstack_initial=1)),
                           ('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi102.0',
                           State(pc_initial=102 nstack_initial=1))},
             '$phi62.0': {('$phi60.0', State(pc_initial=60 nstack_initial=1))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi88.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi98.0': {('$phi88.0', State(pc_initial=88 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$58get_iter.1',
                            State(pc_initial=56 nstack_initial=0))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$58get_iter.1',
                            State(pc_initial=56 nstack_initial=0))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi60.0': {('$58get_iter.1', State(pc_initial=56 nstack_initial=0))},
 '$phi62.1': {('$60for_iter.2', State(pc_initial=60 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=56 nstack_initial=0): {'$phi60.0': '$58get_iter.1'},
             State(pc_initial=60 nstack_initial=1): {'$phi62.1': '$60for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'item': '$a2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$const6.2', 'res': '$8compare_op.3'}), (10, {'pred': '$8compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={12: (), 20: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=12 nstack_initial=0):
AdaptBlockInfo(insts=((12, {'res': '$12load_global.0'}), (14, {'res': '$const14.1'}), (16, {'func': '$12load_global.0', 'args': ['$const14.1'], 'res': '$16call_function.2'}), (18, {'exc': '$16call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$20load_global.0'}), (22, {'item': '$20load_global.0', 'res': '$22load_method.1'}), (24, {'res': '$a24.2'}), (26, {'func': '$22load_method.1', 'args': ['$a24.2'], 'res': '$26call_method.3'}), (28, {'value': '$26call_method.3'}), (30, {'res': '$30load_global.4'}), (32, {'res': '$it32.5'}), (34, {'func': '$30load_global.4', 'args': ['$it32.5'], 'res': '$34call_function.6'}), (36, {'item': '$34call_function.6', 'res': '$36load_method.7'}), (38, {'res': '$const38.8'}), (40, {'func': '$36load_method.7', 'args': ['$const38.8'], 'res': '$40call_method.9'}), (42, {'value': '$40call_method.9'}), (44, {'res': '$44load_deref.10'}), (46, {'res': '$max_value46.11'}), (48, {'func': '$44load_deref.10', 'args': ['$max_value46.11'], 'res': '$48call_function.12'}), (50, {'pred': '$48call_function.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 56: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$max_value52.0'}), (54, {'retval': '$max_value52.0', 'castval': '$54return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'res': '$it56.0'}), (58, {'value': '$it56.0', 'res': '$58get_iter.1'})), outgoing_phis={'$phi60.0': '$58get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$58get_iter.1',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=60 nstack_initial=1):
AdaptBlockInfo(insts=((60, {'iterator': '$phi60.0', 'pair': '$60for_iter.1', 'indval': '$60for_iter.2', 'pred': '$60for_iter.3'}),), outgoing_phis={'$phi62.1': '$60for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 62: ('$phi60.0', '$60for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=62 nstack_initial=2):
AdaptBlockInfo(insts=((62, {'value': '$phi62.1'}), (64, {'res': '$view64.2'}), (66, {'item': '$view64.2', 'res': '$66load_method.3'}), (68, {'func': '$66load_method.3', 'args': [], 'res': '$68call_method.4'}), (70, {'value': '$68call_method.4'}), (72, {'res': '$72load_deref.5'}), (74, {'res': '$v74.6'}), (76, {'func': '$72load_deref.5', 'args': ['$v74.6'], 'res': '$76call_function.7'}), (78, {'pred': '$76call_function.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi62.0',), 88: ('$phi62.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$v80.1'}), (86, {'retval': '$v80.1', 'castval': '$86return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=88 nstack_initial=1):
AdaptBlockInfo(insts=((88, {'res': '$88load_deref.1'}), (90, {'res': '$v90.2'}), (92, {'res': '$max_value92.3'}), (94, {'func': '$88load_deref.1', 'args': ['$v90.2', '$max_value92.3'], 'res': '$94call_function.4'}), (96, {'pred': '$94call_function.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi88.0',), 102: ('$phi88.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=98 nstack_initial=1):
AdaptBlockInfo(insts=((98, {'res': '$v98.1'}), (100, {'value': '$v98.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: ('$phi98.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=102 nstack_initial=1):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$phi102.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$max_value104.0'}), (106, {'retval': '$max_value104.0', 'castval': '$106return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8compare_op.3 = $4load_attr.1 == $const6.2 ['$4load_attr.1', '$8compare_op.3', '$const6.2']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 20                   ['$10pred']
label 12:
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1']
    $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1']
    raise $16call_function.2                 ['$16call_function.2']
label 20:
    $20load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$20load_global.0']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $const38.8 = const(int, 0)               ['$const38.8']
    max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8', 'max_value']
    $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>) ['$44load_deref.10']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    branch $50pred, 52, 56                   ['$50pred']
label 52:
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    return $54return_value.1                 ['$54return_value.1']
label 56:
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    jump 60                                  []
label 60:
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
label 62:
    view = $phi62.1                          ['$phi62.1', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>) ['$72load_deref.5']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    branch $78pred, 80, 88                   ['$78pred']
label 80:
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    return $86return_value.2                 ['$86return_value.2']
label 88:
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x0000017A07CBFAC0>) ['$88load_deref.1']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    branch $96pred, 98, 102                  ['$96pred']
label 98:
    max_value = v                            ['max_value', 'v']
    jump 102                                 []
label 102:
    jump 60                                  []
label 104:
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    return $106return_value.1                ['$106return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA43F4280>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const6.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
DEBUG:numba.core.ssa:on stmt: bool10 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $10pred, 12, 20
DEBUG:numba.core.ssa:==== SSA block analysis pass on 12
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA43F4280>
DEBUG:numba.core.ssa:on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
DEBUG:numba.core.ssa:on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA43F4280>
DEBUG:numba.core.ssa:on stmt: $20load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
DEBUG:numba.core.ssa:on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_global.4 = global(next: <built-in function next>)
DEBUG:numba.core.ssa:on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
DEBUG:numba.core.ssa:on stmt: $const38.8 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>)
DEBUG:numba.core.ssa:on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $50pred, 52, 56
DEBUG:numba.core.ssa:==== SSA block analysis pass on 52
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA43F4280>
DEBUG:numba.core.ssa:on stmt: $54return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:on stmt: return $54return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 56
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA43F4280>
DEBUG:numba.core.ssa:on stmt: $58get_iter.1 = getiter(value=it)
DEBUG:numba.core.ssa:on stmt: $phi60.0 = $58get_iter.1
DEBUG:numba.core.ssa:on stmt: jump 60
DEBUG:numba.core.ssa:==== SSA block analysis pass on 60
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA43F4280>
DEBUG:numba.core.ssa:on stmt: $60for_iter.1 = iternext(value=$phi60.0)
DEBUG:numba.core.ssa:on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
DEBUG:numba.core.ssa:on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi62.1 = $60for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $60for_iter.3, 62, 104
DEBUG:numba.core.ssa:==== SSA block analysis pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA43F4280>
DEBUG:numba.core.ssa:on stmt: view = $phi62.1
DEBUG:numba.core.ssa:on stmt: $66load_method.3 = getattr(value=view, attr=item)
DEBUG:numba.core.ssa:on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>)
DEBUG:numba.core.ssa:on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool78 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $78pred, 80, 88
DEBUG:numba.core.ssa:==== SSA block analysis pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA43F4280>
DEBUG:numba.core.ssa:on stmt: $86return_value.2 = cast(value=v)
DEBUG:numba.core.ssa:on stmt: return $86return_value.2
DEBUG:numba.core.ssa:==== SSA block analysis pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA43F4280>
DEBUG:numba.core.ssa:on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x0000017A07CBFAC0>)
DEBUG:numba.core.ssa:on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool96 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $96pred, 98, 102
DEBUG:numba.core.ssa:==== SSA block analysis pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA43F4280>
DEBUG:numba.core.ssa:on stmt: max_value = v
DEBUG:numba.core.ssa:on stmt: jump 102
DEBUG:numba.core.ssa:==== SSA block analysis pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA43F4280>
DEBUG:numba.core.ssa:on stmt: jump 60
DEBUG:numba.core.ssa:==== SSA block analysis pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA43F4280>
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$106return_value.1': [(<numba.core.ir.Assign object at 0x0000017AA43F7A90>,
                                     104)],
             '$10pred': [(<numba.core.ir.Assign object at 0x0000017AA4404760>,
                          0)],
             '$12load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA4404520>,
                                   12)],
             '$16call_function.2': [(<numba.core.ir.Assign object at 0x0000017AA4404190>,
                                     12)],
             '$20load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA44048B0>,
                                   20)],
             '$22load_method.1': [(<numba.core.ir.Assign object at 0x0000017AA4404A30>,
                                   20)],
             '$30load_global.4': [(<numba.core.ir.Assign object at 0x0000017AA4404F70>,
                                   20)],
             '$34call_function.6': [(<numba.core.ir.Assign object at 0x0000017AA4405270>,
                                     20)],
             '$36load_method.7': [(<numba.core.ir.Assign object at 0x0000017AA4405390>,
                                   20)],
             '$44load_deref.10': [(<numba.core.ir.Assign object at 0x0000017AA4405930>,
                                   20)],
             '$48call_function.12': [(<numba.core.ir.Assign object at 0x0000017AA4405C30>,
                                      20)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x0000017A0A124F70>,
                                0)],
             '$50pred': [(<numba.core.ir.Assign object at 0x0000017AA4405E70>,
                          20)],
             '$54return_value.1': [(<numba.core.ir.Assign object at 0x0000017AA4406050>,
                                    52)],
             '$58get_iter.1': [(<numba.core.ir.Assign object at 0x0000017AA44063B0>,
                                56)],
             '$60for_iter.1': [(<numba.core.ir.Assign object at 0x0000017AA44066E0>,
                                60)],
             '$60for_iter.2': [(<numba.core.ir.Assign object at 0x0000017AA4406800>,
                                60)],
             '$60for_iter.3': [(<numba.core.ir.Assign object at 0x0000017AA4406920>,
                                60)],
             '$66load_method.3': [(<numba.core.ir.Assign object at 0x0000017AA4406E90>,
                                   62)],
             '$72load_deref.5': [(<numba.core.ir.Assign object at 0x0000017AA44072B0>,
                                  62)],
             '$76call_function.7': [(<numba.core.ir.Assign object at 0x0000017AA44075B0>,
                                     62)],
             '$78pred': [(<numba.core.ir.Assign object at 0x0000017AA44077F0>,
                          62)],
             '$86return_value.2': [(<numba.core.ir.Assign object at 0x0000017AA4407A90>,
                                    80)],
             '$88load_deref.1': [(<numba.core.ir.Assign object at 0x0000017AA4407CD0>,
                                  88)],
             '$8compare_op.3': [(<numba.core.ir.Assign object at 0x0000017A0A188A30>,
                                 0)],
             '$94call_function.4': [(<numba.core.ir.Assign object at 0x0000017AA441C130>,
                                     88)],
             '$96pred': [(<numba.core.ir.Assign object at 0x0000017AA441C370>,
                          88)],
             '$const14.1': [(<numba.core.ir.Assign object at 0x0000017AA44043A0>,
                             12)],
             '$const38.8': [(<numba.core.ir.Assign object at 0x0000017AA4405510>,
                             20)],
             '$const6.2': [(<numba.core.ir.Assign object at 0x0000017A0A189000>,
                            0)],
             '$phi60.0': [(<numba.core.ir.Assign object at 0x0000017AA44062C0>,
                           56)],
             '$phi62.1': [(<numba.core.ir.Assign object at 0x0000017AA4406620>,
                           60)],
             'a': [(<numba.core.ir.Assign object at 0x0000017A0A0A2950>, 0)],
             'bool10': [(<numba.core.ir.Assign object at 0x0000017A0A189C00>,
                         0)],
             'bool50': [(<numba.core.ir.Assign object at 0x0000017AA4405D50>,
                         20)],
             'bool78': [(<numba.core.ir.Assign object at 0x0000017AA44076D0>,
                         62)],
             'bool96': [(<numba.core.ir.Assign object at 0x0000017AA441C250>,
                         88)],
             'it': [(<numba.core.ir.Assign object at 0x0000017AA4404D60>, 20)],
             'max_value': [(<numba.core.ir.Assign object at 0x0000017AA4405720>,
                            20),
                           (<numba.core.ir.Assign object at 0x0000017AA441C5E0>,
                            98)],
             'v': [(<numba.core.ir.Assign object at 0x0000017AA44070A0>, 62)],
             'view': [(<numba.core.ir.Assign object at 0x0000017AA4406BF0>,
                       62)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA43F4280>
DEBUG:numba.core.ssa:Fix SSA violator on var max_value
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const6.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
DEBUG:numba.core.ssa:on stmt: bool10 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $10pred, 12, 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 12
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
DEBUG:numba.core.ssa:on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: $20load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
DEBUG:numba.core.ssa:on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_global.4 = global(next: <built-in function next>)
DEBUG:numba.core.ssa:on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
DEBUG:numba.core.ssa:on stmt: $const38.8 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:first assign: max_value
DEBUG:numba.core.ssa:replaced with: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>)
DEBUG:numba.core.ssa:on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $50pred, 52, 56
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 52
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: $54return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:on stmt: return $54return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 56
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: $58get_iter.1 = getiter(value=it)
DEBUG:numba.core.ssa:on stmt: $phi60.0 = $58get_iter.1
DEBUG:numba.core.ssa:on stmt: jump 60
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 60
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: $60for_iter.1 = iternext(value=$phi60.0)
DEBUG:numba.core.ssa:on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
DEBUG:numba.core.ssa:on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi62.1 = $60for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $60for_iter.3, 62, 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: view = $phi62.1
DEBUG:numba.core.ssa:on stmt: $66load_method.3 = getattr(value=view, attr=item)
DEBUG:numba.core.ssa:on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>)
DEBUG:numba.core.ssa:on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool78 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $78pred, 80, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: $86return_value.2 = cast(value=v)
DEBUG:numba.core.ssa:on stmt: return $86return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x0000017A07CBFAC0>)
DEBUG:numba.core.ssa:on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool96 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $96pred, 98, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: max_value = v
DEBUG:numba.core.ssa:replaced with: max_value.1 = v
DEBUG:numba.core.ssa:on stmt: jump 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: jump 60
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {20: [<numba.core.ir.Assign object at 0x0000017AA43F40A0>],
             98: [<numba.core.ir.Assign object at 0x0000017AA43F52D0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const6.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
DEBUG:numba.core.ssa:on stmt: bool10 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $10pred, 12, 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 12
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
DEBUG:numba.core.ssa:on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: $20load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
DEBUG:numba.core.ssa:on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_global.4 = global(next: <built-in function next>)
DEBUG:numba.core.ssa:on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
DEBUG:numba.core.ssa:on stmt: $const38.8 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>)
DEBUG:numba.core.ssa:on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='max_value' stmt=$48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $50pred, 52, 56
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 52
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: $54return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:find_def var='max_value' stmt=$54return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:find_def_from_top label 52
DEBUG:numba.core.ssa:idom 20 from label 52
DEBUG:numba.core.ssa:find_def_from_bottom label 20
DEBUG:numba.core.ssa:on stmt: return $54return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 56
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: $58get_iter.1 = getiter(value=it)
DEBUG:numba.core.ssa:on stmt: $phi60.0 = $58get_iter.1
DEBUG:numba.core.ssa:on stmt: jump 60
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 60
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: $60for_iter.1 = iternext(value=$phi60.0)
DEBUG:numba.core.ssa:on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
DEBUG:numba.core.ssa:on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi62.1 = $60for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $60for_iter.3, 62, 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: view = $phi62.1
DEBUG:numba.core.ssa:on stmt: $66load_method.3 = getattr(value=view, attr=item)
DEBUG:numba.core.ssa:on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>)
DEBUG:numba.core.ssa:on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool78 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $78pred, 80, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: $86return_value.2 = cast(value=v)
DEBUG:numba.core.ssa:on stmt: return $86return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x0000017A07CBFAC0>)
DEBUG:numba.core.ssa:on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='max_value' stmt=$94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 62 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 62
DEBUG:numba.core.ssa:find_def_from_top label 62
DEBUG:numba.core.ssa:idom 60 from label 62
DEBUG:numba.core.ssa:find_def_from_bottom label 60
DEBUG:numba.core.ssa:find_def_from_top label 60
DEBUG:numba.core.ssa:insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 60
DEBUG:numba.core.ssa:find_def_from_bottom label 56
DEBUG:numba.core.ssa:find_def_from_top label 56
DEBUG:numba.core.ssa:idom 20 from label 56
DEBUG:numba.core.ssa:find_def_from_bottom label 20
DEBUG:numba.core.ssa:incoming_def max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_bottom label 102
DEBUG:numba.core.ssa:find_def_from_top label 102
DEBUG:numba.core.ssa:insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 102
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 62 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 62
DEBUG:numba.core.ssa:find_def_from_top label 62
DEBUG:numba.core.ssa:idom 60 from label 62
DEBUG:numba.core.ssa:find_def_from_bottom label 60
DEBUG:numba.core.ssa:incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[56])
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:incoming_def max_value.1 = v
DEBUG:numba.core.ssa:incoming_def max_value.3 = phi(incoming_values=[Var(max_value.2, arraymath.py:584), Var(max_value.1, arraymath.py:585)], incoming_blocks=[88, 98])
DEBUG:numba.core.ssa:replaced with: $94call_function.4 = call $88load_deref.1(v, max_value.2, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool96 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $96pred, 98, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: max_value.1 = v
DEBUG:numba.core.ssa:on stmt: jump 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: jump 60
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA43F43A0>
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:find_def var='max_value' stmt=$106return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:find_def_from_top label 104
DEBUG:numba.core.ssa:idom 60 from label 104
DEBUG:numba.core.ssa:find_def_from_bottom label 60
DEBUG:numba.core.ssa:replaced with: $106return_value.1 = cast(value=max_value.2)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	LOAD_FAST(arg=1, lineno=4692)
           4	LOAD_FAST(arg=0, lineno=4692)
           6	LOAD_ATTR(arg=0, lineno=4692)
           8	LOAD_CONST(arg=1, lineno=4692)
          10	BINARY_SUBTRACT(arg=None, lineno=4692)
          12	COMPARE_OP(arg=4, lineno=4692)
          14	POP_JUMP_IF_TRUE(arg=15, lineno=4692)
          16	LOAD_FAST(arg=1, lineno=4692)
          18	LOAD_FAST(arg=0, lineno=4692)
          20	LOAD_ATTR(arg=0, lineno=4692)
          22	UNARY_NEGATIVE(arg=None, lineno=4692)
          24	COMPARE_OP(arg=0, lineno=4692)
          26	POP_JUMP_IF_FALSE(arg=19, lineno=4692)
>         28	LOAD_GLOBAL(arg=1, lineno=4693)
          30	LOAD_CONST(arg=2, lineno=4693)
          32	CALL_FUNCTION(arg=1, lineno=4693)
          34	RAISE_VARARGS(arg=1, lineno=4693)
>         36	LOAD_FAST(arg=0, lineno=4694)
          38	LOAD_METHOD(arg=2, lineno=4694)
          40	CALL_METHOD(arg=0, lineno=4694)
          42	LOAD_FAST(arg=1, lineno=4694)
          44	BINARY_SUBSCR(arg=None, lineno=4694)
          46	RETURN_VALUE(arg=None, lineno=4694)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4691)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=4692)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4692)
DEBUG:numba.core.byteflow:stack ['$indices2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=4692)
DEBUG:numba.core.byteflow:stack ['$indices2.0', '$a4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=4692)
DEBUG:numba.core.byteflow:stack ['$indices2.0', '$6load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_SUBTRACT(arg=None, lineno=4692)
DEBUG:numba.core.byteflow:stack ['$indices2.0', '$6load_attr.2', '$const8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=COMPARE_OP(arg=4, lineno=4692)
DEBUG:numba.core.byteflow:stack ['$indices2.0', '$10binary_subtract.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=POP_JUMP_IF_TRUE(arg=15, lineno=4692)
DEBUG:numba.core.byteflow:stack ['$12compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=(), blockstack=(), npush=0), Edge(pc=28, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=0), State(pc_initial=28 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=16 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=4692)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=4692)
DEBUG:numba.core.byteflow:stack ['$indices16.0']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_ATTR(arg=0, lineno=4692)
DEBUG:numba.core.byteflow:stack ['$indices16.0', '$a18.1']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
DEBUG:numba.core.byteflow:stack ['$indices16.0', '$20load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=COMPARE_OP(arg=0, lineno=4692)
DEBUG:numba.core.byteflow:stack ['$indices16.0', '$22unary_negative.3']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=POP_JUMP_IF_FALSE(arg=19, lineno=4692)
DEBUG:numba.core.byteflow:stack ['$24compare_op.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=36, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=28 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_GLOBAL(arg=1, lineno=4693)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_CONST(arg=2, lineno=4693)
DEBUG:numba.core.byteflow:stack ['$28load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=CALL_FUNCTION(arg=1, lineno=4693)
DEBUG:numba.core.byteflow:stack ['$28load_global.0', '$const30.1']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=RAISE_VARARGS(arg=1, lineno=4693)
DEBUG:numba.core.byteflow:stack ['$32call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=36 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=36 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=4694)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_METHOD(arg=2, lineno=4694)
DEBUG:numba.core.byteflow:stack ['$a36.0']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=CALL_METHOD(arg=0, lineno=4694)
DEBUG:numba.core.byteflow:stack ['$38load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=1, lineno=4694)
DEBUG:numba.core.byteflow:stack ['$40call_method.2']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=4694)
DEBUG:numba.core.byteflow:stack ['$40call_method.2', '$indices42.3']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4694)
DEBUG:numba.core.byteflow:stack ['$44binary_subscr.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$indices2.0'}), (4, {'res': '$a4.1'}), (6, {'item': '$a4.1', 'res': '$6load_attr.2'}), (8, {'res': '$const8.3'}), (10, {'lhs': '$6load_attr.2', 'rhs': '$const8.3', 'res': '$10binary_subtract.4'}), (12, {'lhs': '$indices2.0', 'rhs': '$10binary_subtract.4', 'res': '$12compare_op.5'}), (14, {'pred': '$12compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: (), 28: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=16 nstack_initial=0):
AdaptBlockInfo(insts=((16, {'res': '$indices16.0'}), (18, {'res': '$a18.1'}), (20, {'item': '$a18.1', 'res': '$20load_attr.2'}), (22, {'value': '$20load_attr.2', 'res': '$22unary_negative.3'}), (24, {'lhs': '$indices16.0', 'rhs': '$22unary_negative.3', 'res': '$24compare_op.4'}), (26, {'pred': '$24compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 36: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'res': '$28load_global.0'}), (30, {'res': '$const30.1'}), (32, {'func': '$28load_global.0', 'args': ['$const30.1'], 'res': '$32call_function.2'}), (34, {'exc': '$32call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$a36.0'}), (38, {'item': '$a36.0', 'res': '$38load_method.1'}), (40, {'func': '$38load_method.1', 'args': [], 'res': '$40call_method.2'}), (42, {'res': '$indices42.3'}), (44, {'index': '$indices42.3', 'target': '$40call_method.2', 'res': '$44binary_subscr.4'}), (46, {'retval': '$44binary_subscr.4', 'castval': '$46return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $const8.3 = const(int, 1)                ['$const8.3']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 28, 16                   ['$14pred']
label 16:
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    branch $26pred, 28, 36                   ['$26pred']
label 28:
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $const30.1 = const(str, Index out of bounds) ['$const30.1']
    $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1']
    raise $32call_function.2                 ['$32call_function.2']
label 36:
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A0A102020>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: indices = arg(1, name=indices)
DEBUG:numba.core.ssa:on stmt: $6load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const8.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $10binary_subtract.4 = $6load_attr.2 - $const8.3
DEBUG:numba.core.ssa:on stmt: $12compare_op.5 = indices > $10binary_subtract.4
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 28, 16
DEBUG:numba.core.ssa:==== SSA block analysis pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A0A102020>
DEBUG:numba.core.ssa:on stmt: $20load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2)
DEBUG:numba.core.ssa:on stmt: $24compare_op.4 = indices < $22unary_negative.3
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 36
DEBUG:numba.core.ssa:==== SSA block analysis pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A0A102020>
DEBUG:numba.core.ssa:on stmt: $28load_global.0 = global(IndexError: <class 'IndexError'>)
DEBUG:numba.core.ssa:on stmt: $const30.1 = const(str, Index out of bounds)
DEBUG:numba.core.ssa:on stmt: $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A0A102020>
DEBUG:numba.core.ssa:on stmt: $38load_method.1 = getattr(value=a, attr=ravel)
DEBUG:numba.core.ssa:on stmt: $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $46return_value.5 = cast(value=$44binary_subscr.4)
DEBUG:numba.core.ssa:on stmt: return $46return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_subtract.4': [(<numba.core.ir.Assign object at 0x0000017AA43C5B70>,
                                       0)],
             '$12compare_op.5': [(<numba.core.ir.Assign object at 0x0000017AA43C5660>,
                                  0)],
             '$14pred': [(<numba.core.ir.Assign object at 0x0000017AA43C5D50>,
                          0)],
             '$20load_attr.2': [(<numba.core.ir.Assign object at 0x0000017AA43C5FF0>,
                                 16)],
             '$22unary_negative.3': [(<numba.core.ir.Assign object at 0x0000017AA43C55A0>,
                                      16)],
             '$24compare_op.4': [(<numba.core.ir.Assign object at 0x0000017AA43C4CA0>,
                                  16)],
             '$26pred': [(<numba.core.ir.Assign object at 0x0000017AA43C4E50>,
                          16)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA43C5030>,
                                   28)],
             '$32call_function.2': [(<numba.core.ir.Assign object at 0x0000017AA43C49D0>,
                                     28)],
             '$38load_method.1': [(<numba.core.ir.Assign object at 0x0000017A0A1251E0>,
                                   36)],
             '$40call_method.2': [(<numba.core.ir.Assign object at 0x0000017A0A126C20>,
                                   36)],
             '$44binary_subscr.4': [(<numba.core.ir.Assign object at 0x0000017A0A127A30>,
                                     36)],
             '$46return_value.5': [(<numba.core.ir.Assign object at 0x0000017A0A1277F0>,
                                    36)],
             '$6load_attr.2': [(<numba.core.ir.Assign object at 0x0000017AA43C7730>,
                                0)],
             '$const30.1': [(<numba.core.ir.Assign object at 0x0000017AA43C51B0>,
                             28)],
             '$const8.3': [(<numba.core.ir.Assign object at 0x0000017AA43C7280>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x0000017AA43C5E70>, 0)],
             'bool14': [(<numba.core.ir.Assign object at 0x0000017AA43C4940>,
                         0)],
             'bool26': [(<numba.core.ir.Assign object at 0x0000017AA43C4D90>,
                         16)],
             'indices': [(<numba.core.ir.Assign object at 0x0000017AA43C7D30>,
                          0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017A0A102020>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	LOAD_FAST(arg=0, lineno=2232)
           4	LOAD_METHOD(arg=0, lineno=2232)
           6	LOAD_FAST(arg=0, lineno=2232)
           8	LOAD_ATTR(arg=1, lineno=2232)
          10	CALL_METHOD(arg=1, lineno=2232)
          12	RETURN_VALUE(arg=None, lineno=2232)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2230)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2232)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=2232)
DEBUG:numba.core.byteflow:stack ['$ary2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2232)
DEBUG:numba.core.byteflow:stack ['$4load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=1, lineno=2232)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$ary6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=CALL_METHOD(arg=1, lineno=2232)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$8load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=2232)
DEBUG:numba.core.byteflow:stack ['$10call_method.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$ary2.0'}), (4, {'item': '$ary2.0', 'res': '$4load_method.1'}), (6, {'res': '$ary6.2'}), (8, {'item': '$ary6.2', 'res': '$8load_attr.3'}), (10, {'func': '$4load_method.1', 'args': ['$8load_attr.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    ary = arg(0, name=ary)                   ['ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017A0A1592D0>
DEBUG:numba.core.ssa:on stmt: ary = arg(0, name=ary)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=ary, attr=reshape)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=ary, attr=size)
DEBUG:numba.core.ssa:on stmt: $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $12return_value.5 = cast(value=$10call_method.4)
DEBUG:numba.core.ssa:on stmt: return $12return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x0000017A0A168A60>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x0000017A0A169C60>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x0000017A0A168F10>,
                                  0)],
             '$8load_attr.3': [(<numba.core.ir.Assign object at 0x0000017A0A169120>,
                                0)],
             'ary': [(<numba.core.ir.Assign object at 0x0000017AA43F54E0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017A0A1592D0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2046)
           2	LOAD_CONST(arg=1, lineno=2047)
           4	STORE_FAST(arg=2, lineno=2047)
           6	LOAD_CONST(arg=2, lineno=2048)
           8	STORE_FAST(arg=3, lineno=2048)
          10	LOAD_GLOBAL(arg=0, lineno=2049)
          12	LOAD_FAST(arg=1, lineno=2049)
          14	CALL_FUNCTION(arg=1, lineno=2049)
          16	GET_ITER(arg=None, lineno=2049)
>         18	FOR_ITER(arg=19, lineno=2049)
          20	UNPACK_SEQUENCE(arg=2, lineno=2049)
          22	STORE_FAST(arg=4, lineno=2049)
          24	STORE_FAST(arg=5, lineno=2049)
          26	LOAD_FAST(arg=5, lineno=2050)
          28	LOAD_CONST(arg=1, lineno=2050)
          30	COMPARE_OP(arg=0, lineno=2050)
          32	POP_JUMP_IF_FALSE(arg=25, lineno=2050)
          34	LOAD_FAST(arg=2, lineno=2051)
          36	LOAD_CONST(arg=2, lineno=2051)
          38	INPLACE_ADD(arg=None, lineno=2051)
          40	STORE_FAST(arg=2, lineno=2051)
          42	LOAD_FAST(arg=4, lineno=2052)
          44	STORE_FAST(arg=6, lineno=2052)
          46	JUMP_ABSOLUTE(arg=10, lineno=2052)
>         48	LOAD_FAST(arg=3, lineno=2054)
          50	LOAD_FAST(arg=5, lineno=2054)
          52	INPLACE_MULTIPLY(arg=None, lineno=2054)
          54	STORE_FAST(arg=3, lineno=2054)
          56	JUMP_ABSOLUTE(arg=10, lineno=2054)
>         58	LOAD_FAST(arg=2, lineno=2056)
          60	LOAD_CONST(arg=1, lineno=2056)
          62	COMPARE_OP(arg=2, lineno=2056)
          64	POP_JUMP_IF_FALSE(arg=44, lineno=2056)
          66	LOAD_FAST(arg=0, lineno=2057)
          68	LOAD_FAST(arg=3, lineno=2057)
          70	COMPARE_OP(arg=3, lineno=2057)
          72	POP_JUMP_IF_FALSE(arg=42, lineno=2057)
          74	LOAD_GLOBAL(arg=1, lineno=2058)
          76	LOAD_CONST(arg=3, lineno=2058)
          78	CALL_FUNCTION(arg=1, lineno=2058)
          80	RAISE_VARARGS(arg=1, lineno=2058)
>         82	LOAD_CONST(arg=0, lineno=2057)
          84	RETURN_VALUE(arg=None, lineno=2057)
>         86	LOAD_FAST(arg=2, lineno=2060)
          88	LOAD_CONST(arg=2, lineno=2060)
          90	COMPARE_OP(arg=2, lineno=2060)
          92	POP_JUMP_IF_FALSE(arg=81, lineno=2060)
          94	LOAD_FAST(arg=3, lineno=2062)
          96	LOAD_CONST(arg=1, lineno=2062)
          98	COMPARE_OP(arg=2, lineno=2062)
         100	POP_JUMP_IF_FALSE(arg=59, lineno=2062)
         102	LOAD_CONST(arg=1, lineno=2063)
         104	STORE_FAST(arg=7, lineno=2063)
         106	LOAD_FAST(arg=0, lineno=2064)
         108	LOAD_CONST(arg=1, lineno=2064)
         110	COMPARE_OP(arg=2, lineno=2064)
         112	STORE_FAST(arg=8, lineno=2064)
         114	JUMP_FORWARD(arg=10, lineno=2064)
>        116	LOAD_FAST(arg=0, lineno=2066)
         118	LOAD_FAST(arg=3, lineno=2066)
         120	BINARY_FLOOR_DIVIDE(arg=None, lineno=2066)
         122	STORE_FAST(arg=7, lineno=2066)
         124	LOAD_FAST(arg=0, lineno=2067)
         126	LOAD_FAST(arg=3, lineno=2067)
         128	BINARY_MODULO(arg=None, lineno=2067)
         130	LOAD_CONST(arg=1, lineno=2067)
         132	COMPARE_OP(arg=2, lineno=2067)
         134	STORE_FAST(arg=8, lineno=2067)
>        136	LOAD_FAST(arg=8, lineno=2068)
         138	POP_JUMP_IF_TRUE(arg=75, lineno=2068)
         140	LOAD_GLOBAL(arg=1, lineno=2069)
         142	LOAD_CONST(arg=3, lineno=2069)
         144	CALL_FUNCTION(arg=1, lineno=2069)
         146	RAISE_VARARGS(arg=1, lineno=2069)
>        148	LOAD_FAST(arg=7, lineno=2070)
         150	LOAD_FAST(arg=1, lineno=2070)
         152	LOAD_FAST(arg=6, lineno=2070)
         154	STORE_SUBSCR(arg=None, lineno=2070)
         156	LOAD_CONST(arg=0, lineno=2070)
         158	RETURN_VALUE(arg=None, lineno=2070)
>        160	LOAD_GLOBAL(arg=1, lineno=2073)
         162	LOAD_CONST(arg=4, lineno=2073)
         164	CALL_FUNCTION(arg=1, lineno=2073)
         166	RAISE_VARARGS(arg=1, lineno=2073)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2046)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=2047)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=2, lineno=2047)
DEBUG:numba.core.byteflow:stack ['$const2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=2, lineno=2048)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=3, lineno=2048)
DEBUG:numba.core.byteflow:stack ['$const6.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=2049)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=2049)
DEBUG:numba.core.byteflow:stack ['$10load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=2049)
DEBUG:numba.core.byteflow:stack ['$10load_global.2', '$shape12.3']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=GET_ITER(arg=None, lineno=2049)
DEBUG:numba.core.byteflow:stack ['$14call_function.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=18, stack=('$16get_iter.5',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=18 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi18.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=18 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=18, inst=FOR_ITER(arg=19, lineno=2049)
DEBUG:numba.core.byteflow:stack ['$phi18.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=('$phi18.0', '$18for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=20 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=2, lineno=2056)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=2056)
DEBUG:numba.core.byteflow:stack ['$num_neg_value58.0']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=COMPARE_OP(arg=2, lineno=2056)
DEBUG:numba.core.byteflow:stack ['$num_neg_value58.0', '$const60.1']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=POP_JUMP_IF_FALSE(arg=44, lineno=2056)
DEBUG:numba.core.byteflow:stack ['$62compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=66, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=20 nstack_initial=2), State(pc_initial=66 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi20.0', '$phi20.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=20 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=20, inst=UNPACK_SEQUENCE(arg=2, lineno=2049)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$phi20.1']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=STORE_FAST(arg=4, lineno=2049)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$20unpack_sequence.3', '$20unpack_sequence.2']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=STORE_FAST(arg=5, lineno=2049)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$20unpack_sequence.3']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=2050)
DEBUG:numba.core.byteflow:stack ['$phi20.0']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=2050)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$s26.5']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=COMPARE_OP(arg=0, lineno=2050)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$s26.5', '$const28.6']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=POP_JUMP_IF_FALSE(arg=25, lineno=2050)
DEBUG:numba.core.byteflow:stack ['$phi20.0', '$30compare_op.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=34, stack=('$phi20.0',), blockstack=(), npush=0), Edge(pc=48, stack=('$phi20.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=66 nstack_initial=0), State(pc_initial=86 nstack_initial=0), State(pc_initial=34 nstack_initial=1), State(pc_initial=48 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=66 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=2057)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=3, lineno=2057)
DEBUG:numba.core.byteflow:stack ['$origsize66.0']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=COMPARE_OP(arg=3, lineno=2057)
DEBUG:numba.core.byteflow:stack ['$origsize66.0', '$known_size68.1']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=POP_JUMP_IF_FALSE(arg=42, lineno=2057)
DEBUG:numba.core.byteflow:stack ['$70compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=86 nstack_initial=0), State(pc_initial=34 nstack_initial=1), State(pc_initial=48 nstack_initial=1), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=86 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=2, lineno=2060)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_CONST(arg=2, lineno=2060)
DEBUG:numba.core.byteflow:stack ['$num_neg_value86.0']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=COMPARE_OP(arg=2, lineno=2060)
DEBUG:numba.core.byteflow:stack ['$num_neg_value86.0', '$const88.1']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=POP_JUMP_IF_FALSE(arg=81, lineno=2060)
DEBUG:numba.core.byteflow:stack ['$90compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=94, stack=(), blockstack=(), npush=0), Edge(pc=160, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=1), State(pc_initial=48 nstack_initial=1), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=160 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi34.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=34 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=2, lineno=2051)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=2051)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$num_neg_value34.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=INPLACE_ADD(arg=None, lineno=2051)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$num_neg_value34.1', '$const36.2']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=STORE_FAST(arg=2, lineno=2051)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$38inplace_add.3']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=4, lineno=2052)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=STORE_FAST(arg=6, lineno=2052)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$ax42.4']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=JUMP_ABSOLUTE(arg=10, lineno=2052)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=18, stack=('$phi34.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=1), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=160 nstack_initial=0), State(pc_initial=18 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi48.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=48 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=3, lineno=2054)
DEBUG:numba.core.byteflow:stack ['$phi48.0']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=5, lineno=2054)
DEBUG:numba.core.byteflow:stack ['$phi48.0', '$known_size48.1']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=INPLACE_MULTIPLY(arg=None, lineno=2054)
DEBUG:numba.core.byteflow:stack ['$phi48.0', '$known_size48.1', '$s50.2']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=STORE_FAST(arg=3, lineno=2054)
DEBUG:numba.core.byteflow:stack ['$phi48.0', '$52inplace_multiply.3']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=JUMP_ABSOLUTE(arg=10, lineno=2054)
DEBUG:numba.core.byteflow:stack ['$phi48.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=18, stack=('$phi48.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=160 nstack_initial=0), State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=74 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_GLOBAL(arg=1, lineno=2058)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_CONST(arg=3, lineno=2058)
DEBUG:numba.core.byteflow:stack ['$74load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=CALL_FUNCTION(arg=1, lineno=2058)
DEBUG:numba.core.byteflow:stack ['$74load_global.0', '$const76.1']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=RAISE_VARARGS(arg=1, lineno=2058)
DEBUG:numba.core.byteflow:stack ['$78call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=160 nstack_initial=0), State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=82 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_CONST(arg=0, lineno=2057)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=84, inst=RETURN_VALUE(arg=None, lineno=2057)
DEBUG:numba.core.byteflow:stack ['$const82.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=94 nstack_initial=0), State(pc_initial=160 nstack_initial=0), State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=94 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_FAST(arg=3, lineno=2062)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_CONST(arg=1, lineno=2062)
DEBUG:numba.core.byteflow:stack ['$known_size94.0']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=COMPARE_OP(arg=2, lineno=2062)
DEBUG:numba.core.byteflow:stack ['$known_size94.0', '$const96.1']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=POP_JUMP_IF_FALSE(arg=59, lineno=2062)
DEBUG:numba.core.byteflow:stack ['$98compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=116, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=160 nstack_initial=0), State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1), State(pc_initial=102 nstack_initial=0), State(pc_initial=116 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=160 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=160, inst=LOAD_GLOBAL(arg=1, lineno=2073)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=162, inst=LOAD_CONST(arg=4, lineno=2073)
DEBUG:numba.core.byteflow:stack ['$160load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=CALL_FUNCTION(arg=1, lineno=2073)
DEBUG:numba.core.byteflow:stack ['$160load_global.0', '$const162.1']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=RAISE_VARARGS(arg=1, lineno=2073)
DEBUG:numba.core.byteflow:stack ['$164call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1), State(pc_initial=102 nstack_initial=0), State(pc_initial=116 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=18 nstack_initial=1), State(pc_initial=102 nstack_initial=0), State(pc_initial=116 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=116 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=102 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_CONST(arg=1, lineno=2063)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=104, inst=STORE_FAST(arg=7, lineno=2063)
DEBUG:numba.core.byteflow:stack ['$const102.0']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=0, lineno=2064)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=2064)
DEBUG:numba.core.byteflow:stack ['$origsize106.1']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=COMPARE_OP(arg=2, lineno=2064)
DEBUG:numba.core.byteflow:stack ['$origsize106.1', '$const108.2']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=STORE_FAST(arg=8, lineno=2064)
DEBUG:numba.core.byteflow:stack ['$110compare_op.3']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=JUMP_FORWARD(arg=10, lineno=2064)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=136, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=136 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=116 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_FAST(arg=0, lineno=2066)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_FAST(arg=3, lineno=2066)
DEBUG:numba.core.byteflow:stack ['$origsize116.0']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=2066)
DEBUG:numba.core.byteflow:stack ['$origsize116.0', '$known_size118.1']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=STORE_FAST(arg=7, lineno=2066)
DEBUG:numba.core.byteflow:stack ['$120binary_floor_divide.2']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_FAST(arg=0, lineno=2067)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=3, lineno=2067)
DEBUG:numba.core.byteflow:stack ['$origsize124.3']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=BINARY_MODULO(arg=None, lineno=2067)
DEBUG:numba.core.byteflow:stack ['$origsize124.3', '$known_size126.4']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=2067)
DEBUG:numba.core.byteflow:stack ['$128binary_modulo.5']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=COMPARE_OP(arg=2, lineno=2067)
DEBUG:numba.core.byteflow:stack ['$128binary_modulo.5', '$const130.6']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=STORE_FAST(arg=8, lineno=2067)
DEBUG:numba.core.byteflow:stack ['$132compare_op.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=136, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=136 nstack_initial=0), State(pc_initial=136 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=136 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_FAST(arg=8, lineno=2068)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=138, inst=POP_JUMP_IF_TRUE(arg=75, lineno=2068)
DEBUG:numba.core.byteflow:stack ['$ok136.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=140, stack=(), blockstack=(), npush=0), Edge(pc=148, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=136 nstack_initial=0), State(pc_initial=140 nstack_initial=0), State(pc_initial=148 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=140 nstack_initial=0), State(pc_initial=148 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=140 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=2069)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=142, inst=LOAD_CONST(arg=3, lineno=2069)
DEBUG:numba.core.byteflow:stack ['$140load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=CALL_FUNCTION(arg=1, lineno=2069)
DEBUG:numba.core.byteflow:stack ['$140load_global.0', '$const142.1']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=RAISE_VARARGS(arg=1, lineno=2069)
DEBUG:numba.core.byteflow:stack ['$144call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=148 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=148 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=7, lineno=2070)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_FAST(arg=1, lineno=2070)
DEBUG:numba.core.byteflow:stack ['$inferred148.0']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_FAST(arg=6, lineno=2070)
DEBUG:numba.core.byteflow:stack ['$inferred148.0', '$shape150.1']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=STORE_SUBSCR(arg=None, lineno=2070)
DEBUG:numba.core.byteflow:stack ['$inferred148.0', '$shape150.1', '$neg_ax152.2']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_CONST(arg=0, lineno=2070)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=158, inst=RETURN_VALUE(arg=None, lineno=2070)
DEBUG:numba.core.byteflow:stack ['$const156.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=1): {'$phi18.0'},
             State(pc_initial=20 nstack_initial=2): {'$phi20.1'},
             State(pc_initial=34 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=1): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=66 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set(),
             State(pc_initial=94 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=136 nstack_initial=0): set(),
             State(pc_initial=140 nstack_initial=0): set(),
             State(pc_initial=148 nstack_initial=0): set(),
             State(pc_initial=160 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi18.0': State(pc_initial=0 nstack_initial=0),
 '$phi20.1': State(pc_initial=18 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=1)),
                          ('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi20.0': {('$phi18.0', State(pc_initial=18 nstack_initial=1))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi34.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi48.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi34.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi48.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi34.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi48.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi34.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi48.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi18.0': {('$16get_iter.5', State(pc_initial=0 nstack_initial=0))},
 '$phi20.1': {('$18for_iter.2', State(pc_initial=18 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi18.0': '$16get_iter.5'},
             State(pc_initial=18 nstack_initial=1): {'$phi20.1': '$18for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'value': '$const2.0'}), (6, {'res': '$const6.1'}), (8, {'value': '$const6.1'}), (10, {'res': '$10load_global.2'}), (12, {'res': '$shape12.3'}), (14, {'func': '$10load_global.2', 'args': ['$shape12.3'], 'res': '$14call_function.4'}), (16, {'value': '$14call_function.4', 'res': '$16get_iter.5'})), outgoing_phis={'$phi18.0': '$16get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$16get_iter.5',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=18 nstack_initial=1):
AdaptBlockInfo(insts=((18, {'iterator': '$phi18.0', 'pair': '$18for_iter.1', 'indval': '$18for_iter.2', 'pred': '$18for_iter.3'}),), outgoing_phis={'$phi20.1': '$18for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: (), 20: ('$phi18.0', '$18for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=20 nstack_initial=2):
AdaptBlockInfo(insts=((20, {'iterable': '$phi20.1', 'stores': ['$20unpack_sequence.2', '$20unpack_sequence.3'], 'tupleobj': '$20unpack_sequence.4'}), (22, {'value': '$20unpack_sequence.2'}), (24, {'value': '$20unpack_sequence.3'}), (26, {'res': '$s26.5'}), (28, {'res': '$const28.6'}), (30, {'lhs': '$s26.5', 'rhs': '$const28.6', 'res': '$30compare_op.7'}), (32, {'pred': '$30compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: ('$phi20.0',), 48: ('$phi20.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=1):
AdaptBlockInfo(insts=((34, {'res': '$num_neg_value34.1'}), (36, {'res': '$const36.2'}), (38, {'lhs': '$num_neg_value34.1', 'rhs': '$const36.2', 'res': '$38inplace_add.3'}), (40, {'value': '$38inplace_add.3'}), (42, {'res': '$ax42.4'}), (44, {'value': '$ax42.4'}), (46, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$phi34.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=48 nstack_initial=1):
AdaptBlockInfo(insts=((48, {'res': '$known_size48.1'}), (50, {'res': '$s50.2'}), (52, {'lhs': '$known_size48.1', 'rhs': '$s50.2', 'res': '$52inplace_multiply.3'}), (54, {'value': '$52inplace_multiply.3'}), (56, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$phi48.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$num_neg_value58.0'}), (60, {'res': '$const60.1'}), (62, {'lhs': '$num_neg_value58.0', 'rhs': '$const60.1', 'res': '$62compare_op.2'}), (64, {'pred': '$62compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={66: (), 86: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=66 nstack_initial=0):
AdaptBlockInfo(insts=((66, {'res': '$origsize66.0'}), (68, {'res': '$known_size68.1'}), (70, {'lhs': '$origsize66.0', 'rhs': '$known_size68.1', 'res': '$70compare_op.2'}), (72, {'pred': '$70compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: (), 82: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$74load_global.0'}), (76, {'res': '$const76.1'}), (78, {'func': '$74load_global.0', 'args': ['$const76.1'], 'res': '$78call_function.2'}), (80, {'exc': '$78call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$const82.0'}), (84, {'retval': '$const82.0', 'castval': '$84return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$num_neg_value86.0'}), (88, {'res': '$const88.1'}), (90, {'lhs': '$num_neg_value86.0', 'rhs': '$const88.1', 'res': '$90compare_op.2'}), (92, {'pred': '$90compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={94: (), 160: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=94 nstack_initial=0):
AdaptBlockInfo(insts=((94, {'res': '$known_size94.0'}), (96, {'res': '$const96.1'}), (98, {'lhs': '$known_size94.0', 'rhs': '$const96.1', 'res': '$98compare_op.2'}), (100, {'pred': '$98compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 116: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$const102.0'}), (104, {'value': '$const102.0'}), (106, {'res': '$origsize106.1'}), (108, {'res': '$const108.2'}), (110, {'lhs': '$origsize106.1', 'rhs': '$const108.2', 'res': '$110compare_op.3'}), (112, {'value': '$110compare_op.3'}), (114, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={136: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'res': '$origsize116.0'}), (118, {'res': '$known_size118.1'}), (120, {'lhs': '$origsize116.0', 'rhs': '$known_size118.1', 'res': '$120binary_floor_divide.2'}), (122, {'value': '$120binary_floor_divide.2'}), (124, {'res': '$origsize124.3'}), (126, {'res': '$known_size126.4'}), (128, {'lhs': '$origsize124.3', 'rhs': '$known_size126.4', 'res': '$128binary_modulo.5'}), (130, {'res': '$const130.6'}), (132, {'lhs': '$128binary_modulo.5', 'rhs': '$const130.6', 'res': '$132compare_op.7'}), (134, {'value': '$132compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={136: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=136 nstack_initial=0):
AdaptBlockInfo(insts=((136, {'res': '$ok136.0'}), (138, {'pred': '$ok136.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={140: (), 148: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=140 nstack_initial=0):
AdaptBlockInfo(insts=((140, {'res': '$140load_global.0'}), (142, {'res': '$const142.1'}), (144, {'func': '$140load_global.0', 'args': ['$const142.1'], 'res': '$144call_function.2'}), (146, {'exc': '$144call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=148 nstack_initial=0):
AdaptBlockInfo(insts=((148, {'res': '$inferred148.0'}), (150, {'res': '$shape150.1'}), (152, {'res': '$neg_ax152.2'}), (154, {'target': '$shape150.1', 'index': '$neg_ax152.2', 'value': '$inferred148.0'}), (156, {'res': '$const156.3'}), (158, {'retval': '$const156.3', 'castval': '$158return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=160 nstack_initial=0):
AdaptBlockInfo(insts=((160, {'res': '$160load_global.0'}), (162, {'res': '$const162.1'}), (164, {'func': '$160load_global.0', 'args': ['$const162.1'], 'res': '$164call_function.2'}), (166, {'exc': '$164call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    origsize = arg(0, name=origsize)         ['origsize']
    shape = arg(1, name=shape)               ['shape']
    num_neg_value = const(int, 0)            ['num_neg_value']
    known_size = const(int, 1)               ['known_size']
    $10load_global.2 = global(enumerate: <class 'enumerate'>) ['$10load_global.2']
    $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.2', '$14call_function.4', 'shape']
    $16get_iter.5 = getiter(value=$14call_function.4) ['$14call_function.4', '$16get_iter.5']
    $phi18.0 = $16get_iter.5                 ['$16get_iter.5', '$phi18.0']
    jump 18                                  []
label 18:
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    branch $18for_iter.3, 20, 58             ['$18for_iter.3']
label 20:
    $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2) ['$20unpack_sequence.4', '$phi20.1']
    $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.2', '$20unpack_sequence.4']
    $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.3', '$20unpack_sequence.4']
    ax = $20unpack_sequence.2                ['$20unpack_sequence.2', 'ax']
    s = $20unpack_sequence.3                 ['$20unpack_sequence.3', 's']
    $const28.6 = const(int, 0)               ['$const28.6']
    $30compare_op.7 = s < $const28.6         ['$30compare_op.7', '$const28.6', 's']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.7', '$32pred', 'bool32']
    branch $32pred, 34, 48                   ['$32pred']
label 34:
    $const36.2 = const(int, 1)               ['$const36.2']
    $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined) ['$38inplace_add.3', '$const36.2', 'num_neg_value']
    num_neg_value = $38inplace_add.3         ['$38inplace_add.3', 'num_neg_value']
    neg_ax = ax                              ['ax', 'neg_ax']
    jump 18                                  []
label 48:
    $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined) ['$52inplace_multiply.3', 'known_size', 's']
    known_size = $52inplace_multiply.3       ['$52inplace_multiply.3', 'known_size']
    jump 18                                  []
label 58:
    $const60.1 = const(int, 0)               ['$const60.1']
    $62compare_op.2 = num_neg_value == $const60.1 ['$62compare_op.2', '$const60.1', 'num_neg_value']
    bool64 = global(bool: <class 'bool'>)    ['bool64']
    $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None) ['$62compare_op.2', '$64pred', 'bool64']
    branch $64pred, 66, 86                   ['$64pred']
label 66:
    $70compare_op.2 = origsize != known_size ['$70compare_op.2', 'known_size', 'origsize']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.2', '$72pred', 'bool72']
    branch $72pred, 74, 82                   ['$72pred']
label 74:
    $74load_global.0 = global(ValueError: <class 'ValueError'>) ['$74load_global.0']
    $const76.1 = const(str, total size of new array must be unchanged) ['$const76.1']
    $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.0', '$78call_function.2', '$const76.1']
    raise $78call_function.2                 ['$78call_function.2']
label 82:
    $const82.0 = const(NoneType, None)       ['$const82.0']
    $84return_value.1 = cast(value=$const82.0) ['$84return_value.1', '$const82.0']
    return $84return_value.1                 ['$84return_value.1']
label 86:
    $const88.1 = const(int, 1)               ['$const88.1']
    $90compare_op.2 = num_neg_value == $const88.1 ['$90compare_op.2', '$const88.1', 'num_neg_value']
    bool92 = global(bool: <class 'bool'>)    ['bool92']
    $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None) ['$90compare_op.2', '$92pred', 'bool92']
    branch $92pred, 94, 160                  ['$92pred']
label 94:
    $const96.1 = const(int, 0)               ['$const96.1']
    $98compare_op.2 = known_size == $const96.1 ['$98compare_op.2', '$const96.1', 'known_size']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$98compare_op.2', 'bool100']
    branch $100pred, 102, 116                ['$100pred']
label 102:
    inferred = const(int, 0)                 ['inferred']
    $const108.2 = const(int, 0)              ['$const108.2']
    ok = origsize == $const108.2             ['$const108.2', 'ok', 'origsize']
    jump 136                                 []
label 116:
    inferred = origsize // known_size        ['inferred', 'known_size', 'origsize']
    $128binary_modulo.5 = origsize % known_size ['$128binary_modulo.5', 'known_size', 'origsize']
    $const130.6 = const(int, 0)              ['$const130.6']
    ok = $128binary_modulo.5 == $const130.6  ['$128binary_modulo.5', '$const130.6', 'ok']
    jump 136                                 []
label 136:
    bool138 = global(bool: <class 'bool'>)   ['bool138']
    $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None) ['$138pred', 'bool138', 'ok']
    branch $138pred, 148, 140                ['$138pred']
label 140:
    $140load_global.0 = global(ValueError: <class 'ValueError'>) ['$140load_global.0']
    $const142.1 = const(str, total size of new array must be unchanged) ['$const142.1']
    $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.0', '$144call_function.2', '$const142.1']
    raise $144call_function.2                ['$144call_function.2']
label 148:
    shape[neg_ax] = inferred                 ['inferred', 'neg_ax', 'shape']
    $const156.3 = const(NoneType, None)      ['$const156.3']
    $158return_value.4 = cast(value=$const156.3) ['$158return_value.4', '$const156.3']
    return $158return_value.4                ['$158return_value.4']
label 160:
    $160load_global.0 = global(ValueError: <class 'ValueError'>) ['$160load_global.0']
    $const162.1 = const(str, multiple negative shape values) ['$const162.1']
    $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None) ['$160load_global.0', '$164call_function.2', '$const162.1']
    raise $164call_function.2                ['$164call_function.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA441D420>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi18.0 = $16get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block analysis pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA441D420>
DEBUG:numba.core.ssa:on stmt: $18for_iter.1 = iternext(value=$phi18.0)
DEBUG:numba.core.ssa:on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi20.1 = $18for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $18for_iter.3, 20, 58
DEBUG:numba.core.ssa:==== SSA block analysis pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA441D420>
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $20unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $20unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const28.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $30compare_op.7 = s < $const28.6
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 48
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA441D420>
DEBUG:numba.core.ssa:on stmt: $const36.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value = $38inplace_add.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block analysis pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA441D420>
DEBUG:numba.core.ssa:on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size = $52inplace_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block analysis pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA441D420>
DEBUG:numba.core.ssa:on stmt: $const60.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = num_neg_value == $const60.1
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 86
DEBUG:numba.core.ssa:==== SSA block analysis pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA441D420>
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = origsize != known_size
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 82
DEBUG:numba.core.ssa:==== SSA block analysis pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA441D420>
DEBUG:numba.core.ssa:on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const76.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA441D420>
DEBUG:numba.core.ssa:on stmt: $const82.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $84return_value.1 = cast(value=$const82.0)
DEBUG:numba.core.ssa:on stmt: return $84return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA441D420>
DEBUG:numba.core.ssa:on stmt: $const88.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = num_neg_value == $const88.1
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 160
DEBUG:numba.core.ssa:==== SSA block analysis pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA441D420>
DEBUG:numba.core.ssa:on stmt: $const96.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $98compare_op.2 = known_size == $const96.1
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 102, 116
DEBUG:numba.core.ssa:==== SSA block analysis pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA441D420>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const108.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const108.2
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block analysis pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA441D420>
DEBUG:numba.core.ssa:on stmt: inferred = origsize // known_size
DEBUG:numba.core.ssa:on stmt: $128binary_modulo.5 = origsize % known_size
DEBUG:numba.core.ssa:on stmt: $const130.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = $128binary_modulo.5 == $const130.6
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block analysis pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA441D420>
DEBUG:numba.core.ssa:on stmt: bool138 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $138pred, 148, 140
DEBUG:numba.core.ssa:==== SSA block analysis pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA441D420>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA441D420>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred
DEBUG:numba.core.ssa:on stmt: $const156.3 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $158return_value.4 = cast(value=$const156.3)
DEBUG:numba.core.ssa:on stmt: return $158return_value.4
DEBUG:numba.core.ssa:==== SSA block analysis pass on 160
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA441D420>
DEBUG:numba.core.ssa:on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const162.1 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 161
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA441D420>
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100pred': [(<numba.core.ir.Assign object at 0x0000017AA4422C20>,
                           94)],
             '$10load_global.2': [(<numba.core.ir.Assign object at 0x0000017AA441E020>,
                                   0)],
             '$128binary_modulo.5': [(<numba.core.ir.Assign object at 0x0000017AA4423D90>,
                                      116)],
             '$138pred': [(<numba.core.ir.Assign object at 0x0000017AA442C340>,
                           136)],
             '$140load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA442C580>,
                                    140)],
             '$144call_function.2': [(<numba.core.ir.Assign object at 0x0000017AA442C8E0>,
                                      140)],
             '$14call_function.4': [(<numba.core.ir.Assign object at 0x0000017AA441E320>,
                                     0)],
             '$158return_value.4': [(<numba.core.ir.Assign object at 0x0000017AA442D120>,
                                     148)],
             '$160load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA442D2A0>,
                                    160)],
             '$164call_function.2': [(<numba.core.ir.Assign object at 0x0000017AA442D600>,
                                      160)],
             '$16get_iter.5': [(<numba.core.ir.Assign object at 0x0000017AA441E440>,
                                0)],
             '$18for_iter.1': [(<numba.core.ir.Assign object at 0x0000017AA441E6B0>,
                                18)],
             '$18for_iter.2': [(<numba.core.ir.Assign object at 0x0000017AA441E7D0>,
                                18)],
             '$18for_iter.3': [(<numba.core.ir.Assign object at 0x0000017AA441E8F0>,
                                18)],
             '$20unpack_sequence.2': [(<numba.core.ir.Assign object at 0x0000017AA441EDA0>,
                                       20)],
             '$20unpack_sequence.3': [(<numba.core.ir.Assign object at 0x0000017AA441EEC0>,
                                       20)],
             '$20unpack_sequence.4': [(<numba.core.ir.Assign object at 0x0000017AA441EC50>,
                                       20)],
             '$30compare_op.7': [(<numba.core.ir.Assign object at 0x0000017AA441F4F0>,
                                  20)],
             '$32pred': [(<numba.core.ir.Assign object at 0x0000017AA441F760>,
                          20)],
             '$38inplace_add.3': [(<numba.core.ir.Assign object at 0x0000017AA441FC70>,
                                   34)],
             '$52inplace_multiply.3': [(<numba.core.ir.Assign object at 0x0000017AA4420430>,
                                        48)],
             '$62compare_op.2': [(<numba.core.ir.Assign object at 0x0000017AA44209D0>,
                                  58)],
             '$64pred': [(<numba.core.ir.Assign object at 0x0000017AA4420C40>,
                          58)],
             '$70compare_op.2': [(<numba.core.ir.Assign object at 0x0000017AA44210F0>,
                                  66)],
             '$72pred': [(<numba.core.ir.Assign object at 0x0000017AA4421360>,
                          66)],
             '$74load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA4421540>,
                                   74)],
             '$78call_function.2': [(<numba.core.ir.Assign object at 0x0000017AA44218A0>,
                                     74)],
             '$84return_value.1': [(<numba.core.ir.Assign object at 0x0000017AA4421CC0>,
                                    82)],
             '$90compare_op.2': [(<numba.core.ir.Assign object at 0x0000017AA4422230>,
                                  86)],
             '$92pred': [(<numba.core.ir.Assign object at 0x0000017AA44224A0>,
                          86)],
             '$98compare_op.2': [(<numba.core.ir.Assign object at 0x0000017AA44229B0>,
                                  94)],
             '$const108.2': [(<numba.core.ir.Assign object at 0x0000017AA4423220>,
                              102)],
             '$const130.6': [(<numba.core.ir.Assign object at 0x0000017AA4423EE0>,
                              116)],
             '$const142.1': [(<numba.core.ir.Assign object at 0x0000017AA442C700>,
                              140)],
             '$const156.3': [(<numba.core.ir.Assign object at 0x0000017AA442CFA0>,
                              148)],
             '$const162.1': [(<numba.core.ir.Assign object at 0x0000017AA442D420>,
                              160)],
             '$const28.6': [(<numba.core.ir.Assign object at 0x0000017AA441F340>,
                             20)],
             '$const36.2': [(<numba.core.ir.Assign object at 0x0000017AA441FAC0>,
                             34)],
             '$const60.1': [(<numba.core.ir.Assign object at 0x0000017AA4420820>,
                             58)],
             '$const76.1': [(<numba.core.ir.Assign object at 0x0000017AA44216C0>,
                             74)],
             '$const82.0': [(<numba.core.ir.Assign object at 0x0000017AA4421B40>,
                             82)],
             '$const88.1': [(<numba.core.ir.Assign object at 0x0000017AA4422080>,
                             86)],
             '$const96.1': [(<numba.core.ir.Assign object at 0x0000017AA4422800>,
                             94)],
             '$phi18.0': [(<numba.core.ir.Assign object at 0x0000017AA441CCA0>,
                           0)],
             '$phi20.1': [(<numba.core.ir.Assign object at 0x0000017AA441E5F0>,
                           18)],
             'ax': [(<numba.core.ir.Assign object at 0x0000017AA441EF80>, 20)],
             'bool100': [(<numba.core.ir.Assign object at 0x0000017AA4422B00>,
                          94)],
             'bool138': [(<numba.core.ir.Assign object at 0x0000017AA442C220>,
                          136)],
             'bool32': [(<numba.core.ir.Assign object at 0x0000017AA441F640>,
                         20)],
             'bool64': [(<numba.core.ir.Assign object at 0x0000017AA4420B20>,
                         58)],
             'bool72': [(<numba.core.ir.Assign object at 0x0000017AA4421240>,
                         66)],
             'bool92': [(<numba.core.ir.Assign object at 0x0000017AA4422380>,
                         86)],
             'inferred': [(<numba.core.ir.Assign object at 0x0000017AA4422E60>,
                           102),
                          (<numba.core.ir.Assign object at 0x0000017AA4423910>,
                           116)],
             'known_size': [(<numba.core.ir.Assign object at 0x0000017AA441DD80>,
                             0),
                            (<numba.core.ir.Assign object at 0x0000017AA44204F0>,
                             48)],
             'neg_ax': [(<numba.core.ir.Assign object at 0x0000017AA441FF40>,
                         34)],
             'num_neg_value': [(<numba.core.ir.Assign object at 0x0000017AA441CF70>,
                                0),
                               (<numba.core.ir.Assign object at 0x0000017AA441FD30>,
                                34)],
             'ok': [(<numba.core.ir.Assign object at 0x0000017AA44233D0>, 102),
                    (<numba.core.ir.Assign object at 0x0000017AA442C0D0>, 116)],
             'origsize': [(<numba.core.ir.Assign object at 0x0000017AA441DAB0>,
                           0)],
             's': [(<numba.core.ir.Assign object at 0x0000017AA441F0A0>, 20)],
             'shape': [(<numba.core.ir.Assign object at 0x0000017AA441D9F0>,
                        0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA441D420>
DEBUG:numba.core.ssa:Fix SSA violator on var num_neg_value
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:first assign: num_neg_value
DEBUG:numba.core.ssa:replaced with: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi18.0 = $16get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $18for_iter.1 = iternext(value=$phi18.0)
DEBUG:numba.core.ssa:on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi20.1 = $18for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $18for_iter.3, 20, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $20unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $20unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const28.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $30compare_op.7 = s < $const28.6
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $const36.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value = $38inplace_add.3
DEBUG:numba.core.ssa:replaced with: num_neg_value.1 = $38inplace_add.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size = $52inplace_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $const60.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = num_neg_value == $const60.1
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = origsize != known_size
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const76.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $const82.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $84return_value.1 = cast(value=$const82.0)
DEBUG:numba.core.ssa:on stmt: return $84return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $const88.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = num_neg_value == $const88.1
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 160
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $const96.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $98compare_op.2 = known_size == $const96.1
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 102, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const108.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const108.2
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: inferred = origsize // known_size
DEBUG:numba.core.ssa:on stmt: $128binary_modulo.5 = origsize % known_size
DEBUG:numba.core.ssa:on stmt: $const130.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = $128binary_modulo.5 == $const130.6
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: bool138 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $138pred, 148, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred
DEBUG:numba.core.ssa:on stmt: $const156.3 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $158return_value.4 = cast(value=$const156.3)
DEBUG:numba.core.ssa:on stmt: return $158return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 160
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const162.1 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 161
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000017AA441D510>],
             34: [<numba.core.ir.Assign object at 0x0000017AA441D480>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi18.0 = $16get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $18for_iter.1 = iternext(value=$phi18.0)
DEBUG:numba.core.ssa:on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi20.1 = $18for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $18for_iter.3, 20, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $20unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $20unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const28.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $30compare_op.7 = s < $const28.6
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $const36.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='num_neg_value' stmt=$38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 20 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 20
DEBUG:numba.core.ssa:find_def_from_top label 20
DEBUG:numba.core.ssa:idom 18 from label 20
DEBUG:numba.core.ssa:find_def_from_bottom label 18
DEBUG:numba.core.ssa:find_def_from_top label 18
DEBUG:numba.core.ssa:insert phi node num_neg_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 18
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:find_def_from_bottom label 161
DEBUG:numba.core.ssa:find_def_from_top label 161
DEBUG:numba.core.ssa:insert phi node num_neg_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 161
DEBUG:numba.core.ssa:find_def_from_bottom label 48
DEBUG:numba.core.ssa:find_def_from_top label 48
DEBUG:numba.core.ssa:idom 20 from label 48
DEBUG:numba.core.ssa:find_def_from_bottom label 20
DEBUG:numba.core.ssa:find_def_from_top label 20
DEBUG:numba.core.ssa:idom 18 from label 20
DEBUG:numba.core.ssa:find_def_from_bottom label 18
DEBUG:numba.core.ssa:incoming_def num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047)], incoming_blocks=[0])
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def num_neg_value.1 = $38inplace_add.3
DEBUG:numba.core.ssa:incoming_def num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
DEBUG:numba.core.ssa:replaced with: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value.1 = $38inplace_add.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size = $52inplace_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $const60.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = num_neg_value == $const60.1
DEBUG:numba.core.ssa:find_def var='num_neg_value' stmt=$62compare_op.2 = num_neg_value == $const60.1
DEBUG:numba.core.ssa:find_def_from_top label 58
DEBUG:numba.core.ssa:idom 18 from label 58
DEBUG:numba.core.ssa:find_def_from_bottom label 18
DEBUG:numba.core.ssa:replaced with: $62compare_op.2 = num_neg_value.2 == $const60.1
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = origsize != known_size
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const76.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $const82.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $84return_value.1 = cast(value=$const82.0)
DEBUG:numba.core.ssa:on stmt: return $84return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $const88.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = num_neg_value == $const88.1
DEBUG:numba.core.ssa:find_def var='num_neg_value' stmt=$90compare_op.2 = num_neg_value == $const88.1
DEBUG:numba.core.ssa:find_def_from_top label 86
DEBUG:numba.core.ssa:idom 58 from label 86
DEBUG:numba.core.ssa:find_def_from_bottom label 58
DEBUG:numba.core.ssa:find_def_from_top label 58
DEBUG:numba.core.ssa:idom 18 from label 58
DEBUG:numba.core.ssa:find_def_from_bottom label 18
DEBUG:numba.core.ssa:replaced with: $90compare_op.2 = num_neg_value.2 == $const88.1
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 160
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $const96.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $98compare_op.2 = known_size == $const96.1
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 102, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const108.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const108.2
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: inferred = origsize // known_size
DEBUG:numba.core.ssa:on stmt: $128binary_modulo.5 = origsize % known_size
DEBUG:numba.core.ssa:on stmt: $const130.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = $128binary_modulo.5 == $const130.6
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: bool138 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $138pred, 148, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred
DEBUG:numba.core.ssa:on stmt: $const156.3 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $158return_value.4 = cast(value=$const156.3)
DEBUG:numba.core.ssa:on stmt: return $158return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 160
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const162.1 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 161
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:Fix SSA violator on var known_size
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:first assign: known_size
DEBUG:numba.core.ssa:replaced with: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi18.0 = $16get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
DEBUG:numba.core.ssa:on stmt: $18for_iter.1 = iternext(value=$phi18.0)
DEBUG:numba.core.ssa:on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi20.1 = $18for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $18for_iter.3, 20, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $20unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $20unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const28.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $30compare_op.7 = s < $const28.6
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $const36.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value.1 = $38inplace_add.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size = $52inplace_multiply.3
DEBUG:numba.core.ssa:replaced with: known_size.1 = $52inplace_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $const60.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = origsize != known_size
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const76.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $const82.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $84return_value.1 = cast(value=$const82.0)
DEBUG:numba.core.ssa:on stmt: return $84return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $const88.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 160
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $const96.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $98compare_op.2 = known_size == $const96.1
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 102, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const108.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const108.2
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: inferred = origsize // known_size
DEBUG:numba.core.ssa:on stmt: $128binary_modulo.5 = origsize % known_size
DEBUG:numba.core.ssa:on stmt: $const130.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = $128binary_modulo.5 == $const130.6
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: bool138 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $138pred, 148, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred
DEBUG:numba.core.ssa:on stmt: $const156.3 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $158return_value.4 = cast(value=$const156.3)
DEBUG:numba.core.ssa:on stmt: return $158return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 160
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const162.1 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 161
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000017AA441D4E0>],
             48: [<numba.core.ir.Assign object at 0x0000017AA441CE50>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi18.0 = $16get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
DEBUG:numba.core.ssa:on stmt: $18for_iter.1 = iternext(value=$phi18.0)
DEBUG:numba.core.ssa:on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi20.1 = $18for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $18for_iter.3, 20, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $20unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $20unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const28.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $30compare_op.7 = s < $const28.6
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $const36.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value.1 = $38inplace_add.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='known_size' stmt=$52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 48
DEBUG:numba.core.ssa:idom 20 from label 48
DEBUG:numba.core.ssa:find_def_from_bottom label 20
DEBUG:numba.core.ssa:find_def_from_top label 20
DEBUG:numba.core.ssa:idom 18 from label 20
DEBUG:numba.core.ssa:find_def_from_bottom label 18
DEBUG:numba.core.ssa:find_def_from_top label 18
DEBUG:numba.core.ssa:insert phi node known_size.2 = phi(incoming_values=[], incoming_blocks=[]) at 18
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def known_size = const(int, 1)
DEBUG:numba.core.ssa:find_def_from_bottom label 161
DEBUG:numba.core.ssa:find_def_from_top label 161
DEBUG:numba.core.ssa:insert phi node known_size.3 = phi(incoming_values=[], incoming_blocks=[]) at 161
DEBUG:numba.core.ssa:find_def_from_bottom label 48
DEBUG:numba.core.ssa:incoming_def known_size.1 = $52inplace_multiply.3
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 20 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 20
DEBUG:numba.core.ssa:find_def_from_top label 20
DEBUG:numba.core.ssa:idom 18 from label 20
DEBUG:numba.core.ssa:find_def_from_bottom label 18
DEBUG:numba.core.ssa:incoming_def known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048)], incoming_blocks=[0])
DEBUG:numba.core.ssa:incoming_def known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
DEBUG:numba.core.ssa:replaced with: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size.1 = $52inplace_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $const60.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = origsize != known_size
DEBUG:numba.core.ssa:find_def var='known_size' stmt=$70compare_op.2 = origsize != known_size
DEBUG:numba.core.ssa:find_def_from_top label 66
DEBUG:numba.core.ssa:idom 58 from label 66
DEBUG:numba.core.ssa:find_def_from_bottom label 58
DEBUG:numba.core.ssa:find_def_from_top label 58
DEBUG:numba.core.ssa:idom 18 from label 58
DEBUG:numba.core.ssa:find_def_from_bottom label 18
DEBUG:numba.core.ssa:replaced with: $70compare_op.2 = origsize != known_size.2
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const76.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $const82.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $84return_value.1 = cast(value=$const82.0)
DEBUG:numba.core.ssa:on stmt: return $84return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $const88.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 160
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $const96.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $98compare_op.2 = known_size == $const96.1
DEBUG:numba.core.ssa:find_def var='known_size' stmt=$98compare_op.2 = known_size == $const96.1
DEBUG:numba.core.ssa:find_def_from_top label 94
DEBUG:numba.core.ssa:idom 86 from label 94
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:find_def_from_top label 86
DEBUG:numba.core.ssa:idom 58 from label 86
DEBUG:numba.core.ssa:find_def_from_bottom label 58
DEBUG:numba.core.ssa:find_def_from_top label 58
DEBUG:numba.core.ssa:idom 18 from label 58
DEBUG:numba.core.ssa:find_def_from_bottom label 18
DEBUG:numba.core.ssa:replaced with: $98compare_op.2 = known_size.2 == $const96.1
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 102, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const108.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const108.2
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: inferred = origsize // known_size
DEBUG:numba.core.ssa:find_def var='known_size' stmt=inferred = origsize // known_size
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 94 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 94
DEBUG:numba.core.ssa:find_def_from_top label 94
DEBUG:numba.core.ssa:idom 86 from label 94
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:find_def_from_top label 86
DEBUG:numba.core.ssa:idom 58 from label 86
DEBUG:numba.core.ssa:find_def_from_bottom label 58
DEBUG:numba.core.ssa:find_def_from_top label 58
DEBUG:numba.core.ssa:idom 18 from label 58
DEBUG:numba.core.ssa:find_def_from_bottom label 18
DEBUG:numba.core.ssa:replaced with: inferred = origsize // known_size.2
DEBUG:numba.core.ssa:on stmt: $128binary_modulo.5 = origsize % known_size
DEBUG:numba.core.ssa:find_def var='known_size' stmt=$128binary_modulo.5 = origsize % known_size
DEBUG:numba.core.ssa:find_def_from_top label 116
DEBUG:numba.core.ssa:idom 94 from label 116
DEBUG:numba.core.ssa:find_def_from_bottom label 94
DEBUG:numba.core.ssa:find_def_from_top label 94
DEBUG:numba.core.ssa:idom 86 from label 94
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:find_def_from_top label 86
DEBUG:numba.core.ssa:idom 58 from label 86
DEBUG:numba.core.ssa:find_def_from_bottom label 58
DEBUG:numba.core.ssa:find_def_from_top label 58
DEBUG:numba.core.ssa:idom 18 from label 58
DEBUG:numba.core.ssa:find_def_from_bottom label 18
DEBUG:numba.core.ssa:replaced with: $128binary_modulo.5 = origsize % known_size.2
DEBUG:numba.core.ssa:on stmt: $const130.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = $128binary_modulo.5 == $const130.6
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: bool138 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $138pred, 148, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred
DEBUG:numba.core.ssa:on stmt: $const156.3 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $158return_value.4 = cast(value=$const156.3)
DEBUG:numba.core.ssa:on stmt: return $158return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 160
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const162.1 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 161
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441CD30>
DEBUG:numba.core.ssa:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:Fix SSA violator on var inferred
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi18.0 = $16get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 161])
DEBUG:numba.core.ssa:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
DEBUG:numba.core.ssa:on stmt: $18for_iter.1 = iternext(value=$phi18.0)
DEBUG:numba.core.ssa:on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi20.1 = $18for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $18for_iter.3, 20, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $20unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $20unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const28.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $30compare_op.7 = s < $const28.6
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $const36.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value.1 = $38inplace_add.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size.1 = $52inplace_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $const60.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = origsize != known_size.2
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const76.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $const82.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $84return_value.1 = cast(value=$const82.0)
DEBUG:numba.core.ssa:on stmt: return $84return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $const88.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 160
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $const96.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $98compare_op.2 = known_size.2 == $const96.1
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 102, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:first assign: inferred
DEBUG:numba.core.ssa:replaced with: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const108.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const108.2
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: inferred = origsize // known_size.2
DEBUG:numba.core.ssa:replaced with: inferred.1 = origsize // known_size.2
DEBUG:numba.core.ssa:on stmt: $128binary_modulo.5 = origsize % known_size.2
DEBUG:numba.core.ssa:on stmt: $const130.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = $128binary_modulo.5 == $const130.6
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: bool138 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $138pred, 148, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred
DEBUG:numba.core.ssa:on stmt: $const156.3 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $158return_value.4 = cast(value=$const156.3)
DEBUG:numba.core.ssa:on stmt: return $158return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 160
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const162.1 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 161
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
DEBUG:numba.core.ssa:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {102: [<numba.core.ir.Assign object at 0x0000017AA442E6B0>],
             116: [<numba.core.ir.Assign object at 0x0000017AA442E6E0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi18.0 = $16get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 161])
DEBUG:numba.core.ssa:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
DEBUG:numba.core.ssa:on stmt: $18for_iter.1 = iternext(value=$phi18.0)
DEBUG:numba.core.ssa:on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi20.1 = $18for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $18for_iter.3, 20, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $20unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $20unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const28.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $30compare_op.7 = s < $const28.6
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $const36.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value.1 = $38inplace_add.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size.1 = $52inplace_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $const60.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = origsize != known_size.2
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const76.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $const82.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $84return_value.1 = cast(value=$const82.0)
DEBUG:numba.core.ssa:on stmt: return $84return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $const88.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 160
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $const96.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $98compare_op.2 = known_size.2 == $const96.1
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 102, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const108.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const108.2
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: inferred.1 = origsize // known_size.2
DEBUG:numba.core.ssa:on stmt: $128binary_modulo.5 = origsize % known_size.2
DEBUG:numba.core.ssa:on stmt: $const130.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = $128binary_modulo.5 == $const130.6
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: bool138 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $138pred, 148, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred
DEBUG:numba.core.ssa:find_def var='inferred' stmt=shape[neg_ax] = inferred
DEBUG:numba.core.ssa:find_def_from_top label 148
DEBUG:numba.core.ssa:idom 136 from label 148
DEBUG:numba.core.ssa:find_def_from_bottom label 136
DEBUG:numba.core.ssa:find_def_from_top label 136
DEBUG:numba.core.ssa:insert phi node inferred.2 = phi(incoming_values=[], incoming_blocks=[]) at 136
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:incoming_def inferred.1 = origsize // known_size.2
DEBUG:numba.core.ssa:find_def_from_bottom label 102
DEBUG:numba.core.ssa:incoming_def inferred = const(int, 0)
DEBUG:numba.core.ssa:replaced with: shape[neg_ax] = inferred.2
DEBUG:numba.core.ssa:on stmt: $const156.3 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $158return_value.4 = cast(value=$const156.3)
DEBUG:numba.core.ssa:on stmt: return $158return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 160
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const162.1 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 161
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
DEBUG:numba.core.ssa:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:Fix SSA violator on var ok
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D810>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi18.0 = $16get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D810>
DEBUG:numba.core.ssa:on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 161])
DEBUG:numba.core.ssa:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
DEBUG:numba.core.ssa:on stmt: $18for_iter.1 = iternext(value=$phi18.0)
DEBUG:numba.core.ssa:on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi20.1 = $18for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $18for_iter.3, 20, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D810>
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $20unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $20unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const28.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $30compare_op.7 = s < $const28.6
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D810>
DEBUG:numba.core.ssa:on stmt: $const36.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value.1 = $38inplace_add.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D810>
DEBUG:numba.core.ssa:on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size.1 = $52inplace_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D810>
DEBUG:numba.core.ssa:on stmt: $const60.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D810>
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = origsize != known_size.2
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D810>
DEBUG:numba.core.ssa:on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const76.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D810>
DEBUG:numba.core.ssa:on stmt: $const82.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $84return_value.1 = cast(value=$const82.0)
DEBUG:numba.core.ssa:on stmt: return $84return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D810>
DEBUG:numba.core.ssa:on stmt: $const88.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 160
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D810>
DEBUG:numba.core.ssa:on stmt: $const96.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $98compare_op.2 = known_size.2 == $const96.1
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 102, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D810>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const108.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const108.2
DEBUG:numba.core.ssa:first assign: ok
DEBUG:numba.core.ssa:replaced with: ok = origsize == $const108.2
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D810>
DEBUG:numba.core.ssa:on stmt: inferred.1 = origsize // known_size.2
DEBUG:numba.core.ssa:on stmt: $128binary_modulo.5 = origsize % known_size.2
DEBUG:numba.core.ssa:on stmt: $const130.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = $128binary_modulo.5 == $const130.6
DEBUG:numba.core.ssa:replaced with: ok.1 = $128binary_modulo.5 == $const130.6
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D810>
DEBUG:numba.core.ssa:on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[116, 102])
DEBUG:numba.core.ssa:on stmt: bool138 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $138pred, 148, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D810>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D810>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred.2
DEBUG:numba.core.ssa:on stmt: $const156.3 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $158return_value.4 = cast(value=$const156.3)
DEBUG:numba.core.ssa:on stmt: return $158return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 160
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D810>
DEBUG:numba.core.ssa:on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const162.1 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 161
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441D810>
DEBUG:numba.core.ssa:on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
DEBUG:numba.core.ssa:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {102: [<numba.core.ir.Assign object at 0x0000017AA442E530>],
             116: [<numba.core.ir.Assign object at 0x0000017AA442EE90>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi18.0 = $16get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 161])
DEBUG:numba.core.ssa:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
DEBUG:numba.core.ssa:on stmt: $18for_iter.1 = iternext(value=$phi18.0)
DEBUG:numba.core.ssa:on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi20.1 = $18for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $18for_iter.3, 20, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $20unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $20unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const28.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $30compare_op.7 = s < $const28.6
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $const36.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value.1 = $38inplace_add.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size.1 = $52inplace_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $const60.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = origsize != known_size.2
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const76.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $const82.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $84return_value.1 = cast(value=$const82.0)
DEBUG:numba.core.ssa:on stmt: return $84return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $const88.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 160
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $const96.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $98compare_op.2 = known_size.2 == $const96.1
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 102, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const108.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const108.2
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: inferred.1 = origsize // known_size.2
DEBUG:numba.core.ssa:on stmt: $128binary_modulo.5 = origsize % known_size.2
DEBUG:numba.core.ssa:on stmt: $const130.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok.1 = $128binary_modulo.5 == $const130.6
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[116, 102])
DEBUG:numba.core.ssa:on stmt: bool138 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='ok' stmt=$138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 136
DEBUG:numba.core.ssa:insert phi node ok.2 = phi(incoming_values=[], incoming_blocks=[]) at 136
DEBUG:numba.core.ssa:find_def_from_bottom label 116
DEBUG:numba.core.ssa:incoming_def ok.1 = $128binary_modulo.5 == $const130.6
DEBUG:numba.core.ssa:find_def_from_bottom label 102
DEBUG:numba.core.ssa:incoming_def ok = origsize == $const108.2
DEBUG:numba.core.ssa:replaced with: $138pred = call bool138(ok.2, func=bool138, args=(Var(ok.2, arrayobj.py:2068),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $138pred, 148, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred.2
DEBUG:numba.core.ssa:on stmt: $const156.3 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $158return_value.4 = cast(value=$const156.3)
DEBUG:numba.core.ssa:on stmt: return $158return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 160
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const162.1 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 161
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
DEBUG:numba.core.ssa:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:Fix SSA violator on var neg_ax
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi18.0 = $16get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 161])
DEBUG:numba.core.ssa:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
DEBUG:numba.core.ssa:on stmt: $18for_iter.1 = iternext(value=$phi18.0)
DEBUG:numba.core.ssa:on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi20.1 = $18for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $18for_iter.3, 20, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $20unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $20unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const28.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $30compare_op.7 = s < $const28.6
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $const36.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value.1 = $38inplace_add.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:first assign: neg_ax
DEBUG:numba.core.ssa:replaced with: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size.1 = $52inplace_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $const60.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = origsize != known_size.2
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const76.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $const82.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $84return_value.1 = cast(value=$const82.0)
DEBUG:numba.core.ssa:on stmt: return $84return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $const88.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 160
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $const96.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $98compare_op.2 = known_size.2 == $const96.1
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 102, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const108.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const108.2
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: inferred.1 = origsize // known_size.2
DEBUG:numba.core.ssa:on stmt: $128binary_modulo.5 = origsize % known_size.2
DEBUG:numba.core.ssa:on stmt: $const130.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok.1 = $128binary_modulo.5 == $const130.6
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2067), Var(ok, arrayobj.py:2064)], incoming_blocks=[116, 102])
DEBUG:numba.core.ssa:on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[116, 102])
DEBUG:numba.core.ssa:on stmt: bool138 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $138pred = call bool138(ok.2, func=bool138, args=(Var(ok.2, arrayobj.py:2068),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $138pred, 148, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred.2
DEBUG:numba.core.ssa:on stmt: $const156.3 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $158return_value.4 = cast(value=$const156.3)
DEBUG:numba.core.ssa:on stmt: return $158return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 160
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const162.1 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 161
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA441DC90>
DEBUG:numba.core.ssa:on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
DEBUG:numba.core.ssa:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {34: [<numba.core.ir.Assign object at 0x0000017AA441C8E0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi18.0 = $16get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 161])
DEBUG:numba.core.ssa:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
DEBUG:numba.core.ssa:on stmt: $18for_iter.1 = iternext(value=$phi18.0)
DEBUG:numba.core.ssa:on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi20.1 = $18for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $18for_iter.3, 20, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $20unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $20unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const28.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $30compare_op.7 = s < $const28.6
DEBUG:numba.core.ssa:on stmt: bool32 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $32pred, 34, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $const36.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value.1 = $38inplace_add.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size.1 = $52inplace_multiply.3
DEBUG:numba.core.ssa:on stmt: jump 161
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $const60.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
DEBUG:numba.core.ssa:on stmt: bool64 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $64pred, 66, 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = origsize != known_size.2
DEBUG:numba.core.ssa:on stmt: bool72 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $72pred, 74, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 74
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const76.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $const82.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $84return_value.1 = cast(value=$const82.0)
DEBUG:numba.core.ssa:on stmt: return $84return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $const88.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
DEBUG:numba.core.ssa:on stmt: bool92 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $92pred, 94, 160
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 94
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $const96.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $98compare_op.2 = known_size.2 == $const96.1
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 102, 116
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const108.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const108.2
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: inferred.1 = origsize // known_size.2
DEBUG:numba.core.ssa:on stmt: $128binary_modulo.5 = origsize % known_size.2
DEBUG:numba.core.ssa:on stmt: $const130.6 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok.1 = $128binary_modulo.5 == $const130.6
DEBUG:numba.core.ssa:on stmt: jump 136
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 136
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2067), Var(ok, arrayobj.py:2064)], incoming_blocks=[116, 102])
DEBUG:numba.core.ssa:on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[116, 102])
DEBUG:numba.core.ssa:on stmt: bool138 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $138pred = call bool138(ok.2, func=bool138, args=(Var(ok.2, arrayobj.py:2068),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $138pred, 148, 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred.2
DEBUG:numba.core.ssa:find_def var='neg_ax' stmt=shape[neg_ax] = inferred.2
DEBUG:numba.core.ssa:find_def_from_top label 148
DEBUG:numba.core.ssa:idom 136 from label 148
DEBUG:numba.core.ssa:find_def_from_bottom label 136
DEBUG:numba.core.ssa:find_def_from_top label 136
DEBUG:numba.core.ssa:idom 94 from label 136
DEBUG:numba.core.ssa:find_def_from_bottom label 94
DEBUG:numba.core.ssa:find_def_from_top label 94
DEBUG:numba.core.ssa:idom 86 from label 94
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:find_def_from_top label 86
DEBUG:numba.core.ssa:idom 58 from label 86
DEBUG:numba.core.ssa:find_def_from_bottom label 58
DEBUG:numba.core.ssa:find_def_from_top label 58
DEBUG:numba.core.ssa:idom 18 from label 58
DEBUG:numba.core.ssa:find_def_from_bottom label 18
DEBUG:numba.core.ssa:find_def_from_top label 18
DEBUG:numba.core.ssa:insert phi node neg_ax.1 = phi(incoming_values=[], incoming_blocks=[]) at 18
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:find_def_from_top label 0
DEBUG:numba.core.ssa:incoming_def <class 'numba.core.ssa.UndefinedVariable'>
DEBUG:numba.core.ssa:find_def_from_bottom label 161
DEBUG:numba.core.ssa:find_def_from_top label 161
DEBUG:numba.core.ssa:insert phi node neg_ax.2 = phi(incoming_values=[], incoming_blocks=[]) at 161
DEBUG:numba.core.ssa:find_def_from_bottom label 48
DEBUG:numba.core.ssa:find_def_from_top label 48
DEBUG:numba.core.ssa:idom 20 from label 48
DEBUG:numba.core.ssa:find_def_from_bottom label 20
DEBUG:numba.core.ssa:find_def_from_top label 20
DEBUG:numba.core.ssa:idom 18 from label 20
DEBUG:numba.core.ssa:find_def_from_bottom label 18
DEBUG:numba.core.ssa:incoming_def neg_ax.1 = phi(incoming_values=[Undefined], incoming_blocks=[0])
DEBUG:numba.core.ssa:find_def_from_bottom label 34
DEBUG:numba.core.ssa:incoming_def neg_ax = ax
DEBUG:numba.core.ssa:incoming_def neg_ax.2 = phi(incoming_values=[Var(neg_ax.1, arrayobj.py:2070), Var(neg_ax, arrayobj.py:2052)], incoming_blocks=[48, 34])
DEBUG:numba.core.ssa:replaced with: shape[neg_ax.1] = inferred.2
DEBUG:numba.core.ssa:on stmt: $const156.3 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $158return_value.4 = cast(value=$const156.3)
DEBUG:numba.core.ssa:on stmt: return $158return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 160
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const162.1 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 161
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA441D450>
DEBUG:numba.core.ssa:on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
DEBUG:numba.core.ssa:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	LOAD_FAST(arg=0, lineno=483)
           4	LOAD_FAST(arg=1, lineno=483)
           6	COMPARE_OP(arg=4, lineno=483)
           8	RETURN_VALUE(arg=None, lineno=483)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=481)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=483)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=483)
DEBUG:numba.core.byteflow:stack ['$a2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=COMPARE_OP(arg=4, lineno=483)
DEBUG:numba.core.byteflow:stack ['$a2.0', '$min_val4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=483)
DEBUG:numba.core.byteflow:stack ['$6compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'res': '$min_val4.1'}), (6, {'lhs': '$a2.0', 'rhs': '$min_val4.1', 'res': '$6compare_op.2'}), (8, {'retval': '$6compare_op.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA44BC0A0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: min_val = arg(1, name=min_val)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = a > min_val
DEBUG:numba.core.ssa:on stmt: $8return_value.3 = cast(value=$6compare_op.2)
DEBUG:numba.core.ssa:on stmt: return $8return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$6compare_op.2': [(<numba.core.ir.Assign object at 0x0000017AA44A51E0>,
                                 0)],
             '$8return_value.3': [(<numba.core.ir.Assign object at 0x0000017AA44A4B50>,
                                   0)],
             'a': [(<numba.core.ir.Assign object at 0x0000017AA44BCA00>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x0000017AA44BCA60>,
                          0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA44BC0A0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	LOAD_DEREF(arg=0, lineno=440)
           4	STORE_FAST(arg=1, lineno=440)
           6	LOAD_GLOBAL(arg=0, lineno=441)
           8	LOAD_METHOD(arg=1, lineno=441)
          10	LOAD_FAST(arg=0, lineno=441)
          12	CALL_METHOD(arg=1, lineno=441)
          14	GET_ITER(arg=None, lineno=441)
>         16	FOR_ITER(arg=8, lineno=441)
          18	STORE_FAST(arg=2, lineno=441)
          20	LOAD_FAST(arg=1, lineno=442)
          22	LOAD_FAST(arg=2, lineno=442)
          24	LOAD_METHOD(arg=2, lineno=442)
          26	CALL_METHOD(arg=0, lineno=442)
          28	INPLACE_ADD(arg=None, lineno=442)
          30	STORE_FAST(arg=1, lineno=442)
          32	JUMP_ABSOLUTE(arg=9, lineno=442)
>         34	LOAD_FAST(arg=1, lineno=443)
          36	LOAD_FAST(arg=0, lineno=443)
          38	LOAD_ATTR(arg=3, lineno=443)
          40	BINARY_TRUE_DIVIDE(arg=None, lineno=443)
          42	RETURN_VALUE(arg=None, lineno=443)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=437)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_DEREF(arg=0, lineno=440)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack ['$2load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=441)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_METHOD(arg=1, lineno=441)
DEBUG:numba.core.byteflow:stack ['$6load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=441)
DEBUG:numba.core.byteflow:stack ['$8load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=CALL_METHOD(arg=1, lineno=441)
DEBUG:numba.core.byteflow:stack ['$8load_method.2', '$a10.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=GET_ITER(arg=None, lineno=441)
DEBUG:numba.core.byteflow:stack ['$12call_method.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=('$14get_iter.5',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi16.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=16 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=16, inst=FOR_ITER(arg=8, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi16.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=34, stack=(), blockstack=(), npush=0), Edge(pc=18, stack=('$phi16.0', '$16for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=18 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=34 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=443)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=443)
DEBUG:numba.core.byteflow:stack ['$c34.0']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_ATTR(arg=3, lineno=443)
DEBUG:numba.core.byteflow:stack ['$c34.0', '$a36.1']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=443)
DEBUG:numba.core.byteflow:stack ['$c34.0', '$38load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=443)
DEBUG:numba.core.byteflow:stack ['$40binary_true_divide.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=18 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi18.0', '$phi18.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=18 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=2, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$phi18.1']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=442)
DEBUG:numba.core.byteflow:stack ['$phi18.0']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=2, lineno=442)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$c20.2']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_METHOD(arg=2, lineno=442)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$c20.2', '$v22.3']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL_METHOD(arg=0, lineno=442)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$c20.2', '$24load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=INPLACE_ADD(arg=None, lineno=442)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$c20.2', '$26call_method.5']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_FAST(arg=1, lineno=442)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$28inplace_add.6']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=JUMP_ABSOLUTE(arg=9, lineno=442)
DEBUG:numba.core.byteflow:stack ['$phi18.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=('$phi18.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=18 nstack_initial=2): {'$phi18.1'},
             State(pc_initial=34 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi16.0': State(pc_initial=0 nstack_initial=0),
 '$phi18.1': State(pc_initial=16 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2))},
             '$phi18.0': {('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi16.0': {('$14get_iter.5', State(pc_initial=0 nstack_initial=0))},
 '$phi18.1': {('$16for_iter.2', State(pc_initial=16 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi16.0': '$14get_iter.5'},
             State(pc_initial=16 nstack_initial=1): {'$phi18.1': '$16for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'value': '$2load_deref.0'}), (6, {'res': '$6load_global.1'}), (8, {'item': '$6load_global.1', 'res': '$8load_method.2'}), (10, {'res': '$a10.3'}), (12, {'func': '$8load_method.2', 'args': ['$a10.3'], 'res': '$12call_method.4'}), (14, {'value': '$12call_method.4', 'res': '$14get_iter.5'})), outgoing_phis={'$phi16.0': '$14get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$14get_iter.5',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'iterator': '$phi16.0', 'pair': '$16for_iter.1', 'indval': '$16for_iter.2', 'pred': '$16for_iter.3'}),), outgoing_phis={'$phi18.1': '$16for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: (), 18: ('$phi16.0', '$16for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=18 nstack_initial=2):
AdaptBlockInfo(insts=((18, {'value': '$phi18.1'}), (20, {'res': '$c20.2'}), (22, {'res': '$v22.3'}), (24, {'item': '$v22.3', 'res': '$24load_method.4'}), (26, {'func': '$24load_method.4', 'args': [], 'res': '$26call_method.5'}), (28, {'lhs': '$c20.2', 'rhs': '$26call_method.5', 'res': '$28inplace_add.6'}), (30, {'value': '$28inplace_add.6'}), (32, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$phi18.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$c34.0'}), (36, {'res': '$a36.1'}), (38, {'item': '$a36.1', 'res': '$38load_attr.2'}), (40, {'lhs': '$c34.0', 'rhs': '$38load_attr.2', 'res': '$40binary_true_divide.3'}), (42, {'retval': '$40binary_true_divide.3', 'castval': '$42return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $6load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$6load_global.1']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    jump 16                                  []
label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
label 18:
    v = $phi18.1                             ['$phi18.1', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    jump 16                                  []
label 34:
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA457C940>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:on stmt: $6load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
DEBUG:numba.core.ssa:on stmt: $phi16.0 = $14get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block analysis pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA457C940>
DEBUG:numba.core.ssa:on stmt: $16for_iter.1 = iternext(value=$phi16.0)
DEBUG:numba.core.ssa:on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi18.1 = $16for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $16for_iter.3, 18, 34
DEBUG:numba.core.ssa:==== SSA block analysis pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA457C940>
DEBUG:numba.core.ssa:on stmt: v = $phi18.1
DEBUG:numba.core.ssa:on stmt: $24load_method.4 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c = $28inplace_add.6
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA457C940>
DEBUG:numba.core.ssa:on stmt: $38load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $40binary_true_divide.3 = c / $38load_attr.2
DEBUG:numba.core.ssa:on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
DEBUG:numba.core.ssa:on stmt: return $42return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12call_method.4': [(<numba.core.ir.Assign object at 0x0000017AA44BCA30>,
                                   0)],
             '$14get_iter.5': [(<numba.core.ir.Assign object at 0x0000017AA441C1C0>,
                                0)],
             '$16for_iter.1': [(<numba.core.ir.Assign object at 0x0000017AA456A260>,
                                16)],
             '$16for_iter.2': [(<numba.core.ir.Assign object at 0x0000017AA456A140>,
                                16)],
             '$16for_iter.3': [(<numba.core.ir.Assign object at 0x0000017AA456A020>,
                                16)],
             '$24load_method.4': [(<numba.core.ir.Assign object at 0x0000017AA456A560>,
                                   18)],
             '$26call_method.5': [(<numba.core.ir.Assign object at 0x0000017AA4569750>,
                                   18)],
             '$28inplace_add.6': [(<numba.core.ir.Assign object at 0x0000017AA4569B40>,
                                   18)],
             '$38load_attr.2': [(<numba.core.ir.Assign object at 0x0000017AA456A8C0>,
                                 34)],
             '$40binary_true_divide.3': [(<numba.core.ir.Assign object at 0x0000017AA456AA70>,
                                          34)],
             '$42return_value.4': [(<numba.core.ir.Assign object at 0x0000017AA456ABC0>,
                                    34)],
             '$6load_global.1': [(<numba.core.ir.Assign object at 0x0000017AA43F6E00>,
                                  0)],
             '$8load_method.2': [(<numba.core.ir.Assign object at 0x0000017AA43F6C80>,
                                  0)],
             '$phi16.0': [(<numba.core.ir.Assign object at 0x0000017AA43F7310>,
                           0)],
             '$phi18.1': [(<numba.core.ir.Assign object at 0x0000017AA456A320>,
                           16)],
             'a': [(<numba.core.ir.Assign object at 0x0000017AA43F6500>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x0000017AA43F4DF0>, 0),
                   (<numba.core.ir.Assign object at 0x0000017AA4569D50>, 18)],
             'v': [(<numba.core.ir.Assign object at 0x0000017AA45695D0>, 18)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA456BEE0>
DEBUG:numba.core.ssa:Fix SSA violator on var c
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA456BE50>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:first assign: c
DEBUG:numba.core.ssa:replaced with: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:on stmt: $6load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
DEBUG:numba.core.ssa:on stmt: $phi16.0 = $14get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA456BE50>
DEBUG:numba.core.ssa:on stmt: $16for_iter.1 = iternext(value=$phi16.0)
DEBUG:numba.core.ssa:on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi18.1 = $16for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $16for_iter.3, 18, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA456BE50>
DEBUG:numba.core.ssa:on stmt: v = $phi18.1
DEBUG:numba.core.ssa:on stmt: $24load_method.4 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c = $28inplace_add.6
DEBUG:numba.core.ssa:replaced with: c.1 = $28inplace_add.6
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA456BE50>
DEBUG:numba.core.ssa:on stmt: $38load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $40binary_true_divide.3 = c / $38load_attr.2
DEBUG:numba.core.ssa:on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
DEBUG:numba.core.ssa:on stmt: return $42return_value.4
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000017AA456BA00>],
             18: [<numba.core.ir.Assign object at 0x0000017AA456BDF0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA456BE50>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:on stmt: $6load_global.1 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
DEBUG:numba.core.ssa:on stmt: $phi16.0 = $14get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA456BE50>
DEBUG:numba.core.ssa:on stmt: $16for_iter.1 = iternext(value=$phi16.0)
DEBUG:numba.core.ssa:on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi18.1 = $16for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $16for_iter.3, 18, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA456BE50>
DEBUG:numba.core.ssa:on stmt: v = $phi18.1
DEBUG:numba.core.ssa:on stmt: $24load_method.4 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='c' stmt=$28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 18
DEBUG:numba.core.ssa:idom 16 from label 18
DEBUG:numba.core.ssa:find_def_from_bottom label 16
DEBUG:numba.core.ssa:find_def_from_top label 16
DEBUG:numba.core.ssa:insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 16
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 18
DEBUG:numba.core.ssa:incoming_def c.1 = $28inplace_add.6
DEBUG:numba.core.ssa:replaced with: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c.1 = $28inplace_add.6
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA456BE50>
DEBUG:numba.core.ssa:on stmt: $38load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $40binary_true_divide.3 = c / $38load_attr.2
DEBUG:numba.core.ssa:find_def var='c' stmt=$40binary_true_divide.3 = c / $38load_attr.2
DEBUG:numba.core.ssa:find_def_from_top label 34
DEBUG:numba.core.ssa:idom 16 from label 34
DEBUG:numba.core.ssa:find_def_from_bottom label 16
DEBUG:numba.core.ssa:replaced with: $40binary_true_divide.3 = c.2 / $38load_attr.2
DEBUG:numba.core.ssa:on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
DEBUG:numba.core.ssa:on stmt: return $42return_value.4
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=1)
           4	LOAD_CONST(arg=1, lineno=1)
           6	COMPARE_OP(arg=4, lineno=1)
           8	RETURN_VALUE(arg=None, lineno=1)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1)
DEBUG:numba.core.byteflow:stack ['$ith_distances_12.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=COMPARE_OP(arg=4, lineno=1)
DEBUG:numba.core.byteflow:stack ['$ith_distances_12.0', '$const4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack ['$6compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$ith_distances_12.0'}), (4, {'res': '$const4.1'}), (6, {'lhs': '$ith_distances_12.0', 'rhs': '$const4.1', 'res': '$6compare_op.2'}), (8, {'retval': '$6compare_op.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    ith_distances_1 = arg(0, name=ith_distances_1) ['ith_distances_1']
    $const4.1 = const(float, 0.0)            ['$const4.1']
    $6compare_op.2 = ith_distances_1 > $const4.1 ['$6compare_op.2', '$const4.1', 'ith_distances_1']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA45BE3E0>
DEBUG:numba.core.ssa:on stmt: ith_distances_1 = arg(0, name=ith_distances_1)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = ith_distances_1 > $const4.1
DEBUG:numba.core.ssa:on stmt: $8return_value.3 = cast(value=$6compare_op.2)
DEBUG:numba.core.ssa:on stmt: return $8return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$6compare_op.2': [(<numba.core.ir.Assign object at 0x0000017AA45BD990>,
                                 0)],
             '$8return_value.3': [(<numba.core.ir.Assign object at 0x0000017AA45BDAE0>,
                                   0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x0000017AA45BD7E0>,
                            0)],
             'ith_distances_1': [(<numba.core.ir.Assign object at 0x0000017AA45BCCA0>,
                                  0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA45BE3E0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=351)
           2	LOAD_FAST(arg=0, lineno=409)
           4	LOAD_ATTR(arg=0, lineno=409)
           6	LOAD_CONST(arg=1, lineno=409)
           8	BINARY_SUBSCR(arg=None, lineno=409)
          10	STORE_FAST(arg=6, lineno=409)
          12	LOAD_FAST(arg=0, lineno=410)
          14	LOAD_ATTR(arg=0, lineno=410)
          16	LOAD_CONST(arg=2, lineno=410)
          18	BINARY_SUBSCR(arg=None, lineno=410)
          20	STORE_FAST(arg=7, lineno=410)
          22	LOAD_GLOBAL(arg=1, lineno=412)
          24	LOAD_ATTR(arg=2, lineno=412)
          26	LOAD_FAST(arg=0, lineno=412)
          28	LOAD_ATTR(arg=3, lineno=412)
          30	LOAD_GLOBAL(arg=1, lineno=412)
          32	LOAD_ATTR(arg=4, lineno=412)
          34	LOAD_CONST(arg=3, lineno=412)
          36	CALL_FUNCTION_KW(arg=2, lineno=412)
          38	STORE_FAST(arg=8, lineno=412)
          40	LOAD_GLOBAL(arg=1, lineno=413)
          42	LOAD_ATTR(arg=2, lineno=413)
          44	LOAD_FAST(arg=0, lineno=413)
          46	LOAD_ATTR(arg=3, lineno=413)
          48	LOAD_GLOBAL(arg=1, lineno=413)
          50	LOAD_ATTR(arg=4, lineno=413)
          52	LOAD_CONST(arg=3, lineno=413)
          54	CALL_FUNCTION_KW(arg=2, lineno=413)
          56	STORE_FAST(arg=9, lineno=413)
          58	LOAD_GLOBAL(arg=1, lineno=414)
          60	LOAD_ATTR(arg=2, lineno=414)
          62	LOAD_FAST(arg=0, lineno=414)
          64	LOAD_ATTR(arg=3, lineno=414)
          66	LOAD_GLOBAL(arg=1, lineno=414)
          68	LOAD_ATTR(arg=5, lineno=414)
          70	LOAD_CONST(arg=3, lineno=414)
          72	CALL_FUNCTION_KW(arg=2, lineno=414)
          74	STORE_FAST(arg=10, lineno=414)
          76	LOAD_FAST(arg=4, lineno=415)
          78	POP_JUMP_IF_FALSE(arg=51, lineno=415)
          80	LOAD_GLOBAL(arg=1, lineno=416)
          82	LOAD_ATTR(arg=2, lineno=416)
          84	LOAD_FAST(arg=0, lineno=416)
          86	LOAD_ATTR(arg=3, lineno=416)
          88	LOAD_GLOBAL(arg=1, lineno=416)
          90	LOAD_ATTR(arg=5, lineno=416)
          92	LOAD_CONST(arg=3, lineno=416)
          94	CALL_FUNCTION_KW(arg=2, lineno=416)
          96	STORE_FAST(arg=11, lineno=416)
          98	JUMP_FORWARD(arg=2, lineno=416)
>        100	LOAD_CONST(arg=4, lineno=418)
         102	STORE_FAST(arg=11, lineno=418)
>        104	LOAD_GLOBAL(arg=6, lineno=420)
         106	LOAD_FAST(arg=6, lineno=420)
         108	CALL_FUNCTION(arg=1, lineno=420)
         110	GET_ITER(arg=None, lineno=420)
>        112	FOR_ITER(arg=114, lineno=420)
         114	STORE_FAST(arg=12, lineno=420)
         116	LOAD_GLOBAL(arg=6, lineno=421)
         118	LOAD_FAST(arg=7, lineno=421)
         120	CALL_FUNCTION(arg=1, lineno=421)
         122	GET_ITER(arg=None, lineno=421)
>        124	FOR_ITER(arg=107, lineno=421)
         126	STORE_FAST(arg=13, lineno=421)
         128	LOAD_FAST(arg=0, lineno=422)
         130	LOAD_FAST(arg=12, lineno=422)
         132	LOAD_FAST(arg=13, lineno=422)
         134	BUILD_TUPLE(arg=2, lineno=422)
         136	BINARY_SUBSCR(arg=None, lineno=422)
         138	LOAD_CONST(arg=5, lineno=422)
         140	COMPARE_OP(arg=2, lineno=422)
         142	POP_JUMP_IF_FALSE(arg=74, lineno=422)
         144	JUMP_ABSOLUTE(arg=63, lineno=423)
>        146	LOAD_FAST(arg=5, lineno=426)
         148	LOAD_CONST(arg=6, lineno=426)
         150	COMPARE_OP(arg=2, lineno=426)
         152	LOAD_FAST(arg=0, lineno=426)
         154	LOAD_FAST(arg=12, lineno=426)
         156	LOAD_FAST(arg=13, lineno=426)
         158	BUILD_TUPLE(arg=2, lineno=426)
         160	BINARY_SUBSCR(arg=None, lineno=426)
         162	LOAD_FAST(arg=12, lineno=426)
         164	COMPARE_OP(arg=2, lineno=426)
         166	BINARY_AND(arg=None, lineno=426)
         168	POP_JUMP_IF_FALSE(arg=89, lineno=426)
         170	LOAD_CONST(arg=7, lineno=427)
         172	STORE_FAST(arg=14, lineno=427)
         174	JUMP_FORWARD(arg=39, lineno=427)
>        176	LOAD_FAST(arg=1, lineno=428)
         178	LOAD_FAST(arg=12, lineno=428)
         180	LOAD_FAST(arg=13, lineno=428)
         182	BUILD_TUPLE(arg=2, lineno=428)
         184	BINARY_SUBSCR(arg=None, lineno=428)
         186	LOAD_FAST(arg=3, lineno=428)
         188	LOAD_FAST(arg=12, lineno=428)
         190	BINARY_SUBSCR(arg=None, lineno=428)
         192	BINARY_SUBTRACT(arg=None, lineno=428)
         194	LOAD_CONST(arg=7, lineno=428)
         196	COMPARE_OP(arg=1, lineno=428)
         198	POP_JUMP_IF_TRUE(arg=107, lineno=428)
         200	LOAD_FAST(arg=2, lineno=428)
         202	LOAD_FAST(arg=12, lineno=428)
         204	BINARY_SUBSCR(arg=None, lineno=428)
         206	LOAD_CONST(arg=7, lineno=428)
         208	COMPARE_OP(arg=2, lineno=428)
         210	POP_JUMP_IF_FALSE(arg=110, lineno=428)
>        212	LOAD_CONST(arg=8, lineno=429)
         214	STORE_FAST(arg=14, lineno=429)
         216	JUMP_FORWARD(arg=18, lineno=429)
>        218	LOAD_GLOBAL(arg=1, lineno=431)
         220	LOAD_METHOD(arg=7, lineno=431)
         222	LOAD_FAST(arg=1, lineno=431)
         224	LOAD_FAST(arg=12, lineno=431)
         226	LOAD_FAST(arg=13, lineno=431)
         228	BUILD_TUPLE(arg=2, lineno=431)
         230	BINARY_SUBSCR(arg=None, lineno=431)
         232	LOAD_FAST(arg=3, lineno=431)
         234	LOAD_FAST(arg=12, lineno=431)
         236	BINARY_SUBSCR(arg=None, lineno=431)
         238	BINARY_SUBTRACT(arg=None, lineno=431)
         240	LOAD_FAST(arg=2, lineno=431)
         242	LOAD_FAST(arg=12, lineno=431)
         244	BINARY_SUBSCR(arg=None, lineno=431)
         246	BINARY_TRUE_DIVIDE(arg=None, lineno=431)
         248	UNARY_NEGATIVE(arg=None, lineno=431)
         250	CALL_METHOD(arg=1, lineno=431)
         252	STORE_FAST(arg=14, lineno=431)
>        254	LOAD_FAST(arg=12, lineno=433)
         256	LOAD_FAST(arg=8, lineno=433)
         258	LOAD_FAST(arg=12, lineno=433)
         260	LOAD_FAST(arg=7, lineno=433)
         262	BINARY_MULTIPLY(arg=None, lineno=433)
         264	LOAD_FAST(arg=13, lineno=433)
         266	BINARY_ADD(arg=None, lineno=433)
         268	STORE_SUBSCR(arg=None, lineno=433)
         270	LOAD_FAST(arg=0, lineno=434)
         272	LOAD_FAST(arg=12, lineno=434)
         274	LOAD_FAST(arg=13, lineno=434)
         276	BUILD_TUPLE(arg=2, lineno=434)
         278	BINARY_SUBSCR(arg=None, lineno=434)
         280	LOAD_FAST(arg=9, lineno=434)
         282	LOAD_FAST(arg=12, lineno=434)
         284	LOAD_FAST(arg=7, lineno=434)
         286	BINARY_MULTIPLY(arg=None, lineno=434)
         288	LOAD_FAST(arg=13, lineno=434)
         290	BINARY_ADD(arg=None, lineno=434)
         292	STORE_SUBSCR(arg=None, lineno=434)
         294	LOAD_FAST(arg=14, lineno=435)
         296	LOAD_FAST(arg=10, lineno=435)
         298	LOAD_FAST(arg=12, lineno=435)
         300	LOAD_FAST(arg=7, lineno=435)
         302	BINARY_MULTIPLY(arg=None, lineno=435)
         304	LOAD_FAST(arg=13, lineno=435)
         306	BINARY_ADD(arg=None, lineno=435)
         308	STORE_SUBSCR(arg=None, lineno=435)
         310	LOAD_FAST(arg=4, lineno=436)
         312	POP_JUMP_IF_FALSE(arg=170, lineno=436)
         314	LOAD_FAST(arg=1, lineno=437)
         316	LOAD_FAST(arg=12, lineno=437)
         318	LOAD_FAST(arg=13, lineno=437)
         320	BUILD_TUPLE(arg=2, lineno=437)
         322	BINARY_SUBSCR(arg=None, lineno=437)
         324	LOAD_FAST(arg=11, lineno=437)
         326	LOAD_FAST(arg=12, lineno=437)
         328	LOAD_FAST(arg=7, lineno=437)
         330	BINARY_MULTIPLY(arg=None, lineno=437)
         332	LOAD_FAST(arg=13, lineno=437)
         334	BINARY_ADD(arg=None, lineno=437)
         336	STORE_SUBSCR(arg=None, lineno=437)
>        338	JUMP_ABSOLUTE(arg=63, lineno=437)
>        340	JUMP_ABSOLUTE(arg=57, lineno=421)
>        342	LOAD_FAST(arg=8, lineno=439)
         344	LOAD_FAST(arg=9, lineno=439)
         346	LOAD_FAST(arg=10, lineno=439)
         348	LOAD_FAST(arg=11, lineno=439)
         350	BUILD_TUPLE(arg=4, lineno=439)
         352	RETURN_VALUE(arg=None, lineno=439)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=351)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=409)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=409)
DEBUG:numba.core.byteflow:stack ['$knn_indices2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=409)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=409)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$const6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=STORE_FAST(arg=6, lineno=409)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=410)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_ATTR(arg=0, lineno=410)
DEBUG:numba.core.byteflow:stack ['$knn_indices12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_CONST(arg=2, lineno=410)
DEBUG:numba.core.byteflow:stack ['$14load_attr.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=BINARY_SUBSCR(arg=None, lineno=410)
DEBUG:numba.core.byteflow:stack ['$14load_attr.5', '$const16.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=STORE_FAST(arg=7, lineno=410)
DEBUG:numba.core.byteflow:stack ['$18binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_GLOBAL(arg=1, lineno=412)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_ATTR(arg=2, lineno=412)
DEBUG:numba.core.byteflow:stack ['$22load_global.8']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=412)
DEBUG:numba.core.byteflow:stack ['$24load_attr.9']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_ATTR(arg=3, lineno=412)
DEBUG:numba.core.byteflow:stack ['$24load_attr.9', '$knn_indices26.10']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_GLOBAL(arg=1, lineno=412)
DEBUG:numba.core.byteflow:stack ['$24load_attr.9', '$28load_attr.11']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_ATTR(arg=4, lineno=412)
DEBUG:numba.core.byteflow:stack ['$24load_attr.9', '$28load_attr.11', '$30load_global.12']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=412)
DEBUG:numba.core.byteflow:stack ['$24load_attr.9', '$28load_attr.11', '$32load_attr.13']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=CALL_FUNCTION_KW(arg=2, lineno=412)
DEBUG:numba.core.byteflow:stack ['$24load_attr.9', '$28load_attr.11', '$32load_attr.13', '$const34.14']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_FAST(arg=8, lineno=412)
DEBUG:numba.core.byteflow:stack ['$36call_function_kw.15']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_GLOBAL(arg=1, lineno=413)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_ATTR(arg=2, lineno=413)
DEBUG:numba.core.byteflow:stack ['$40load_global.16']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=0, lineno=413)
DEBUG:numba.core.byteflow:stack ['$42load_attr.17']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_ATTR(arg=3, lineno=413)
DEBUG:numba.core.byteflow:stack ['$42load_attr.17', '$knn_indices44.18']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_GLOBAL(arg=1, lineno=413)
DEBUG:numba.core.byteflow:stack ['$42load_attr.17', '$46load_attr.19']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_ATTR(arg=4, lineno=413)
DEBUG:numba.core.byteflow:stack ['$42load_attr.17', '$46load_attr.19', '$48load_global.20']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=3, lineno=413)
DEBUG:numba.core.byteflow:stack ['$42load_attr.17', '$46load_attr.19', '$50load_attr.21']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=CALL_FUNCTION_KW(arg=2, lineno=413)
DEBUG:numba.core.byteflow:stack ['$42load_attr.17', '$46load_attr.19', '$50load_attr.21', '$const52.22']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=STORE_FAST(arg=9, lineno=413)
DEBUG:numba.core.byteflow:stack ['$54call_function_kw.23']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_GLOBAL(arg=1, lineno=414)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_ATTR(arg=2, lineno=414)
DEBUG:numba.core.byteflow:stack ['$58load_global.24']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=414)
DEBUG:numba.core.byteflow:stack ['$60load_attr.25']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_ATTR(arg=3, lineno=414)
DEBUG:numba.core.byteflow:stack ['$60load_attr.25', '$knn_indices62.26']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_GLOBAL(arg=1, lineno=414)
DEBUG:numba.core.byteflow:stack ['$60load_attr.25', '$64load_attr.27']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_ATTR(arg=5, lineno=414)
DEBUG:numba.core.byteflow:stack ['$60load_attr.25', '$64load_attr.27', '$66load_global.28']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=414)
DEBUG:numba.core.byteflow:stack ['$60load_attr.25', '$64load_attr.27', '$68load_attr.29']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=CALL_FUNCTION_KW(arg=2, lineno=414)
DEBUG:numba.core.byteflow:stack ['$60load_attr.25', '$64load_attr.27', '$68load_attr.29', '$const70.30']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=STORE_FAST(arg=10, lineno=414)
DEBUG:numba.core.byteflow:stack ['$72call_function_kw.31']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=415)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=78, inst=POP_JUMP_IF_FALSE(arg=51, lineno=415)
DEBUG:numba.core.byteflow:stack ['$return_dists76.32']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=80, stack=(), blockstack=(), npush=0), Edge(pc=100, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=80 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=80 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_GLOBAL(arg=1, lineno=416)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_ATTR(arg=2, lineno=416)
DEBUG:numba.core.byteflow:stack ['$80load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=416)
DEBUG:numba.core.byteflow:stack ['$82load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_ATTR(arg=3, lineno=416)
DEBUG:numba.core.byteflow:stack ['$82load_attr.1', '$knn_indices84.2']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_GLOBAL(arg=1, lineno=416)
DEBUG:numba.core.byteflow:stack ['$82load_attr.1', '$86load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_ATTR(arg=5, lineno=416)
DEBUG:numba.core.byteflow:stack ['$82load_attr.1', '$86load_attr.3', '$88load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_CONST(arg=3, lineno=416)
DEBUG:numba.core.byteflow:stack ['$82load_attr.1', '$86load_attr.3', '$90load_attr.5']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=CALL_FUNCTION_KW(arg=2, lineno=416)
DEBUG:numba.core.byteflow:stack ['$82load_attr.1', '$86load_attr.3', '$90load_attr.5', '$const92.6']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=STORE_FAST(arg=11, lineno=416)
DEBUG:numba.core.byteflow:stack ['$94call_function_kw.7']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=JUMP_FORWARD(arg=2, lineno=416)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=104 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=100 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_CONST(arg=4, lineno=418)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=102, inst=STORE_FAST(arg=11, lineno=418)
DEBUG:numba.core.byteflow:stack ['$const100.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=104 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=104 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_GLOBAL(arg=6, lineno=420)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=420)
DEBUG:numba.core.byteflow:stack ['$104load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=CALL_FUNCTION(arg=1, lineno=420)
DEBUG:numba.core.byteflow:stack ['$104load_global.0', '$n_samples106.1']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=GET_ITER(arg=None, lineno=420)
DEBUG:numba.core.byteflow:stack ['$108call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=112, stack=('$110get_iter.3',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=112 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=112 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi112.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=112 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=112, inst=FOR_ITER(arg=114, lineno=420)
DEBUG:numba.core.byteflow:stack ['$phi112.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=342, stack=(), blockstack=(), npush=0), Edge(pc=114, stack=('$phi112.0', '$112for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=342 nstack_initial=0), State(pc_initial=114 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=342 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=342, inst=LOAD_FAST(arg=8, lineno=439)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=344, inst=LOAD_FAST(arg=9, lineno=439)
DEBUG:numba.core.byteflow:stack ['$rows342.0']
DEBUG:numba.core.byteflow:dispatch pc=346, inst=LOAD_FAST(arg=10, lineno=439)
DEBUG:numba.core.byteflow:stack ['$rows342.0', '$cols344.1']
DEBUG:numba.core.byteflow:dispatch pc=348, inst=LOAD_FAST(arg=11, lineno=439)
DEBUG:numba.core.byteflow:stack ['$rows342.0', '$cols344.1', '$vals346.2']
DEBUG:numba.core.byteflow:dispatch pc=350, inst=BUILD_TUPLE(arg=4, lineno=439)
DEBUG:numba.core.byteflow:stack ['$rows342.0', '$cols344.1', '$vals346.2', '$dists348.3']
DEBUG:numba.core.byteflow:dispatch pc=352, inst=RETURN_VALUE(arg=None, lineno=439)
DEBUG:numba.core.byteflow:stack ['$350build_tuple.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=114 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi114.0', '$phi114.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=114 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=114, inst=STORE_FAST(arg=12, lineno=420)
DEBUG:numba.core.byteflow:stack ['$phi114.0', '$phi114.1']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_GLOBAL(arg=6, lineno=421)
DEBUG:numba.core.byteflow:stack ['$phi114.0']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_FAST(arg=7, lineno=421)
DEBUG:numba.core.byteflow:stack ['$phi114.0', '$116load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=CALL_FUNCTION(arg=1, lineno=421)
DEBUG:numba.core.byteflow:stack ['$phi114.0', '$116load_global.2', '$n_neighbors118.3']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=GET_ITER(arg=None, lineno=421)
DEBUG:numba.core.byteflow:stack ['$phi114.0', '$120call_function.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=124, stack=('$phi114.0', '$122get_iter.5'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=124 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi124.0', '$phi124.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=124 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=124, inst=FOR_ITER(arg=107, lineno=421)
DEBUG:numba.core.byteflow:stack ['$phi124.0', '$phi124.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=340, stack=('$phi124.0',), blockstack=(), npush=0), Edge(pc=126, stack=('$phi124.0', '$phi124.1', '$124for_iter.3'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=340 nstack_initial=1), State(pc_initial=126 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi340.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=340 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=340, inst=JUMP_ABSOLUTE(arg=57, lineno=421)
DEBUG:numba.core.byteflow:stack ['$phi340.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=112, stack=('$phi340.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=126 nstack_initial=3), State(pc_initial=112 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi126.0', '$phi126.1', '$phi126.2']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=126 nstack_initial=3)
DEBUG:numba.core.byteflow:dispatch pc=126, inst=STORE_FAST(arg=13, lineno=421)
DEBUG:numba.core.byteflow:stack ['$phi126.0', '$phi126.1', '$phi126.2']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=0, lineno=422)
DEBUG:numba.core.byteflow:stack ['$phi126.0', '$phi126.1']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_FAST(arg=12, lineno=422)
DEBUG:numba.core.byteflow:stack ['$phi126.0', '$phi126.1', '$knn_indices128.3']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=LOAD_FAST(arg=13, lineno=422)
DEBUG:numba.core.byteflow:stack ['$phi126.0', '$phi126.1', '$knn_indices128.3', '$i130.4']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=BUILD_TUPLE(arg=2, lineno=422)
DEBUG:numba.core.byteflow:stack ['$phi126.0', '$phi126.1', '$knn_indices128.3', '$i130.4', '$j132.5']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=BINARY_SUBSCR(arg=None, lineno=422)
DEBUG:numba.core.byteflow:stack ['$phi126.0', '$phi126.1', '$knn_indices128.3', '$134build_tuple.6']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_CONST(arg=5, lineno=422)
DEBUG:numba.core.byteflow:stack ['$phi126.0', '$phi126.1', '$136binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=COMPARE_OP(arg=2, lineno=422)
DEBUG:numba.core.byteflow:stack ['$phi126.0', '$phi126.1', '$136binary_subscr.7', '$const138.8']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=POP_JUMP_IF_FALSE(arg=74, lineno=422)
DEBUG:numba.core.byteflow:stack ['$phi126.0', '$phi126.1', '$140compare_op.9']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=144, stack=('$phi126.0', '$phi126.1'), blockstack=(), npush=0), Edge(pc=146, stack=('$phi126.0', '$phi126.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=112 nstack_initial=1), State(pc_initial=144 nstack_initial=2), State(pc_initial=146 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=144 nstack_initial=2), State(pc_initial=146 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi144.0', '$phi144.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=144 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=144, inst=JUMP_ABSOLUTE(arg=63, lineno=423)
DEBUG:numba.core.byteflow:stack ['$phi144.0', '$phi144.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=124, stack=('$phi144.0', '$phi144.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=146 nstack_initial=2), State(pc_initial=124 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi146.0', '$phi146.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=146 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_FAST(arg=5, lineno=426)
DEBUG:numba.core.byteflow:stack ['$phi146.0', '$phi146.1']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_CONST(arg=6, lineno=426)
DEBUG:numba.core.byteflow:stack ['$phi146.0', '$phi146.1', '$bipartite146.2']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=COMPARE_OP(arg=2, lineno=426)
DEBUG:numba.core.byteflow:stack ['$phi146.0', '$phi146.1', '$bipartite146.2', '$const148.3']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_FAST(arg=0, lineno=426)
DEBUG:numba.core.byteflow:stack ['$phi146.0', '$phi146.1', '$150compare_op.4']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=12, lineno=426)
DEBUG:numba.core.byteflow:stack ['$phi146.0', '$phi146.1', '$150compare_op.4', '$knn_indices152.5']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=13, lineno=426)
DEBUG:numba.core.byteflow:stack ['$phi146.0', '$phi146.1', '$150compare_op.4', '$knn_indices152.5', '$i154.6']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=BUILD_TUPLE(arg=2, lineno=426)
DEBUG:numba.core.byteflow:stack ['$phi146.0', '$phi146.1', '$150compare_op.4', '$knn_indices152.5', '$i154.6', '$j156.7']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=426)
DEBUG:numba.core.byteflow:stack ['$phi146.0', '$phi146.1', '$150compare_op.4', '$knn_indices152.5', '$158build_tuple.8']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=LOAD_FAST(arg=12, lineno=426)
DEBUG:numba.core.byteflow:stack ['$phi146.0', '$phi146.1', '$150compare_op.4', '$160binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=COMPARE_OP(arg=2, lineno=426)
DEBUG:numba.core.byteflow:stack ['$phi146.0', '$phi146.1', '$150compare_op.4', '$160binary_subscr.9', '$i162.10']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=BINARY_AND(arg=None, lineno=426)
DEBUG:numba.core.byteflow:stack ['$phi146.0', '$phi146.1', '$150compare_op.4', '$164compare_op.11']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=POP_JUMP_IF_FALSE(arg=89, lineno=426)
DEBUG:numba.core.byteflow:stack ['$phi146.0', '$phi146.1', '$166binary_and.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=170, stack=('$phi146.0', '$phi146.1'), blockstack=(), npush=0), Edge(pc=176, stack=('$phi146.0', '$phi146.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=124 nstack_initial=2), State(pc_initial=170 nstack_initial=2), State(pc_initial=176 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=170 nstack_initial=2), State(pc_initial=176 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi170.0', '$phi170.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=170 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=170, inst=LOAD_CONST(arg=7, lineno=427)
DEBUG:numba.core.byteflow:stack ['$phi170.0', '$phi170.1']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=STORE_FAST(arg=14, lineno=427)
DEBUG:numba.core.byteflow:stack ['$phi170.0', '$phi170.1', '$const170.2']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=JUMP_FORWARD(arg=39, lineno=427)
DEBUG:numba.core.byteflow:stack ['$phi170.0', '$phi170.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=254, stack=('$phi170.0', '$phi170.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=176 nstack_initial=2), State(pc_initial=254 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi176.0', '$phi176.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=176 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=176, inst=LOAD_FAST(arg=1, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi176.0', '$phi176.1']
DEBUG:numba.core.byteflow:dispatch pc=178, inst=LOAD_FAST(arg=12, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi176.0', '$phi176.1', '$knn_dists176.2']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_FAST(arg=13, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi176.0', '$phi176.1', '$knn_dists176.2', '$i178.3']
DEBUG:numba.core.byteflow:dispatch pc=182, inst=BUILD_TUPLE(arg=2, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi176.0', '$phi176.1', '$knn_dists176.2', '$i178.3', '$j180.4']
DEBUG:numba.core.byteflow:dispatch pc=184, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi176.0', '$phi176.1', '$knn_dists176.2', '$182build_tuple.5']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=LOAD_FAST(arg=3, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi176.0', '$phi176.1', '$184binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=188, inst=LOAD_FAST(arg=12, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi176.0', '$phi176.1', '$184binary_subscr.6', '$rhos186.7']
DEBUG:numba.core.byteflow:dispatch pc=190, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi176.0', '$phi176.1', '$184binary_subscr.6', '$rhos186.7', '$i188.8']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=BINARY_SUBTRACT(arg=None, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi176.0', '$phi176.1', '$184binary_subscr.6', '$190binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_CONST(arg=7, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi176.0', '$phi176.1', '$192binary_subtract.10']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=COMPARE_OP(arg=1, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi176.0', '$phi176.1', '$192binary_subtract.10', '$const194.11']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=POP_JUMP_IF_TRUE(arg=107, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi176.0', '$phi176.1', '$196compare_op.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=200, stack=('$phi176.0', '$phi176.1'), blockstack=(), npush=0), Edge(pc=212, stack=('$phi176.0', '$phi176.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=254 nstack_initial=2), State(pc_initial=200 nstack_initial=2), State(pc_initial=212 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi254.0', '$phi254.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=254 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=254, inst=LOAD_FAST(arg=12, lineno=433)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1']
DEBUG:numba.core.byteflow:dispatch pc=256, inst=LOAD_FAST(arg=8, lineno=433)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$i254.2']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=LOAD_FAST(arg=12, lineno=433)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$i254.2', '$rows256.3']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=LOAD_FAST(arg=7, lineno=433)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$i254.2', '$rows256.3', '$i258.4']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=BINARY_MULTIPLY(arg=None, lineno=433)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$i254.2', '$rows256.3', '$i258.4', '$n_neighbors260.5']
DEBUG:numba.core.byteflow:dispatch pc=264, inst=LOAD_FAST(arg=13, lineno=433)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$i254.2', '$rows256.3', '$262binary_multiply.6']
DEBUG:numba.core.byteflow:dispatch pc=266, inst=BINARY_ADD(arg=None, lineno=433)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$i254.2', '$rows256.3', '$262binary_multiply.6', '$j264.7']
DEBUG:numba.core.byteflow:dispatch pc=268, inst=STORE_SUBSCR(arg=None, lineno=433)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$i254.2', '$rows256.3', '$266binary_add.8']
DEBUG:numba.core.byteflow:dispatch pc=270, inst=LOAD_FAST(arg=0, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=LOAD_FAST(arg=12, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$knn_indices270.9']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=LOAD_FAST(arg=13, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$knn_indices270.9', '$i272.10']
DEBUG:numba.core.byteflow:dispatch pc=276, inst=BUILD_TUPLE(arg=2, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$knn_indices270.9', '$i272.10', '$j274.11']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=BINARY_SUBSCR(arg=None, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$knn_indices270.9', '$276build_tuple.12']
DEBUG:numba.core.byteflow:dispatch pc=280, inst=LOAD_FAST(arg=9, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$278binary_subscr.13']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=LOAD_FAST(arg=12, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$278binary_subscr.13', '$cols280.14']
DEBUG:numba.core.byteflow:dispatch pc=284, inst=LOAD_FAST(arg=7, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$278binary_subscr.13', '$cols280.14', '$i282.15']
DEBUG:numba.core.byteflow:dispatch pc=286, inst=BINARY_MULTIPLY(arg=None, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$278binary_subscr.13', '$cols280.14', '$i282.15', '$n_neighbors284.16']
DEBUG:numba.core.byteflow:dispatch pc=288, inst=LOAD_FAST(arg=13, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$278binary_subscr.13', '$cols280.14', '$286binary_multiply.17']
DEBUG:numba.core.byteflow:dispatch pc=290, inst=BINARY_ADD(arg=None, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$278binary_subscr.13', '$cols280.14', '$286binary_multiply.17', '$j288.18']
DEBUG:numba.core.byteflow:dispatch pc=292, inst=STORE_SUBSCR(arg=None, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$278binary_subscr.13', '$cols280.14', '$290binary_add.19']
DEBUG:numba.core.byteflow:dispatch pc=294, inst=LOAD_FAST(arg=14, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=LOAD_FAST(arg=10, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$val294.20']
DEBUG:numba.core.byteflow:dispatch pc=298, inst=LOAD_FAST(arg=12, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$val294.20', '$vals296.21']
DEBUG:numba.core.byteflow:dispatch pc=300, inst=LOAD_FAST(arg=7, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$val294.20', '$vals296.21', '$i298.22']
DEBUG:numba.core.byteflow:dispatch pc=302, inst=BINARY_MULTIPLY(arg=None, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$val294.20', '$vals296.21', '$i298.22', '$n_neighbors300.23']
DEBUG:numba.core.byteflow:dispatch pc=304, inst=LOAD_FAST(arg=13, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$val294.20', '$vals296.21', '$302binary_multiply.24']
DEBUG:numba.core.byteflow:dispatch pc=306, inst=BINARY_ADD(arg=None, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$val294.20', '$vals296.21', '$302binary_multiply.24', '$j304.25']
DEBUG:numba.core.byteflow:dispatch pc=308, inst=STORE_SUBSCR(arg=None, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$val294.20', '$vals296.21', '$306binary_add.26']
DEBUG:numba.core.byteflow:dispatch pc=310, inst=LOAD_FAST(arg=4, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1']
DEBUG:numba.core.byteflow:dispatch pc=312, inst=POP_JUMP_IF_FALSE(arg=170, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi254.0', '$phi254.1', '$return_dists310.27']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=314, stack=('$phi254.0', '$phi254.1'), blockstack=(), npush=0), Edge(pc=338, stack=('$phi254.0', '$phi254.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=200 nstack_initial=2), State(pc_initial=212 nstack_initial=2), State(pc_initial=314 nstack_initial=2), State(pc_initial=338 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi200.0', '$phi200.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=200 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=200, inst=LOAD_FAST(arg=2, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi200.0', '$phi200.1']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=LOAD_FAST(arg=12, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi200.0', '$phi200.1', '$sigmas200.2']
DEBUG:numba.core.byteflow:dispatch pc=204, inst=BINARY_SUBSCR(arg=None, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi200.0', '$phi200.1', '$sigmas200.2', '$i202.3']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=LOAD_CONST(arg=7, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi200.0', '$phi200.1', '$204binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=208, inst=COMPARE_OP(arg=2, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi200.0', '$phi200.1', '$204binary_subscr.4', '$const206.5']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=POP_JUMP_IF_FALSE(arg=110, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi200.0', '$phi200.1', '$208compare_op.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=212, stack=('$phi200.0', '$phi200.1'), blockstack=(), npush=0), Edge(pc=218, stack=('$phi200.0', '$phi200.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=212 nstack_initial=2), State(pc_initial=314 nstack_initial=2), State(pc_initial=338 nstack_initial=2), State(pc_initial=212 nstack_initial=2), State(pc_initial=218 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi212.0', '$phi212.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=212 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=212, inst=LOAD_CONST(arg=8, lineno=429)
DEBUG:numba.core.byteflow:stack ['$phi212.0', '$phi212.1']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=STORE_FAST(arg=14, lineno=429)
DEBUG:numba.core.byteflow:stack ['$phi212.0', '$phi212.1', '$const212.2']
DEBUG:numba.core.byteflow:dispatch pc=216, inst=JUMP_FORWARD(arg=18, lineno=429)
DEBUG:numba.core.byteflow:stack ['$phi212.0', '$phi212.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=254, stack=('$phi212.0', '$phi212.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=314 nstack_initial=2), State(pc_initial=338 nstack_initial=2), State(pc_initial=212 nstack_initial=2), State(pc_initial=218 nstack_initial=2), State(pc_initial=254 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi314.0', '$phi314.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=314 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=314, inst=LOAD_FAST(arg=1, lineno=437)
DEBUG:numba.core.byteflow:stack ['$phi314.0', '$phi314.1']
DEBUG:numba.core.byteflow:dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=437)
DEBUG:numba.core.byteflow:stack ['$phi314.0', '$phi314.1', '$knn_dists314.2']
DEBUG:numba.core.byteflow:dispatch pc=318, inst=LOAD_FAST(arg=13, lineno=437)
DEBUG:numba.core.byteflow:stack ['$phi314.0', '$phi314.1', '$knn_dists314.2', '$i316.3']
DEBUG:numba.core.byteflow:dispatch pc=320, inst=BUILD_TUPLE(arg=2, lineno=437)
DEBUG:numba.core.byteflow:stack ['$phi314.0', '$phi314.1', '$knn_dists314.2', '$i316.3', '$j318.4']
DEBUG:numba.core.byteflow:dispatch pc=322, inst=BINARY_SUBSCR(arg=None, lineno=437)
DEBUG:numba.core.byteflow:stack ['$phi314.0', '$phi314.1', '$knn_dists314.2', '$320build_tuple.5']
DEBUG:numba.core.byteflow:dispatch pc=324, inst=LOAD_FAST(arg=11, lineno=437)
DEBUG:numba.core.byteflow:stack ['$phi314.0', '$phi314.1', '$322binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=326, inst=LOAD_FAST(arg=12, lineno=437)
DEBUG:numba.core.byteflow:stack ['$phi314.0', '$phi314.1', '$322binary_subscr.6', '$dists324.7']
DEBUG:numba.core.byteflow:dispatch pc=328, inst=LOAD_FAST(arg=7, lineno=437)
DEBUG:numba.core.byteflow:stack ['$phi314.0', '$phi314.1', '$322binary_subscr.6', '$dists324.7', '$i326.8']
DEBUG:numba.core.byteflow:dispatch pc=330, inst=BINARY_MULTIPLY(arg=None, lineno=437)
DEBUG:numba.core.byteflow:stack ['$phi314.0', '$phi314.1', '$322binary_subscr.6', '$dists324.7', '$i326.8', '$n_neighbors328.9']
DEBUG:numba.core.byteflow:dispatch pc=332, inst=LOAD_FAST(arg=13, lineno=437)
DEBUG:numba.core.byteflow:stack ['$phi314.0', '$phi314.1', '$322binary_subscr.6', '$dists324.7', '$330binary_multiply.10']
DEBUG:numba.core.byteflow:dispatch pc=334, inst=BINARY_ADD(arg=None, lineno=437)
DEBUG:numba.core.byteflow:stack ['$phi314.0', '$phi314.1', '$322binary_subscr.6', '$dists324.7', '$330binary_multiply.10', '$j332.11']
DEBUG:numba.core.byteflow:dispatch pc=336, inst=STORE_SUBSCR(arg=None, lineno=437)
DEBUG:numba.core.byteflow:stack ['$phi314.0', '$phi314.1', '$322binary_subscr.6', '$dists324.7', '$334binary_add.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=338, stack=('$phi314.0', '$phi314.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=338 nstack_initial=2), State(pc_initial=212 nstack_initial=2), State(pc_initial=218 nstack_initial=2), State(pc_initial=254 nstack_initial=2), State(pc_initial=338 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi338.0', '$phi338.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=338 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=338, inst=JUMP_ABSOLUTE(arg=63, lineno=437)
DEBUG:numba.core.byteflow:stack ['$phi338.0', '$phi338.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=124, stack=('$phi338.0', '$phi338.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=212 nstack_initial=2), State(pc_initial=218 nstack_initial=2), State(pc_initial=254 nstack_initial=2), State(pc_initial=338 nstack_initial=2), State(pc_initial=124 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=218 nstack_initial=2), State(pc_initial=254 nstack_initial=2), State(pc_initial=338 nstack_initial=2), State(pc_initial=124 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi218.0', '$phi218.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=218 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=218, inst=LOAD_GLOBAL(arg=1, lineno=431)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$phi218.1']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=LOAD_METHOD(arg=7, lineno=431)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$phi218.1', '$218load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=LOAD_FAST(arg=1, lineno=431)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$phi218.1', '$220load_method.3']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=LOAD_FAST(arg=12, lineno=431)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$knn_dists222.4']
DEBUG:numba.core.byteflow:dispatch pc=226, inst=LOAD_FAST(arg=13, lineno=431)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$knn_dists222.4', '$i224.5']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=BUILD_TUPLE(arg=2, lineno=431)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$knn_dists222.4', '$i224.5', '$j226.6']
DEBUG:numba.core.byteflow:dispatch pc=230, inst=BINARY_SUBSCR(arg=None, lineno=431)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$knn_dists222.4', '$228build_tuple.7']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=LOAD_FAST(arg=3, lineno=431)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$230binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=LOAD_FAST(arg=12, lineno=431)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$230binary_subscr.8', '$rhos232.9']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=BINARY_SUBSCR(arg=None, lineno=431)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$230binary_subscr.8', '$rhos232.9', '$i234.10']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=BINARY_SUBTRACT(arg=None, lineno=431)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$230binary_subscr.8', '$236binary_subscr.11']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=431)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$238binary_subtract.12']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=LOAD_FAST(arg=12, lineno=431)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$238binary_subtract.12', '$sigmas240.13']
DEBUG:numba.core.byteflow:dispatch pc=244, inst=BINARY_SUBSCR(arg=None, lineno=431)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$238binary_subtract.12', '$sigmas240.13', '$i242.14']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=431)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$238binary_subtract.12', '$244binary_subscr.15']
DEBUG:numba.core.byteflow:dispatch pc=248, inst=UNARY_NEGATIVE(arg=None, lineno=431)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$246binary_true_divide.16']
DEBUG:numba.core.byteflow:dispatch pc=250, inst=CALL_METHOD(arg=1, lineno=431)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$248unary_negative.17']
DEBUG:numba.core.byteflow:dispatch pc=252, inst=STORE_FAST(arg=14, lineno=431)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$phi218.1', '$250call_method.18']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=254, stack=('$phi218.0', '$phi218.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=254 nstack_initial=2), State(pc_initial=338 nstack_initial=2), State(pc_initial=124 nstack_initial=2), State(pc_initial=254 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=338 nstack_initial=2), State(pc_initial=124 nstack_initial=2), State(pc_initial=254 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=124 nstack_initial=2), State(pc_initial=254 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=254 nstack_initial=2)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=1): {'$phi112.0'},
             State(pc_initial=114 nstack_initial=2): {'$phi114.1'},
             State(pc_initial=124 nstack_initial=2): {'$phi124.1'},
             State(pc_initial=126 nstack_initial=3): {'$phi126.2'},
             State(pc_initial=144 nstack_initial=2): set(),
             State(pc_initial=146 nstack_initial=2): set(),
             State(pc_initial=170 nstack_initial=2): set(),
             State(pc_initial=176 nstack_initial=2): set(),
             State(pc_initial=200 nstack_initial=2): set(),
             State(pc_initial=212 nstack_initial=2): set(),
             State(pc_initial=218 nstack_initial=2): set(),
             State(pc_initial=254 nstack_initial=2): set(),
             State(pc_initial=314 nstack_initial=2): set(),
             State(pc_initial=338 nstack_initial=2): set(),
             State(pc_initial=340 nstack_initial=1): set(),
             State(pc_initial=342 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi112.0': State(pc_initial=104 nstack_initial=0),
 '$phi114.1': State(pc_initial=112 nstack_initial=1),
 '$phi124.1': State(pc_initial=114 nstack_initial=2),
 '$phi126.2': State(pc_initial=124 nstack_initial=2)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi340.0',
                            State(pc_initial=340 nstack_initial=1))},
             '$phi114.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi114.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi124.0': {('$phi114.0',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi144.0',
                            State(pc_initial=144 nstack_initial=2)),
                           ('$phi338.0',
                            State(pc_initial=338 nstack_initial=2))},
             '$phi124.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi144.1',
                            State(pc_initial=144 nstack_initial=2)),
                           ('$phi338.1',
                            State(pc_initial=338 nstack_initial=2))},
             '$phi126.0': {('$phi124.0',
                            State(pc_initial=124 nstack_initial=2))},
             '$phi126.1': {('$phi124.1',
                            State(pc_initial=124 nstack_initial=2))},
             '$phi126.2': {('$124for_iter.3',
                            State(pc_initial=124 nstack_initial=2))},
             '$phi144.0': {('$phi126.0',
                            State(pc_initial=126 nstack_initial=3))},
             '$phi144.1': {('$phi126.1',
                            State(pc_initial=126 nstack_initial=3))},
             '$phi146.0': {('$phi126.0',
                            State(pc_initial=126 nstack_initial=3))},
             '$phi146.1': {('$phi126.1',
                            State(pc_initial=126 nstack_initial=3))},
             '$phi170.0': {('$phi146.0',
                            State(pc_initial=146 nstack_initial=2))},
             '$phi170.1': {('$phi146.1',
                            State(pc_initial=146 nstack_initial=2))},
             '$phi176.0': {('$phi146.0',
                            State(pc_initial=146 nstack_initial=2))},
             '$phi176.1': {('$phi146.1',
                            State(pc_initial=146 nstack_initial=2))},
             '$phi200.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=2))},
             '$phi200.1': {('$phi176.1',
                            State(pc_initial=176 nstack_initial=2))},
             '$phi212.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=2)),
                           ('$phi200.0',
                            State(pc_initial=200 nstack_initial=2))},
             '$phi212.1': {('$phi176.1',
                            State(pc_initial=176 nstack_initial=2)),
                           ('$phi200.1',
                            State(pc_initial=200 nstack_initial=2))},
             '$phi218.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=2))},
             '$phi218.1': {('$phi200.1',
                            State(pc_initial=200 nstack_initial=2))},
             '$phi254.0': {('$phi170.0',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.0',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.0',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi254.1': {('$phi170.1',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.1',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.1',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi314.0': {('$phi254.0',
                            State(pc_initial=254 nstack_initial=2))},
             '$phi314.1': {('$phi254.1',
                            State(pc_initial=254 nstack_initial=2))},
             '$phi338.0': {('$phi254.0',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.0',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi338.1': {('$phi254.1',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.1',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi340.0': {('$phi124.0',
                            State(pc_initial=124 nstack_initial=2))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi124.0',
                            State(pc_initial=124 nstack_initial=2))},
             '$phi114.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi124.0',
                            State(pc_initial=124 nstack_initial=2))},
             '$phi114.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi124.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi124.0',
                            State(pc_initial=124 nstack_initial=2)),
                           ('$phi126.0',
                            State(pc_initial=126 nstack_initial=3)),
                           ('$phi254.0',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.0',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi124.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi126.1',
                            State(pc_initial=126 nstack_initial=3)),
                           ('$phi254.1',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.1',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi126.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi126.0',
                            State(pc_initial=126 nstack_initial=3)),
                           ('$phi254.0',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.0',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi126.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi126.1',
                            State(pc_initial=126 nstack_initial=3)),
                           ('$phi254.1',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.1',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi126.2': {('$124for_iter.3',
                            State(pc_initial=124 nstack_initial=2))},
             '$phi144.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi254.0',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.0',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi144.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi254.1',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.1',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi146.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi254.0',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.0',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi146.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi254.1',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.1',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi170.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi254.0',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.0',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi170.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi254.1',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.1',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi176.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi254.0',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.0',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi176.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi254.1',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.1',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi200.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi254.0',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.0',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi200.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi254.1',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.1',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi212.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi254.0',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.0',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi212.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi254.1',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.1',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi218.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi254.0',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.0',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi218.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi254.1',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.1',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi254.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi254.0',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.0',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi254.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi254.1',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.1',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi314.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi314.0',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi314.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi314.1',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi338.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi338.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi340.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi126.0',
                            State(pc_initial=126 nstack_initial=3)),
                           ('$phi254.0',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.0',
                            State(pc_initial=314 nstack_initial=2))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi126.0',
                            State(pc_initial=126 nstack_initial=3)),
                           ('$phi254.0',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.0',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi114.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi126.0',
                            State(pc_initial=126 nstack_initial=3)),
                           ('$phi254.0',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.0',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi114.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi124.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi124.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi126.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi126.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi126.2': {('$124for_iter.3',
                            State(pc_initial=124 nstack_initial=2))},
             '$phi144.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi144.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi146.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi146.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi170.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi170.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi176.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi176.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi200.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi200.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi212.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi212.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi218.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi218.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi254.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi254.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi314.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi314.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi338.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi338.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi340.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi114.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi114.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi124.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi124.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi126.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi126.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi126.2': {('$124for_iter.3',
                            State(pc_initial=124 nstack_initial=2))},
             '$phi144.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi144.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi146.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi146.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi170.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi170.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi176.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi176.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi200.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi200.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi212.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi212.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi218.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi218.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi254.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi254.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi314.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi314.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi338.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi338.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi340.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi114.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi114.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi124.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi124.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi126.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi126.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi126.2': {('$124for_iter.3',
                            State(pc_initial=124 nstack_initial=2))},
             '$phi144.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi144.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi146.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi146.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi170.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi170.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi176.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi176.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi200.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi200.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi212.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi212.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi218.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi218.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi254.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi254.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi314.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi314.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi338.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi338.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi340.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi112.0': {('$110get_iter.3', State(pc_initial=104 nstack_initial=0))},
 '$phi114.1': {('$112for_iter.2', State(pc_initial=112 nstack_initial=1))},
 '$phi124.1': {('$122get_iter.5', State(pc_initial=114 nstack_initial=2))},
 '$phi126.2': {('$124for_iter.3', State(pc_initial=124 nstack_initial=2))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=104 nstack_initial=0): {'$phi112.0': '$110get_iter.3'},
             State(pc_initial=112 nstack_initial=1): {'$phi114.1': '$112for_iter.2'},
             State(pc_initial=114 nstack_initial=2): {'$phi124.1': '$122get_iter.5'},
             State(pc_initial=124 nstack_initial=2): {'$phi126.2': '$124for_iter.3'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$knn_indices2.0'}), (4, {'item': '$knn_indices2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'value': '$8binary_subscr.3'}), (12, {'res': '$knn_indices12.4'}), (14, {'item': '$knn_indices12.4', 'res': '$14load_attr.5'}), (16, {'res': '$const16.6'}), (18, {'index': '$const16.6', 'target': '$14load_attr.5', 'res': '$18binary_subscr.7'}), (20, {'value': '$18binary_subscr.7'}), (22, {'res': '$22load_global.8'}), (24, {'item': '$22load_global.8', 'res': '$24load_attr.9'}), (26, {'res': '$knn_indices26.10'}), (28, {'item': '$knn_indices26.10', 'res': '$28load_attr.11'}), (30, {'res': '$30load_global.12'}), (32, {'item': '$30load_global.12', 'res': '$32load_attr.13'}), (34, {'res': '$const34.14'}), (36, {'func': '$24load_attr.9', 'args': ['$28load_attr.11', '$32load_attr.13'], 'names': '$const34.14', 'res': '$36call_function_kw.15'}), (38, {'value': '$36call_function_kw.15'}), (40, {'res': '$40load_global.16'}), (42, {'item': '$40load_global.16', 'res': '$42load_attr.17'}), (44, {'res': '$knn_indices44.18'}), (46, {'item': '$knn_indices44.18', 'res': '$46load_attr.19'}), (48, {'res': '$48load_global.20'}), (50, {'item': '$48load_global.20', 'res': '$50load_attr.21'}), (52, {'res': '$const52.22'}), (54, {'func': '$42load_attr.17', 'args': ['$46load_attr.19', '$50load_attr.21'], 'names': '$const52.22', 'res': '$54call_function_kw.23'}), (56, {'value': '$54call_function_kw.23'}), (58, {'res': '$58load_global.24'}), (60, {'item': '$58load_global.24', 'res': '$60load_attr.25'}), (62, {'res': '$knn_indices62.26'}), (64, {'item': '$knn_indices62.26', 'res': '$64load_attr.27'}), (66, {'res': '$66load_global.28'}), (68, {'item': '$66load_global.28', 'res': '$68load_attr.29'}), (70, {'res': '$const70.30'}), (72, {'func': '$60load_attr.25', 'args': ['$64load_attr.27', '$68load_attr.29'], 'names': '$const70.30', 'res': '$72call_function_kw.31'}), (74, {'value': '$72call_function_kw.31'}), (76, {'res': '$return_dists76.32'}), (78, {'pred': '$return_dists76.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: (), 100: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=80 nstack_initial=0):
AdaptBlockInfo(insts=((80, {'res': '$80load_global.0'}), (82, {'item': '$80load_global.0', 'res': '$82load_attr.1'}), (84, {'res': '$knn_indices84.2'}), (86, {'item': '$knn_indices84.2', 'res': '$86load_attr.3'}), (88, {'res': '$88load_global.4'}), (90, {'item': '$88load_global.4', 'res': '$90load_attr.5'}), (92, {'res': '$const92.6'}), (94, {'func': '$82load_attr.1', 'args': ['$86load_attr.3', '$90load_attr.5'], 'names': '$const92.6', 'res': '$94call_function_kw.7'}), (96, {'value': '$94call_function_kw.7'}), (98, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$const100.0'}), (102, {'value': '$const100.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$104load_global.0'}), (106, {'res': '$n_samples106.1'}), (108, {'func': '$104load_global.0', 'args': ['$n_samples106.1'], 'res': '$108call_function.2'}), (110, {'value': '$108call_function.2', 'res': '$110get_iter.3'})), outgoing_phis={'$phi112.0': '$110get_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ('$110get_iter.3',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=112 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'iterator': '$phi112.0', 'pair': '$112for_iter.1', 'indval': '$112for_iter.2', 'pred': '$112for_iter.3'}),), outgoing_phis={'$phi114.1': '$112for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={342: (), 114: ('$phi112.0', '$112for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=114 nstack_initial=2):
AdaptBlockInfo(insts=((114, {'value': '$phi114.1'}), (116, {'res': '$116load_global.2'}), (118, {'res': '$n_neighbors118.3'}), (120, {'func': '$116load_global.2', 'args': ['$n_neighbors118.3'], 'res': '$120call_function.4'}), (122, {'value': '$120call_function.4', 'res': '$122get_iter.5'})), outgoing_phis={'$phi124.1': '$122get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={124: ('$phi114.0', '$122get_iter.5')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=124 nstack_initial=2):
AdaptBlockInfo(insts=((124, {'iterator': '$phi124.1', 'pair': '$124for_iter.2', 'indval': '$124for_iter.3', 'pred': '$124for_iter.4'}),), outgoing_phis={'$phi126.2': '$124for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={340: ('$phi124.0',), 126: ('$phi124.0', '$phi124.1', '$124for_iter.3')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=126 nstack_initial=3):
AdaptBlockInfo(insts=((126, {'value': '$phi126.2'}), (128, {'res': '$knn_indices128.3'}), (130, {'res': '$i130.4'}), (132, {'res': '$j132.5'}), (134, {'items': ['$i130.4', '$j132.5'], 'res': '$134build_tuple.6'}), (136, {'index': '$134build_tuple.6', 'target': '$knn_indices128.3', 'res': '$136binary_subscr.7'}), (138, {'res': '$const138.8'}), (140, {'lhs': '$136binary_subscr.7', 'rhs': '$const138.8', 'res': '$140compare_op.9'}), (142, {'pred': '$140compare_op.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={144: ('$phi126.0', '$phi126.1'), 146: ('$phi126.0', '$phi126.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=144 nstack_initial=2):
AdaptBlockInfo(insts=((144, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={124: ('$phi144.0', '$phi144.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=146 nstack_initial=2):
AdaptBlockInfo(insts=((146, {'res': '$bipartite146.2'}), (148, {'res': '$const148.3'}), (150, {'lhs': '$bipartite146.2', 'rhs': '$const148.3', 'res': '$150compare_op.4'}), (152, {'res': '$knn_indices152.5'}), (154, {'res': '$i154.6'}), (156, {'res': '$j156.7'}), (158, {'items': ['$i154.6', '$j156.7'], 'res': '$158build_tuple.8'}), (160, {'index': '$158build_tuple.8', 'target': '$knn_indices152.5', 'res': '$160binary_subscr.9'}), (162, {'res': '$i162.10'}), (164, {'lhs': '$160binary_subscr.9', 'rhs': '$i162.10', 'res': '$164compare_op.11'}), (166, {'lhs': '$150compare_op.4', 'rhs': '$164compare_op.11', 'res': '$166binary_and.12'}), (168, {'pred': '$166binary_and.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={170: ('$phi146.0', '$phi146.1'), 176: ('$phi146.0', '$phi146.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=170 nstack_initial=2):
AdaptBlockInfo(insts=((170, {'res': '$const170.2'}), (172, {'value': '$const170.2'}), (174, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={254: ('$phi170.0', '$phi170.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=176 nstack_initial=2):
AdaptBlockInfo(insts=((176, {'res': '$knn_dists176.2'}), (178, {'res': '$i178.3'}), (180, {'res': '$j180.4'}), (182, {'items': ['$i178.3', '$j180.4'], 'res': '$182build_tuple.5'}), (184, {'index': '$182build_tuple.5', 'target': '$knn_dists176.2', 'res': '$184binary_subscr.6'}), (186, {'res': '$rhos186.7'}), (188, {'res': '$i188.8'}), (190, {'index': '$i188.8', 'target': '$rhos186.7', 'res': '$190binary_subscr.9'}), (192, {'lhs': '$184binary_subscr.6', 'rhs': '$190binary_subscr.9', 'res': '$192binary_subtract.10'}), (194, {'res': '$const194.11'}), (196, {'lhs': '$192binary_subtract.10', 'rhs': '$const194.11', 'res': '$196compare_op.12'}), (198, {'pred': '$196compare_op.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$phi176.0', '$phi176.1'), 212: ('$phi176.0', '$phi176.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=200 nstack_initial=2):
AdaptBlockInfo(insts=((200, {'res': '$sigmas200.2'}), (202, {'res': '$i202.3'}), (204, {'index': '$i202.3', 'target': '$sigmas200.2', 'res': '$204binary_subscr.4'}), (206, {'res': '$const206.5'}), (208, {'lhs': '$204binary_subscr.4', 'rhs': '$const206.5', 'res': '$208compare_op.6'}), (210, {'pred': '$208compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={212: ('$phi200.0', '$phi200.1'), 218: ('$phi200.0', '$phi200.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=212 nstack_initial=2):
AdaptBlockInfo(insts=((212, {'res': '$const212.2'}), (214, {'value': '$const212.2'}), (216, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={254: ('$phi212.0', '$phi212.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=218 nstack_initial=2):
AdaptBlockInfo(insts=((218, {'res': '$218load_global.2'}), (220, {'item': '$218load_global.2', 'res': '$220load_method.3'}), (222, {'res': '$knn_dists222.4'}), (224, {'res': '$i224.5'}), (226, {'res': '$j226.6'}), (228, {'items': ['$i224.5', '$j226.6'], 'res': '$228build_tuple.7'}), (230, {'index': '$228build_tuple.7', 'target': '$knn_dists222.4', 'res': '$230binary_subscr.8'}), (232, {'res': '$rhos232.9'}), (234, {'res': '$i234.10'}), (236, {'index': '$i234.10', 'target': '$rhos232.9', 'res': '$236binary_subscr.11'}), (238, {'lhs': '$230binary_subscr.8', 'rhs': '$236binary_subscr.11', 'res': '$238binary_subtract.12'}), (240, {'res': '$sigmas240.13'}), (242, {'res': '$i242.14'}), (244, {'index': '$i242.14', 'target': '$sigmas240.13', 'res': '$244binary_subscr.15'}), (246, {'lhs': '$238binary_subtract.12', 'rhs': '$244binary_subscr.15', 'res': '$246binary_true_divide.16'}), (248, {'value': '$246binary_true_divide.16', 'res': '$248unary_negative.17'}), (250, {'func': '$220load_method.3', 'args': ['$248unary_negative.17'], 'res': '$250call_method.18'}), (252, {'value': '$250call_method.18'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={254: ('$phi218.0', '$phi218.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=254 nstack_initial=2):
AdaptBlockInfo(insts=((254, {'res': '$i254.2'}), (256, {'res': '$rows256.3'}), (258, {'res': '$i258.4'}), (260, {'res': '$n_neighbors260.5'}), (262, {'lhs': '$i258.4', 'rhs': '$n_neighbors260.5', 'res': '$262binary_multiply.6'}), (264, {'res': '$j264.7'}), (266, {'lhs': '$262binary_multiply.6', 'rhs': '$j264.7', 'res': '$266binary_add.8'}), (268, {'target': '$rows256.3', 'index': '$266binary_add.8', 'value': '$i254.2'}), (270, {'res': '$knn_indices270.9'}), (272, {'res': '$i272.10'}), (274, {'res': '$j274.11'}), (276, {'items': ['$i272.10', '$j274.11'], 'res': '$276build_tuple.12'}), (278, {'index': '$276build_tuple.12', 'target': '$knn_indices270.9', 'res': '$278binary_subscr.13'}), (280, {'res': '$cols280.14'}), (282, {'res': '$i282.15'}), (284, {'res': '$n_neighbors284.16'}), (286, {'lhs': '$i282.15', 'rhs': '$n_neighbors284.16', 'res': '$286binary_multiply.17'}), (288, {'res': '$j288.18'}), (290, {'lhs': '$286binary_multiply.17', 'rhs': '$j288.18', 'res': '$290binary_add.19'}), (292, {'target': '$cols280.14', 'index': '$290binary_add.19', 'value': '$278binary_subscr.13'}), (294, {'res': '$val294.20'}), (296, {'res': '$vals296.21'}), (298, {'res': '$i298.22'}), (300, {'res': '$n_neighbors300.23'}), (302, {'lhs': '$i298.22', 'rhs': '$n_neighbors300.23', 'res': '$302binary_multiply.24'}), (304, {'res': '$j304.25'}), (306, {'lhs': '$302binary_multiply.24', 'rhs': '$j304.25', 'res': '$306binary_add.26'}), (308, {'target': '$vals296.21', 'index': '$306binary_add.26', 'value': '$val294.20'}), (310, {'res': '$return_dists310.27'}), (312, {'pred': '$return_dists310.27'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={314: ('$phi254.0', '$phi254.1'), 338: ('$phi254.0', '$phi254.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=314 nstack_initial=2):
AdaptBlockInfo(insts=((314, {'res': '$knn_dists314.2'}), (316, {'res': '$i316.3'}), (318, {'res': '$j318.4'}), (320, {'items': ['$i316.3', '$j318.4'], 'res': '$320build_tuple.5'}), (322, {'index': '$320build_tuple.5', 'target': '$knn_dists314.2', 'res': '$322binary_subscr.6'}), (324, {'res': '$dists324.7'}), (326, {'res': '$i326.8'}), (328, {'res': '$n_neighbors328.9'}), (330, {'lhs': '$i326.8', 'rhs': '$n_neighbors328.9', 'res': '$330binary_multiply.10'}), (332, {'res': '$j332.11'}), (334, {'lhs': '$330binary_multiply.10', 'rhs': '$j332.11', 'res': '$334binary_add.12'}), (336, {'target': '$dists324.7', 'index': '$334binary_add.12', 'value': '$322binary_subscr.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={338: ('$phi314.0', '$phi314.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=338 nstack_initial=2):
AdaptBlockInfo(insts=((338, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={124: ('$phi338.0', '$phi338.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=340 nstack_initial=1):
AdaptBlockInfo(insts=((340, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ('$phi340.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=342 nstack_initial=0):
AdaptBlockInfo(insts=((342, {'res': '$rows342.0'}), (344, {'res': '$cols344.1'}), (346, {'res': '$vals346.2'}), (348, {'res': '$dists348.3'}), (350, {'items': ['$rows342.0', '$cols344.1', '$vals346.2', '$dists348.3'], 'res': '$350build_tuple.4'}), (352, {'retval': '$350build_tuple.4', 'castval': '$352return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    knn_indices = arg(0, name=knn_indices)   ['knn_indices']
    knn_dists = arg(1, name=knn_dists)       ['knn_dists']
    sigmas = arg(2, name=sigmas)             ['sigmas']
    rhos = arg(3, name=rhos)                 ['rhos']
    return_dists = arg(4, name=return_dists) ['return_dists']
    bipartite = arg(5, name=bipartite)       ['bipartite']
    $4load_attr.1 = getattr(value=knn_indices, attr=shape) ['$4load_attr.1', 'knn_indices']
    $const6.2 = const(int, 0)                ['$const6.2']
    n_samples = getitem(value=$4load_attr.1, index=$const6.2, fn=<built-in function getitem>) ['$4load_attr.1', '$const6.2', 'n_samples']
    $14load_attr.5 = getattr(value=knn_indices, attr=shape) ['$14load_attr.5', 'knn_indices']
    $const16.6 = const(int, 1)               ['$const16.6']
    n_neighbors = getitem(value=$14load_attr.5, index=$const16.6, fn=<built-in function getitem>) ['$14load_attr.5', '$const16.6', 'n_neighbors']
    $22load_global.8 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$22load_global.8']
    $24load_attr.9 = getattr(value=$22load_global.8, attr=zeros) ['$22load_global.8', '$24load_attr.9']
    $28load_attr.11 = getattr(value=knn_indices, attr=size) ['$28load_attr.11', 'knn_indices']
    $30load_global.12 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$30load_global.12']
    $32load_attr.13 = getattr(value=$30load_global.12, attr=int32) ['$30load_global.12', '$32load_attr.13']
    rows = call $24load_attr.9($28load_attr.11, func=$24load_attr.9, args=[Var($28load_attr.11, umap_.py:412)], kws=[('dtype', Var($32load_attr.13, umap_.py:412))], vararg=None, varkwarg=None, target=None) ['$24load_attr.9', '$28load_attr.11', '$32load_attr.13', 'rows']
    $40load_global.16 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$40load_global.16']
    $42load_attr.17 = getattr(value=$40load_global.16, attr=zeros) ['$40load_global.16', '$42load_attr.17']
    $46load_attr.19 = getattr(value=knn_indices, attr=size) ['$46load_attr.19', 'knn_indices']
    $48load_global.20 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$48load_global.20']
    $50load_attr.21 = getattr(value=$48load_global.20, attr=int32) ['$48load_global.20', '$50load_attr.21']
    cols = call $42load_attr.17($46load_attr.19, func=$42load_attr.17, args=[Var($46load_attr.19, umap_.py:413)], kws=[('dtype', Var($50load_attr.21, umap_.py:413))], vararg=None, varkwarg=None, target=None) ['$42load_attr.17', '$46load_attr.19', '$50load_attr.21', 'cols']
    $58load_global.24 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$58load_global.24']
    $60load_attr.25 = getattr(value=$58load_global.24, attr=zeros) ['$58load_global.24', '$60load_attr.25']
    $64load_attr.27 = getattr(value=knn_indices, attr=size) ['$64load_attr.27', 'knn_indices']
    $66load_global.28 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$66load_global.28']
    $68load_attr.29 = getattr(value=$66load_global.28, attr=float32) ['$66load_global.28', '$68load_attr.29']
    vals = call $60load_attr.25($64load_attr.27, func=$60load_attr.25, args=[Var($64load_attr.27, umap_.py:414)], kws=[('dtype', Var($68load_attr.29, umap_.py:414))], vararg=None, varkwarg=None, target=None) ['$60load_attr.25', '$64load_attr.27', '$68load_attr.29', 'vals']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    $78pred = call bool78(return_dists, func=bool78, args=(Var(return_dists, umap_.py:351),), kws=(), vararg=None, varkwarg=None, target=None) ['$78pred', 'bool78', 'return_dists']
    branch $78pred, 80, 100                  ['$78pred']
label 80:
    $80load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$80load_global.0']
    $82load_attr.1 = getattr(value=$80load_global.0, attr=zeros) ['$80load_global.0', '$82load_attr.1']
    $86load_attr.3 = getattr(value=knn_indices, attr=size) ['$86load_attr.3', 'knn_indices']
    $88load_global.4 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$88load_global.4']
    $90load_attr.5 = getattr(value=$88load_global.4, attr=float32) ['$88load_global.4', '$90load_attr.5']
    dists = call $82load_attr.1($86load_attr.3, func=$82load_attr.1, args=[Var($86load_attr.3, umap_.py:416)], kws=[('dtype', Var($90load_attr.5, umap_.py:416))], vararg=None, varkwarg=None, target=None) ['$82load_attr.1', '$86load_attr.3', '$90load_attr.5', 'dists']
    jump 104                                 []
label 100:
    dists = const(NoneType, None)            ['dists']
    jump 104                                 []
label 104:
    $104load_global.0 = global(range: <class 'range'>) ['$104load_global.0']
    $108call_function.2 = call $104load_global.0(n_samples, func=$104load_global.0, args=[Var(n_samples, umap_.py:409)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_global.0', '$108call_function.2', 'n_samples']
    $110get_iter.3 = getiter(value=$108call_function.2) ['$108call_function.2', '$110get_iter.3']
    $phi112.0 = $110get_iter.3               ['$110get_iter.3', '$phi112.0']
    jump 112                                 []
label 112:
    $112for_iter.1 = iternext(value=$phi112.0) ['$112for_iter.1', '$phi112.0']
    $112for_iter.2 = pair_first(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.2']
    $112for_iter.3 = pair_second(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.3']
    $phi114.1 = $112for_iter.2               ['$112for_iter.2', '$phi114.1']
    branch $112for_iter.3, 114, 342          ['$112for_iter.3']
label 114:
    i = $phi114.1                            ['$phi114.1', 'i']
    $116load_global.2 = global(range: <class 'range'>) ['$116load_global.2']
    $120call_function.4 = call $116load_global.2(n_neighbors, func=$116load_global.2, args=[Var(n_neighbors, umap_.py:410)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.2', '$120call_function.4', 'n_neighbors']
    $122get_iter.5 = getiter(value=$120call_function.4) ['$120call_function.4', '$122get_iter.5']
    $phi124.1 = $122get_iter.5               ['$122get_iter.5', '$phi124.1']
    jump 124                                 []
label 124:
    $124for_iter.2 = iternext(value=$phi124.1) ['$124for_iter.2', '$phi124.1']
    $124for_iter.3 = pair_first(value=$124for_iter.2) ['$124for_iter.2', '$124for_iter.3']
    $124for_iter.4 = pair_second(value=$124for_iter.2) ['$124for_iter.2', '$124for_iter.4']
    $phi126.2 = $124for_iter.3               ['$124for_iter.3', '$phi126.2']
    branch $124for_iter.4, 126, 340          ['$124for_iter.4']
label 126:
    j = $phi126.2                            ['$phi126.2', 'j']
    $134build_tuple.6 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)]) ['$134build_tuple.6', 'i', 'j']
    $136binary_subscr.7 = getitem(value=knn_indices, index=$134build_tuple.6, fn=<built-in function getitem>) ['$134build_tuple.6', '$136binary_subscr.7', 'knn_indices']
    $const138.8 = const(int, -1)             ['$const138.8']
    $140compare_op.9 = $136binary_subscr.7 == $const138.8 ['$136binary_subscr.7', '$140compare_op.9', '$const138.8']
    bool142 = global(bool: <class 'bool'>)   ['bool142']
    $142pred = call bool142($140compare_op.9, func=bool142, args=(Var($140compare_op.9, umap_.py:422),), kws=(), vararg=None, varkwarg=None, target=None) ['$140compare_op.9', '$142pred', 'bool142']
    branch $142pred, 144, 146                ['$142pred']
label 144:
    jump 124                                 []
label 146:
    $const148.3 = const(bool, False)         ['$const148.3']
    $150compare_op.4 = bipartite == $const148.3 ['$150compare_op.4', '$const148.3', 'bipartite']
    $158build_tuple.8 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)]) ['$158build_tuple.8', 'i', 'j']
    $160binary_subscr.9 = getitem(value=knn_indices, index=$158build_tuple.8, fn=<built-in function getitem>) ['$158build_tuple.8', '$160binary_subscr.9', 'knn_indices']
    $164compare_op.11 = $160binary_subscr.9 == i ['$160binary_subscr.9', '$164compare_op.11', 'i']
    $166binary_and.12 = $150compare_op.4 & $164compare_op.11 ['$150compare_op.4', '$164compare_op.11', '$166binary_and.12']
    bool168 = global(bool: <class 'bool'>)   ['bool168']
    $168pred = call bool168($166binary_and.12, func=bool168, args=(Var($166binary_and.12, umap_.py:426),), kws=(), vararg=None, varkwarg=None, target=None) ['$166binary_and.12', '$168pred', 'bool168']
    branch $168pred, 170, 176                ['$168pred']
label 170:
    val = const(float, 0.0)                  ['val']
    jump 254                                 []
label 176:
    $182build_tuple.5 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)]) ['$182build_tuple.5', 'i', 'j']
    $184binary_subscr.6 = getitem(value=knn_dists, index=$182build_tuple.5, fn=<built-in function getitem>) ['$182build_tuple.5', '$184binary_subscr.6', 'knn_dists']
    $190binary_subscr.9 = getitem(value=rhos, index=i, fn=<built-in function getitem>) ['$190binary_subscr.9', 'i', 'rhos']
    $192binary_subtract.10 = $184binary_subscr.6 - $190binary_subscr.9 ['$184binary_subscr.6', '$190binary_subscr.9', '$192binary_subtract.10']
    $const194.11 = const(float, 0.0)         ['$const194.11']
    $196compare_op.12 = $192binary_subtract.10 <= $const194.11 ['$192binary_subtract.10', '$196compare_op.12', '$const194.11']
    bool198 = global(bool: <class 'bool'>)   ['bool198']
    $198pred = call bool198($196compare_op.12, func=bool198, args=(Var($196compare_op.12, umap_.py:428),), kws=(), vararg=None, varkwarg=None, target=None) ['$196compare_op.12', '$198pred', 'bool198']
    branch $198pred, 212, 200                ['$198pred']
label 200:
    $204binary_subscr.4 = getitem(value=sigmas, index=i, fn=<built-in function getitem>) ['$204binary_subscr.4', 'i', 'sigmas']
    $const206.5 = const(float, 0.0)          ['$const206.5']
    $208compare_op.6 = $204binary_subscr.4 == $const206.5 ['$204binary_subscr.4', '$208compare_op.6', '$const206.5']
    bool210 = global(bool: <class 'bool'>)   ['bool210']
    $210pred = call bool210($208compare_op.6, func=bool210, args=(Var($208compare_op.6, umap_.py:428),), kws=(), vararg=None, varkwarg=None, target=None) ['$208compare_op.6', '$210pred', 'bool210']
    branch $210pred, 212, 218                ['$210pred']
label 212:
    val = const(float, 1.0)                  ['val']
    jump 254                                 []
label 218:
    $218load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$218load_global.2']
    $220load_method.3 = getattr(value=$218load_global.2, attr=exp) ['$218load_global.2', '$220load_method.3']
    $228build_tuple.7 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)]) ['$228build_tuple.7', 'i', 'j']
    $230binary_subscr.8 = getitem(value=knn_dists, index=$228build_tuple.7, fn=<built-in function getitem>) ['$228build_tuple.7', '$230binary_subscr.8', 'knn_dists']
    $236binary_subscr.11 = getitem(value=rhos, index=i, fn=<built-in function getitem>) ['$236binary_subscr.11', 'i', 'rhos']
    $238binary_subtract.12 = $230binary_subscr.8 - $236binary_subscr.11 ['$230binary_subscr.8', '$236binary_subscr.11', '$238binary_subtract.12']
    $244binary_subscr.15 = getitem(value=sigmas, index=i, fn=<built-in function getitem>) ['$244binary_subscr.15', 'i', 'sigmas']
    $246binary_true_divide.16 = $238binary_subtract.12 / $244binary_subscr.15 ['$238binary_subtract.12', '$244binary_subscr.15', '$246binary_true_divide.16']
    $248unary_negative.17 = unary(fn=<built-in function neg>, value=$246binary_true_divide.16) ['$246binary_true_divide.16', '$248unary_negative.17']
    val = call $220load_method.3($248unary_negative.17, func=$220load_method.3, args=[Var($248unary_negative.17, umap_.py:431)], kws=(), vararg=None, varkwarg=None, target=None) ['$220load_method.3', '$248unary_negative.17', 'val']
    jump 254                                 []
label 254:
    $262binary_multiply.6 = i * n_neighbors  ['$262binary_multiply.6', 'i', 'n_neighbors']
    $266binary_add.8 = $262binary_multiply.6 + j ['$262binary_multiply.6', '$266binary_add.8', 'j']
    rows[$266binary_add.8] = i               ['$266binary_add.8', 'i', 'rows']
    $276build_tuple.12 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)]) ['$276build_tuple.12', 'i', 'j']
    $278binary_subscr.13 = getitem(value=knn_indices, index=$276build_tuple.12, fn=<built-in function getitem>) ['$276build_tuple.12', '$278binary_subscr.13', 'knn_indices']
    $286binary_multiply.17 = i * n_neighbors ['$286binary_multiply.17', 'i', 'n_neighbors']
    $290binary_add.19 = $286binary_multiply.17 + j ['$286binary_multiply.17', '$290binary_add.19', 'j']
    cols[$290binary_add.19] = $278binary_subscr.13 ['$278binary_subscr.13', '$290binary_add.19', 'cols']
    $302binary_multiply.24 = i * n_neighbors ['$302binary_multiply.24', 'i', 'n_neighbors']
    $306binary_add.26 = $302binary_multiply.24 + j ['$302binary_multiply.24', '$306binary_add.26', 'j']
    vals[$306binary_add.26] = val            ['$306binary_add.26', 'val', 'vals']
    bool312 = global(bool: <class 'bool'>)   ['bool312']
    $312pred = call bool312(return_dists, func=bool312, args=(Var(return_dists, umap_.py:351),), kws=(), vararg=None, varkwarg=None, target=None) ['$312pred', 'bool312', 'return_dists']
    branch $312pred, 314, 338                ['$312pred']
label 314:
    $320build_tuple.5 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)]) ['$320build_tuple.5', 'i', 'j']
    $322binary_subscr.6 = getitem(value=knn_dists, index=$320build_tuple.5, fn=<built-in function getitem>) ['$320build_tuple.5', '$322binary_subscr.6', 'knn_dists']
    $330binary_multiply.10 = i * n_neighbors ['$330binary_multiply.10', 'i', 'n_neighbors']
    $334binary_add.12 = $330binary_multiply.10 + j ['$330binary_multiply.10', '$334binary_add.12', 'j']
    dists[$334binary_add.12] = $322binary_subscr.6 ['$322binary_subscr.6', '$334binary_add.12', 'dists']
    jump 338                                 []
label 338:
    jump 124                                 []
label 340:
    jump 112                                 []
label 342:
    $350build_tuple.4 = build_tuple(items=[Var(rows, umap_.py:412), Var(cols, umap_.py:413), Var(vals, umap_.py:414), Var(dists, umap_.py:416)]) ['$350build_tuple.4', 'cols', 'dists', 'rows', 'vals']
    $352return_value.5 = cast(value=$350build_tuple.4) ['$350build_tuple.4', '$352return_value.5']
    return $352return_value.5                ['$352return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: knn_indices = arg(0, name=knn_indices)
DEBUG:numba.core.ssa:on stmt: knn_dists = arg(1, name=knn_dists)
DEBUG:numba.core.ssa:on stmt: sigmas = arg(2, name=sigmas)
DEBUG:numba.core.ssa:on stmt: rhos = arg(3, name=rhos)
DEBUG:numba.core.ssa:on stmt: return_dists = arg(4, name=return_dists)
DEBUG:numba.core.ssa:on stmt: bipartite = arg(5, name=bipartite)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=knn_indices, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_samples = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14load_attr.5 = getattr(value=knn_indices, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const16.6 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_neighbors = static_getitem(value=$14load_attr.5, index=1, index_var=$const16.6, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22load_global.8 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $24load_attr.9 = getattr(value=$22load_global.8, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $28load_attr.11 = getattr(value=knn_indices, attr=size)
DEBUG:numba.core.ssa:on stmt: $30load_global.12 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $32load_attr.13 = getattr(value=$30load_global.12, attr=int32)
DEBUG:numba.core.ssa:on stmt: rows = call $24load_attr.9($28load_attr.11, func=$24load_attr.9, args=[Var($28load_attr.11, umap_.py:412)], kws=[('dtype', Var($32load_attr.13, umap_.py:412))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $40load_global.16 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $42load_attr.17 = getattr(value=$40load_global.16, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $46load_attr.19 = getattr(value=knn_indices, attr=size)
DEBUG:numba.core.ssa:on stmt: $48load_global.20 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $50load_attr.21 = getattr(value=$48load_global.20, attr=int32)
DEBUG:numba.core.ssa:on stmt: cols = call $42load_attr.17($46load_attr.19, func=$42load_attr.17, args=[Var($46load_attr.19, umap_.py:413)], kws=[('dtype', Var($50load_attr.21, umap_.py:413))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58load_global.24 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.25 = getattr(value=$58load_global.24, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $64load_attr.27 = getattr(value=knn_indices, attr=size)
DEBUG:numba.core.ssa:on stmt: $66load_global.28 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $68load_attr.29 = getattr(value=$66load_global.28, attr=float32)
DEBUG:numba.core.ssa:on stmt: vals = call $60load_attr.25($64load_attr.27, func=$60load_attr.25, args=[Var($64load_attr.27, umap_.py:414)], kws=[('dtype', Var($68load_attr.29, umap_.py:414))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool78 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $78pred = call bool78(return_dists, func=bool78, args=(Var(return_dists, umap_.py:351),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $78pred, 80, 100
DEBUG:numba.core.ssa:==== SSA block analysis pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: $80load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.1 = getattr(value=$80load_global.0, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $86load_attr.3 = getattr(value=knn_indices, attr=size)
DEBUG:numba.core.ssa:on stmt: $88load_global.4 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $90load_attr.5 = getattr(value=$88load_global.4, attr=float32)
DEBUG:numba.core.ssa:on stmt: dists = call $82load_attr.1($86load_attr.3, func=$82load_attr.1, args=[Var($86load_attr.3, umap_.py:416)], kws=[('dtype', Var($90load_attr.5, umap_.py:416))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 104
DEBUG:numba.core.ssa:==== SSA block analysis pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: dists = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: jump 104
DEBUG:numba.core.ssa:==== SSA block analysis pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: $104load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $108call_function.2 = call $104load_global.0(n_samples, func=$104load_global.0, args=[Var(n_samples, umap_.py:409)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
DEBUG:numba.core.ssa:on stmt: $phi112.0 = $110get_iter.3
DEBUG:numba.core.ssa:on stmt: jump 112
DEBUG:numba.core.ssa:==== SSA block analysis pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: $112for_iter.1 = iternext(value=$phi112.0)
DEBUG:numba.core.ssa:on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
DEBUG:numba.core.ssa:on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi114.1 = $112for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $112for_iter.3, 114, 342
DEBUG:numba.core.ssa:==== SSA block analysis pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: i = $phi114.1
DEBUG:numba.core.ssa:on stmt: $116load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $120call_function.4 = call $116load_global.2(n_neighbors, func=$116load_global.2, args=[Var(n_neighbors, umap_.py:410)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $122get_iter.5 = getiter(value=$120call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi124.1 = $122get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 124
DEBUG:numba.core.ssa:==== SSA block analysis pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: $124for_iter.2 = iternext(value=$phi124.1)
DEBUG:numba.core.ssa:on stmt: $124for_iter.3 = pair_first(value=$124for_iter.2)
DEBUG:numba.core.ssa:on stmt: $124for_iter.4 = pair_second(value=$124for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi126.2 = $124for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $124for_iter.4, 126, 340
DEBUG:numba.core.ssa:==== SSA block analysis pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: j = $phi126.2
DEBUG:numba.core.ssa:on stmt: $134build_tuple.6 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $136binary_subscr.7 = getitem(value=knn_indices, index=$134build_tuple.6, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const138.8 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $140compare_op.9 = $136binary_subscr.7 == $const138.8
DEBUG:numba.core.ssa:on stmt: bool142 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $142pred = call bool142($140compare_op.9, func=bool142, args=(Var($140compare_op.9, umap_.py:422),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $142pred, 144, 146
DEBUG:numba.core.ssa:==== SSA block analysis pass on 144
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block analysis pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: $const148.3 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: $150compare_op.4 = bipartite == $const148.3
DEBUG:numba.core.ssa:on stmt: $158build_tuple.8 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $160binary_subscr.9 = getitem(value=knn_indices, index=$158build_tuple.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $164compare_op.11 = $160binary_subscr.9 == i
DEBUG:numba.core.ssa:on stmt: $166binary_and.12 = $150compare_op.4 & $164compare_op.11
DEBUG:numba.core.ssa:on stmt: bool168 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $168pred = call bool168($166binary_and.12, func=bool168, args=(Var($166binary_and.12, umap_.py:426),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $168pred, 170, 176
DEBUG:numba.core.ssa:==== SSA block analysis pass on 170
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: val = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 254
DEBUG:numba.core.ssa:==== SSA block analysis pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: $182build_tuple.5 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $184binary_subscr.6 = getitem(value=knn_dists, index=$182build_tuple.5, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.9 = getitem(value=rhos, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $192binary_subtract.10 = $184binary_subscr.6 - $190binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $const194.11 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $196compare_op.12 = $192binary_subtract.10 <= $const194.11
DEBUG:numba.core.ssa:on stmt: bool198 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $198pred = call bool198($196compare_op.12, func=bool198, args=(Var($196compare_op.12, umap_.py:428),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $198pred, 212, 200
DEBUG:numba.core.ssa:==== SSA block analysis pass on 200
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.4 = getitem(value=sigmas, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const206.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $208compare_op.6 = $204binary_subscr.4 == $const206.5
DEBUG:numba.core.ssa:on stmt: bool210 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $210pred = call bool210($208compare_op.6, func=bool210, args=(Var($208compare_op.6, umap_.py:428),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $210pred, 212, 218
DEBUG:numba.core.ssa:==== SSA block analysis pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: val = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: jump 254
DEBUG:numba.core.ssa:==== SSA block analysis pass on 218
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: $218load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $220load_method.3 = getattr(value=$218load_global.2, attr=exp)
DEBUG:numba.core.ssa:on stmt: $228build_tuple.7 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $230binary_subscr.8 = getitem(value=knn_dists, index=$228build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $236binary_subscr.11 = getitem(value=rhos, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $238binary_subtract.12 = $230binary_subscr.8 - $236binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $244binary_subscr.15 = getitem(value=sigmas, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $246binary_true_divide.16 = $238binary_subtract.12 / $244binary_subscr.15
DEBUG:numba.core.ssa:on stmt: $248unary_negative.17 = unary(fn=<built-in function neg>, value=$246binary_true_divide.16)
DEBUG:numba.core.ssa:on stmt: val = call $220load_method.3($248unary_negative.17, func=$220load_method.3, args=[Var($248unary_negative.17, umap_.py:431)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 254
DEBUG:numba.core.ssa:==== SSA block analysis pass on 254
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: $262binary_multiply.6 = i * n_neighbors
DEBUG:numba.core.ssa:on stmt: $266binary_add.8 = $262binary_multiply.6 + j
DEBUG:numba.core.ssa:on stmt: rows[$266binary_add.8] = i
DEBUG:numba.core.ssa:on stmt: $276build_tuple.12 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $278binary_subscr.13 = getitem(value=knn_indices, index=$276build_tuple.12, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $286binary_multiply.17 = i * n_neighbors
DEBUG:numba.core.ssa:on stmt: $290binary_add.19 = $286binary_multiply.17 + j
DEBUG:numba.core.ssa:on stmt: cols[$290binary_add.19] = $278binary_subscr.13
DEBUG:numba.core.ssa:on stmt: $302binary_multiply.24 = i * n_neighbors
DEBUG:numba.core.ssa:on stmt: $306binary_add.26 = $302binary_multiply.24 + j
DEBUG:numba.core.ssa:on stmt: vals[$306binary_add.26] = val
DEBUG:numba.core.ssa:on stmt: bool312 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $312pred = call bool312(return_dists, func=bool312, args=(Var(return_dists, umap_.py:351),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $312pred, 314, 338
DEBUG:numba.core.ssa:==== SSA block analysis pass on 314
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: $320build_tuple.5 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $322binary_subscr.6 = getitem(value=knn_dists, index=$320build_tuple.5, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $330binary_multiply.10 = i * n_neighbors
DEBUG:numba.core.ssa:on stmt: $334binary_add.12 = $330binary_multiply.10 + j
DEBUG:numba.core.ssa:on stmt: dists[$334binary_add.12] = $322binary_subscr.6
DEBUG:numba.core.ssa:on stmt: jump 338
DEBUG:numba.core.ssa:==== SSA block analysis pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block analysis pass on 340
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: jump 112
DEBUG:numba.core.ssa:==== SSA block analysis pass on 342
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: $350build_tuple.4 = build_tuple(items=[Var(rows, umap_.py:412), Var(cols, umap_.py:413), Var(vals, umap_.py:414), Var(dists, umap_.py:416)])
DEBUG:numba.core.ssa:on stmt: $352return_value.5 = cast(value=$350build_tuple.4)
DEBUG:numba.core.ssa:on stmt: return $352return_value.5
DEBUG:numba.core.ssa:==== SSA block analysis pass on 343
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480B460>
DEBUG:numba.core.ssa:on stmt: jump 124
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$104load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA47D36D0>,
                                    104)],
             '$108call_function.2': [(<numba.core.ir.Assign object at 0x0000017AA47D39D0>,
                                      104)],
             '$110get_iter.3': [(<numba.core.ir.Assign object at 0x0000017AA47D3AF0>,
                                 104)],
             '$112for_iter.1': [(<numba.core.ir.Assign object at 0x0000017AA47D3E20>,
                                 112)],
             '$112for_iter.2': [(<numba.core.ir.Assign object at 0x0000017AA47D3F40>,
                                 112)],
             '$112for_iter.3': [(<numba.core.ir.Assign object at 0x0000017AA47F80A0>,
                                 112)],
             '$116load_global.2': [(<numba.core.ir.Assign object at 0x0000017AA47F84F0>,
                                    114)],
             '$120call_function.4': [(<numba.core.ir.Assign object at 0x0000017AA47F87F0>,
                                      114)],
             '$122get_iter.5': [(<numba.core.ir.Assign object at 0x0000017AA47F8910>,
                                 114)],
             '$124for_iter.2': [(<numba.core.ir.Assign object at 0x0000017AA47F8C40>,
                                 124)],
             '$124for_iter.3': [(<numba.core.ir.Assign object at 0x0000017AA47F8D60>,
                                 124)],
             '$124for_iter.4': [(<numba.core.ir.Assign object at 0x0000017AA47F8E80>,
                                 124)],
             '$134build_tuple.6': [(<numba.core.ir.Assign object at 0x0000017AA47F9660>,
                                    126)],
             '$136binary_subscr.7': [(<numba.core.ir.Assign object at 0x0000017AA47F97E0>,
                                      126)],
             '$140compare_op.9': [(<numba.core.ir.Assign object at 0x0000017AA47F9AE0>,
                                   126)],
             '$142pred': [(<numba.core.ir.Assign object at 0x0000017AA47F9D50>,
                           126)],
             '$14load_attr.5': [(<numba.core.ir.Assign object at 0x0000017AA4168DC0>,
                                 0)],
             '$150compare_op.4': [(<numba.core.ir.Assign object at 0x0000017AA47FA320>,
                                   146)],
             '$158build_tuple.8': [(<numba.core.ir.Assign object at 0x0000017AA47FA800>,
                                    146)],
             '$160binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000017AA47FA980>,
                                      146)],
             '$164compare_op.11': [(<numba.core.ir.Assign object at 0x0000017AA47FAC20>,
                                    146)],
             '$166binary_and.12': [(<numba.core.ir.Assign object at 0x0000017AA47FADA0>,
                                    146)],
             '$168pred': [(<numba.core.ir.Assign object at 0x0000017AA47FB010>,
                           146)],
             '$182build_tuple.5': [(<numba.core.ir.Assign object at 0x0000017AA47FB820>,
                                    176)],
             '$184binary_subscr.6': [(<numba.core.ir.Assign object at 0x0000017AA47FB9A0>,
                                      176)],
             '$190binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000017AA47FBD60>,
                                      176)],
             '$192binary_subtract.10': [(<numba.core.ir.Assign object at 0x0000017AA47FBEE0>,
                                         176)],
             '$196compare_op.12': [(<numba.core.ir.Assign object at 0x0000017AA4800220>,
                                    176)],
             '$198pred': [(<numba.core.ir.Assign object at 0x0000017AA4800490>,
                           176)],
             '$204binary_subscr.4': [(<numba.core.ir.Assign object at 0x0000017AA48007C0>,
                                      200)],
             '$208compare_op.6': [(<numba.core.ir.Assign object at 0x0000017AA4800AC0>,
                                   200)],
             '$210pred': [(<numba.core.ir.Assign object at 0x0000017AA4800D30>,
                           200)],
             '$218load_global.2': [(<numba.core.ir.Assign object at 0x0000017AA4801210>,
                                    218)],
             '$220load_method.3': [(<numba.core.ir.Assign object at 0x0000017AA4801390>,
                                    218)],
             '$228build_tuple.7': [(<numba.core.ir.Assign object at 0x0000017AA48018A0>,
                                    218)],
             '$22load_global.8': [(<numba.core.ir.Assign object at 0x0000017AA41202B0>,
                                   0)],
             '$230binary_subscr.8': [(<numba.core.ir.Assign object at 0x0000017AA4801A20>,
                                      218)],
             '$236binary_subscr.11': [(<numba.core.ir.Assign object at 0x0000017AA4801DE0>,
                                       218)],
             '$238binary_subtract.12': [(<numba.core.ir.Assign object at 0x0000017AA4801F60>,
                                         218)],
             '$244binary_subscr.15': [(<numba.core.ir.Assign object at 0x0000017AA4802320>,
                                       218)],
             '$246binary_true_divide.16': [(<numba.core.ir.Assign object at 0x0000017AA48024A0>,
                                            218)],
             '$248unary_negative.17': [(<numba.core.ir.Assign object at 0x0000017AA48025F0>,
                                        218)],
             '$24load_attr.9': [(<numba.core.ir.Assign object at 0x0000017AA4120100>,
                                 0)],
             '$262binary_multiply.6': [(<numba.core.ir.Assign object at 0x0000017AA4802C20>,
                                        254)],
             '$266binary_add.8': [(<numba.core.ir.Assign object at 0x0000017AA4802EC0>,
                                   254)],
             '$276build_tuple.12': [(<numba.core.ir.Assign object at 0x0000017AA4803460>,
                                     254)],
             '$278binary_subscr.13': [(<numba.core.ir.Assign object at 0x0000017AA48035E0>,
                                       254)],
             '$286binary_multiply.17': [(<numba.core.ir.Assign object at 0x0000017AA4803AC0>,
                                         254)],
             '$28load_attr.11': [(<numba.core.ir.Assign object at 0x0000017AA4123940>,
                                  0)],
             '$290binary_add.19': [(<numba.core.ir.Assign object at 0x0000017AA4803D60>,
                                    254)],
             '$302binary_multiply.24': [(<numba.core.ir.Assign object at 0x0000017AA4808460>,
                                         254)],
             '$306binary_add.26': [(<numba.core.ir.Assign object at 0x0000017AA4808700>,
                                    254)],
             '$30load_global.12': [(<numba.core.ir.Assign object at 0x0000017AA41202E0>,
                                    0)],
             '$312pred': [(<numba.core.ir.Assign object at 0x0000017AA4808B50>,
                           254)],
             '$320build_tuple.5': [(<numba.core.ir.Assign object at 0x0000017AA4808190>,
                                    314)],
             '$322binary_subscr.6': [(<numba.core.ir.Assign object at 0x0000017AA4808C10>,
                                      314)],
             '$32load_attr.13': [(<numba.core.ir.Assign object at 0x0000017A200F9EA0>,
                                  0)],
             '$330binary_multiply.10': [(<numba.core.ir.Assign object at 0x0000017AA4809120>,
                                         314)],
             '$334binary_add.12': [(<numba.core.ir.Assign object at 0x0000017AA48093C0>,
                                    314)],
             '$350build_tuple.4': [(<numba.core.ir.Assign object at 0x0000017AA4809C00>,
                                    342)],
             '$352return_value.5': [(<numba.core.ir.Assign object at 0x0000017AA4809D50>,
                                     342)],
             '$40load_global.16': [(<numba.core.ir.Assign object at 0x0000017AA4112830>,
                                    0)],
             '$42load_attr.17': [(<numba.core.ir.Assign object at 0x0000017AA41133D0>,
                                  0)],
             '$46load_attr.19': [(<numba.core.ir.Assign object at 0x0000017A0A101510>,
                                  0)],
             '$48load_global.20': [(<numba.core.ir.Assign object at 0x0000017AA461A200>,
                                    0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x0000017AA40D5A50>,
                                0)],
             '$50load_attr.21': [(<numba.core.ir.Assign object at 0x0000017AA469B520>,
                                  0)],
             '$58load_global.24': [(<numba.core.ir.Assign object at 0x0000017AA462A230>,
                                    0)],
             '$60load_attr.25': [(<numba.core.ir.Assign object at 0x0000017AA459BEE0>,
                                  0)],
             '$64load_attr.27': [(<numba.core.ir.Assign object at 0x0000017AA4598C70>,
                                  0)],
             '$66load_global.28': [(<numba.core.ir.Assign object at 0x0000017AA44A78B0>,
                                    0)],
             '$68load_attr.29': [(<numba.core.ir.Assign object at 0x0000017AA457FEB0>,
                                  0)],
             '$78pred': [(<numba.core.ir.Assign object at 0x0000017AA45F5DB0>,
                          0)],
             '$80load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA41130A0>,
                                   80)],
             '$82load_attr.1': [(<numba.core.ir.Assign object at 0x0000017AA40AB910>,
                                 80)],
             '$86load_attr.3': [(<numba.core.ir.Assign object at 0x0000017AA45F6350>,
                                 80)],
             '$88load_global.4': [(<numba.core.ir.Assign object at 0x0000017AA45F65F0>,
                                   80)],
             '$90load_attr.5': [(<numba.core.ir.Assign object at 0x0000017AA45F6890>,
                                 80)],
             '$const138.8': [(<numba.core.ir.Assign object at 0x0000017AA47F9930>,
                              126)],
             '$const148.3': [(<numba.core.ir.Assign object at 0x0000017AA47FA170>,
                              146)],
             '$const16.6': [(<numba.core.ir.Assign object at 0x0000017AA416A230>,
                             0)],
             '$const194.11': [(<numba.core.ir.Assign object at 0x0000017AA4800070>,
                               176)],
             '$const206.5': [(<numba.core.ir.Assign object at 0x0000017AA4800910>,
                              200)],
             '$const6.2': [(<numba.core.ir.Assign object at 0x0000017AA40D6A70>,
                            0)],
             '$phi112.0': [(<numba.core.ir.Assign object at 0x0000017AA47D3880>,
                            104)],
             '$phi114.1': [(<numba.core.ir.Assign object at 0x0000017AA47D3D60>,
                            112)],
             '$phi124.1': [(<numba.core.ir.Assign object at 0x0000017AA47F8610>,
                            114)],
             '$phi126.2': [(<numba.core.ir.Assign object at 0x0000017AA47F8B80>,
                            124)],
             'bipartite': [(<numba.core.ir.Assign object at 0x0000017AA4170730>,
                            0)],
             'bool142': [(<numba.core.ir.Assign object at 0x0000017AA47F9C30>,
                          126)],
             'bool168': [(<numba.core.ir.Assign object at 0x0000017AA47FAEF0>,
                          146)],
             'bool198': [(<numba.core.ir.Assign object at 0x0000017AA4800370>,
                          176)],
             'bool210': [(<numba.core.ir.Assign object at 0x0000017AA4800C10>,
                          200)],
             'bool312': [(<numba.core.ir.Assign object at 0x0000017AA4808A30>,
                          254)],
             'bool78': [(<numba.core.ir.Assign object at 0x0000017AA45F6050>,
                         0)],
             'cols': [(<numba.core.ir.Assign object at 0x0000017AA4643700>, 0)],
             'dists': [(<numba.core.ir.Assign object at 0x0000017AA47D3250>,
                        80),
                       (<numba.core.ir.Assign object at 0x0000017AA47D3430>,
                        100)],
             'i': [(<numba.core.ir.Assign object at 0x0000017AA47F8370>, 114)],
             'j': [(<numba.core.ir.Assign object at 0x0000017AA47F9150>, 126)],
             'knn_dists': [(<numba.core.ir.Assign object at 0x0000017AA4179B70>,
                            0)],
             'knn_indices': [(<numba.core.ir.Assign object at 0x0000017AA40A9F00>,
                              0)],
             'n_neighbors': [(<numba.core.ir.Assign object at 0x0000017AA480BD00>,
                              0)],
             'n_samples': [(<numba.core.ir.Assign object at 0x0000017AA480BD90>,
                            0)],
             'return_dists': [(<numba.core.ir.Assign object at 0x0000017AA4170490>,
                               0)],
             'rhos': [(<numba.core.ir.Assign object at 0x0000017AA41798A0>, 0)],
             'rows': [(<numba.core.ir.Assign object at 0x0000017AA4112050>, 0)],
             'sigmas': [(<numba.core.ir.Assign object at 0x0000017AA417A560>,
                         0)],
             'val': [(<numba.core.ir.Assign object at 0x0000017AA47F94B0>, 170),
                     (<numba.core.ir.Assign object at 0x0000017AA4800F10>, 212),
                     (<numba.core.ir.Assign object at 0x0000017AA4802800>,
                      218)],
             'vals': [(<numba.core.ir.Assign object at 0x0000017AA45F5510>,
                       0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA40A9F30>
DEBUG:numba.core.ssa:Fix SSA violator on var dists
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: knn_indices = arg(0, name=knn_indices)
DEBUG:numba.core.ssa:on stmt: knn_dists = arg(1, name=knn_dists)
DEBUG:numba.core.ssa:on stmt: sigmas = arg(2, name=sigmas)
DEBUG:numba.core.ssa:on stmt: rhos = arg(3, name=rhos)
DEBUG:numba.core.ssa:on stmt: return_dists = arg(4, name=return_dists)
DEBUG:numba.core.ssa:on stmt: bipartite = arg(5, name=bipartite)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=knn_indices, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_samples = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14load_attr.5 = getattr(value=knn_indices, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const16.6 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_neighbors = static_getitem(value=$14load_attr.5, index=1, index_var=$const16.6, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22load_global.8 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $24load_attr.9 = getattr(value=$22load_global.8, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $28load_attr.11 = getattr(value=knn_indices, attr=size)
DEBUG:numba.core.ssa:on stmt: $30load_global.12 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $32load_attr.13 = getattr(value=$30load_global.12, attr=int32)
DEBUG:numba.core.ssa:on stmt: rows = call $24load_attr.9($28load_attr.11, func=$24load_attr.9, args=[Var($28load_attr.11, umap_.py:412)], kws=[('dtype', Var($32load_attr.13, umap_.py:412))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $40load_global.16 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $42load_attr.17 = getattr(value=$40load_global.16, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $46load_attr.19 = getattr(value=knn_indices, attr=size)
DEBUG:numba.core.ssa:on stmt: $48load_global.20 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $50load_attr.21 = getattr(value=$48load_global.20, attr=int32)
DEBUG:numba.core.ssa:on stmt: cols = call $42load_attr.17($46load_attr.19, func=$42load_attr.17, args=[Var($46load_attr.19, umap_.py:413)], kws=[('dtype', Var($50load_attr.21, umap_.py:413))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58load_global.24 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.25 = getattr(value=$58load_global.24, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $64load_attr.27 = getattr(value=knn_indices, attr=size)
DEBUG:numba.core.ssa:on stmt: $66load_global.28 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $68load_attr.29 = getattr(value=$66load_global.28, attr=float32)
DEBUG:numba.core.ssa:on stmt: vals = call $60load_attr.25($64load_attr.27, func=$60load_attr.25, args=[Var($64load_attr.27, umap_.py:414)], kws=[('dtype', Var($68load_attr.29, umap_.py:414))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool78 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $78pred = call bool78(return_dists, func=bool78, args=(Var(return_dists, umap_.py:351),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $78pred, 80, 100
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $80load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.1 = getattr(value=$80load_global.0, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $86load_attr.3 = getattr(value=knn_indices, attr=size)
DEBUG:numba.core.ssa:on stmt: $88load_global.4 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $90load_attr.5 = getattr(value=$88load_global.4, attr=float32)
DEBUG:numba.core.ssa:on stmt: dists = call $82load_attr.1($86load_attr.3, func=$82load_attr.1, args=[Var($86load_attr.3, umap_.py:416)], kws=[('dtype', Var($90load_attr.5, umap_.py:416))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:first assign: dists
DEBUG:numba.core.ssa:replaced with: dists = call $82load_attr.1($86load_attr.3, func=$82load_attr.1, args=[Var($86load_attr.3, umap_.py:416)], kws=[('dtype', Var($90load_attr.5, umap_.py:416))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: dists = const(NoneType, None)
DEBUG:numba.core.ssa:replaced with: dists.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: jump 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $104load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $108call_function.2 = call $104load_global.0(n_samples, func=$104load_global.0, args=[Var(n_samples, umap_.py:409)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
DEBUG:numba.core.ssa:on stmt: $phi112.0 = $110get_iter.3
DEBUG:numba.core.ssa:on stmt: jump 112
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $112for_iter.1 = iternext(value=$phi112.0)
DEBUG:numba.core.ssa:on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
DEBUG:numba.core.ssa:on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi114.1 = $112for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $112for_iter.3, 114, 342
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: i = $phi114.1
DEBUG:numba.core.ssa:on stmt: $116load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $120call_function.4 = call $116load_global.2(n_neighbors, func=$116load_global.2, args=[Var(n_neighbors, umap_.py:410)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $122get_iter.5 = getiter(value=$120call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi124.1 = $122get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 124
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $124for_iter.2 = iternext(value=$phi124.1)
DEBUG:numba.core.ssa:on stmt: $124for_iter.3 = pair_first(value=$124for_iter.2)
DEBUG:numba.core.ssa:on stmt: $124for_iter.4 = pair_second(value=$124for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi126.2 = $124for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $124for_iter.4, 126, 340
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: j = $phi126.2
DEBUG:numba.core.ssa:on stmt: $134build_tuple.6 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $136binary_subscr.7 = getitem(value=knn_indices, index=$134build_tuple.6, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const138.8 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $140compare_op.9 = $136binary_subscr.7 == $const138.8
DEBUG:numba.core.ssa:on stmt: bool142 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $142pred = call bool142($140compare_op.9, func=bool142, args=(Var($140compare_op.9, umap_.py:422),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $142pred, 144, 146
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 144
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $const148.3 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: $150compare_op.4 = bipartite == $const148.3
DEBUG:numba.core.ssa:on stmt: $158build_tuple.8 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $160binary_subscr.9 = getitem(value=knn_indices, index=$158build_tuple.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $164compare_op.11 = $160binary_subscr.9 == i
DEBUG:numba.core.ssa:on stmt: $166binary_and.12 = $150compare_op.4 & $164compare_op.11
DEBUG:numba.core.ssa:on stmt: bool168 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $168pred = call bool168($166binary_and.12, func=bool168, args=(Var($166binary_and.12, umap_.py:426),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $168pred, 170, 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 170
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: val = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 254
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $182build_tuple.5 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $184binary_subscr.6 = getitem(value=knn_dists, index=$182build_tuple.5, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.9 = getitem(value=rhos, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $192binary_subtract.10 = $184binary_subscr.6 - $190binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $const194.11 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $196compare_op.12 = $192binary_subtract.10 <= $const194.11
DEBUG:numba.core.ssa:on stmt: bool198 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $198pred = call bool198($196compare_op.12, func=bool198, args=(Var($196compare_op.12, umap_.py:428),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $198pred, 212, 200
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 200
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.4 = getitem(value=sigmas, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const206.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $208compare_op.6 = $204binary_subscr.4 == $const206.5
DEBUG:numba.core.ssa:on stmt: bool210 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $210pred = call bool210($208compare_op.6, func=bool210, args=(Var($208compare_op.6, umap_.py:428),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $210pred, 212, 218
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: val = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: jump 254
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 218
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $218load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $220load_method.3 = getattr(value=$218load_global.2, attr=exp)
DEBUG:numba.core.ssa:on stmt: $228build_tuple.7 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $230binary_subscr.8 = getitem(value=knn_dists, index=$228build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $236binary_subscr.11 = getitem(value=rhos, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $238binary_subtract.12 = $230binary_subscr.8 - $236binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $244binary_subscr.15 = getitem(value=sigmas, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $246binary_true_divide.16 = $238binary_subtract.12 / $244binary_subscr.15
DEBUG:numba.core.ssa:on stmt: $248unary_negative.17 = unary(fn=<built-in function neg>, value=$246binary_true_divide.16)
DEBUG:numba.core.ssa:on stmt: val = call $220load_method.3($248unary_negative.17, func=$220load_method.3, args=[Var($248unary_negative.17, umap_.py:431)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 254
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 254
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $262binary_multiply.6 = i * n_neighbors
DEBUG:numba.core.ssa:on stmt: $266binary_add.8 = $262binary_multiply.6 + j
DEBUG:numba.core.ssa:on stmt: rows[$266binary_add.8] = i
DEBUG:numba.core.ssa:on stmt: $276build_tuple.12 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $278binary_subscr.13 = getitem(value=knn_indices, index=$276build_tuple.12, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $286binary_multiply.17 = i * n_neighbors
DEBUG:numba.core.ssa:on stmt: $290binary_add.19 = $286binary_multiply.17 + j
DEBUG:numba.core.ssa:on stmt: cols[$290binary_add.19] = $278binary_subscr.13
DEBUG:numba.core.ssa:on stmt: $302binary_multiply.24 = i * n_neighbors
DEBUG:numba.core.ssa:on stmt: $306binary_add.26 = $302binary_multiply.24 + j
DEBUG:numba.core.ssa:on stmt: vals[$306binary_add.26] = val
DEBUG:numba.core.ssa:on stmt: bool312 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $312pred = call bool312(return_dists, func=bool312, args=(Var(return_dists, umap_.py:351),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $312pred, 314, 338
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 314
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $320build_tuple.5 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $322binary_subscr.6 = getitem(value=knn_dists, index=$320build_tuple.5, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $330binary_multiply.10 = i * n_neighbors
DEBUG:numba.core.ssa:on stmt: $334binary_add.12 = $330binary_multiply.10 + j
DEBUG:numba.core.ssa:on stmt: dists[$334binary_add.12] = $322binary_subscr.6
DEBUG:numba.core.ssa:on stmt: jump 338
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 340
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: jump 112
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 342
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $350build_tuple.4 = build_tuple(items=[Var(rows, umap_.py:412), Var(cols, umap_.py:413), Var(vals, umap_.py:414), Var(dists, umap_.py:416)])
DEBUG:numba.core.ssa:on stmt: $352return_value.5 = cast(value=$350build_tuple.4)
DEBUG:numba.core.ssa:on stmt: return $352return_value.5
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 343
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: jump 124
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {80: [<numba.core.ir.Assign object at 0x0000017AA40AAB90>],
             100: [<numba.core.ir.Assign object at 0x0000017AA4052440>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: knn_indices = arg(0, name=knn_indices)
DEBUG:numba.core.ssa:on stmt: knn_dists = arg(1, name=knn_dists)
DEBUG:numba.core.ssa:on stmt: sigmas = arg(2, name=sigmas)
DEBUG:numba.core.ssa:on stmt: rhos = arg(3, name=rhos)
DEBUG:numba.core.ssa:on stmt: return_dists = arg(4, name=return_dists)
DEBUG:numba.core.ssa:on stmt: bipartite = arg(5, name=bipartite)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=knn_indices, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_samples = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14load_attr.5 = getattr(value=knn_indices, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const16.6 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_neighbors = static_getitem(value=$14load_attr.5, index=1, index_var=$const16.6, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22load_global.8 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $24load_attr.9 = getattr(value=$22load_global.8, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $28load_attr.11 = getattr(value=knn_indices, attr=size)
DEBUG:numba.core.ssa:on stmt: $30load_global.12 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $32load_attr.13 = getattr(value=$30load_global.12, attr=int32)
DEBUG:numba.core.ssa:on stmt: rows = call $24load_attr.9($28load_attr.11, func=$24load_attr.9, args=[Var($28load_attr.11, umap_.py:412)], kws=[('dtype', Var($32load_attr.13, umap_.py:412))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $40load_global.16 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $42load_attr.17 = getattr(value=$40load_global.16, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $46load_attr.19 = getattr(value=knn_indices, attr=size)
DEBUG:numba.core.ssa:on stmt: $48load_global.20 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $50load_attr.21 = getattr(value=$48load_global.20, attr=int32)
DEBUG:numba.core.ssa:on stmt: cols = call $42load_attr.17($46load_attr.19, func=$42load_attr.17, args=[Var($46load_attr.19, umap_.py:413)], kws=[('dtype', Var($50load_attr.21, umap_.py:413))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58load_global.24 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.25 = getattr(value=$58load_global.24, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $64load_attr.27 = getattr(value=knn_indices, attr=size)
DEBUG:numba.core.ssa:on stmt: $66load_global.28 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $68load_attr.29 = getattr(value=$66load_global.28, attr=float32)
DEBUG:numba.core.ssa:on stmt: vals = call $60load_attr.25($64load_attr.27, func=$60load_attr.25, args=[Var($64load_attr.27, umap_.py:414)], kws=[('dtype', Var($68load_attr.29, umap_.py:414))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool78 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $78pred = call bool78(return_dists, func=bool78, args=(Var(return_dists, umap_.py:351),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $78pred, 80, 100
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $80load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.1 = getattr(value=$80load_global.0, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $86load_attr.3 = getattr(value=knn_indices, attr=size)
DEBUG:numba.core.ssa:on stmt: $88load_global.4 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $90load_attr.5 = getattr(value=$88load_global.4, attr=float32)
DEBUG:numba.core.ssa:on stmt: dists = call $82load_attr.1($86load_attr.3, func=$82load_attr.1, args=[Var($86load_attr.3, umap_.py:416)], kws=[('dtype', Var($90load_attr.5, umap_.py:416))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: dists.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: jump 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $104load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $108call_function.2 = call $104load_global.0(n_samples, func=$104load_global.0, args=[Var(n_samples, umap_.py:409)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
DEBUG:numba.core.ssa:on stmt: $phi112.0 = $110get_iter.3
DEBUG:numba.core.ssa:on stmt: jump 112
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $112for_iter.1 = iternext(value=$phi112.0)
DEBUG:numba.core.ssa:on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
DEBUG:numba.core.ssa:on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi114.1 = $112for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $112for_iter.3, 114, 342
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: i = $phi114.1
DEBUG:numba.core.ssa:on stmt: $116load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $120call_function.4 = call $116load_global.2(n_neighbors, func=$116load_global.2, args=[Var(n_neighbors, umap_.py:410)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $122get_iter.5 = getiter(value=$120call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi124.1 = $122get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 124
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $124for_iter.2 = iternext(value=$phi124.1)
DEBUG:numba.core.ssa:on stmt: $124for_iter.3 = pair_first(value=$124for_iter.2)
DEBUG:numba.core.ssa:on stmt: $124for_iter.4 = pair_second(value=$124for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi126.2 = $124for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $124for_iter.4, 126, 340
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: j = $phi126.2
DEBUG:numba.core.ssa:on stmt: $134build_tuple.6 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $136binary_subscr.7 = getitem(value=knn_indices, index=$134build_tuple.6, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const138.8 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $140compare_op.9 = $136binary_subscr.7 == $const138.8
DEBUG:numba.core.ssa:on stmt: bool142 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $142pred = call bool142($140compare_op.9, func=bool142, args=(Var($140compare_op.9, umap_.py:422),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $142pred, 144, 146
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 144
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $const148.3 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: $150compare_op.4 = bipartite == $const148.3
DEBUG:numba.core.ssa:on stmt: $158build_tuple.8 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $160binary_subscr.9 = getitem(value=knn_indices, index=$158build_tuple.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $164compare_op.11 = $160binary_subscr.9 == i
DEBUG:numba.core.ssa:on stmt: $166binary_and.12 = $150compare_op.4 & $164compare_op.11
DEBUG:numba.core.ssa:on stmt: bool168 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $168pred = call bool168($166binary_and.12, func=bool168, args=(Var($166binary_and.12, umap_.py:426),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $168pred, 170, 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 170
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: val = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 254
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $182build_tuple.5 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $184binary_subscr.6 = getitem(value=knn_dists, index=$182build_tuple.5, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.9 = getitem(value=rhos, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $192binary_subtract.10 = $184binary_subscr.6 - $190binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $const194.11 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $196compare_op.12 = $192binary_subtract.10 <= $const194.11
DEBUG:numba.core.ssa:on stmt: bool198 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $198pred = call bool198($196compare_op.12, func=bool198, args=(Var($196compare_op.12, umap_.py:428),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $198pred, 212, 200
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 200
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.4 = getitem(value=sigmas, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const206.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $208compare_op.6 = $204binary_subscr.4 == $const206.5
DEBUG:numba.core.ssa:on stmt: bool210 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $210pred = call bool210($208compare_op.6, func=bool210, args=(Var($208compare_op.6, umap_.py:428),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $210pred, 212, 218
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: val = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: jump 254
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 218
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $218load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $220load_method.3 = getattr(value=$218load_global.2, attr=exp)
DEBUG:numba.core.ssa:on stmt: $228build_tuple.7 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $230binary_subscr.8 = getitem(value=knn_dists, index=$228build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $236binary_subscr.11 = getitem(value=rhos, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $238binary_subtract.12 = $230binary_subscr.8 - $236binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $244binary_subscr.15 = getitem(value=sigmas, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $246binary_true_divide.16 = $238binary_subtract.12 / $244binary_subscr.15
DEBUG:numba.core.ssa:on stmt: $248unary_negative.17 = unary(fn=<built-in function neg>, value=$246binary_true_divide.16)
DEBUG:numba.core.ssa:on stmt: val = call $220load_method.3($248unary_negative.17, func=$220load_method.3, args=[Var($248unary_negative.17, umap_.py:431)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 254
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 254
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $262binary_multiply.6 = i * n_neighbors
DEBUG:numba.core.ssa:on stmt: $266binary_add.8 = $262binary_multiply.6 + j
DEBUG:numba.core.ssa:on stmt: rows[$266binary_add.8] = i
DEBUG:numba.core.ssa:on stmt: $276build_tuple.12 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $278binary_subscr.13 = getitem(value=knn_indices, index=$276build_tuple.12, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $286binary_multiply.17 = i * n_neighbors
DEBUG:numba.core.ssa:on stmt: $290binary_add.19 = $286binary_multiply.17 + j
DEBUG:numba.core.ssa:on stmt: cols[$290binary_add.19] = $278binary_subscr.13
DEBUG:numba.core.ssa:on stmt: $302binary_multiply.24 = i * n_neighbors
DEBUG:numba.core.ssa:on stmt: $306binary_add.26 = $302binary_multiply.24 + j
DEBUG:numba.core.ssa:on stmt: vals[$306binary_add.26] = val
DEBUG:numba.core.ssa:on stmt: bool312 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $312pred = call bool312(return_dists, func=bool312, args=(Var(return_dists, umap_.py:351),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $312pred, 314, 338
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 314
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $320build_tuple.5 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $322binary_subscr.6 = getitem(value=knn_dists, index=$320build_tuple.5, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $330binary_multiply.10 = i * n_neighbors
DEBUG:numba.core.ssa:on stmt: $334binary_add.12 = $330binary_multiply.10 + j
DEBUG:numba.core.ssa:on stmt: dists[$334binary_add.12] = $322binary_subscr.6
DEBUG:numba.core.ssa:find_def var='dists' stmt=dists[$334binary_add.12] = $322binary_subscr.6
DEBUG:numba.core.ssa:find_def_from_top label 314
DEBUG:numba.core.ssa:idom 254 from label 314
DEBUG:numba.core.ssa:find_def_from_bottom label 254
DEBUG:numba.core.ssa:find_def_from_top label 254
DEBUG:numba.core.ssa:idom 146 from label 254
DEBUG:numba.core.ssa:find_def_from_bottom label 146
DEBUG:numba.core.ssa:find_def_from_top label 146
DEBUG:numba.core.ssa:idom 126 from label 146
DEBUG:numba.core.ssa:find_def_from_bottom label 126
DEBUG:numba.core.ssa:find_def_from_top label 126
DEBUG:numba.core.ssa:idom 124 from label 126
DEBUG:numba.core.ssa:find_def_from_bottom label 124
DEBUG:numba.core.ssa:find_def_from_top label 124
DEBUG:numba.core.ssa:idom 114 from label 124
DEBUG:numba.core.ssa:find_def_from_bottom label 114
DEBUG:numba.core.ssa:find_def_from_top label 114
DEBUG:numba.core.ssa:idom 112 from label 114
DEBUG:numba.core.ssa:find_def_from_bottom label 112
DEBUG:numba.core.ssa:find_def_from_top label 112
DEBUG:numba.core.ssa:idom 104 from label 112
DEBUG:numba.core.ssa:find_def_from_bottom label 104
DEBUG:numba.core.ssa:find_def_from_top label 104
DEBUG:numba.core.ssa:insert phi node dists.2 = phi(incoming_values=[], incoming_blocks=[]) at 104
DEBUG:numba.core.ssa:find_def_from_bottom label 80
DEBUG:numba.core.ssa:incoming_def dists = call $82load_attr.1($86load_attr.3, func=$82load_attr.1, args=[Var($86load_attr.3, umap_.py:416)], kws=[('dtype', Var($90load_attr.5, umap_.py:416))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_bottom label 100
DEBUG:numba.core.ssa:incoming_def dists.1 = const(NoneType, None)
DEBUG:numba.core.ssa:replaced with: dists.2[$334binary_add.12] = $322binary_subscr.6
DEBUG:numba.core.ssa:on stmt: jump 338
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 340
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: jump 112
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 342
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $350build_tuple.4 = build_tuple(items=[Var(rows, umap_.py:412), Var(cols, umap_.py:413), Var(vals, umap_.py:414), Var(dists, umap_.py:416)])
DEBUG:numba.core.ssa:find_def var='dists' stmt=$350build_tuple.4 = build_tuple(items=[Var(rows, umap_.py:412), Var(cols, umap_.py:413), Var(vals, umap_.py:414), Var(dists, umap_.py:416)])
DEBUG:numba.core.ssa:find_def_from_top label 342
DEBUG:numba.core.ssa:idom 112 from label 342
DEBUG:numba.core.ssa:find_def_from_bottom label 112
DEBUG:numba.core.ssa:find_def_from_top label 112
DEBUG:numba.core.ssa:idom 104 from label 112
DEBUG:numba.core.ssa:find_def_from_bottom label 104
DEBUG:numba.core.ssa:replaced with: $350build_tuple.4 = build_tuple(items=[Var(rows, umap_.py:412), Var(cols, umap_.py:413), Var(vals, umap_.py:414), Var(dists.2, umap_.py:437)])
DEBUG:numba.core.ssa:on stmt: $352return_value.5 = cast(value=$350build_tuple.4)
DEBUG:numba.core.ssa:on stmt: return $352return_value.5
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 343
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: jump 124
DEBUG:numba.core.ssa:Fix SSA violator on var val
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: knn_indices = arg(0, name=knn_indices)
DEBUG:numba.core.ssa:on stmt: knn_dists = arg(1, name=knn_dists)
DEBUG:numba.core.ssa:on stmt: sigmas = arg(2, name=sigmas)
DEBUG:numba.core.ssa:on stmt: rhos = arg(3, name=rhos)
DEBUG:numba.core.ssa:on stmt: return_dists = arg(4, name=return_dists)
DEBUG:numba.core.ssa:on stmt: bipartite = arg(5, name=bipartite)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=knn_indices, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_samples = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14load_attr.5 = getattr(value=knn_indices, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const16.6 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_neighbors = static_getitem(value=$14load_attr.5, index=1, index_var=$const16.6, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22load_global.8 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $24load_attr.9 = getattr(value=$22load_global.8, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $28load_attr.11 = getattr(value=knn_indices, attr=size)
DEBUG:numba.core.ssa:on stmt: $30load_global.12 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $32load_attr.13 = getattr(value=$30load_global.12, attr=int32)
DEBUG:numba.core.ssa:on stmt: rows = call $24load_attr.9($28load_attr.11, func=$24load_attr.9, args=[Var($28load_attr.11, umap_.py:412)], kws=[('dtype', Var($32load_attr.13, umap_.py:412))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $40load_global.16 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $42load_attr.17 = getattr(value=$40load_global.16, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $46load_attr.19 = getattr(value=knn_indices, attr=size)
DEBUG:numba.core.ssa:on stmt: $48load_global.20 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $50load_attr.21 = getattr(value=$48load_global.20, attr=int32)
DEBUG:numba.core.ssa:on stmt: cols = call $42load_attr.17($46load_attr.19, func=$42load_attr.17, args=[Var($46load_attr.19, umap_.py:413)], kws=[('dtype', Var($50load_attr.21, umap_.py:413))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58load_global.24 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.25 = getattr(value=$58load_global.24, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $64load_attr.27 = getattr(value=knn_indices, attr=size)
DEBUG:numba.core.ssa:on stmt: $66load_global.28 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $68load_attr.29 = getattr(value=$66load_global.28, attr=float32)
DEBUG:numba.core.ssa:on stmt: vals = call $60load_attr.25($64load_attr.27, func=$60load_attr.25, args=[Var($64load_attr.27, umap_.py:414)], kws=[('dtype', Var($68load_attr.29, umap_.py:414))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool78 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $78pred = call bool78(return_dists, func=bool78, args=(Var(return_dists, umap_.py:351),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $78pred, 80, 100
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: $80load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.1 = getattr(value=$80load_global.0, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $86load_attr.3 = getattr(value=knn_indices, attr=size)
DEBUG:numba.core.ssa:on stmt: $88load_global.4 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $90load_attr.5 = getattr(value=$88load_global.4, attr=float32)
DEBUG:numba.core.ssa:on stmt: dists = call $82load_attr.1($86load_attr.3, func=$82load_attr.1, args=[Var($86load_attr.3, umap_.py:416)], kws=[('dtype', Var($90load_attr.5, umap_.py:416))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: dists.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: jump 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: dists.2 = phi(incoming_values=[Var(dists, umap_.py:416), Var(dists.1, umap_.py:418)], incoming_blocks=[80, 100])
DEBUG:numba.core.ssa:on stmt: $104load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $108call_function.2 = call $104load_global.0(n_samples, func=$104load_global.0, args=[Var(n_samples, umap_.py:409)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
DEBUG:numba.core.ssa:on stmt: $phi112.0 = $110get_iter.3
DEBUG:numba.core.ssa:on stmt: jump 112
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: $112for_iter.1 = iternext(value=$phi112.0)
DEBUG:numba.core.ssa:on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
DEBUG:numba.core.ssa:on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi114.1 = $112for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $112for_iter.3, 114, 342
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: i = $phi114.1
DEBUG:numba.core.ssa:on stmt: $116load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $120call_function.4 = call $116load_global.2(n_neighbors, func=$116load_global.2, args=[Var(n_neighbors, umap_.py:410)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $122get_iter.5 = getiter(value=$120call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi124.1 = $122get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 124
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: $124for_iter.2 = iternext(value=$phi124.1)
DEBUG:numba.core.ssa:on stmt: $124for_iter.3 = pair_first(value=$124for_iter.2)
DEBUG:numba.core.ssa:on stmt: $124for_iter.4 = pair_second(value=$124for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi126.2 = $124for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $124for_iter.4, 126, 340
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: j = $phi126.2
DEBUG:numba.core.ssa:on stmt: $134build_tuple.6 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $136binary_subscr.7 = getitem(value=knn_indices, index=$134build_tuple.6, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const138.8 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $140compare_op.9 = $136binary_subscr.7 == $const138.8
DEBUG:numba.core.ssa:on stmt: bool142 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $142pred = call bool142($140compare_op.9, func=bool142, args=(Var($140compare_op.9, umap_.py:422),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $142pred, 144, 146
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 144
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: $const148.3 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: $150compare_op.4 = bipartite == $const148.3
DEBUG:numba.core.ssa:on stmt: $158build_tuple.8 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $160binary_subscr.9 = getitem(value=knn_indices, index=$158build_tuple.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $164compare_op.11 = $160binary_subscr.9 == i
DEBUG:numba.core.ssa:on stmt: $166binary_and.12 = $150compare_op.4 & $164compare_op.11
DEBUG:numba.core.ssa:on stmt: bool168 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $168pred = call bool168($166binary_and.12, func=bool168, args=(Var($166binary_and.12, umap_.py:426),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $168pred, 170, 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 170
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: val = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: val
DEBUG:numba.core.ssa:replaced with: val = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 254
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: $182build_tuple.5 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $184binary_subscr.6 = getitem(value=knn_dists, index=$182build_tuple.5, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.9 = getitem(value=rhos, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $192binary_subtract.10 = $184binary_subscr.6 - $190binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $const194.11 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $196compare_op.12 = $192binary_subtract.10 <= $const194.11
DEBUG:numba.core.ssa:on stmt: bool198 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $198pred = call bool198($196compare_op.12, func=bool198, args=(Var($196compare_op.12, umap_.py:428),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $198pred, 212, 200
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 200
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.4 = getitem(value=sigmas, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const206.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $208compare_op.6 = $204binary_subscr.4 == $const206.5
DEBUG:numba.core.ssa:on stmt: bool210 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $210pred = call bool210($208compare_op.6, func=bool210, args=(Var($208compare_op.6, umap_.py:428),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $210pred, 212, 218
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: val = const(float, 1.0)
DEBUG:numba.core.ssa:replaced with: val.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: jump 254
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 218
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: $218load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $220load_method.3 = getattr(value=$218load_global.2, attr=exp)
DEBUG:numba.core.ssa:on stmt: $228build_tuple.7 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $230binary_subscr.8 = getitem(value=knn_dists, index=$228build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $236binary_subscr.11 = getitem(value=rhos, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $238binary_subtract.12 = $230binary_subscr.8 - $236binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $244binary_subscr.15 = getitem(value=sigmas, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $246binary_true_divide.16 = $238binary_subtract.12 / $244binary_subscr.15
DEBUG:numba.core.ssa:on stmt: $248unary_negative.17 = unary(fn=<built-in function neg>, value=$246binary_true_divide.16)
DEBUG:numba.core.ssa:on stmt: val = call $220load_method.3($248unary_negative.17, func=$220load_method.3, args=[Var($248unary_negative.17, umap_.py:431)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: val.2 = call $220load_method.3($248unary_negative.17, func=$220load_method.3, args=[Var($248unary_negative.17, umap_.py:431)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 254
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 254
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: $262binary_multiply.6 = i * n_neighbors
DEBUG:numba.core.ssa:on stmt: $266binary_add.8 = $262binary_multiply.6 + j
DEBUG:numba.core.ssa:on stmt: rows[$266binary_add.8] = i
DEBUG:numba.core.ssa:on stmt: $276build_tuple.12 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $278binary_subscr.13 = getitem(value=knn_indices, index=$276build_tuple.12, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $286binary_multiply.17 = i * n_neighbors
DEBUG:numba.core.ssa:on stmt: $290binary_add.19 = $286binary_multiply.17 + j
DEBUG:numba.core.ssa:on stmt: cols[$290binary_add.19] = $278binary_subscr.13
DEBUG:numba.core.ssa:on stmt: $302binary_multiply.24 = i * n_neighbors
DEBUG:numba.core.ssa:on stmt: $306binary_add.26 = $302binary_multiply.24 + j
DEBUG:numba.core.ssa:on stmt: vals[$306binary_add.26] = val
DEBUG:numba.core.ssa:on stmt: bool312 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $312pred = call bool312(return_dists, func=bool312, args=(Var(return_dists, umap_.py:351),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $312pred, 314, 338
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 314
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: $320build_tuple.5 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $322binary_subscr.6 = getitem(value=knn_dists, index=$320build_tuple.5, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $330binary_multiply.10 = i * n_neighbors
DEBUG:numba.core.ssa:on stmt: $334binary_add.12 = $330binary_multiply.10 + j
DEBUG:numba.core.ssa:on stmt: dists.2[$334binary_add.12] = $322binary_subscr.6
DEBUG:numba.core.ssa:on stmt: jump 338
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 340
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: jump 112
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 342
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: $350build_tuple.4 = build_tuple(items=[Var(rows, umap_.py:412), Var(cols, umap_.py:413), Var(vals, umap_.py:414), Var(dists.2, umap_.py:437)])
DEBUG:numba.core.ssa:on stmt: $352return_value.5 = cast(value=$350build_tuple.4)
DEBUG:numba.core.ssa:on stmt: return $352return_value.5
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 343
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017A0A0A2F50>
DEBUG:numba.core.ssa:on stmt: jump 124
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {170: [<numba.core.ir.Assign object at 0x0000017AA480BA00>],
             212: [<numba.core.ir.Assign object at 0x0000017AA480B310>],
             218: [<numba.core.ir.Assign object at 0x0000017AA480ADD0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: knn_indices = arg(0, name=knn_indices)
DEBUG:numba.core.ssa:on stmt: knn_dists = arg(1, name=knn_dists)
DEBUG:numba.core.ssa:on stmt: sigmas = arg(2, name=sigmas)
DEBUG:numba.core.ssa:on stmt: rhos = arg(3, name=rhos)
DEBUG:numba.core.ssa:on stmt: return_dists = arg(4, name=return_dists)
DEBUG:numba.core.ssa:on stmt: bipartite = arg(5, name=bipartite)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=knn_indices, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const6.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_samples = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14load_attr.5 = getattr(value=knn_indices, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const16.6 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_neighbors = static_getitem(value=$14load_attr.5, index=1, index_var=$const16.6, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22load_global.8 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $24load_attr.9 = getattr(value=$22load_global.8, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $28load_attr.11 = getattr(value=knn_indices, attr=size)
DEBUG:numba.core.ssa:on stmt: $30load_global.12 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $32load_attr.13 = getattr(value=$30load_global.12, attr=int32)
DEBUG:numba.core.ssa:on stmt: rows = call $24load_attr.9($28load_attr.11, func=$24load_attr.9, args=[Var($28load_attr.11, umap_.py:412)], kws=[('dtype', Var($32load_attr.13, umap_.py:412))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $40load_global.16 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $42load_attr.17 = getattr(value=$40load_global.16, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $46load_attr.19 = getattr(value=knn_indices, attr=size)
DEBUG:numba.core.ssa:on stmt: $48load_global.20 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $50load_attr.21 = getattr(value=$48load_global.20, attr=int32)
DEBUG:numba.core.ssa:on stmt: cols = call $42load_attr.17($46load_attr.19, func=$42load_attr.17, args=[Var($46load_attr.19, umap_.py:413)], kws=[('dtype', Var($50load_attr.21, umap_.py:413))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $58load_global.24 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.25 = getattr(value=$58load_global.24, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $64load_attr.27 = getattr(value=knn_indices, attr=size)
DEBUG:numba.core.ssa:on stmt: $66load_global.28 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $68load_attr.29 = getattr(value=$66load_global.28, attr=float32)
DEBUG:numba.core.ssa:on stmt: vals = call $60load_attr.25($64load_attr.27, func=$60load_attr.25, args=[Var($64load_attr.27, umap_.py:414)], kws=[('dtype', Var($68load_attr.29, umap_.py:414))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool78 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $78pred = call bool78(return_dists, func=bool78, args=(Var(return_dists, umap_.py:351),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $78pred, 80, 100
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $80load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.1 = getattr(value=$80load_global.0, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $86load_attr.3 = getattr(value=knn_indices, attr=size)
DEBUG:numba.core.ssa:on stmt: $88load_global.4 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $90load_attr.5 = getattr(value=$88load_global.4, attr=float32)
DEBUG:numba.core.ssa:on stmt: dists = call $82load_attr.1($86load_attr.3, func=$82load_attr.1, args=[Var($86load_attr.3, umap_.py:416)], kws=[('dtype', Var($90load_attr.5, umap_.py:416))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: dists.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: jump 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: dists.2 = phi(incoming_values=[Var(dists, umap_.py:416), Var(dists.1, umap_.py:418)], incoming_blocks=[80, 100])
DEBUG:numba.core.ssa:on stmt: $104load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $108call_function.2 = call $104load_global.0(n_samples, func=$104load_global.0, args=[Var(n_samples, umap_.py:409)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
DEBUG:numba.core.ssa:on stmt: $phi112.0 = $110get_iter.3
DEBUG:numba.core.ssa:on stmt: jump 112
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $112for_iter.1 = iternext(value=$phi112.0)
DEBUG:numba.core.ssa:on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
DEBUG:numba.core.ssa:on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi114.1 = $112for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $112for_iter.3, 114, 342
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: i = $phi114.1
DEBUG:numba.core.ssa:on stmt: $116load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $120call_function.4 = call $116load_global.2(n_neighbors, func=$116load_global.2, args=[Var(n_neighbors, umap_.py:410)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $122get_iter.5 = getiter(value=$120call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi124.1 = $122get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 124
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $124for_iter.2 = iternext(value=$phi124.1)
DEBUG:numba.core.ssa:on stmt: $124for_iter.3 = pair_first(value=$124for_iter.2)
DEBUG:numba.core.ssa:on stmt: $124for_iter.4 = pair_second(value=$124for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi126.2 = $124for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $124for_iter.4, 126, 340
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: j = $phi126.2
DEBUG:numba.core.ssa:on stmt: $134build_tuple.6 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $136binary_subscr.7 = getitem(value=knn_indices, index=$134build_tuple.6, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const138.8 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $140compare_op.9 = $136binary_subscr.7 == $const138.8
DEBUG:numba.core.ssa:on stmt: bool142 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $142pred = call bool142($140compare_op.9, func=bool142, args=(Var($140compare_op.9, umap_.py:422),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $142pred, 144, 146
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 144
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $const148.3 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: $150compare_op.4 = bipartite == $const148.3
DEBUG:numba.core.ssa:on stmt: $158build_tuple.8 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $160binary_subscr.9 = getitem(value=knn_indices, index=$158build_tuple.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $164compare_op.11 = $160binary_subscr.9 == i
DEBUG:numba.core.ssa:on stmt: $166binary_and.12 = $150compare_op.4 & $164compare_op.11
DEBUG:numba.core.ssa:on stmt: bool168 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $168pred = call bool168($166binary_and.12, func=bool168, args=(Var($166binary_and.12, umap_.py:426),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $168pred, 170, 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 170
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: val = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 254
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $182build_tuple.5 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $184binary_subscr.6 = getitem(value=knn_dists, index=$182build_tuple.5, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.9 = getitem(value=rhos, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $192binary_subtract.10 = $184binary_subscr.6 - $190binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $const194.11 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $196compare_op.12 = $192binary_subtract.10 <= $const194.11
DEBUG:numba.core.ssa:on stmt: bool198 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $198pred = call bool198($196compare_op.12, func=bool198, args=(Var($196compare_op.12, umap_.py:428),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $198pred, 212, 200
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 200
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.4 = getitem(value=sigmas, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const206.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $208compare_op.6 = $204binary_subscr.4 == $const206.5
DEBUG:numba.core.ssa:on stmt: bool210 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $210pred = call bool210($208compare_op.6, func=bool210, args=(Var($208compare_op.6, umap_.py:428),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $210pred, 212, 218
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: val.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: jump 254
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 218
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $218load_global.2 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $220load_method.3 = getattr(value=$218load_global.2, attr=exp)
DEBUG:numba.core.ssa:on stmt: $228build_tuple.7 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $230binary_subscr.8 = getitem(value=knn_dists, index=$228build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $236binary_subscr.11 = getitem(value=rhos, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $238binary_subtract.12 = $230binary_subscr.8 - $236binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $244binary_subscr.15 = getitem(value=sigmas, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $246binary_true_divide.16 = $238binary_subtract.12 / $244binary_subscr.15
DEBUG:numba.core.ssa:on stmt: $248unary_negative.17 = unary(fn=<built-in function neg>, value=$246binary_true_divide.16)
DEBUG:numba.core.ssa:on stmt: val.2 = call $220load_method.3($248unary_negative.17, func=$220load_method.3, args=[Var($248unary_negative.17, umap_.py:431)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 254
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 254
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $262binary_multiply.6 = i * n_neighbors
DEBUG:numba.core.ssa:on stmt: $266binary_add.8 = $262binary_multiply.6 + j
DEBUG:numba.core.ssa:on stmt: rows[$266binary_add.8] = i
DEBUG:numba.core.ssa:on stmt: $276build_tuple.12 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $278binary_subscr.13 = getitem(value=knn_indices, index=$276build_tuple.12, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $286binary_multiply.17 = i * n_neighbors
DEBUG:numba.core.ssa:on stmt: $290binary_add.19 = $286binary_multiply.17 + j
DEBUG:numba.core.ssa:on stmt: cols[$290binary_add.19] = $278binary_subscr.13
DEBUG:numba.core.ssa:on stmt: $302binary_multiply.24 = i * n_neighbors
DEBUG:numba.core.ssa:on stmt: $306binary_add.26 = $302binary_multiply.24 + j
DEBUG:numba.core.ssa:on stmt: vals[$306binary_add.26] = val
DEBUG:numba.core.ssa:find_def var='val' stmt=vals[$306binary_add.26] = val
DEBUG:numba.core.ssa:find_def_from_top label 254
DEBUG:numba.core.ssa:insert phi node val.3 = phi(incoming_values=[], incoming_blocks=[]) at 254
DEBUG:numba.core.ssa:find_def_from_bottom label 218
DEBUG:numba.core.ssa:incoming_def val.2 = call $220load_method.3($248unary_negative.17, func=$220load_method.3, args=[Var($248unary_negative.17, umap_.py:431)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_bottom label 170
DEBUG:numba.core.ssa:incoming_def val = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 212
DEBUG:numba.core.ssa:incoming_def val.1 = const(float, 1.0)
DEBUG:numba.core.ssa:replaced with: vals[$306binary_add.26] = val.3
DEBUG:numba.core.ssa:on stmt: bool312 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $312pred = call bool312(return_dists, func=bool312, args=(Var(return_dists, umap_.py:351),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $312pred, 314, 338
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 314
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $320build_tuple.5 = build_tuple(items=[Var(i, umap_.py:420), Var(j, umap_.py:421)])
DEBUG:numba.core.ssa:on stmt: $322binary_subscr.6 = getitem(value=knn_dists, index=$320build_tuple.5, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $330binary_multiply.10 = i * n_neighbors
DEBUG:numba.core.ssa:on stmt: $334binary_add.12 = $330binary_multiply.10 + j
DEBUG:numba.core.ssa:on stmt: dists.2[$334binary_add.12] = $322binary_subscr.6
DEBUG:numba.core.ssa:on stmt: jump 338
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 340
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: jump 112
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 342
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: $350build_tuple.4 = build_tuple(items=[Var(rows, umap_.py:412), Var(cols, umap_.py:413), Var(vals, umap_.py:414), Var(dists.2, umap_.py:437)])
DEBUG:numba.core.ssa:on stmt: $352return_value.5 = cast(value=$350build_tuple.4)
DEBUG:numba.core.ssa:on stmt: return $352return_value.5
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 343
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA40AB700>
DEBUG:numba.core.ssa:on stmt: jump 124
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4456)
           2	LOAD_GLOBAL(arg=0, lineno=4457)
           4	LOAD_ATTR(arg=1, lineno=4457)
           6	LOAD_FAST(arg=0, lineno=4457)
           8	LOAD_FAST(arg=1, lineno=4457)
          10	LOAD_CONST(arg=1, lineno=4457)
          12	CALL_FUNCTION_KW(arg=2, lineno=4457)
          14	STORE_FAST(arg=2, lineno=4457)
          16	LOAD_FAST(arg=2, lineno=4458)
          18	LOAD_METHOD(arg=2, lineno=4458)
          20	CALL_METHOD(arg=0, lineno=4458)
          22	POP_TOP(arg=None, lineno=4458)
          24	LOAD_FAST(arg=2, lineno=4459)
          26	RETURN_VALUE(arg=None, lineno=4459)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4456)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4457)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=4457)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4457)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=4457)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$shape6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=4457)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$shape6.2', '$dtype8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=CALL_FUNCTION_KW(arg=2, lineno=4457)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$shape6.2', '$dtype8.3', '$const10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=STORE_FAST(arg=2, lineno=4457)
DEBUG:numba.core.byteflow:stack ['$12call_function_kw.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=4458)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=4458)
DEBUG:numba.core.byteflow:stack ['$arr16.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=CALL_METHOD(arg=0, lineno=4458)
DEBUG:numba.core.byteflow:stack ['$18load_method.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=POP_TOP(arg=None, lineno=4458)
DEBUG:numba.core.byteflow:stack ['$20call_method.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=4459)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=4459)
DEBUG:numba.core.byteflow:stack ['$arr24.9']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$shape6.2'}), (8, {'res': '$dtype8.3'}), (10, {'res': '$const10.4'}), (12, {'func': '$4load_attr.1', 'args': ['$shape6.2', '$dtype8.3'], 'names': '$const10.4', 'res': '$12call_function_kw.5'}), (14, {'value': '$12call_function_kw.5'}), (16, {'res': '$arr16.6'}), (18, {'item': '$arr16.6', 'res': '$18load_method.7'}), (20, {'func': '$18load_method.7', 'args': [], 'res': '$20call_method.8'}), (24, {'res': '$arr24.9'}), (26, {'retval': '$arr24.9', 'castval': '$26return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4456)], kws=[('dtype', Var(dtype, arrayobj.py:4456))], vararg=None, varkwarg=None, target=None) ['$4load_attr.1', 'arr', 'dtype', 'shape']
    $18load_method.7 = getattr(value=arr, attr=_zero_fill) ['$18load_method.7', 'arr']
    $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.7', '$20call_method.8']
    $26return_value.10 = cast(value=arr)     ['$26return_value.10', 'arr']
    return $26return_value.10                ['$26return_value.10']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA48199C0>
DEBUG:numba.core.ssa:on stmt: shape = arg(0, name=shape)
DEBUG:numba.core.ssa:on stmt: dtype = arg(1, name=dtype)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
DEBUG:numba.core.ssa:on stmt: arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4456)], kws=[('dtype', Var(dtype, arrayobj.py:4456))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $18load_method.7 = getattr(value=arr, attr=_zero_fill)
DEBUG:numba.core.ssa:on stmt: $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26return_value.10 = cast(value=arr)
DEBUG:numba.core.ssa:on stmt: return $26return_value.10
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$18load_method.7': [(<numba.core.ir.Assign object at 0x0000017AA48187C0>,
                                   0)],
             '$20call_method.8': [(<numba.core.ir.Assign object at 0x0000017AA48189D0>,
                                   0)],
             '$26return_value.10': [(<numba.core.ir.Assign object at 0x0000017AA4818BE0>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA4813CA0>,
                                  0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x0000017AA4813E20>,
                                0)],
             'arr': [(<numba.core.ir.Assign object at 0x0000017AA4818520>, 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x0000017AA48104F0>,
                        0)],
             'shape': [(<numba.core.ir.Assign object at 0x0000017AA4813160>,
                        0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA48199C0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4388)
           2	LOAD_GLOBAL(arg=0, lineno=4389)
           4	LOAD_FAST(arg=0, lineno=4389)
           6	LOAD_FAST(arg=1, lineno=4389)
           8	LOAD_DEREF(arg=0, lineno=4389)
          10	CALL_FUNCTION(arg=3, lineno=4389)
          12	RETURN_VALUE(arg=None, lineno=4389)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4388)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4389)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$shape4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$10call_function.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(int32, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($8load_deref.3, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA480A830>
DEBUG:numba.core.ssa:on stmt: shape = arg(0, name=shape)
DEBUG:numba.core.ssa:on stmt: dtype = arg(1, name=dtype)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
DEBUG:numba.core.ssa:on stmt: $8load_deref.3 = freevar(retty: array(int32, 1d, C))
DEBUG:numba.core.ssa:on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($8load_deref.3, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $12return_value.5 = cast(value=$10call_function.4)
DEBUG:numba.core.ssa:on stmt: return $12return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x0000017AA481B490>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x0000017AA481B100>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA4810460>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x0000017AA481AFB0>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x0000017AA48133A0>,
                        0)],
             'shape': [(<numba.core.ir.Assign object at 0x0000017AA4813430>,
                        0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA480A830>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4447)
           2	LOAD_GLOBAL(arg=0, lineno=4448)
           4	LOAD_FAST(arg=0, lineno=4448)
           6	CALL_FUNCTION(arg=1, lineno=4448)
           8	POP_TOP(arg=None, lineno=4448)
          10	LOAD_CONST(arg=0, lineno=4448)
          12	RETURN_VALUE(arg=None, lineno=4448)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4447)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4448)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4448)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=4448)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$self4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=POP_TOP(arg=None, lineno=4448)
DEBUG:numba.core.byteflow:stack ['$6call_function.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=0, lineno=4448)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4448)
DEBUG:numba.core.byteflow:stack ['$const10.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$self4.1'}), (6, {'func': '$2load_global.0', 'args': ['$self4.1'], 'res': '$6call_function.2'}), (10, {'res': '$const10.3'}), (12, {'retval': '$const10.3', 'castval': '$12return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4447)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'self']
    $const10.3 = const(NoneType, None)       ['$const10.3']
    $12return_value.4 = cast(value=$const10.3) ['$12return_value.4', '$const10.3']
    return $12return_value.4                 ['$12return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA484F910>
DEBUG:numba.core.ssa:on stmt: self = arg(0, name=self)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4447)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const10.3 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $12return_value.4 = cast(value=$const10.3)
DEBUG:numba.core.ssa:on stmt: return $12return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12return_value.4': [(<numba.core.ir.Assign object at 0x0000017AA48608E0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA4860340>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x0000017AA4860640>,
                                    0)],
             '$const10.3': [(<numba.core.ir.Assign object at 0x0000017AA4860760>,
                             0)],
             'self': [(<numba.core.ir.Assign object at 0x0000017AA4860190>,
                       0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA484F910>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4456)
           2	LOAD_GLOBAL(arg=0, lineno=4457)
           4	LOAD_ATTR(arg=1, lineno=4457)
           6	LOAD_FAST(arg=0, lineno=4457)
           8	LOAD_FAST(arg=1, lineno=4457)
          10	LOAD_CONST(arg=1, lineno=4457)
          12	CALL_FUNCTION_KW(arg=2, lineno=4457)
          14	STORE_FAST(arg=2, lineno=4457)
          16	LOAD_FAST(arg=2, lineno=4458)
          18	LOAD_METHOD(arg=2, lineno=4458)
          20	CALL_METHOD(arg=0, lineno=4458)
          22	POP_TOP(arg=None, lineno=4458)
          24	LOAD_FAST(arg=2, lineno=4459)
          26	RETURN_VALUE(arg=None, lineno=4459)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4456)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4457)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=4457)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4457)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=4457)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$shape6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=4457)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$shape6.2', '$dtype8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=CALL_FUNCTION_KW(arg=2, lineno=4457)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$shape6.2', '$dtype8.3', '$const10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=STORE_FAST(arg=2, lineno=4457)
DEBUG:numba.core.byteflow:stack ['$12call_function_kw.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=4458)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=4458)
DEBUG:numba.core.byteflow:stack ['$arr16.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=CALL_METHOD(arg=0, lineno=4458)
DEBUG:numba.core.byteflow:stack ['$18load_method.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=POP_TOP(arg=None, lineno=4458)
DEBUG:numba.core.byteflow:stack ['$20call_method.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=4459)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=4459)
DEBUG:numba.core.byteflow:stack ['$arr24.9']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$shape6.2'}), (8, {'res': '$dtype8.3'}), (10, {'res': '$const10.4'}), (12, {'func': '$4load_attr.1', 'args': ['$shape6.2', '$dtype8.3'], 'names': '$const10.4', 'res': '$12call_function_kw.5'}), (14, {'value': '$12call_function_kw.5'}), (16, {'res': '$arr16.6'}), (18, {'item': '$arr16.6', 'res': '$18load_method.7'}), (20, {'func': '$18load_method.7', 'args': [], 'res': '$20call_method.8'}), (24, {'res': '$arr24.9'}), (26, {'retval': '$arr24.9', 'castval': '$26return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4456)], kws=[('dtype', Var(dtype, arrayobj.py:4456))], vararg=None, varkwarg=None, target=None) ['$4load_attr.1', 'arr', 'dtype', 'shape']
    $18load_method.7 = getattr(value=arr, attr=_zero_fill) ['$18load_method.7', 'arr']
    $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.7', '$20call_method.8']
    $26return_value.10 = cast(value=arr)     ['$26return_value.10', 'arr']
    return $26return_value.10                ['$26return_value.10']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA66D5270>
DEBUG:numba.core.ssa:on stmt: shape = arg(0, name=shape)
DEBUG:numba.core.ssa:on stmt: dtype = arg(1, name=dtype)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
DEBUG:numba.core.ssa:on stmt: arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4456)], kws=[('dtype', Var(dtype, arrayobj.py:4456))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $18load_method.7 = getattr(value=arr, attr=_zero_fill)
DEBUG:numba.core.ssa:on stmt: $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26return_value.10 = cast(value=arr)
DEBUG:numba.core.ssa:on stmt: return $26return_value.10
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$18load_method.7': [(<numba.core.ir.Assign object at 0x0000017AA66D6320>,
                                   0)],
             '$20call_method.8': [(<numba.core.ir.Assign object at 0x0000017AA66D6530>,
                                   0)],
             '$26return_value.10': [(<numba.core.ir.Assign object at 0x0000017AA66D6740>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA66D5840>,
                                  0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x0000017AA66D59C0>,
                                0)],
             'arr': [(<numba.core.ir.Assign object at 0x0000017AA66D6080>, 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x0000017AA66D46D0>,
                        0)],
             'shape': [(<numba.core.ir.Assign object at 0x0000017AA66D4D00>,
                        0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA66D5270>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4388)
           2	LOAD_GLOBAL(arg=0, lineno=4389)
           4	LOAD_FAST(arg=0, lineno=4389)
           6	LOAD_FAST(arg=1, lineno=4389)
           8	LOAD_DEREF(arg=0, lineno=4389)
          10	CALL_FUNCTION(arg=3, lineno=4389)
          12	RETURN_VALUE(arg=None, lineno=4389)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4388)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4389)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$shape4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$10call_function.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(int32, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($8load_deref.3, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6704FA0>
DEBUG:numba.core.ssa:on stmt: shape = arg(0, name=shape)
DEBUG:numba.core.ssa:on stmt: dtype = arg(1, name=dtype)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
DEBUG:numba.core.ssa:on stmt: $8load_deref.3 = freevar(retty: array(int32, 1d, C))
DEBUG:numba.core.ssa:on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($8load_deref.3, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $12return_value.5 = cast(value=$10call_function.4)
DEBUG:numba.core.ssa:on stmt: return $12return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x0000017AA66F3F40>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x0000017AA66F38E0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA6707D60>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x0000017AA6706830>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x0000017AA6707310>,
                        0)],
             'shape': [(<numba.core.ir.Assign object at 0x0000017AA6705AB0>,
                        0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA6704FA0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4388)
           2	LOAD_GLOBAL(arg=0, lineno=4389)
           4	LOAD_FAST(arg=0, lineno=4389)
           6	LOAD_FAST(arg=1, lineno=4389)
           8	LOAD_DEREF(arg=0, lineno=4389)
          10	CALL_FUNCTION(arg=3, lineno=4389)
          12	RETURN_VALUE(arg=None, lineno=4389)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4388)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4389)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$shape4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4389)
DEBUG:numba.core.byteflow:stack ['$10call_function.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(float32, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($8load_deref.3, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA66A0FA0>
DEBUG:numba.core.ssa:on stmt: shape = arg(0, name=shape)
DEBUG:numba.core.ssa:on stmt: dtype = arg(1, name=dtype)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
DEBUG:numba.core.ssa:on stmt: $8load_deref.3 = freevar(retty: array(float32, 1d, C))
DEBUG:numba.core.ssa:on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($8load_deref.3, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $12return_value.5 = cast(value=$10call_function.4)
DEBUG:numba.core.ssa:on stmt: return $12return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x0000017AA488AF80>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x0000017AA488AA40>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA488B7F0>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x0000017AA488B5E0>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x0000017AA488BDF0>,
                        0)],
             'shape': [(<numba.core.ir.Assign object at 0x0000017AA488BEB0>,
                        0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA66A0FA0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=2)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_CONST(arg=1, lineno=2)
           8	BINARY_SUBSCR(arg=None, lineno=2)
          10	LOAD_FAST(arg=0, lineno=2)
          12	LOAD_CONST(arg=2, lineno=2)
          14	BINARY_SUBSCR(arg=None, lineno=2)
          16	LOAD_GLOBAL(arg=1, lineno=2)
          18	LOAD_METHOD(arg=2, lineno=2)
          20	LOAD_CONST(arg=2, lineno=2)
          22	CALL_METHOD(arg=1, lineno=2)
          24	BINARY_ADD(arg=None, lineno=2)
          26	CALL_FUNCTION(arg=2, lineno=2)
          28	GET_ITER(arg=None, lineno=2)
>         30	FOR_ITER(arg=4, lineno=2)
          32	STORE_FAST(arg=2, lineno=2)
          34	LOAD_CONST(arg=1, lineno=3)
          36	STORE_FAST(arg=3, lineno=3)
          38	JUMP_ABSOLUTE(arg=16, lineno=3)
>         40	LOAD_CONST(arg=0, lineno=4)
          42	RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$sched4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$sched4.1', '$const6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4', '$const12.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$16load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL_METHOD(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8', '$const20.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=BINARY_ADD(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$22call_method.10']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL_FUNCTION(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$24binary_add.11']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=GET_ITER(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$26call_function.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=('$28get_iter.13',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi30.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=30 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=30, inst=FOR_ITER(arg=4, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=('$phi30.0', '$30for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=32 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=40 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const40.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0', '$phi32.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=STORE_FAST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$phi32.1']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=STORE_FAST(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$const34.2']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=JUMP_ABSOLUTE(arg=16, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=('$phi32.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=32 nstack_initial=2): {'$phi32.1'},
             State(pc_initial=40 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.1': State(pc_initial=30 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2))},
             '$phi32.0': {('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi30.0': {('$28get_iter.13', State(pc_initial=0 nstack_initial=0))},
 '$phi32.1': {('$30for_iter.2', State(pc_initial=30 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$28get_iter.13'},
             State(pc_initial=30 nstack_initial=1): {'$phi32.1': '$30for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sched4.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$sched4.1', 'res': '$8binary_subscr.3'}), (10, {'res': '$sched10.4'}), (12, {'res': '$const12.5'}), (14, {'index': '$const12.5', 'target': '$sched10.4', 'res': '$14binary_subscr.6'}), (16, {'res': '$16load_global.7'}), (18, {'item': '$16load_global.7', 'res': '$18load_method.8'}), (20, {'res': '$const20.9'}), (22, {'func': '$18load_method.8', 'args': ['$const20.9'], 'res': '$22call_method.10'}), (24, {'lhs': '$14binary_subscr.6', 'rhs': '$22call_method.10', 'res': '$24binary_add.11'}), (26, {'func': '$2load_global.0', 'args': ['$8binary_subscr.3', '$24binary_add.11'], 'res': '$26call_function.12'}), (28, {'value': '$26call_function.12', 'res': '$28get_iter.13'})), outgoing_phis={'$phi30.0': '$28get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28get_iter.13',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'iterator': '$phi30.0', 'pair': '$30for_iter.1', 'indval': '$30for_iter.2', 'pred': '$30for_iter.3'}),), outgoing_phis={'$phi32.1': '$30for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 32: ('$phi30.0', '$30for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=2):
AdaptBlockInfo(insts=((32, {'value': '$phi32.1'}), (34, {'res': '$const34.2'}), (36, {'value': '$const34.2'}), (38, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi32.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$const40.0'}), (42, {'retval': '$const40.0', 'castval': '$42return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    sched = arg(0, name=sched)               ['sched']
    rows = arg(1, name=rows)                 ['rows']
    $2load_global.0 = global(range: <class 'range'>) ['$2load_global.0']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8binary_subscr.3 = getitem(value=sched, index=$const6.2, fn=<built-in function getitem>) ['$8binary_subscr.3', '$const6.2', 'sched']
    $const12.5 = const(int, 1)               ['$const12.5']
    $14binary_subscr.6 = getitem(value=sched, index=$const12.5, fn=<built-in function getitem>) ['$14binary_subscr.6', '$const12.5', 'sched']
    $16load_global.7 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$16load_global.7']
    $18load_method.8 = getattr(value=$16load_global.7, attr=uint8) ['$16load_global.7', '$18load_method.8']
    $const20.9 = const(int, 1)               ['$const20.9']
    $22call_method.10 = call $18load_method.8($const20.9, func=$18load_method.8, args=[Var($const20.9, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.8', '$22call_method.10', '$const20.9']
    $24binary_add.11 = $14binary_subscr.6 + $22call_method.10 ['$14binary_subscr.6', '$22call_method.10', '$24binary_add.11']
    $26call_function.12 = call $2load_global.0($8binary_subscr.3, $24binary_add.11, func=$2load_global.0, args=[Var($8binary_subscr.3, <string>:2), Var($24binary_add.11, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$24binary_add.11', '$26call_function.12', '$2load_global.0', '$8binary_subscr.3']
    $28get_iter.13 = getiter(value=$26call_function.12) ['$26call_function.12', '$28get_iter.13']
    $phi30.0 = $28get_iter.13                ['$28get_iter.13', '$phi30.0']
    jump 30                                  []
label 30:
    $30for_iter.1 = iternext(value=$phi30.0) ['$30for_iter.1', '$phi30.0']
    $30for_iter.2 = pair_first(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.2']
    $30for_iter.3 = pair_second(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.3']
    $phi32.1 = $30for_iter.2                 ['$30for_iter.2', '$phi32.1']
    branch $30for_iter.3, 32, 40             ['$30for_iter.3']
label 32:
    parfor__index_60 = $phi32.1              ['$phi32.1', 'parfor__index_60']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 30                                  []
label 40:
    $const40.0 = const(NoneType, None)       ['$const40.0']
    $42return_value.1 = cast(value=$const40.0) ['$42return_value.1', '$const40.0']
    return $42return_value.1                 ['$42return_value.1']

DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=2)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_CONST(arg=1, lineno=2)
           8	BINARY_SUBSCR(arg=None, lineno=2)
          10	LOAD_FAST(arg=0, lineno=2)
          12	LOAD_CONST(arg=2, lineno=2)
          14	BINARY_SUBSCR(arg=None, lineno=2)
          16	LOAD_GLOBAL(arg=1, lineno=2)
          18	LOAD_METHOD(arg=2, lineno=2)
          20	LOAD_CONST(arg=2, lineno=2)
          22	CALL_METHOD(arg=1, lineno=2)
          24	BINARY_ADD(arg=None, lineno=2)
          26	CALL_FUNCTION(arg=2, lineno=2)
          28	GET_ITER(arg=None, lineno=2)
>         30	FOR_ITER(arg=4, lineno=2)
          32	STORE_FAST(arg=2, lineno=2)
          34	LOAD_CONST(arg=1, lineno=3)
          36	STORE_FAST(arg=3, lineno=3)
          38	JUMP_ABSOLUTE(arg=16, lineno=3)
>         40	LOAD_CONST(arg=0, lineno=4)
          42	RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$sched4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$sched4.1', '$const6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4', '$const12.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$16load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL_METHOD(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8', '$const20.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=BINARY_ADD(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$22call_method.10']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL_FUNCTION(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$24binary_add.11']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=GET_ITER(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$26call_function.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=('$28get_iter.13',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi30.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=30 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=30, inst=FOR_ITER(arg=4, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=('$phi30.0', '$30for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=32 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=40 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const40.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0', '$phi32.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=STORE_FAST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$phi32.1']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=STORE_FAST(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$const34.2']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=JUMP_ABSOLUTE(arg=16, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=('$phi32.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=32 nstack_initial=2): {'$phi32.1'},
             State(pc_initial=40 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.1': State(pc_initial=30 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2))},
             '$phi32.0': {('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi30.0': {('$28get_iter.13', State(pc_initial=0 nstack_initial=0))},
 '$phi32.1': {('$30for_iter.2', State(pc_initial=30 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$28get_iter.13'},
             State(pc_initial=30 nstack_initial=1): {'$phi32.1': '$30for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sched4.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$sched4.1', 'res': '$8binary_subscr.3'}), (10, {'res': '$sched10.4'}), (12, {'res': '$const12.5'}), (14, {'index': '$const12.5', 'target': '$sched10.4', 'res': '$14binary_subscr.6'}), (16, {'res': '$16load_global.7'}), (18, {'item': '$16load_global.7', 'res': '$18load_method.8'}), (20, {'res': '$const20.9'}), (22, {'func': '$18load_method.8', 'args': ['$const20.9'], 'res': '$22call_method.10'}), (24, {'lhs': '$14binary_subscr.6', 'rhs': '$22call_method.10', 'res': '$24binary_add.11'}), (26, {'func': '$2load_global.0', 'args': ['$8binary_subscr.3', '$24binary_add.11'], 'res': '$26call_function.12'}), (28, {'value': '$26call_function.12', 'res': '$28get_iter.13'})), outgoing_phis={'$phi30.0': '$28get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28get_iter.13',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'iterator': '$phi30.0', 'pair': '$30for_iter.1', 'indval': '$30for_iter.2', 'pred': '$30for_iter.3'}),), outgoing_phis={'$phi32.1': '$30for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 32: ('$phi30.0', '$30for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=2):
AdaptBlockInfo(insts=((32, {'value': '$phi32.1'}), (34, {'res': '$const34.2'}), (36, {'value': '$const34.2'}), (38, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi32.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$const40.0'}), (42, {'retval': '$const40.0', 'castval': '$42return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    sched = arg(0, name=sched)               ['sched']
    cols = arg(1, name=cols)                 ['cols']
    $2load_global.0 = global(range: <class 'range'>) ['$2load_global.0']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8binary_subscr.3 = getitem(value=sched, index=$const6.2, fn=<built-in function getitem>) ['$8binary_subscr.3', '$const6.2', 'sched']
    $const12.5 = const(int, 1)               ['$const12.5']
    $14binary_subscr.6 = getitem(value=sched, index=$const12.5, fn=<built-in function getitem>) ['$14binary_subscr.6', '$const12.5', 'sched']
    $16load_global.7 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$16load_global.7']
    $18load_method.8 = getattr(value=$16load_global.7, attr=uint8) ['$16load_global.7', '$18load_method.8']
    $const20.9 = const(int, 1)               ['$const20.9']
    $22call_method.10 = call $18load_method.8($const20.9, func=$18load_method.8, args=[Var($const20.9, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.8', '$22call_method.10', '$const20.9']
    $24binary_add.11 = $14binary_subscr.6 + $22call_method.10 ['$14binary_subscr.6', '$22call_method.10', '$24binary_add.11']
    $26call_function.12 = call $2load_global.0($8binary_subscr.3, $24binary_add.11, func=$2load_global.0, args=[Var($8binary_subscr.3, <string>:2), Var($24binary_add.11, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$24binary_add.11', '$26call_function.12', '$2load_global.0', '$8binary_subscr.3']
    $28get_iter.13 = getiter(value=$26call_function.12) ['$26call_function.12', '$28get_iter.13']
    $phi30.0 = $28get_iter.13                ['$28get_iter.13', '$phi30.0']
    jump 30                                  []
label 30:
    $30for_iter.1 = iternext(value=$phi30.0) ['$30for_iter.1', '$phi30.0']
    $30for_iter.2 = pair_first(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.2']
    $30for_iter.3 = pair_second(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.3']
    $phi32.1 = $30for_iter.2                 ['$30for_iter.2', '$phi32.1']
    branch $30for_iter.3, 32, 40             ['$30for_iter.3']
label 32:
    parfor__index_65 = $phi32.1              ['$phi32.1', 'parfor__index_65']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 30                                  []
label 40:
    $const40.0 = const(NoneType, None)       ['$const40.0']
    $42return_value.1 = cast(value=$const40.0) ['$42return_value.1', '$const40.0']
    return $42return_value.1                 ['$42return_value.1']

DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=2)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_CONST(arg=1, lineno=2)
           8	BINARY_SUBSCR(arg=None, lineno=2)
          10	LOAD_FAST(arg=0, lineno=2)
          12	LOAD_CONST(arg=2, lineno=2)
          14	BINARY_SUBSCR(arg=None, lineno=2)
          16	LOAD_GLOBAL(arg=1, lineno=2)
          18	LOAD_METHOD(arg=2, lineno=2)
          20	LOAD_CONST(arg=2, lineno=2)
          22	CALL_METHOD(arg=1, lineno=2)
          24	BINARY_ADD(arg=None, lineno=2)
          26	CALL_FUNCTION(arg=2, lineno=2)
          28	GET_ITER(arg=None, lineno=2)
>         30	FOR_ITER(arg=4, lineno=2)
          32	STORE_FAST(arg=2, lineno=2)
          34	LOAD_CONST(arg=1, lineno=3)
          36	STORE_FAST(arg=3, lineno=3)
          38	JUMP_ABSOLUTE(arg=16, lineno=3)
>         40	LOAD_CONST(arg=0, lineno=4)
          42	RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$sched4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$sched4.1', '$const6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4', '$const12.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$16load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL_METHOD(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8', '$const20.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=BINARY_ADD(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$22call_method.10']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL_FUNCTION(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$24binary_add.11']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=GET_ITER(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$26call_function.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=('$28get_iter.13',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi30.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=30 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=30, inst=FOR_ITER(arg=4, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=('$phi30.0', '$30for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=32 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=40 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const40.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0', '$phi32.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=STORE_FAST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$phi32.1']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=STORE_FAST(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$const34.2']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=JUMP_ABSOLUTE(arg=16, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=('$phi32.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=32 nstack_initial=2): {'$phi32.1'},
             State(pc_initial=40 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.1': State(pc_initial=30 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2))},
             '$phi32.0': {('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi30.0': {('$28get_iter.13', State(pc_initial=0 nstack_initial=0))},
 '$phi32.1': {('$30for_iter.2', State(pc_initial=30 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$28get_iter.13'},
             State(pc_initial=30 nstack_initial=1): {'$phi32.1': '$30for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sched4.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$sched4.1', 'res': '$8binary_subscr.3'}), (10, {'res': '$sched10.4'}), (12, {'res': '$const12.5'}), (14, {'index': '$const12.5', 'target': '$sched10.4', 'res': '$14binary_subscr.6'}), (16, {'res': '$16load_global.7'}), (18, {'item': '$16load_global.7', 'res': '$18load_method.8'}), (20, {'res': '$const20.9'}), (22, {'func': '$18load_method.8', 'args': ['$const20.9'], 'res': '$22call_method.10'}), (24, {'lhs': '$14binary_subscr.6', 'rhs': '$22call_method.10', 'res': '$24binary_add.11'}), (26, {'func': '$2load_global.0', 'args': ['$8binary_subscr.3', '$24binary_add.11'], 'res': '$26call_function.12'}), (28, {'value': '$26call_function.12', 'res': '$28get_iter.13'})), outgoing_phis={'$phi30.0': '$28get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28get_iter.13',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'iterator': '$phi30.0', 'pair': '$30for_iter.1', 'indval': '$30for_iter.2', 'pred': '$30for_iter.3'}),), outgoing_phis={'$phi32.1': '$30for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 32: ('$phi30.0', '$30for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=2):
AdaptBlockInfo(insts=((32, {'value': '$phi32.1'}), (34, {'res': '$const34.2'}), (36, {'value': '$const34.2'}), (38, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi32.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$const40.0'}), (42, {'retval': '$const40.0', 'castval': '$42return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    sched = arg(0, name=sched)               ['sched']
    vals = arg(1, name=vals)                 ['vals']
    $2load_global.0 = global(range: <class 'range'>) ['$2load_global.0']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8binary_subscr.3 = getitem(value=sched, index=$const6.2, fn=<built-in function getitem>) ['$8binary_subscr.3', '$const6.2', 'sched']
    $const12.5 = const(int, 1)               ['$const12.5']
    $14binary_subscr.6 = getitem(value=sched, index=$const12.5, fn=<built-in function getitem>) ['$14binary_subscr.6', '$const12.5', 'sched']
    $16load_global.7 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$16load_global.7']
    $18load_method.8 = getattr(value=$16load_global.7, attr=uint8) ['$16load_global.7', '$18load_method.8']
    $const20.9 = const(int, 1)               ['$const20.9']
    $22call_method.10 = call $18load_method.8($const20.9, func=$18load_method.8, args=[Var($const20.9, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.8', '$22call_method.10', '$const20.9']
    $24binary_add.11 = $14binary_subscr.6 + $22call_method.10 ['$14binary_subscr.6', '$22call_method.10', '$24binary_add.11']
    $26call_function.12 = call $2load_global.0($8binary_subscr.3, $24binary_add.11, func=$2load_global.0, args=[Var($8binary_subscr.3, <string>:2), Var($24binary_add.11, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$24binary_add.11', '$26call_function.12', '$2load_global.0', '$8binary_subscr.3']
    $28get_iter.13 = getiter(value=$26call_function.12) ['$26call_function.12', '$28get_iter.13']
    $phi30.0 = $28get_iter.13                ['$28get_iter.13', '$phi30.0']
    jump 30                                  []
label 30:
    $30for_iter.1 = iternext(value=$phi30.0) ['$30for_iter.1', '$phi30.0']
    $30for_iter.2 = pair_first(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.2']
    $30for_iter.3 = pair_second(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.3']
    $phi32.1 = $30for_iter.2                 ['$30for_iter.2', '$phi32.1']
    branch $30for_iter.3, 32, 40             ['$30for_iter.3']
label 32:
    parfor__index_70 = $phi32.1              ['$phi32.1', 'parfor__index_70']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 30                                  []
label 40:
    $const40.0 = const(NoneType, None)       ['$const40.0']
    $42return_value.1 = cast(value=$const40.0) ['$42return_value.1', '$const40.0']
    return $42return_value.1                 ['$42return_value.1']

DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=2)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_CONST(arg=1, lineno=2)
           8	BINARY_SUBSCR(arg=None, lineno=2)
          10	LOAD_FAST(arg=0, lineno=2)
          12	LOAD_CONST(arg=2, lineno=2)
          14	BINARY_SUBSCR(arg=None, lineno=2)
          16	LOAD_GLOBAL(arg=1, lineno=2)
          18	LOAD_METHOD(arg=2, lineno=2)
          20	LOAD_CONST(arg=2, lineno=2)
          22	CALL_METHOD(arg=1, lineno=2)
          24	BINARY_ADD(arg=None, lineno=2)
          26	CALL_FUNCTION(arg=2, lineno=2)
          28	GET_ITER(arg=None, lineno=2)
>         30	FOR_ITER(arg=4, lineno=2)
          32	STORE_FAST(arg=2, lineno=2)
          34	LOAD_CONST(arg=1, lineno=3)
          36	STORE_FAST(arg=3, lineno=3)
          38	JUMP_ABSOLUTE(arg=16, lineno=3)
>         40	LOAD_CONST(arg=0, lineno=4)
          42	RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$sched4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$sched4.1', '$const6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4', '$const12.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$16load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL_METHOD(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8', '$const20.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=BINARY_ADD(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$22call_method.10']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL_FUNCTION(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$24binary_add.11']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=GET_ITER(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$26call_function.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=('$28get_iter.13',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi30.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=30 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=30, inst=FOR_ITER(arg=4, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=('$phi30.0', '$30for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=32 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=40 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const40.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0', '$phi32.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=STORE_FAST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$phi32.1']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=STORE_FAST(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$const34.2']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=JUMP_ABSOLUTE(arg=16, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=('$phi32.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=32 nstack_initial=2): {'$phi32.1'},
             State(pc_initial=40 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.1': State(pc_initial=30 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2))},
             '$phi32.0': {('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi30.0': {('$28get_iter.13', State(pc_initial=0 nstack_initial=0))},
 '$phi32.1': {('$30for_iter.2', State(pc_initial=30 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$28get_iter.13'},
             State(pc_initial=30 nstack_initial=1): {'$phi32.1': '$30for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sched4.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$sched4.1', 'res': '$8binary_subscr.3'}), (10, {'res': '$sched10.4'}), (12, {'res': '$const12.5'}), (14, {'index': '$const12.5', 'target': '$sched10.4', 'res': '$14binary_subscr.6'}), (16, {'res': '$16load_global.7'}), (18, {'item': '$16load_global.7', 'res': '$18load_method.8'}), (20, {'res': '$const20.9'}), (22, {'func': '$18load_method.8', 'args': ['$const20.9'], 'res': '$22call_method.10'}), (24, {'lhs': '$14binary_subscr.6', 'rhs': '$22call_method.10', 'res': '$24binary_add.11'}), (26, {'func': '$2load_global.0', 'args': ['$8binary_subscr.3', '$24binary_add.11'], 'res': '$26call_function.12'}), (28, {'value': '$26call_function.12', 'res': '$28get_iter.13'})), outgoing_phis={'$phi30.0': '$28get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28get_iter.13',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'iterator': '$phi30.0', 'pair': '$30for_iter.1', 'indval': '$30for_iter.2', 'pred': '$30for_iter.3'}),), outgoing_phis={'$phi32.1': '$30for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 32: ('$phi30.0', '$30for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=2):
AdaptBlockInfo(insts=((32, {'value': '$phi32.1'}), (34, {'res': '$const34.2'}), (36, {'value': '$const34.2'}), (38, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi32.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$const40.0'}), (42, {'retval': '$const40.0', 'castval': '$42return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    sched = arg(0, name=sched)               ['sched']
    dists = arg(1, name=dists)               ['dists']
    $2load_global.0 = global(range: <class 'range'>) ['$2load_global.0']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8binary_subscr.3 = getitem(value=sched, index=$const6.2, fn=<built-in function getitem>) ['$8binary_subscr.3', '$const6.2', 'sched']
    $const12.5 = const(int, 1)               ['$const12.5']
    $14binary_subscr.6 = getitem(value=sched, index=$const12.5, fn=<built-in function getitem>) ['$14binary_subscr.6', '$const12.5', 'sched']
    $16load_global.7 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$16load_global.7']
    $18load_method.8 = getattr(value=$16load_global.7, attr=uint8) ['$16load_global.7', '$18load_method.8']
    $const20.9 = const(int, 1)               ['$const20.9']
    $22call_method.10 = call $18load_method.8($const20.9, func=$18load_method.8, args=[Var($const20.9, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.8', '$22call_method.10', '$const20.9']
    $24binary_add.11 = $14binary_subscr.6 + $22call_method.10 ['$14binary_subscr.6', '$22call_method.10', '$24binary_add.11']
    $26call_function.12 = call $2load_global.0($8binary_subscr.3, $24binary_add.11, func=$2load_global.0, args=[Var($8binary_subscr.3, <string>:2), Var($24binary_add.11, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$24binary_add.11', '$26call_function.12', '$2load_global.0', '$8binary_subscr.3']
    $28get_iter.13 = getiter(value=$26call_function.12) ['$26call_function.12', '$28get_iter.13']
    $phi30.0 = $28get_iter.13                ['$28get_iter.13', '$phi30.0']
    jump 30                                  []
label 30:
    $30for_iter.1 = iternext(value=$phi30.0) ['$30for_iter.1', '$phi30.0']
    $30for_iter.2 = pair_first(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.2']
    $30for_iter.3 = pair_second(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.3']
    $phi32.1 = $30for_iter.2                 ['$30for_iter.2', '$phi32.1']
    branch $30for_iter.3, 32, 40             ['$30for_iter.3']
label 32:
    parfor__index_75 = $phi32.1              ['$phi32.1', 'parfor__index_75']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 30                                  []
label 40:
    $const40.0 = const(NoneType, None)       ['$const40.0']
    $42return_value.1 = cast(value=$const40.0) ['$42return_value.1', '$const40.0']
    return $42return_value.1                 ['$42return_value.1']

DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=63)
           2	LOAD_GLOBAL(arg=0, lineno=92)
           4	LOAD_METHOD(arg=1, lineno=92)
           6	LOAD_FAST(arg=5, lineno=92)
           8	LOAD_ATTR(arg=2, lineno=92)
          10	LOAD_CONST(arg=1, lineno=92)
          12	BINARY_SUBSCR(arg=None, lineno=92)
          14	CALL_METHOD(arg=1, lineno=92)
          16	GET_ITER(arg=None, lineno=92)
>         18	NOP(arg=1, lineno=92)
          20	FOR_ITER(arg=390, lineno=92)
          22	STORE_FAST(arg=27, lineno=92)
          24	LOAD_FAST(arg=15, lineno=93)
          26	LOAD_FAST(arg=27, lineno=93)
          28	BINARY_SUBSCR(arg=None, lineno=93)
          30	LOAD_FAST(arg=16, lineno=93)
          32	COMPARE_OP(arg=1, lineno=93)
          34	NOP(arg=1, lineno=93)
          36	POP_JUMP_IF_FALSE(arg=401, lineno=93)
          38	LOAD_FAST(arg=2, lineno=94)
          40	LOAD_FAST(arg=27, lineno=94)
          42	BINARY_SUBSCR(arg=None, lineno=94)
          44	STORE_FAST(arg=28, lineno=94)
          46	LOAD_FAST(arg=3, lineno=95)
          48	LOAD_FAST(arg=27, lineno=95)
          50	BINARY_SUBSCR(arg=None, lineno=95)
          52	STORE_FAST(arg=29, lineno=95)
          54	LOAD_FAST(arg=0, lineno=97)
          56	LOAD_FAST(arg=28, lineno=97)
          58	BINARY_SUBSCR(arg=None, lineno=97)
          60	STORE_FAST(arg=30, lineno=97)
          62	LOAD_FAST(arg=1, lineno=98)
          64	LOAD_FAST(arg=29, lineno=98)
          66	BINARY_SUBSCR(arg=None, lineno=98)
          68	STORE_FAST(arg=31, lineno=98)
          70	LOAD_GLOBAL(arg=3, lineno=100)
          72	LOAD_FAST(arg=30, lineno=100)
          74	LOAD_FAST(arg=31, lineno=100)
          76	CALL_FUNCTION(arg=2, lineno=100)
          78	STORE_FAST(arg=32, lineno=100)
          80	LOAD_FAST(arg=17, lineno=102)
          82	POP_JUMP_IF_FALSE(arg=176, lineno=102)
          84	LOAD_CONST(arg=2, lineno=103)
          86	LOAD_CONST(arg=2, lineno=103)
          88	LOAD_FAST(arg=6, lineno=103)
          90	LOAD_GLOBAL(arg=4, lineno=103)
          92	LOAD_FAST(arg=32, lineno=103)
          94	LOAD_FAST(arg=7, lineno=103)
          96	CALL_FUNCTION(arg=2, lineno=103)
          98	BINARY_MULTIPLY(arg=None, lineno=103)
         100	BINARY_ADD(arg=None, lineno=103)
         102	BINARY_TRUE_DIVIDE(arg=None, lineno=103)
         104	STORE_FAST(arg=33, lineno=103)
         106	LOAD_FAST(arg=6, lineno=105)
         108	LOAD_FAST(arg=7, lineno=105)
         110	BINARY_MULTIPLY(arg=None, lineno=105)
         112	LOAD_GLOBAL(arg=4, lineno=105)
         114	LOAD_FAST(arg=32, lineno=105)
         116	LOAD_FAST(arg=7, lineno=105)
         118	LOAD_CONST(arg=3, lineno=105)
         120	BINARY_SUBTRACT(arg=None, lineno=105)
         122	CALL_FUNCTION(arg=2, lineno=105)
         124	BINARY_MULTIPLY(arg=None, lineno=105)
         126	LOAD_CONST(arg=2, lineno=105)
         128	LOAD_FAST(arg=6, lineno=105)
         130	LOAD_GLOBAL(arg=4, lineno=105)
         132	LOAD_FAST(arg=32, lineno=105)
         134	LOAD_FAST(arg=7, lineno=105)
         136	CALL_FUNCTION(arg=2, lineno=105)
         138	BINARY_MULTIPLY(arg=None, lineno=105)
         140	BINARY_ADD(arg=None, lineno=105)
         142	BINARY_TRUE_DIVIDE(arg=None, lineno=105)
         144	STORE_FAST(arg=34, lineno=104)
         146	LOAD_FAST(arg=33, lineno=108)
         148	LOAD_FAST(arg=18, lineno=108)
         150	LOAD_FAST(arg=29, lineno=108)
         152	BINARY_SUBSCR(arg=None, lineno=108)
         154	BINARY_TRUE_DIVIDE(arg=None, lineno=108)
         156	STORE_FAST(arg=35, lineno=108)
         158	LOAD_FAST(arg=33, lineno=109)
         160	LOAD_FAST(arg=18, lineno=109)
         162	LOAD_FAST(arg=28, lineno=109)
         164	BINARY_SUBSCR(arg=None, lineno=109)
         166	BINARY_TRUE_DIVIDE(arg=None, lineno=109)
         168	STORE_FAST(arg=36, lineno=109)
         170	LOAD_FAST(arg=35, lineno=111)
         172	LOAD_CONST(arg=2, lineno=112)
         174	LOAD_FAST(arg=7, lineno=112)
         176	LOAD_CONST(arg=3, lineno=112)
         178	LOAD_FAST(arg=33, lineno=112)
         180	BINARY_SUBTRACT(arg=None, lineno=112)
         182	BINARY_MULTIPLY(arg=None, lineno=112)
         184	BINARY_SUBTRACT(arg=None, lineno=112)
         186	LOAD_GLOBAL(arg=5, lineno=112)
         188	LOAD_METHOD(arg=6, lineno=112)
         190	LOAD_FAST(arg=19, lineno=112)
         192	LOAD_FAST(arg=29, lineno=112)
         194	BINARY_SUBSCR(arg=None, lineno=112)
         196	CALL_METHOD(arg=1, lineno=112)
         198	BINARY_TRUE_DIVIDE(arg=None, lineno=112)
         200	LOAD_FAST(arg=34, lineno=112)
         202	BINARY_ADD(arg=None, lineno=112)
         204	BINARY_MULTIPLY(arg=None, lineno=111)
         206	STORE_FAST(arg=37, lineno=111)
         208	LOAD_FAST(arg=36, lineno=114)
         210	LOAD_CONST(arg=2, lineno=115)
         212	LOAD_FAST(arg=7, lineno=115)
         214	LOAD_CONST(arg=3, lineno=115)
         216	LOAD_FAST(arg=33, lineno=115)
         218	BINARY_SUBTRACT(arg=None, lineno=115)
         220	BINARY_MULTIPLY(arg=None, lineno=115)
         222	BINARY_SUBTRACT(arg=None, lineno=115)
         224	LOAD_GLOBAL(arg=5, lineno=115)
         226	LOAD_METHOD(arg=6, lineno=115)
         228	LOAD_FAST(arg=19, lineno=115)
         230	LOAD_FAST(arg=28, lineno=115)
         232	BINARY_SUBSCR(arg=None, lineno=115)
         234	CALL_METHOD(arg=1, lineno=115)
         236	BINARY_TRUE_DIVIDE(arg=None, lineno=115)
         238	LOAD_FAST(arg=34, lineno=115)
         240	BINARY_ADD(arg=None, lineno=115)
         242	BINARY_MULTIPLY(arg=None, lineno=114)
         244	STORE_FAST(arg=38, lineno=114)
         246	LOAD_FAST(arg=21, lineno=118)
         248	LOAD_FAST(arg=21, lineno=118)
         250	BINARY_MULTIPLY(arg=None, lineno=118)
         252	STORE_FAST(arg=39, lineno=118)
         254	LOAD_FAST(arg=24, lineno=120)
         256	LOAD_FAST(arg=29, lineno=120)
         258	BINARY_SUBSCR(arg=None, lineno=120)
         260	LOAD_FAST(arg=20, lineno=121)
         262	LOAD_FAST(arg=19, lineno=121)
         264	LOAD_FAST(arg=29, lineno=121)
         266	BINARY_SUBSCR(arg=None, lineno=121)
         268	LOAD_FAST(arg=22, lineno=121)
         270	BINARY_SUBTRACT(arg=None, lineno=121)
         272	BINARY_MULTIPLY(arg=None, lineno=121)
         274	LOAD_FAST(arg=39, lineno=121)
         276	BINARY_TRUE_DIVIDE(arg=None, lineno=121)
         278	BINARY_SUBTRACT(arg=None, lineno=120)
         280	STORE_FAST(arg=40, lineno=119)
         282	LOAD_FAST(arg=24, lineno=124)
         284	LOAD_FAST(arg=28, lineno=124)
         286	BINARY_SUBSCR(arg=None, lineno=124)
         288	LOAD_FAST(arg=20, lineno=125)
         290	LOAD_FAST(arg=19, lineno=125)
         292	LOAD_FAST(arg=28, lineno=125)
         294	BINARY_SUBSCR(arg=None, lineno=125)
         296	LOAD_FAST(arg=22, lineno=125)
         298	BINARY_SUBTRACT(arg=None, lineno=125)
         300	BINARY_MULTIPLY(arg=None, lineno=125)
         302	LOAD_FAST(arg=39, lineno=125)
         304	BINARY_TRUE_DIVIDE(arg=None, lineno=125)
         306	BINARY_SUBTRACT(arg=None, lineno=124)
         308	STORE_FAST(arg=41, lineno=123)
         310	LOAD_FAST(arg=23, lineno=129)
         312	LOAD_FAST(arg=26, lineno=130)
         314	BINARY_MULTIPLY(arg=None, lineno=129)
         316	LOAD_FAST(arg=40, lineno=131)
         318	LOAD_FAST(arg=37, lineno=131)
         320	BINARY_MULTIPLY(arg=None, lineno=131)
         322	LOAD_FAST(arg=41, lineno=131)
         324	LOAD_FAST(arg=38, lineno=131)
         326	BINARY_MULTIPLY(arg=None, lineno=131)
         328	BINARY_ADD(arg=None, lineno=131)
         330	BINARY_MULTIPLY(arg=None, lineno=129)
         332	LOAD_FAST(arg=25, lineno=132)
         334	LOAD_FAST(arg=27, lineno=132)
         336	BINARY_SUBSCR(arg=None, lineno=132)
         338	LOAD_FAST(arg=21, lineno=132)
         340	BINARY_MULTIPLY(arg=None, lineno=132)
         342	BINARY_TRUE_DIVIDE(arg=None, lineno=129)
         344	LOAD_FAST(arg=4, lineno=133)
         346	BINARY_TRUE_DIVIDE(arg=None, lineno=129)
         348	STORE_FAST(arg=42, lineno=128)
>        350	LOAD_FAST(arg=32, lineno=136)
         352	LOAD_CONST(arg=4, lineno=136)
         354	COMPARE_OP(arg=4, lineno=136)
         356	POP_JUMP_IF_FALSE(arg=205, lineno=136)
         358	LOAD_CONST(arg=5, lineno=137)
         360	LOAD_FAST(arg=6, lineno=137)
         362	BINARY_MULTIPLY(arg=None, lineno=137)
         364	LOAD_FAST(arg=7, lineno=137)
         366	BINARY_MULTIPLY(arg=None, lineno=137)
         368	LOAD_GLOBAL(arg=4, lineno=137)
         370	LOAD_FAST(arg=32, lineno=137)
         372	LOAD_FAST(arg=7, lineno=137)
         374	LOAD_CONST(arg=2, lineno=137)
         376	BINARY_SUBTRACT(arg=None, lineno=137)
         378	CALL_FUNCTION(arg=2, lineno=137)
         380	BINARY_MULTIPLY(arg=None, lineno=137)
         382	STORE_FAST(arg=43, lineno=137)
         384	LOAD_FAST(arg=43, lineno=138)
         386	LOAD_FAST(arg=6, lineno=138)
         388	LOAD_GLOBAL(arg=4, lineno=138)
         390	LOAD_FAST(arg=32, lineno=138)
         392	LOAD_FAST(arg=7, lineno=138)
         394	CALL_FUNCTION(arg=2, lineno=138)
         396	BINARY_MULTIPLY(arg=None, lineno=138)
         398	LOAD_CONST(arg=2, lineno=138)
         400	BINARY_ADD(arg=None, lineno=138)
         402	INPLACE_TRUE_DIVIDE(arg=None, lineno=138)
         404	STORE_FAST(arg=43, lineno=138)
         406	JUMP_FORWARD(arg=2, lineno=138)
>        408	LOAD_CONST(arg=4, lineno=140)
         410	STORE_FAST(arg=43, lineno=140)
>        412	LOAD_GLOBAL(arg=7, lineno=142)
         414	LOAD_FAST(arg=10, lineno=142)
         416	CALL_FUNCTION(arg=1, lineno=142)
         418	GET_ITER(arg=None, lineno=142)
>        420	FOR_ITER(arg=56, lineno=142)
         422	STORE_FAST(arg=44, lineno=142)
         424	LOAD_GLOBAL(arg=8, lineno=143)
         426	LOAD_FAST(arg=43, lineno=143)
         428	LOAD_FAST(arg=30, lineno=143)
         430	LOAD_FAST(arg=44, lineno=143)
         432	BINARY_SUBSCR(arg=None, lineno=143)
         434	LOAD_FAST(arg=31, lineno=143)
         436	LOAD_FAST(arg=44, lineno=143)
         438	BINARY_SUBSCR(arg=None, lineno=143)
         440	BINARY_SUBTRACT(arg=None, lineno=143)
         442	BINARY_MULTIPLY(arg=None, lineno=143)
         444	CALL_FUNCTION(arg=1, lineno=143)
         446	STORE_FAST(arg=45, lineno=143)
         448	LOAD_FAST(arg=17, lineno=145)
         450	POP_JUMP_IF_FALSE(arg=243, lineno=145)
         452	LOAD_FAST(arg=45, lineno=148)
         454	LOAD_GLOBAL(arg=8, lineno=148)
         456	LOAD_CONST(arg=6, lineno=148)
         458	LOAD_FAST(arg=42, lineno=148)
         460	BINARY_MULTIPLY(arg=None, lineno=148)
         462	LOAD_FAST(arg=30, lineno=148)
         464	LOAD_FAST(arg=44, lineno=148)
         466	BINARY_SUBSCR(arg=None, lineno=148)
         468	LOAD_FAST(arg=31, lineno=148)
         470	LOAD_FAST(arg=44, lineno=148)
         472	BINARY_SUBSCR(arg=None, lineno=148)
         474	BINARY_SUBTRACT(arg=None, lineno=148)
         476	BINARY_MULTIPLY(arg=None, lineno=148)
         478	CALL_FUNCTION(arg=1, lineno=148)
         480	INPLACE_ADD(arg=None, lineno=148)
         482	STORE_FAST(arg=45, lineno=148)
>        484	LOAD_FAST(arg=30, lineno=150)
         486	LOAD_FAST(arg=44, lineno=150)
         488	DUP_TOP_TWO(arg=None, lineno=150)
         490	BINARY_SUBSCR(arg=None, lineno=150)
         492	LOAD_FAST(arg=45, lineno=150)
         494	LOAD_FAST(arg=12, lineno=150)
         496	BINARY_MULTIPLY(arg=None, lineno=150)
         498	INPLACE_ADD(arg=None, lineno=150)
         500	ROT_THREE(arg=None, lineno=150)
         502	STORE_SUBSCR(arg=None, lineno=150)
         504	LOAD_FAST(arg=11, lineno=151)
         506	NOP(arg=1, lineno=151)
         508	POP_JUMP_IF_FALSE(arg=267, lineno=151)
         510	LOAD_FAST(arg=31, lineno=152)
         512	LOAD_FAST(arg=44, lineno=152)
         514	DUP_TOP_TWO(arg=None, lineno=152)
         516	BINARY_SUBSCR(arg=None, lineno=152)
         518	LOAD_FAST(arg=45, lineno=152)
         520	UNARY_NEGATIVE(arg=None, lineno=152)
         522	LOAD_FAST(arg=12, lineno=152)
         524	BINARY_MULTIPLY(arg=None, lineno=152)
         526	INPLACE_ADD(arg=None, lineno=152)
         528	ROT_THREE(arg=None, lineno=152)
         530	STORE_SUBSCR(arg=None, lineno=152)
>        532	JUMP_ABSOLUTE(arg=211, lineno=152)
>        534	LOAD_FAST(arg=15, lineno=154)
         536	LOAD_FAST(arg=27, lineno=154)
         538	DUP_TOP_TWO(arg=None, lineno=154)
         540	BINARY_SUBSCR(arg=None, lineno=154)
         542	LOAD_FAST(arg=5, lineno=154)
         544	LOAD_FAST(arg=27, lineno=154)
         546	BINARY_SUBSCR(arg=None, lineno=154)
         548	INPLACE_ADD(arg=None, lineno=154)
         550	ROT_THREE(arg=None, lineno=154)
         552	STORE_SUBSCR(arg=None, lineno=154)
         554	LOAD_GLOBAL(arg=9, lineno=156)
         556	LOAD_FAST(arg=16, lineno=157)
         558	LOAD_FAST(arg=14, lineno=157)
         560	LOAD_FAST(arg=27, lineno=157)
         562	BINARY_SUBSCR(arg=None, lineno=157)
         564	BINARY_SUBTRACT(arg=None, lineno=157)
         566	LOAD_FAST(arg=13, lineno=157)
         568	LOAD_FAST(arg=27, lineno=157)
         570	BINARY_SUBSCR(arg=None, lineno=157)
         572	BINARY_TRUE_DIVIDE(arg=None, lineno=157)
         574	CALL_FUNCTION(arg=1, lineno=156)
         576	STORE_FAST(arg=46, lineno=156)
         578	LOAD_GLOBAL(arg=7, lineno=160)
         580	LOAD_FAST(arg=46, lineno=160)
         582	CALL_FUNCTION(arg=1, lineno=160)
         584	GET_ITER(arg=None, lineno=160)
>        586	FOR_ITER(arg=94, lineno=160)
         588	STORE_FAST(arg=47, lineno=160)
         590	LOAD_GLOBAL(arg=10, lineno=161)
         592	LOAD_FAST(arg=8, lineno=161)
         594	LOAD_FAST(arg=28, lineno=161)
         596	BINARY_SUBSCR(arg=None, lineno=161)
         598	CALL_FUNCTION(arg=1, lineno=161)
         600	LOAD_FAST(arg=4, lineno=161)
         602	BINARY_MODULO(arg=None, lineno=161)
         604	STORE_FAST(arg=29, lineno=161)
         606	LOAD_FAST(arg=1, lineno=163)
         608	LOAD_FAST(arg=29, lineno=163)
         610	BINARY_SUBSCR(arg=None, lineno=163)
         612	STORE_FAST(arg=31, lineno=163)
         614	LOAD_GLOBAL(arg=3, lineno=165)
         616	LOAD_FAST(arg=30, lineno=165)
         618	LOAD_FAST(arg=31, lineno=165)
         620	CALL_FUNCTION(arg=2, lineno=165)
         622	STORE_FAST(arg=32, lineno=165)
         624	LOAD_FAST(arg=32, lineno=167)
         626	LOAD_CONST(arg=4, lineno=167)
         628	COMPARE_OP(arg=4, lineno=167)
         630	NOP(arg=1, lineno=167)
         632	POP_JUMP_IF_FALSE(arg=340, lineno=167)
         634	LOAD_CONST(arg=7, lineno=168)
         636	LOAD_FAST(arg=9, lineno=168)
         638	BINARY_MULTIPLY(arg=None, lineno=168)
         640	LOAD_FAST(arg=7, lineno=168)
         642	BINARY_MULTIPLY(arg=None, lineno=168)
         644	STORE_FAST(arg=43, lineno=168)
         646	LOAD_FAST(arg=43, lineno=169)
         648	LOAD_CONST(arg=8, lineno=169)
         650	LOAD_FAST(arg=32, lineno=169)
         652	BINARY_ADD(arg=None, lineno=169)
         654	LOAD_FAST(arg=6, lineno=170)
         656	LOAD_GLOBAL(arg=4, lineno=170)
         658	LOAD_FAST(arg=32, lineno=170)
         660	LOAD_FAST(arg=7, lineno=170)
         662	CALL_FUNCTION(arg=2, lineno=170)
         664	BINARY_MULTIPLY(arg=None, lineno=170)
         666	LOAD_CONST(arg=3, lineno=170)
         668	BINARY_ADD(arg=None, lineno=170)
         670	BINARY_MULTIPLY(arg=None, lineno=169)
         672	INPLACE_TRUE_DIVIDE(arg=None, lineno=169)
         674	STORE_FAST(arg=43, lineno=169)
         676	JUMP_FORWARD(arg=9, lineno=169)
>        678	LOAD_FAST(arg=28, lineno=172)
         680	LOAD_FAST(arg=29, lineno=172)
         682	COMPARE_OP(arg=2, lineno=172)
         684	NOP(arg=1, lineno=172)
         686	POP_JUMP_IF_FALSE(arg=347, lineno=172)
         688	NOP(arg=1, lineno=173)
         690	JUMP_ABSOLUTE(arg=294, lineno=173)
>        692	LOAD_CONST(arg=4, lineno=175)
         694	STORE_FAST(arg=43, lineno=175)
>        696	LOAD_GLOBAL(arg=7, lineno=177)
         698	LOAD_FAST(arg=10, lineno=177)
         700	CALL_FUNCTION(arg=1, lineno=177)
         702	GET_ITER(arg=None, lineno=177)
>        704	FOR_ITER(arg=33, lineno=177)
         706	STORE_FAST(arg=44, lineno=177)
         708	LOAD_FAST(arg=43, lineno=178)
         710	LOAD_CONST(arg=4, lineno=178)
         712	COMPARE_OP(arg=4, lineno=178)
         714	NOP(arg=1, lineno=178)
         716	POP_JUMP_IF_FALSE(arg=373, lineno=178)
         718	LOAD_GLOBAL(arg=8, lineno=179)
         720	LOAD_FAST(arg=43, lineno=179)
         722	LOAD_FAST(arg=30, lineno=179)
         724	LOAD_FAST(arg=44, lineno=179)
         726	BINARY_SUBSCR(arg=None, lineno=179)
         728	LOAD_FAST(arg=31, lineno=179)
         730	LOAD_FAST(arg=44, lineno=179)
         732	BINARY_SUBSCR(arg=None, lineno=179)
         734	BINARY_SUBTRACT(arg=None, lineno=179)
         736	BINARY_MULTIPLY(arg=None, lineno=179)
         738	CALL_FUNCTION(arg=1, lineno=179)
         740	STORE_FAST(arg=45, lineno=179)
         742	JUMP_FORWARD(arg=2, lineno=179)
>        744	LOAD_CONST(arg=1, lineno=181)
         746	STORE_FAST(arg=45, lineno=181)
>        748	LOAD_FAST(arg=30, lineno=182)
         750	LOAD_FAST(arg=44, lineno=182)
         752	DUP_TOP_TWO(arg=None, lineno=182)
         754	BINARY_SUBSCR(arg=None, lineno=182)
         756	LOAD_FAST(arg=45, lineno=182)
         758	LOAD_FAST(arg=12, lineno=182)
         760	BINARY_MULTIPLY(arg=None, lineno=182)
         762	INPLACE_ADD(arg=None, lineno=182)
         764	ROT_THREE(arg=None, lineno=182)
         766	STORE_SUBSCR(arg=None, lineno=182)
         768	NOP(arg=1, lineno=182)
         770	JUMP_ABSOLUTE(arg=353, lineno=182)
>        772	NOP(arg=1, lineno=177)
         774	JUMP_ABSOLUTE(arg=294, lineno=177)
>        776	LOAD_FAST(arg=14, lineno=184)
         778	LOAD_FAST(arg=27, lineno=184)
         780	DUP_TOP_TWO(arg=None, lineno=184)
         782	BINARY_SUBSCR(arg=None, lineno=184)
         784	LOAD_FAST(arg=46, lineno=185)
         786	LOAD_FAST(arg=13, lineno=185)
         788	LOAD_FAST(arg=27, lineno=185)
         790	BINARY_SUBSCR(arg=None, lineno=185)
         792	BINARY_MULTIPLY(arg=None, lineno=185)
         794	INPLACE_ADD(arg=None, lineno=184)
         796	ROT_THREE(arg=None, lineno=184)
         798	STORE_SUBSCR(arg=None, lineno=184)
>        800	JUMP_ABSOLUTE(arg=10, lineno=184)
>        802	LOAD_CONST(arg=0, lineno=92)
         804	RETURN_VALUE(arg=None, lineno=92)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=63)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=92)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=92)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=5, lineno=92)
DEBUG:numba.core.byteflow:stack ['$4load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=92)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$epochs_per_sample6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=92)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$8load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=92)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$8load_attr.3', '$const10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=CALL_METHOD(arg=1, lineno=92)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$12binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=GET_ITER(arg=None, lineno=92)
DEBUG:numba.core.byteflow:stack ['$14call_method.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=18, stack=('$16get_iter.7',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=18 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi18.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=18 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=18, inst=NOP(arg=1, lineno=92)
DEBUG:numba.core.byteflow:stack ['$phi18.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=20, stack=('$phi18.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=20 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi20.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=20 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=20, inst=FOR_ITER(arg=390, lineno=92)
DEBUG:numba.core.byteflow:stack ['$phi20.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=802, stack=(), blockstack=(), npush=0), Edge(pc=22, stack=('$phi20.0', '$20for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=802 nstack_initial=0), State(pc_initial=22 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=802 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=802, inst=LOAD_CONST(arg=0, lineno=92)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=804, inst=RETURN_VALUE(arg=None, lineno=92)
DEBUG:numba.core.byteflow:stack ['$const802.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=22 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi22.0', '$phi22.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=22 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=22, inst=STORE_FAST(arg=27, lineno=92)
DEBUG:numba.core.byteflow:stack ['$phi22.0', '$phi22.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=15, lineno=93)
DEBUG:numba.core.byteflow:stack ['$phi22.0']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=27, lineno=93)
DEBUG:numba.core.byteflow:stack ['$phi22.0', '$epoch_of_next_sample24.2']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=93)
DEBUG:numba.core.byteflow:stack ['$phi22.0', '$epoch_of_next_sample24.2', '$i26.3']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=16, lineno=93)
DEBUG:numba.core.byteflow:stack ['$phi22.0', '$28binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=COMPARE_OP(arg=1, lineno=93)
DEBUG:numba.core.byteflow:stack ['$phi22.0', '$28binary_subscr.4', '$n30.5']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=NOP(arg=1, lineno=93)
DEBUG:numba.core.byteflow:stack ['$phi22.0', '$32compare_op.6']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=POP_JUMP_IF_FALSE(arg=401, lineno=93)
DEBUG:numba.core.byteflow:stack ['$phi22.0', '$32compare_op.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=38, stack=('$phi22.0',), blockstack=(), npush=0), Edge(pc=800, stack=('$phi22.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=38 nstack_initial=1), State(pc_initial=800 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi38.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=38 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=94)
DEBUG:numba.core.byteflow:stack ['$phi38.0']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=27, lineno=94)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$head38.1']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=94)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$head38.1', '$i40.2']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=STORE_FAST(arg=28, lineno=94)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$42binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=3, lineno=95)
DEBUG:numba.core.byteflow:stack ['$phi38.0']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=27, lineno=95)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$tail46.4']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=BINARY_SUBSCR(arg=None, lineno=95)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$tail46.4', '$i48.5']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=STORE_FAST(arg=29, lineno=95)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$50binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=97)
DEBUG:numba.core.byteflow:stack ['$phi38.0']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=28, lineno=97)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$head_embedding54.7']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=97)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$head_embedding54.7', '$j56.8']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=STORE_FAST(arg=30, lineno=97)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$58binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=98)
DEBUG:numba.core.byteflow:stack ['$phi38.0']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=29, lineno=98)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$tail_embedding62.10']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=98)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$tail_embedding62.10', '$k64.11']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=STORE_FAST(arg=31, lineno=98)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$66binary_subscr.12']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_GLOBAL(arg=3, lineno=100)
DEBUG:numba.core.byteflow:stack ['$phi38.0']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=30, lineno=100)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$70load_global.13']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=31, lineno=100)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$70load_global.13', '$current72.14']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=100)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$70load_global.13', '$current72.14', '$other74.15']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=STORE_FAST(arg=32, lineno=100)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$76call_function.16']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=17, lineno=102)
DEBUG:numba.core.byteflow:stack ['$phi38.0']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=176, lineno=102)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$densmap_flag80.17']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=84, stack=('$phi38.0',), blockstack=(), npush=0), Edge(pc=350, stack=('$phi38.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=800 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi800.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=800 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=800, inst=JUMP_ABSOLUTE(arg=10, lineno=184)
DEBUG:numba.core.byteflow:stack ['$phi800.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=18, stack=('$phi800.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=84 nstack_initial=1), State(pc_initial=350 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi84.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=84 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=103)
DEBUG:numba.core.byteflow:stack ['$phi84.0']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_CONST(arg=2, lineno=103)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$const84.1']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_FAST(arg=6, lineno=103)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$const84.1', '$const86.2']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_GLOBAL(arg=4, lineno=103)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$const84.1', '$const86.2', '$a88.3']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_FAST(arg=32, lineno=103)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$const84.1', '$const86.2', '$a88.3', '$90load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_FAST(arg=7, lineno=103)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$const84.1', '$const86.2', '$a88.3', '$90load_global.4', '$dist_squared92.5']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=CALL_FUNCTION(arg=2, lineno=103)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$const84.1', '$const86.2', '$a88.3', '$90load_global.4', '$dist_squared92.5', '$b94.6']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=BINARY_MULTIPLY(arg=None, lineno=103)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$const84.1', '$const86.2', '$a88.3', '$96call_function.7']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=BINARY_ADD(arg=None, lineno=103)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$const84.1', '$const86.2', '$98binary_multiply.8']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=103)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$const84.1', '$100binary_add.9']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=STORE_FAST(arg=33, lineno=103)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$102binary_true_divide.10']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=105)
DEBUG:numba.core.byteflow:stack ['$phi84.0']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_FAST(arg=7, lineno=105)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$a106.11']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=BINARY_MULTIPLY(arg=None, lineno=105)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$a106.11', '$b108.12']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_GLOBAL(arg=4, lineno=105)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$110binary_multiply.13']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_FAST(arg=32, lineno=105)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$110binary_multiply.13', '$112load_global.14']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=105)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$110binary_multiply.13', '$112load_global.14', '$dist_squared114.15']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_CONST(arg=3, lineno=105)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$110binary_multiply.13', '$112load_global.14', '$dist_squared114.15', '$b116.16']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=BINARY_SUBTRACT(arg=None, lineno=105)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$110binary_multiply.13', '$112load_global.14', '$dist_squared114.15', '$b116.16', '$const118.17']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=CALL_FUNCTION(arg=2, lineno=105)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$110binary_multiply.13', '$112load_global.14', '$dist_squared114.15', '$120binary_subtract.18']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=BINARY_MULTIPLY(arg=None, lineno=105)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$110binary_multiply.13', '$122call_function.19']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_CONST(arg=2, lineno=105)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$124binary_multiply.20']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=6, lineno=105)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$124binary_multiply.20', '$const126.21']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_GLOBAL(arg=4, lineno=105)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$124binary_multiply.20', '$const126.21', '$a128.22']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=LOAD_FAST(arg=32, lineno=105)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$124binary_multiply.20', '$const126.21', '$a128.22', '$130load_global.23']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_FAST(arg=7, lineno=105)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$124binary_multiply.20', '$const126.21', '$a128.22', '$130load_global.23', '$dist_squared132.24']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=CALL_FUNCTION(arg=2, lineno=105)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$124binary_multiply.20', '$const126.21', '$a128.22', '$130load_global.23', '$dist_squared132.24', '$b134.25']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=BINARY_MULTIPLY(arg=None, lineno=105)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$124binary_multiply.20', '$const126.21', '$a128.22', '$136call_function.26']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=BINARY_ADD(arg=None, lineno=105)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$124binary_multiply.20', '$const126.21', '$138binary_multiply.27']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=105)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$124binary_multiply.20', '$140binary_add.28']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=STORE_FAST(arg=34, lineno=104)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$142binary_true_divide.29']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_FAST(arg=33, lineno=108)
DEBUG:numba.core.byteflow:stack ['$phi84.0']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=18, lineno=108)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$phi146.30']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_FAST(arg=29, lineno=108)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$phi146.30', '$dens_phi_sum148.31']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=BINARY_SUBSCR(arg=None, lineno=108)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$phi146.30', '$dens_phi_sum148.31', '$k150.32']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=108)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$phi146.30', '$152binary_subscr.33']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=STORE_FAST(arg=35, lineno=108)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$154binary_true_divide.34']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=LOAD_FAST(arg=33, lineno=109)
DEBUG:numba.core.byteflow:stack ['$phi84.0']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=LOAD_FAST(arg=18, lineno=109)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$phi158.35']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=LOAD_FAST(arg=28, lineno=109)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$phi158.35', '$dens_phi_sum160.36']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=BINARY_SUBSCR(arg=None, lineno=109)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$phi158.35', '$dens_phi_sum160.36', '$j162.37']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=109)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$phi158.35', '$164binary_subscr.38']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=STORE_FAST(arg=36, lineno=109)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$166binary_true_divide.39']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=35, lineno=111)
DEBUG:numba.core.byteflow:stack ['$phi84.0']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=LOAD_CONST(arg=2, lineno=112)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_jk170.40']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=LOAD_FAST(arg=7, lineno=112)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_jk170.40', '$const172.41']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=LOAD_CONST(arg=3, lineno=112)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_jk170.40', '$const172.41', '$b174.42']
DEBUG:numba.core.byteflow:dispatch pc=178, inst=LOAD_FAST(arg=33, lineno=112)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_jk170.40', '$const172.41', '$b174.42', '$const176.43']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=BINARY_SUBTRACT(arg=None, lineno=112)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_jk170.40', '$const172.41', '$b174.42', '$const176.43', '$phi178.44']
DEBUG:numba.core.byteflow:dispatch pc=182, inst=BINARY_MULTIPLY(arg=None, lineno=112)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_jk170.40', '$const172.41', '$b174.42', '$180binary_subtract.45']
DEBUG:numba.core.byteflow:dispatch pc=184, inst=BINARY_SUBTRACT(arg=None, lineno=112)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_jk170.40', '$const172.41', '$182binary_multiply.46']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=LOAD_GLOBAL(arg=5, lineno=112)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47']
DEBUG:numba.core.byteflow:dispatch pc=188, inst=LOAD_METHOD(arg=6, lineno=112)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47', '$186load_global.48']
DEBUG:numba.core.byteflow:dispatch pc=190, inst=LOAD_FAST(arg=19, lineno=112)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47', '$188load_method.49']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_FAST(arg=29, lineno=112)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47', '$188load_method.49', '$dens_re_sum190.50']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=BINARY_SUBSCR(arg=None, lineno=112)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47', '$188load_method.49', '$dens_re_sum190.50', '$k192.51']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=CALL_METHOD(arg=1, lineno=112)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47', '$188load_method.49', '$194binary_subscr.52']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=112)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47', '$196call_method.53']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=LOAD_FAST(arg=34, lineno=112)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_jk170.40', '$198binary_true_divide.54']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=BINARY_ADD(arg=None, lineno=112)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_jk170.40', '$198binary_true_divide.54', '$dphi_term200.55']
DEBUG:numba.core.byteflow:dispatch pc=204, inst=BINARY_MULTIPLY(arg=None, lineno=111)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_jk170.40', '$202binary_add.56']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=STORE_FAST(arg=37, lineno=111)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$204binary_multiply.57']
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_FAST(arg=36, lineno=114)
DEBUG:numba.core.byteflow:stack ['$phi84.0']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=LOAD_CONST(arg=2, lineno=115)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_kj208.58']
DEBUG:numba.core.byteflow:dispatch pc=212, inst=LOAD_FAST(arg=7, lineno=115)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_kj208.58', '$const210.59']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=LOAD_CONST(arg=3, lineno=115)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_kj208.58', '$const210.59', '$b212.60']
DEBUG:numba.core.byteflow:dispatch pc=216, inst=LOAD_FAST(arg=33, lineno=115)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_kj208.58', '$const210.59', '$b212.60', '$const214.61']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=BINARY_SUBTRACT(arg=None, lineno=115)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_kj208.58', '$const210.59', '$b212.60', '$const214.61', '$phi216.62']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=BINARY_MULTIPLY(arg=None, lineno=115)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_kj208.58', '$const210.59', '$b212.60', '$218binary_subtract.63']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=BINARY_SUBTRACT(arg=None, lineno=115)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_kj208.58', '$const210.59', '$220binary_multiply.64']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=LOAD_GLOBAL(arg=5, lineno=115)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65']
DEBUG:numba.core.byteflow:dispatch pc=226, inst=LOAD_METHOD(arg=6, lineno=115)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65', '$224load_global.66']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=LOAD_FAST(arg=19, lineno=115)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65', '$226load_method.67']
DEBUG:numba.core.byteflow:dispatch pc=230, inst=LOAD_FAST(arg=28, lineno=115)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65', '$226load_method.67', '$dens_re_sum228.68']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=BINARY_SUBSCR(arg=None, lineno=115)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65', '$226load_method.67', '$dens_re_sum228.68', '$j230.69']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=CALL_METHOD(arg=1, lineno=115)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65', '$226load_method.67', '$232binary_subscr.70']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=115)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65', '$234call_method.71']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=LOAD_FAST(arg=34, lineno=115)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_kj208.58', '$236binary_true_divide.72']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=BINARY_ADD(arg=None, lineno=115)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_kj208.58', '$236binary_true_divide.72', '$dphi_term238.73']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=BINARY_MULTIPLY(arg=None, lineno=114)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$q_kj208.58', '$240binary_add.74']
DEBUG:numba.core.byteflow:dispatch pc=244, inst=STORE_FAST(arg=38, lineno=114)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$242binary_multiply.75']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=LOAD_FAST(arg=21, lineno=118)
DEBUG:numba.core.byteflow:stack ['$phi84.0']
DEBUG:numba.core.byteflow:dispatch pc=248, inst=LOAD_FAST(arg=21, lineno=118)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$dens_re_std246.76']
DEBUG:numba.core.byteflow:dispatch pc=250, inst=BINARY_MULTIPLY(arg=None, lineno=118)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$dens_re_std246.76', '$dens_re_std248.77']
DEBUG:numba.core.byteflow:dispatch pc=252, inst=STORE_FAST(arg=39, lineno=118)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$250binary_multiply.78']
DEBUG:numba.core.byteflow:dispatch pc=254, inst=LOAD_FAST(arg=24, lineno=120)
DEBUG:numba.core.byteflow:stack ['$phi84.0']
DEBUG:numba.core.byteflow:dispatch pc=256, inst=LOAD_FAST(arg=29, lineno=120)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$dens_R254.79']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=BINARY_SUBSCR(arg=None, lineno=120)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$dens_R254.79', '$k256.80']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=LOAD_FAST(arg=20, lineno=121)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$258binary_subscr.81']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=19, lineno=121)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$258binary_subscr.81', '$dens_re_cov260.82']
DEBUG:numba.core.byteflow:dispatch pc=264, inst=LOAD_FAST(arg=29, lineno=121)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$258binary_subscr.81', '$dens_re_cov260.82', '$dens_re_sum262.83']
DEBUG:numba.core.byteflow:dispatch pc=266, inst=BINARY_SUBSCR(arg=None, lineno=121)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$258binary_subscr.81', '$dens_re_cov260.82', '$dens_re_sum262.83', '$k264.84']
DEBUG:numba.core.byteflow:dispatch pc=268, inst=LOAD_FAST(arg=22, lineno=121)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$258binary_subscr.81', '$dens_re_cov260.82', '$266binary_subscr.85']
DEBUG:numba.core.byteflow:dispatch pc=270, inst=BINARY_SUBTRACT(arg=None, lineno=121)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$258binary_subscr.81', '$dens_re_cov260.82', '$266binary_subscr.85', '$dens_re_mean268.86']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=BINARY_MULTIPLY(arg=None, lineno=121)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$258binary_subscr.81', '$dens_re_cov260.82', '$270binary_subtract.87']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=LOAD_FAST(arg=39, lineno=121)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$258binary_subscr.81', '$272binary_multiply.88']
DEBUG:numba.core.byteflow:dispatch pc=276, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=121)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$258binary_subscr.81', '$272binary_multiply.88', '$re_std_sq274.89']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=BINARY_SUBTRACT(arg=None, lineno=120)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$258binary_subscr.81', '$276binary_true_divide.90']
DEBUG:numba.core.byteflow:dispatch pc=280, inst=STORE_FAST(arg=40, lineno=119)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$278binary_subtract.91']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=LOAD_FAST(arg=24, lineno=124)
DEBUG:numba.core.byteflow:stack ['$phi84.0']
DEBUG:numba.core.byteflow:dispatch pc=284, inst=LOAD_FAST(arg=28, lineno=124)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$dens_R282.92']
DEBUG:numba.core.byteflow:dispatch pc=286, inst=BINARY_SUBSCR(arg=None, lineno=124)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$dens_R282.92', '$j284.93']
DEBUG:numba.core.byteflow:dispatch pc=288, inst=LOAD_FAST(arg=20, lineno=125)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$286binary_subscr.94']
DEBUG:numba.core.byteflow:dispatch pc=290, inst=LOAD_FAST(arg=19, lineno=125)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$286binary_subscr.94', '$dens_re_cov288.95']
DEBUG:numba.core.byteflow:dispatch pc=292, inst=LOAD_FAST(arg=28, lineno=125)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$286binary_subscr.94', '$dens_re_cov288.95', '$dens_re_sum290.96']
DEBUG:numba.core.byteflow:dispatch pc=294, inst=BINARY_SUBSCR(arg=None, lineno=125)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$286binary_subscr.94', '$dens_re_cov288.95', '$dens_re_sum290.96', '$j292.97']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=LOAD_FAST(arg=22, lineno=125)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$286binary_subscr.94', '$dens_re_cov288.95', '$294binary_subscr.98']
DEBUG:numba.core.byteflow:dispatch pc=298, inst=BINARY_SUBTRACT(arg=None, lineno=125)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$286binary_subscr.94', '$dens_re_cov288.95', '$294binary_subscr.98', '$dens_re_mean296.99']
DEBUG:numba.core.byteflow:dispatch pc=300, inst=BINARY_MULTIPLY(arg=None, lineno=125)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$286binary_subscr.94', '$dens_re_cov288.95', '$298binary_subtract.100']
DEBUG:numba.core.byteflow:dispatch pc=302, inst=LOAD_FAST(arg=39, lineno=125)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$286binary_subscr.94', '$300binary_multiply.101']
DEBUG:numba.core.byteflow:dispatch pc=304, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=125)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$286binary_subscr.94', '$300binary_multiply.101', '$re_std_sq302.102']
DEBUG:numba.core.byteflow:dispatch pc=306, inst=BINARY_SUBTRACT(arg=None, lineno=124)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$286binary_subscr.94', '$304binary_true_divide.103']
DEBUG:numba.core.byteflow:dispatch pc=308, inst=STORE_FAST(arg=41, lineno=123)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$306binary_subtract.104']
DEBUG:numba.core.byteflow:dispatch pc=310, inst=LOAD_FAST(arg=23, lineno=129)
DEBUG:numba.core.byteflow:stack ['$phi84.0']
DEBUG:numba.core.byteflow:dispatch pc=312, inst=LOAD_FAST(arg=26, lineno=130)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$dens_lambda310.105']
DEBUG:numba.core.byteflow:dispatch pc=314, inst=BINARY_MULTIPLY(arg=None, lineno=129)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$dens_lambda310.105', '$dens_mu_tot312.106']
DEBUG:numba.core.byteflow:dispatch pc=316, inst=LOAD_FAST(arg=40, lineno=131)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$314binary_multiply.107']
DEBUG:numba.core.byteflow:dispatch pc=318, inst=LOAD_FAST(arg=37, lineno=131)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$314binary_multiply.107', '$weight_k316.108']
DEBUG:numba.core.byteflow:dispatch pc=320, inst=BINARY_MULTIPLY(arg=None, lineno=131)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$314binary_multiply.107', '$weight_k316.108', '$drk318.109']
DEBUG:numba.core.byteflow:dispatch pc=322, inst=LOAD_FAST(arg=41, lineno=131)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$314binary_multiply.107', '$320binary_multiply.110']
DEBUG:numba.core.byteflow:dispatch pc=324, inst=LOAD_FAST(arg=38, lineno=131)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$314binary_multiply.107', '$320binary_multiply.110', '$weight_j322.111']
DEBUG:numba.core.byteflow:dispatch pc=326, inst=BINARY_MULTIPLY(arg=None, lineno=131)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$314binary_multiply.107', '$320binary_multiply.110', '$weight_j322.111', '$drj324.112']
DEBUG:numba.core.byteflow:dispatch pc=328, inst=BINARY_ADD(arg=None, lineno=131)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$314binary_multiply.107', '$320binary_multiply.110', '$326binary_multiply.113']
DEBUG:numba.core.byteflow:dispatch pc=330, inst=BINARY_MULTIPLY(arg=None, lineno=129)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$314binary_multiply.107', '$328binary_add.114']
DEBUG:numba.core.byteflow:dispatch pc=332, inst=LOAD_FAST(arg=25, lineno=132)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$330binary_multiply.115']
DEBUG:numba.core.byteflow:dispatch pc=334, inst=LOAD_FAST(arg=27, lineno=132)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$330binary_multiply.115', '$dens_mu332.116']
DEBUG:numba.core.byteflow:dispatch pc=336, inst=BINARY_SUBSCR(arg=None, lineno=132)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$330binary_multiply.115', '$dens_mu332.116', '$i334.117']
DEBUG:numba.core.byteflow:dispatch pc=338, inst=LOAD_FAST(arg=21, lineno=132)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$330binary_multiply.115', '$336binary_subscr.118']
DEBUG:numba.core.byteflow:dispatch pc=340, inst=BINARY_MULTIPLY(arg=None, lineno=132)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$330binary_multiply.115', '$336binary_subscr.118', '$dens_re_std338.119']
DEBUG:numba.core.byteflow:dispatch pc=342, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=129)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$330binary_multiply.115', '$340binary_multiply.120']
DEBUG:numba.core.byteflow:dispatch pc=344, inst=LOAD_FAST(arg=4, lineno=133)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$342binary_true_divide.121']
DEBUG:numba.core.byteflow:dispatch pc=346, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=129)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$342binary_true_divide.121', '$n_vertices344.122']
DEBUG:numba.core.byteflow:dispatch pc=348, inst=STORE_FAST(arg=42, lineno=128)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$346binary_true_divide.123']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=350, stack=('$phi84.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=18 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi350.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=350 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=350, inst=LOAD_FAST(arg=32, lineno=136)
DEBUG:numba.core.byteflow:stack ['$phi350.0']
DEBUG:numba.core.byteflow:dispatch pc=352, inst=LOAD_CONST(arg=4, lineno=136)
DEBUG:numba.core.byteflow:stack ['$phi350.0', '$dist_squared350.1']
DEBUG:numba.core.byteflow:dispatch pc=354, inst=COMPARE_OP(arg=4, lineno=136)
DEBUG:numba.core.byteflow:stack ['$phi350.0', '$dist_squared350.1', '$const352.2']
DEBUG:numba.core.byteflow:dispatch pc=356, inst=POP_JUMP_IF_FALSE(arg=205, lineno=136)
DEBUG:numba.core.byteflow:stack ['$phi350.0', '$354compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=358, stack=('$phi350.0',), blockstack=(), npush=0), Edge(pc=408, stack=('$phi350.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=18 nstack_initial=1), State(pc_initial=350 nstack_initial=1), State(pc_initial=358 nstack_initial=1), State(pc_initial=408 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=358 nstack_initial=1), State(pc_initial=408 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=358 nstack_initial=1), State(pc_initial=408 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi358.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=358 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=358, inst=LOAD_CONST(arg=5, lineno=137)
DEBUG:numba.core.byteflow:stack ['$phi358.0']
DEBUG:numba.core.byteflow:dispatch pc=360, inst=LOAD_FAST(arg=6, lineno=137)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$const358.1']
DEBUG:numba.core.byteflow:dispatch pc=362, inst=BINARY_MULTIPLY(arg=None, lineno=137)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$const358.1', '$a360.2']
DEBUG:numba.core.byteflow:dispatch pc=364, inst=LOAD_FAST(arg=7, lineno=137)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$362binary_multiply.3']
DEBUG:numba.core.byteflow:dispatch pc=366, inst=BINARY_MULTIPLY(arg=None, lineno=137)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$362binary_multiply.3', '$b364.4']
DEBUG:numba.core.byteflow:dispatch pc=368, inst=LOAD_GLOBAL(arg=4, lineno=137)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$366binary_multiply.5']
DEBUG:numba.core.byteflow:dispatch pc=370, inst=LOAD_FAST(arg=32, lineno=137)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$366binary_multiply.5', '$368load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=372, inst=LOAD_FAST(arg=7, lineno=137)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$366binary_multiply.5', '$368load_global.6', '$dist_squared370.7']
DEBUG:numba.core.byteflow:dispatch pc=374, inst=LOAD_CONST(arg=2, lineno=137)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$366binary_multiply.5', '$368load_global.6', '$dist_squared370.7', '$b372.8']
DEBUG:numba.core.byteflow:dispatch pc=376, inst=BINARY_SUBTRACT(arg=None, lineno=137)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$366binary_multiply.5', '$368load_global.6', '$dist_squared370.7', '$b372.8', '$const374.9']
DEBUG:numba.core.byteflow:dispatch pc=378, inst=CALL_FUNCTION(arg=2, lineno=137)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$366binary_multiply.5', '$368load_global.6', '$dist_squared370.7', '$376binary_subtract.10']
DEBUG:numba.core.byteflow:dispatch pc=380, inst=BINARY_MULTIPLY(arg=None, lineno=137)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$366binary_multiply.5', '$378call_function.11']
DEBUG:numba.core.byteflow:dispatch pc=382, inst=STORE_FAST(arg=43, lineno=137)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$380binary_multiply.12']
DEBUG:numba.core.byteflow:dispatch pc=384, inst=LOAD_FAST(arg=43, lineno=138)
DEBUG:numba.core.byteflow:stack ['$phi358.0']
DEBUG:numba.core.byteflow:dispatch pc=386, inst=LOAD_FAST(arg=6, lineno=138)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$grad_coeff384.13']
DEBUG:numba.core.byteflow:dispatch pc=388, inst=LOAD_GLOBAL(arg=4, lineno=138)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$grad_coeff384.13', '$a386.14']
DEBUG:numba.core.byteflow:dispatch pc=390, inst=LOAD_FAST(arg=32, lineno=138)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$grad_coeff384.13', '$a386.14', '$388load_global.15']
DEBUG:numba.core.byteflow:dispatch pc=392, inst=LOAD_FAST(arg=7, lineno=138)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$grad_coeff384.13', '$a386.14', '$388load_global.15', '$dist_squared390.16']
DEBUG:numba.core.byteflow:dispatch pc=394, inst=CALL_FUNCTION(arg=2, lineno=138)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$grad_coeff384.13', '$a386.14', '$388load_global.15', '$dist_squared390.16', '$b392.17']
DEBUG:numba.core.byteflow:dispatch pc=396, inst=BINARY_MULTIPLY(arg=None, lineno=138)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$grad_coeff384.13', '$a386.14', '$394call_function.18']
DEBUG:numba.core.byteflow:dispatch pc=398, inst=LOAD_CONST(arg=2, lineno=138)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$grad_coeff384.13', '$396binary_multiply.19']
DEBUG:numba.core.byteflow:dispatch pc=400, inst=BINARY_ADD(arg=None, lineno=138)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$grad_coeff384.13', '$396binary_multiply.19', '$const398.20']
DEBUG:numba.core.byteflow:dispatch pc=402, inst=INPLACE_TRUE_DIVIDE(arg=None, lineno=138)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$grad_coeff384.13', '$400binary_add.21']
DEBUG:numba.core.byteflow:dispatch pc=404, inst=STORE_FAST(arg=43, lineno=138)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$402inplace_true_divide.22']
DEBUG:numba.core.byteflow:dispatch pc=406, inst=JUMP_FORWARD(arg=2, lineno=138)
DEBUG:numba.core.byteflow:stack ['$phi358.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=412, stack=('$phi358.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=408 nstack_initial=1), State(pc_initial=412 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi408.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=408 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=408, inst=LOAD_CONST(arg=4, lineno=140)
DEBUG:numba.core.byteflow:stack ['$phi408.0']
DEBUG:numba.core.byteflow:dispatch pc=410, inst=STORE_FAST(arg=43, lineno=140)
DEBUG:numba.core.byteflow:stack ['$phi408.0', '$const408.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=412, stack=('$phi408.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=412 nstack_initial=1), State(pc_initial=412 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi412.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=412 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=412, inst=LOAD_GLOBAL(arg=7, lineno=142)
DEBUG:numba.core.byteflow:stack ['$phi412.0']
DEBUG:numba.core.byteflow:dispatch pc=414, inst=LOAD_FAST(arg=10, lineno=142)
DEBUG:numba.core.byteflow:stack ['$phi412.0', '$412load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=416, inst=CALL_FUNCTION(arg=1, lineno=142)
DEBUG:numba.core.byteflow:stack ['$phi412.0', '$412load_global.1', '$dim414.2']
DEBUG:numba.core.byteflow:dispatch pc=418, inst=GET_ITER(arg=None, lineno=142)
DEBUG:numba.core.byteflow:stack ['$phi412.0', '$416call_function.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=420, stack=('$phi412.0', '$418get_iter.4'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=412 nstack_initial=1), State(pc_initial=420 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=420 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi420.0', '$phi420.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=420 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=420, inst=FOR_ITER(arg=56, lineno=142)
DEBUG:numba.core.byteflow:stack ['$phi420.0', '$phi420.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=534, stack=('$phi420.0',), blockstack=(), npush=0), Edge(pc=422, stack=('$phi420.0', '$phi420.1', '$420for_iter.3'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=534 nstack_initial=1), State(pc_initial=422 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi534.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=534 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=534, inst=LOAD_FAST(arg=15, lineno=154)
DEBUG:numba.core.byteflow:stack ['$phi534.0']
DEBUG:numba.core.byteflow:dispatch pc=536, inst=LOAD_FAST(arg=27, lineno=154)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$epoch_of_next_sample534.1']
DEBUG:numba.core.byteflow:dispatch pc=538, inst=DUP_TOP_TWO(arg=None, lineno=154)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$epoch_of_next_sample534.1', '$i536.2']
DEBUG:numba.core.byteflow:dispatch pc=540, inst=BINARY_SUBSCR(arg=None, lineno=154)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$epoch_of_next_sample534.1', '$i536.2', '$538dup_top_two.3', '$538dup_top_two.4']
DEBUG:numba.core.byteflow:dispatch pc=542, inst=LOAD_FAST(arg=5, lineno=154)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$epoch_of_next_sample534.1', '$i536.2', '$540binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=544, inst=LOAD_FAST(arg=27, lineno=154)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$epoch_of_next_sample534.1', '$i536.2', '$540binary_subscr.5', '$epochs_per_sample542.6']
DEBUG:numba.core.byteflow:dispatch pc=546, inst=BINARY_SUBSCR(arg=None, lineno=154)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$epoch_of_next_sample534.1', '$i536.2', '$540binary_subscr.5', '$epochs_per_sample542.6', '$i544.7']
DEBUG:numba.core.byteflow:dispatch pc=548, inst=INPLACE_ADD(arg=None, lineno=154)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$epoch_of_next_sample534.1', '$i536.2', '$540binary_subscr.5', '$546binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=550, inst=ROT_THREE(arg=None, lineno=154)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$epoch_of_next_sample534.1', '$i536.2', '$548inplace_add.9']
DEBUG:numba.core.byteflow:dispatch pc=552, inst=STORE_SUBSCR(arg=None, lineno=154)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$548inplace_add.9', '$epoch_of_next_sample534.1', '$i536.2']
DEBUG:numba.core.byteflow:dispatch pc=554, inst=LOAD_GLOBAL(arg=9, lineno=156)
DEBUG:numba.core.byteflow:stack ['$phi534.0']
DEBUG:numba.core.byteflow:dispatch pc=556, inst=LOAD_FAST(arg=16, lineno=157)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$554load_global.10']
DEBUG:numba.core.byteflow:dispatch pc=558, inst=LOAD_FAST(arg=14, lineno=157)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$554load_global.10', '$n556.11']
DEBUG:numba.core.byteflow:dispatch pc=560, inst=LOAD_FAST(arg=27, lineno=157)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$554load_global.10', '$n556.11', '$epoch_of_next_negative_sample558.12']
DEBUG:numba.core.byteflow:dispatch pc=562, inst=BINARY_SUBSCR(arg=None, lineno=157)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$554load_global.10', '$n556.11', '$epoch_of_next_negative_sample558.12', '$i560.13']
DEBUG:numba.core.byteflow:dispatch pc=564, inst=BINARY_SUBTRACT(arg=None, lineno=157)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$554load_global.10', '$n556.11', '$562binary_subscr.14']
DEBUG:numba.core.byteflow:dispatch pc=566, inst=LOAD_FAST(arg=13, lineno=157)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$554load_global.10', '$564binary_subtract.15']
DEBUG:numba.core.byteflow:dispatch pc=568, inst=LOAD_FAST(arg=27, lineno=157)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$554load_global.10', '$564binary_subtract.15', '$epochs_per_negative_sample566.16']
DEBUG:numba.core.byteflow:dispatch pc=570, inst=BINARY_SUBSCR(arg=None, lineno=157)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$554load_global.10', '$564binary_subtract.15', '$epochs_per_negative_sample566.16', '$i568.17']
DEBUG:numba.core.byteflow:dispatch pc=572, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=157)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$554load_global.10', '$564binary_subtract.15', '$570binary_subscr.18']
DEBUG:numba.core.byteflow:dispatch pc=574, inst=CALL_FUNCTION(arg=1, lineno=156)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$554load_global.10', '$572binary_true_divide.19']
DEBUG:numba.core.byteflow:dispatch pc=576, inst=STORE_FAST(arg=46, lineno=156)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$574call_function.20']
DEBUG:numba.core.byteflow:dispatch pc=578, inst=LOAD_GLOBAL(arg=7, lineno=160)
DEBUG:numba.core.byteflow:stack ['$phi534.0']
DEBUG:numba.core.byteflow:dispatch pc=580, inst=LOAD_FAST(arg=46, lineno=160)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$578load_global.21']
DEBUG:numba.core.byteflow:dispatch pc=582, inst=CALL_FUNCTION(arg=1, lineno=160)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$578load_global.21', '$n_neg_samples580.22']
DEBUG:numba.core.byteflow:dispatch pc=584, inst=GET_ITER(arg=None, lineno=160)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$582call_function.23']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=586, stack=('$phi534.0', '$584get_iter.24'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=422 nstack_initial=3), State(pc_initial=586 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi422.0', '$phi422.1', '$phi422.2']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=422 nstack_initial=3)
DEBUG:numba.core.byteflow:dispatch pc=422, inst=STORE_FAST(arg=44, lineno=142)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1', '$phi422.2']
DEBUG:numba.core.byteflow:dispatch pc=424, inst=LOAD_GLOBAL(arg=8, lineno=143)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1']
DEBUG:numba.core.byteflow:dispatch pc=426, inst=LOAD_FAST(arg=43, lineno=143)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1', '$424load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=428, inst=LOAD_FAST(arg=30, lineno=143)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1', '$424load_global.3', '$grad_coeff426.4']
DEBUG:numba.core.byteflow:dispatch pc=430, inst=LOAD_FAST(arg=44, lineno=143)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1', '$424load_global.3', '$grad_coeff426.4', '$current428.5']
DEBUG:numba.core.byteflow:dispatch pc=432, inst=BINARY_SUBSCR(arg=None, lineno=143)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1', '$424load_global.3', '$grad_coeff426.4', '$current428.5', '$d430.6']
DEBUG:numba.core.byteflow:dispatch pc=434, inst=LOAD_FAST(arg=31, lineno=143)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1', '$424load_global.3', '$grad_coeff426.4', '$432binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=436, inst=LOAD_FAST(arg=44, lineno=143)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1', '$424load_global.3', '$grad_coeff426.4', '$432binary_subscr.7', '$other434.8']
DEBUG:numba.core.byteflow:dispatch pc=438, inst=BINARY_SUBSCR(arg=None, lineno=143)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1', '$424load_global.3', '$grad_coeff426.4', '$432binary_subscr.7', '$other434.8', '$d436.9']
DEBUG:numba.core.byteflow:dispatch pc=440, inst=BINARY_SUBTRACT(arg=None, lineno=143)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1', '$424load_global.3', '$grad_coeff426.4', '$432binary_subscr.7', '$438binary_subscr.10']
DEBUG:numba.core.byteflow:dispatch pc=442, inst=BINARY_MULTIPLY(arg=None, lineno=143)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1', '$424load_global.3', '$grad_coeff426.4', '$440binary_subtract.11']
DEBUG:numba.core.byteflow:dispatch pc=444, inst=CALL_FUNCTION(arg=1, lineno=143)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1', '$424load_global.3', '$442binary_multiply.12']
DEBUG:numba.core.byteflow:dispatch pc=446, inst=STORE_FAST(arg=45, lineno=143)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1', '$444call_function.13']
DEBUG:numba.core.byteflow:dispatch pc=448, inst=LOAD_FAST(arg=17, lineno=145)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1']
DEBUG:numba.core.byteflow:dispatch pc=450, inst=POP_JUMP_IF_FALSE(arg=243, lineno=145)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1', '$densmap_flag448.14']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=452, stack=('$phi422.0', '$phi422.1'), blockstack=(), npush=0), Edge(pc=484, stack=('$phi422.0', '$phi422.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=586 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=484 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi586.0', '$phi586.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=586 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=586, inst=FOR_ITER(arg=94, lineno=160)
DEBUG:numba.core.byteflow:stack ['$phi586.0', '$phi586.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=776, stack=('$phi586.0',), blockstack=(), npush=0), Edge(pc=588, stack=('$phi586.0', '$phi586.1', '$586for_iter.3'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=452 nstack_initial=2), State(pc_initial=484 nstack_initial=2), State(pc_initial=776 nstack_initial=1), State(pc_initial=588 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi452.0', '$phi452.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=452 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=452, inst=LOAD_FAST(arg=45, lineno=148)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$phi452.1']
DEBUG:numba.core.byteflow:dispatch pc=454, inst=LOAD_GLOBAL(arg=8, lineno=148)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$phi452.1', '$grad_d452.2']
DEBUG:numba.core.byteflow:dispatch pc=456, inst=LOAD_CONST(arg=6, lineno=148)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$phi452.1', '$grad_d452.2', '$454load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=458, inst=LOAD_FAST(arg=42, lineno=148)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$phi452.1', '$grad_d452.2', '$454load_global.3', '$const456.4']
DEBUG:numba.core.byteflow:dispatch pc=460, inst=BINARY_MULTIPLY(arg=None, lineno=148)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$phi452.1', '$grad_d452.2', '$454load_global.3', '$const456.4', '$grad_cor_coeff458.5']
DEBUG:numba.core.byteflow:dispatch pc=462, inst=LOAD_FAST(arg=30, lineno=148)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$phi452.1', '$grad_d452.2', '$454load_global.3', '$460binary_multiply.6']
DEBUG:numba.core.byteflow:dispatch pc=464, inst=LOAD_FAST(arg=44, lineno=148)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$phi452.1', '$grad_d452.2', '$454load_global.3', '$460binary_multiply.6', '$current462.7']
DEBUG:numba.core.byteflow:dispatch pc=466, inst=BINARY_SUBSCR(arg=None, lineno=148)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$phi452.1', '$grad_d452.2', '$454load_global.3', '$460binary_multiply.6', '$current462.7', '$d464.8']
DEBUG:numba.core.byteflow:dispatch pc=468, inst=LOAD_FAST(arg=31, lineno=148)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$phi452.1', '$grad_d452.2', '$454load_global.3', '$460binary_multiply.6', '$466binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=470, inst=LOAD_FAST(arg=44, lineno=148)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$phi452.1', '$grad_d452.2', '$454load_global.3', '$460binary_multiply.6', '$466binary_subscr.9', '$other468.10']
DEBUG:numba.core.byteflow:dispatch pc=472, inst=BINARY_SUBSCR(arg=None, lineno=148)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$phi452.1', '$grad_d452.2', '$454load_global.3', '$460binary_multiply.6', '$466binary_subscr.9', '$other468.10', '$d470.11']
DEBUG:numba.core.byteflow:dispatch pc=474, inst=BINARY_SUBTRACT(arg=None, lineno=148)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$phi452.1', '$grad_d452.2', '$454load_global.3', '$460binary_multiply.6', '$466binary_subscr.9', '$472binary_subscr.12']
DEBUG:numba.core.byteflow:dispatch pc=476, inst=BINARY_MULTIPLY(arg=None, lineno=148)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$phi452.1', '$grad_d452.2', '$454load_global.3', '$460binary_multiply.6', '$474binary_subtract.13']
DEBUG:numba.core.byteflow:dispatch pc=478, inst=CALL_FUNCTION(arg=1, lineno=148)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$phi452.1', '$grad_d452.2', '$454load_global.3', '$476binary_multiply.14']
DEBUG:numba.core.byteflow:dispatch pc=480, inst=INPLACE_ADD(arg=None, lineno=148)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$phi452.1', '$grad_d452.2', '$478call_function.15']
DEBUG:numba.core.byteflow:dispatch pc=482, inst=STORE_FAST(arg=45, lineno=148)
DEBUG:numba.core.byteflow:stack ['$phi452.0', '$phi452.1', '$480inplace_add.16']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=484, stack=('$phi452.0', '$phi452.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=484 nstack_initial=2), State(pc_initial=776 nstack_initial=1), State(pc_initial=588 nstack_initial=3), State(pc_initial=484 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi484.0', '$phi484.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=484 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=484, inst=LOAD_FAST(arg=30, lineno=150)
DEBUG:numba.core.byteflow:stack ['$phi484.0', '$phi484.1']
DEBUG:numba.core.byteflow:dispatch pc=486, inst=LOAD_FAST(arg=44, lineno=150)
DEBUG:numba.core.byteflow:stack ['$phi484.0', '$phi484.1', '$current484.2']
DEBUG:numba.core.byteflow:dispatch pc=488, inst=DUP_TOP_TWO(arg=None, lineno=150)
DEBUG:numba.core.byteflow:stack ['$phi484.0', '$phi484.1', '$current484.2', '$d486.3']
DEBUG:numba.core.byteflow:dispatch pc=490, inst=BINARY_SUBSCR(arg=None, lineno=150)
DEBUG:numba.core.byteflow:stack ['$phi484.0', '$phi484.1', '$current484.2', '$d486.3', '$488dup_top_two.4', '$488dup_top_two.5']
DEBUG:numba.core.byteflow:dispatch pc=492, inst=LOAD_FAST(arg=45, lineno=150)
DEBUG:numba.core.byteflow:stack ['$phi484.0', '$phi484.1', '$current484.2', '$d486.3', '$490binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=494, inst=LOAD_FAST(arg=12, lineno=150)
DEBUG:numba.core.byteflow:stack ['$phi484.0', '$phi484.1', '$current484.2', '$d486.3', '$490binary_subscr.6', '$grad_d492.7']
DEBUG:numba.core.byteflow:dispatch pc=496, inst=BINARY_MULTIPLY(arg=None, lineno=150)
DEBUG:numba.core.byteflow:stack ['$phi484.0', '$phi484.1', '$current484.2', '$d486.3', '$490binary_subscr.6', '$grad_d492.7', '$alpha494.8']
DEBUG:numba.core.byteflow:dispatch pc=498, inst=INPLACE_ADD(arg=None, lineno=150)
DEBUG:numba.core.byteflow:stack ['$phi484.0', '$phi484.1', '$current484.2', '$d486.3', '$490binary_subscr.6', '$496binary_multiply.9']
DEBUG:numba.core.byteflow:dispatch pc=500, inst=ROT_THREE(arg=None, lineno=150)
DEBUG:numba.core.byteflow:stack ['$phi484.0', '$phi484.1', '$current484.2', '$d486.3', '$498inplace_add.10']
DEBUG:numba.core.byteflow:dispatch pc=502, inst=STORE_SUBSCR(arg=None, lineno=150)
DEBUG:numba.core.byteflow:stack ['$phi484.0', '$phi484.1', '$498inplace_add.10', '$current484.2', '$d486.3']
DEBUG:numba.core.byteflow:dispatch pc=504, inst=LOAD_FAST(arg=11, lineno=151)
DEBUG:numba.core.byteflow:stack ['$phi484.0', '$phi484.1']
DEBUG:numba.core.byteflow:dispatch pc=506, inst=NOP(arg=1, lineno=151)
DEBUG:numba.core.byteflow:stack ['$phi484.0', '$phi484.1', '$move_other504.11']
DEBUG:numba.core.byteflow:dispatch pc=508, inst=POP_JUMP_IF_FALSE(arg=267, lineno=151)
DEBUG:numba.core.byteflow:stack ['$phi484.0', '$phi484.1', '$move_other504.11']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=510, stack=('$phi484.0', '$phi484.1'), blockstack=(), npush=0), Edge(pc=532, stack=('$phi484.0', '$phi484.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=776 nstack_initial=1), State(pc_initial=588 nstack_initial=3), State(pc_initial=484 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=532 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi776.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=776 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=776, inst=LOAD_FAST(arg=14, lineno=184)
DEBUG:numba.core.byteflow:stack ['$phi776.0']
DEBUG:numba.core.byteflow:dispatch pc=778, inst=LOAD_FAST(arg=27, lineno=184)
DEBUG:numba.core.byteflow:stack ['$phi776.0', '$epoch_of_next_negative_sample776.1']
DEBUG:numba.core.byteflow:dispatch pc=780, inst=DUP_TOP_TWO(arg=None, lineno=184)
DEBUG:numba.core.byteflow:stack ['$phi776.0', '$epoch_of_next_negative_sample776.1', '$i778.2']
DEBUG:numba.core.byteflow:dispatch pc=782, inst=BINARY_SUBSCR(arg=None, lineno=184)
DEBUG:numba.core.byteflow:stack ['$phi776.0', '$epoch_of_next_negative_sample776.1', '$i778.2', '$780dup_top_two.3', '$780dup_top_two.4']
DEBUG:numba.core.byteflow:dispatch pc=784, inst=LOAD_FAST(arg=46, lineno=185)
DEBUG:numba.core.byteflow:stack ['$phi776.0', '$epoch_of_next_negative_sample776.1', '$i778.2', '$782binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=786, inst=LOAD_FAST(arg=13, lineno=185)
DEBUG:numba.core.byteflow:stack ['$phi776.0', '$epoch_of_next_negative_sample776.1', '$i778.2', '$782binary_subscr.5', '$n_neg_samples784.6']
DEBUG:numba.core.byteflow:dispatch pc=788, inst=LOAD_FAST(arg=27, lineno=185)
DEBUG:numba.core.byteflow:stack ['$phi776.0', '$epoch_of_next_negative_sample776.1', '$i778.2', '$782binary_subscr.5', '$n_neg_samples784.6', '$epochs_per_negative_sample786.7']
DEBUG:numba.core.byteflow:dispatch pc=790, inst=BINARY_SUBSCR(arg=None, lineno=185)
DEBUG:numba.core.byteflow:stack ['$phi776.0', '$epoch_of_next_negative_sample776.1', '$i778.2', '$782binary_subscr.5', '$n_neg_samples784.6', '$epochs_per_negative_sample786.7', '$i788.8']
DEBUG:numba.core.byteflow:dispatch pc=792, inst=BINARY_MULTIPLY(arg=None, lineno=185)
DEBUG:numba.core.byteflow:stack ['$phi776.0', '$epoch_of_next_negative_sample776.1', '$i778.2', '$782binary_subscr.5', '$n_neg_samples784.6', '$790binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=794, inst=INPLACE_ADD(arg=None, lineno=184)
DEBUG:numba.core.byteflow:stack ['$phi776.0', '$epoch_of_next_negative_sample776.1', '$i778.2', '$782binary_subscr.5', '$792binary_multiply.10']
DEBUG:numba.core.byteflow:dispatch pc=796, inst=ROT_THREE(arg=None, lineno=184)
DEBUG:numba.core.byteflow:stack ['$phi776.0', '$epoch_of_next_negative_sample776.1', '$i778.2', '$794inplace_add.11']
DEBUG:numba.core.byteflow:dispatch pc=798, inst=STORE_SUBSCR(arg=None, lineno=184)
DEBUG:numba.core.byteflow:stack ['$phi776.0', '$794inplace_add.11', '$epoch_of_next_negative_sample776.1', '$i778.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=800, stack=('$phi776.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=588 nstack_initial=3), State(pc_initial=484 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=532 nstack_initial=2), State(pc_initial=800 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi588.0', '$phi588.1', '$phi588.2']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=588 nstack_initial=3)
DEBUG:numba.core.byteflow:dispatch pc=588, inst=STORE_FAST(arg=47, lineno=160)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1', '$phi588.2']
DEBUG:numba.core.byteflow:dispatch pc=590, inst=LOAD_GLOBAL(arg=10, lineno=161)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1']
DEBUG:numba.core.byteflow:dispatch pc=592, inst=LOAD_FAST(arg=8, lineno=161)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1', '$590load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=594, inst=LOAD_FAST(arg=28, lineno=161)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1', '$590load_global.3', '$rng_state_per_sample592.4']
DEBUG:numba.core.byteflow:dispatch pc=596, inst=BINARY_SUBSCR(arg=None, lineno=161)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1', '$590load_global.3', '$rng_state_per_sample592.4', '$j594.5']
DEBUG:numba.core.byteflow:dispatch pc=598, inst=CALL_FUNCTION(arg=1, lineno=161)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1', '$590load_global.3', '$596binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=600, inst=LOAD_FAST(arg=4, lineno=161)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1', '$598call_function.7']
DEBUG:numba.core.byteflow:dispatch pc=602, inst=BINARY_MODULO(arg=None, lineno=161)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1', '$598call_function.7', '$n_vertices600.8']
DEBUG:numba.core.byteflow:dispatch pc=604, inst=STORE_FAST(arg=29, lineno=161)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1', '$602binary_modulo.9']
DEBUG:numba.core.byteflow:dispatch pc=606, inst=LOAD_FAST(arg=1, lineno=163)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1']
DEBUG:numba.core.byteflow:dispatch pc=608, inst=LOAD_FAST(arg=29, lineno=163)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1', '$tail_embedding606.10']
DEBUG:numba.core.byteflow:dispatch pc=610, inst=BINARY_SUBSCR(arg=None, lineno=163)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1', '$tail_embedding606.10', '$k608.11']
DEBUG:numba.core.byteflow:dispatch pc=612, inst=STORE_FAST(arg=31, lineno=163)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1', '$610binary_subscr.12']
DEBUG:numba.core.byteflow:dispatch pc=614, inst=LOAD_GLOBAL(arg=3, lineno=165)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1']
DEBUG:numba.core.byteflow:dispatch pc=616, inst=LOAD_FAST(arg=30, lineno=165)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1', '$614load_global.13']
DEBUG:numba.core.byteflow:dispatch pc=618, inst=LOAD_FAST(arg=31, lineno=165)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1', '$614load_global.13', '$current616.14']
DEBUG:numba.core.byteflow:dispatch pc=620, inst=CALL_FUNCTION(arg=2, lineno=165)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1', '$614load_global.13', '$current616.14', '$other618.15']
DEBUG:numba.core.byteflow:dispatch pc=622, inst=STORE_FAST(arg=32, lineno=165)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1', '$620call_function.16']
DEBUG:numba.core.byteflow:dispatch pc=624, inst=LOAD_FAST(arg=32, lineno=167)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1']
DEBUG:numba.core.byteflow:dispatch pc=626, inst=LOAD_CONST(arg=4, lineno=167)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1', '$dist_squared624.17']
DEBUG:numba.core.byteflow:dispatch pc=628, inst=COMPARE_OP(arg=4, lineno=167)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1', '$dist_squared624.17', '$const626.18']
DEBUG:numba.core.byteflow:dispatch pc=630, inst=NOP(arg=1, lineno=167)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1', '$628compare_op.19']
DEBUG:numba.core.byteflow:dispatch pc=632, inst=POP_JUMP_IF_FALSE(arg=340, lineno=167)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$phi588.1', '$628compare_op.19']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=634, stack=('$phi588.0', '$phi588.1'), blockstack=(), npush=0), Edge(pc=678, stack=('$phi588.0', '$phi588.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=484 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=532 nstack_initial=2), State(pc_initial=800 nstack_initial=1), State(pc_initial=634 nstack_initial=2), State(pc_initial=678 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=510 nstack_initial=2), State(pc_initial=532 nstack_initial=2), State(pc_initial=800 nstack_initial=1), State(pc_initial=634 nstack_initial=2), State(pc_initial=678 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi510.0', '$phi510.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=510 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=510, inst=LOAD_FAST(arg=31, lineno=152)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1']
DEBUG:numba.core.byteflow:dispatch pc=512, inst=LOAD_FAST(arg=44, lineno=152)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1', '$other510.2']
DEBUG:numba.core.byteflow:dispatch pc=514, inst=DUP_TOP_TWO(arg=None, lineno=152)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1', '$other510.2', '$d512.3']
DEBUG:numba.core.byteflow:dispatch pc=516, inst=BINARY_SUBSCR(arg=None, lineno=152)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1', '$other510.2', '$d512.3', '$514dup_top_two.4', '$514dup_top_two.5']
DEBUG:numba.core.byteflow:dispatch pc=518, inst=LOAD_FAST(arg=45, lineno=152)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1', '$other510.2', '$d512.3', '$516binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=520, inst=UNARY_NEGATIVE(arg=None, lineno=152)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1', '$other510.2', '$d512.3', '$516binary_subscr.6', '$grad_d518.7']
DEBUG:numba.core.byteflow:dispatch pc=522, inst=LOAD_FAST(arg=12, lineno=152)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1', '$other510.2', '$d512.3', '$516binary_subscr.6', '$520unary_negative.8']
DEBUG:numba.core.byteflow:dispatch pc=524, inst=BINARY_MULTIPLY(arg=None, lineno=152)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1', '$other510.2', '$d512.3', '$516binary_subscr.6', '$520unary_negative.8', '$alpha522.9']
DEBUG:numba.core.byteflow:dispatch pc=526, inst=INPLACE_ADD(arg=None, lineno=152)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1', '$other510.2', '$d512.3', '$516binary_subscr.6', '$524binary_multiply.10']
DEBUG:numba.core.byteflow:dispatch pc=528, inst=ROT_THREE(arg=None, lineno=152)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1', '$other510.2', '$d512.3', '$526inplace_add.11']
DEBUG:numba.core.byteflow:dispatch pc=530, inst=STORE_SUBSCR(arg=None, lineno=152)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1', '$526inplace_add.11', '$other510.2', '$d512.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=532, stack=('$phi510.0', '$phi510.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=532 nstack_initial=2), State(pc_initial=800 nstack_initial=1), State(pc_initial=634 nstack_initial=2), State(pc_initial=678 nstack_initial=2), State(pc_initial=532 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi532.0', '$phi532.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=532 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=532, inst=JUMP_ABSOLUTE(arg=211, lineno=152)
DEBUG:numba.core.byteflow:stack ['$phi532.0', '$phi532.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=420, stack=('$phi532.0', '$phi532.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=800 nstack_initial=1), State(pc_initial=634 nstack_initial=2), State(pc_initial=678 nstack_initial=2), State(pc_initial=532 nstack_initial=2), State(pc_initial=420 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=634 nstack_initial=2), State(pc_initial=678 nstack_initial=2), State(pc_initial=532 nstack_initial=2), State(pc_initial=420 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi634.0', '$phi634.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=634 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=634, inst=LOAD_CONST(arg=7, lineno=168)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1']
DEBUG:numba.core.byteflow:dispatch pc=636, inst=LOAD_FAST(arg=9, lineno=168)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1', '$const634.2']
DEBUG:numba.core.byteflow:dispatch pc=638, inst=BINARY_MULTIPLY(arg=None, lineno=168)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1', '$const634.2', '$gamma636.3']
DEBUG:numba.core.byteflow:dispatch pc=640, inst=LOAD_FAST(arg=7, lineno=168)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1', '$638binary_multiply.4']
DEBUG:numba.core.byteflow:dispatch pc=642, inst=BINARY_MULTIPLY(arg=None, lineno=168)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1', '$638binary_multiply.4', '$b640.5']
DEBUG:numba.core.byteflow:dispatch pc=644, inst=STORE_FAST(arg=43, lineno=168)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1', '$642binary_multiply.6']
DEBUG:numba.core.byteflow:dispatch pc=646, inst=LOAD_FAST(arg=43, lineno=169)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1']
DEBUG:numba.core.byteflow:dispatch pc=648, inst=LOAD_CONST(arg=8, lineno=169)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1', '$grad_coeff646.7']
DEBUG:numba.core.byteflow:dispatch pc=650, inst=LOAD_FAST(arg=32, lineno=169)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1', '$grad_coeff646.7', '$const648.8']
DEBUG:numba.core.byteflow:dispatch pc=652, inst=BINARY_ADD(arg=None, lineno=169)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1', '$grad_coeff646.7', '$const648.8', '$dist_squared650.9']
DEBUG:numba.core.byteflow:dispatch pc=654, inst=LOAD_FAST(arg=6, lineno=170)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1', '$grad_coeff646.7', '$652binary_add.10']
DEBUG:numba.core.byteflow:dispatch pc=656, inst=LOAD_GLOBAL(arg=4, lineno=170)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1', '$grad_coeff646.7', '$652binary_add.10', '$a654.11']
DEBUG:numba.core.byteflow:dispatch pc=658, inst=LOAD_FAST(arg=32, lineno=170)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1', '$grad_coeff646.7', '$652binary_add.10', '$a654.11', '$656load_global.12']
DEBUG:numba.core.byteflow:dispatch pc=660, inst=LOAD_FAST(arg=7, lineno=170)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1', '$grad_coeff646.7', '$652binary_add.10', '$a654.11', '$656load_global.12', '$dist_squared658.13']
DEBUG:numba.core.byteflow:dispatch pc=662, inst=CALL_FUNCTION(arg=2, lineno=170)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1', '$grad_coeff646.7', '$652binary_add.10', '$a654.11', '$656load_global.12', '$dist_squared658.13', '$b660.14']
DEBUG:numba.core.byteflow:dispatch pc=664, inst=BINARY_MULTIPLY(arg=None, lineno=170)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1', '$grad_coeff646.7', '$652binary_add.10', '$a654.11', '$662call_function.15']
DEBUG:numba.core.byteflow:dispatch pc=666, inst=LOAD_CONST(arg=3, lineno=170)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1', '$grad_coeff646.7', '$652binary_add.10', '$664binary_multiply.16']
DEBUG:numba.core.byteflow:dispatch pc=668, inst=BINARY_ADD(arg=None, lineno=170)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1', '$grad_coeff646.7', '$652binary_add.10', '$664binary_multiply.16', '$const666.17']
DEBUG:numba.core.byteflow:dispatch pc=670, inst=BINARY_MULTIPLY(arg=None, lineno=169)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1', '$grad_coeff646.7', '$652binary_add.10', '$668binary_add.18']
DEBUG:numba.core.byteflow:dispatch pc=672, inst=INPLACE_TRUE_DIVIDE(arg=None, lineno=169)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1', '$grad_coeff646.7', '$670binary_multiply.19']
DEBUG:numba.core.byteflow:dispatch pc=674, inst=STORE_FAST(arg=43, lineno=169)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1', '$672inplace_true_divide.20']
DEBUG:numba.core.byteflow:dispatch pc=676, inst=JUMP_FORWARD(arg=9, lineno=169)
DEBUG:numba.core.byteflow:stack ['$phi634.0', '$phi634.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=696, stack=('$phi634.0', '$phi634.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=678 nstack_initial=2), State(pc_initial=532 nstack_initial=2), State(pc_initial=420 nstack_initial=2), State(pc_initial=696 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi678.0', '$phi678.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=678 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=678, inst=LOAD_FAST(arg=28, lineno=172)
DEBUG:numba.core.byteflow:stack ['$phi678.0', '$phi678.1']
DEBUG:numba.core.byteflow:dispatch pc=680, inst=LOAD_FAST(arg=29, lineno=172)
DEBUG:numba.core.byteflow:stack ['$phi678.0', '$phi678.1', '$j678.2']
DEBUG:numba.core.byteflow:dispatch pc=682, inst=COMPARE_OP(arg=2, lineno=172)
DEBUG:numba.core.byteflow:stack ['$phi678.0', '$phi678.1', '$j678.2', '$k680.3']
DEBUG:numba.core.byteflow:dispatch pc=684, inst=NOP(arg=1, lineno=172)
DEBUG:numba.core.byteflow:stack ['$phi678.0', '$phi678.1', '$682compare_op.4']
DEBUG:numba.core.byteflow:dispatch pc=686, inst=POP_JUMP_IF_FALSE(arg=347, lineno=172)
DEBUG:numba.core.byteflow:stack ['$phi678.0', '$phi678.1', '$682compare_op.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=688, stack=('$phi678.0', '$phi678.1'), blockstack=(), npush=0), Edge(pc=692, stack=('$phi678.0', '$phi678.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=532 nstack_initial=2), State(pc_initial=420 nstack_initial=2), State(pc_initial=696 nstack_initial=2), State(pc_initial=688 nstack_initial=2), State(pc_initial=692 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=420 nstack_initial=2), State(pc_initial=696 nstack_initial=2), State(pc_initial=688 nstack_initial=2), State(pc_initial=692 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=696 nstack_initial=2), State(pc_initial=688 nstack_initial=2), State(pc_initial=692 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi696.0', '$phi696.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=696 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=696, inst=LOAD_GLOBAL(arg=7, lineno=177)
DEBUG:numba.core.byteflow:stack ['$phi696.0', '$phi696.1']
DEBUG:numba.core.byteflow:dispatch pc=698, inst=LOAD_FAST(arg=10, lineno=177)
DEBUG:numba.core.byteflow:stack ['$phi696.0', '$phi696.1', '$696load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=700, inst=CALL_FUNCTION(arg=1, lineno=177)
DEBUG:numba.core.byteflow:stack ['$phi696.0', '$phi696.1', '$696load_global.2', '$dim698.3']
DEBUG:numba.core.byteflow:dispatch pc=702, inst=GET_ITER(arg=None, lineno=177)
DEBUG:numba.core.byteflow:stack ['$phi696.0', '$phi696.1', '$700call_function.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=704, stack=('$phi696.0', '$phi696.1', '$702get_iter.5'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=688 nstack_initial=2), State(pc_initial=692 nstack_initial=2), State(pc_initial=704 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi688.0', '$phi688.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=688 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=688, inst=NOP(arg=1, lineno=173)
DEBUG:numba.core.byteflow:stack ['$phi688.0', '$phi688.1']
DEBUG:numba.core.byteflow:dispatch pc=690, inst=JUMP_ABSOLUTE(arg=294, lineno=173)
DEBUG:numba.core.byteflow:stack ['$phi688.0', '$phi688.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=586, stack=('$phi688.0', '$phi688.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=692 nstack_initial=2), State(pc_initial=704 nstack_initial=3), State(pc_initial=586 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi692.0', '$phi692.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=692 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=692, inst=LOAD_CONST(arg=4, lineno=175)
DEBUG:numba.core.byteflow:stack ['$phi692.0', '$phi692.1']
DEBUG:numba.core.byteflow:dispatch pc=694, inst=STORE_FAST(arg=43, lineno=175)
DEBUG:numba.core.byteflow:stack ['$phi692.0', '$phi692.1', '$const692.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=696, stack=('$phi692.0', '$phi692.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=704 nstack_initial=3), State(pc_initial=586 nstack_initial=2), State(pc_initial=696 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi704.0', '$phi704.1', '$phi704.2']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=704 nstack_initial=3)
DEBUG:numba.core.byteflow:dispatch pc=704, inst=FOR_ITER(arg=33, lineno=177)
DEBUG:numba.core.byteflow:stack ['$phi704.0', '$phi704.1', '$phi704.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=772, stack=('$phi704.0', '$phi704.1'), blockstack=(), npush=0), Edge(pc=706, stack=('$phi704.0', '$phi704.1', '$phi704.2', '$704for_iter.4'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=586 nstack_initial=2), State(pc_initial=696 nstack_initial=2), State(pc_initial=772 nstack_initial=2), State(pc_initial=706 nstack_initial=4)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=696 nstack_initial=2), State(pc_initial=772 nstack_initial=2), State(pc_initial=706 nstack_initial=4)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=772 nstack_initial=2), State(pc_initial=706 nstack_initial=4)])
DEBUG:numba.core.byteflow:stack: ['$phi772.0', '$phi772.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=772 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=772, inst=NOP(arg=1, lineno=177)
DEBUG:numba.core.byteflow:stack ['$phi772.0', '$phi772.1']
DEBUG:numba.core.byteflow:dispatch pc=774, inst=JUMP_ABSOLUTE(arg=294, lineno=177)
DEBUG:numba.core.byteflow:stack ['$phi772.0', '$phi772.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=586, stack=('$phi772.0', '$phi772.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=706 nstack_initial=4), State(pc_initial=586 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi706.0', '$phi706.1', '$phi706.2', '$phi706.3']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=706 nstack_initial=4)
DEBUG:numba.core.byteflow:dispatch pc=706, inst=STORE_FAST(arg=44, lineno=177)
DEBUG:numba.core.byteflow:stack ['$phi706.0', '$phi706.1', '$phi706.2', '$phi706.3']
DEBUG:numba.core.byteflow:dispatch pc=708, inst=LOAD_FAST(arg=43, lineno=178)
DEBUG:numba.core.byteflow:stack ['$phi706.0', '$phi706.1', '$phi706.2']
DEBUG:numba.core.byteflow:dispatch pc=710, inst=LOAD_CONST(arg=4, lineno=178)
DEBUG:numba.core.byteflow:stack ['$phi706.0', '$phi706.1', '$phi706.2', '$grad_coeff708.4']
DEBUG:numba.core.byteflow:dispatch pc=712, inst=COMPARE_OP(arg=4, lineno=178)
DEBUG:numba.core.byteflow:stack ['$phi706.0', '$phi706.1', '$phi706.2', '$grad_coeff708.4', '$const710.5']
DEBUG:numba.core.byteflow:dispatch pc=714, inst=NOP(arg=1, lineno=178)
DEBUG:numba.core.byteflow:stack ['$phi706.0', '$phi706.1', '$phi706.2', '$712compare_op.6']
DEBUG:numba.core.byteflow:dispatch pc=716, inst=POP_JUMP_IF_FALSE(arg=373, lineno=178)
DEBUG:numba.core.byteflow:stack ['$phi706.0', '$phi706.1', '$phi706.2', '$712compare_op.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=718, stack=('$phi706.0', '$phi706.1', '$phi706.2'), blockstack=(), npush=0), Edge(pc=744, stack=('$phi706.0', '$phi706.1', '$phi706.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=586 nstack_initial=2), State(pc_initial=718 nstack_initial=3), State(pc_initial=744 nstack_initial=3)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=718 nstack_initial=3), State(pc_initial=744 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi718.0', '$phi718.1', '$phi718.2']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=718 nstack_initial=3)
DEBUG:numba.core.byteflow:dispatch pc=718, inst=LOAD_GLOBAL(arg=8, lineno=179)
DEBUG:numba.core.byteflow:stack ['$phi718.0', '$phi718.1', '$phi718.2']
DEBUG:numba.core.byteflow:dispatch pc=720, inst=LOAD_FAST(arg=43, lineno=179)
DEBUG:numba.core.byteflow:stack ['$phi718.0', '$phi718.1', '$phi718.2', '$718load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=722, inst=LOAD_FAST(arg=30, lineno=179)
DEBUG:numba.core.byteflow:stack ['$phi718.0', '$phi718.1', '$phi718.2', '$718load_global.3', '$grad_coeff720.4']
DEBUG:numba.core.byteflow:dispatch pc=724, inst=LOAD_FAST(arg=44, lineno=179)
DEBUG:numba.core.byteflow:stack ['$phi718.0', '$phi718.1', '$phi718.2', '$718load_global.3', '$grad_coeff720.4', '$current722.5']
DEBUG:numba.core.byteflow:dispatch pc=726, inst=BINARY_SUBSCR(arg=None, lineno=179)
DEBUG:numba.core.byteflow:stack ['$phi718.0', '$phi718.1', '$phi718.2', '$718load_global.3', '$grad_coeff720.4', '$current722.5', '$d724.6']
DEBUG:numba.core.byteflow:dispatch pc=728, inst=LOAD_FAST(arg=31, lineno=179)
DEBUG:numba.core.byteflow:stack ['$phi718.0', '$phi718.1', '$phi718.2', '$718load_global.3', '$grad_coeff720.4', '$726binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=730, inst=LOAD_FAST(arg=44, lineno=179)
DEBUG:numba.core.byteflow:stack ['$phi718.0', '$phi718.1', '$phi718.2', '$718load_global.3', '$grad_coeff720.4', '$726binary_subscr.7', '$other728.8']
DEBUG:numba.core.byteflow:dispatch pc=732, inst=BINARY_SUBSCR(arg=None, lineno=179)
DEBUG:numba.core.byteflow:stack ['$phi718.0', '$phi718.1', '$phi718.2', '$718load_global.3', '$grad_coeff720.4', '$726binary_subscr.7', '$other728.8', '$d730.9']
DEBUG:numba.core.byteflow:dispatch pc=734, inst=BINARY_SUBTRACT(arg=None, lineno=179)
DEBUG:numba.core.byteflow:stack ['$phi718.0', '$phi718.1', '$phi718.2', '$718load_global.3', '$grad_coeff720.4', '$726binary_subscr.7', '$732binary_subscr.10']
DEBUG:numba.core.byteflow:dispatch pc=736, inst=BINARY_MULTIPLY(arg=None, lineno=179)
DEBUG:numba.core.byteflow:stack ['$phi718.0', '$phi718.1', '$phi718.2', '$718load_global.3', '$grad_coeff720.4', '$734binary_subtract.11']
DEBUG:numba.core.byteflow:dispatch pc=738, inst=CALL_FUNCTION(arg=1, lineno=179)
DEBUG:numba.core.byteflow:stack ['$phi718.0', '$phi718.1', '$phi718.2', '$718load_global.3', '$736binary_multiply.12']
DEBUG:numba.core.byteflow:dispatch pc=740, inst=STORE_FAST(arg=45, lineno=179)
DEBUG:numba.core.byteflow:stack ['$phi718.0', '$phi718.1', '$phi718.2', '$738call_function.13']
DEBUG:numba.core.byteflow:dispatch pc=742, inst=JUMP_FORWARD(arg=2, lineno=179)
DEBUG:numba.core.byteflow:stack ['$phi718.0', '$phi718.1', '$phi718.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=748, stack=('$phi718.0', '$phi718.1', '$phi718.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=744 nstack_initial=3), State(pc_initial=748 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi744.0', '$phi744.1', '$phi744.2']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=744 nstack_initial=3)
DEBUG:numba.core.byteflow:dispatch pc=744, inst=LOAD_CONST(arg=1, lineno=181)
DEBUG:numba.core.byteflow:stack ['$phi744.0', '$phi744.1', '$phi744.2']
DEBUG:numba.core.byteflow:dispatch pc=746, inst=STORE_FAST(arg=45, lineno=181)
DEBUG:numba.core.byteflow:stack ['$phi744.0', '$phi744.1', '$phi744.2', '$const744.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=748, stack=('$phi744.0', '$phi744.1', '$phi744.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=748 nstack_initial=3), State(pc_initial=748 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi748.0', '$phi748.1', '$phi748.2']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=748 nstack_initial=3)
DEBUG:numba.core.byteflow:dispatch pc=748, inst=LOAD_FAST(arg=30, lineno=182)
DEBUG:numba.core.byteflow:stack ['$phi748.0', '$phi748.1', '$phi748.2']
DEBUG:numba.core.byteflow:dispatch pc=750, inst=LOAD_FAST(arg=44, lineno=182)
DEBUG:numba.core.byteflow:stack ['$phi748.0', '$phi748.1', '$phi748.2', '$current748.3']
DEBUG:numba.core.byteflow:dispatch pc=752, inst=DUP_TOP_TWO(arg=None, lineno=182)
DEBUG:numba.core.byteflow:stack ['$phi748.0', '$phi748.1', '$phi748.2', '$current748.3', '$d750.4']
DEBUG:numba.core.byteflow:dispatch pc=754, inst=BINARY_SUBSCR(arg=None, lineno=182)
DEBUG:numba.core.byteflow:stack ['$phi748.0', '$phi748.1', '$phi748.2', '$current748.3', '$d750.4', '$752dup_top_two.5', '$752dup_top_two.6']
DEBUG:numba.core.byteflow:dispatch pc=756, inst=LOAD_FAST(arg=45, lineno=182)
DEBUG:numba.core.byteflow:stack ['$phi748.0', '$phi748.1', '$phi748.2', '$current748.3', '$d750.4', '$754binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=758, inst=LOAD_FAST(arg=12, lineno=182)
DEBUG:numba.core.byteflow:stack ['$phi748.0', '$phi748.1', '$phi748.2', '$current748.3', '$d750.4', '$754binary_subscr.7', '$grad_d756.8']
DEBUG:numba.core.byteflow:dispatch pc=760, inst=BINARY_MULTIPLY(arg=None, lineno=182)
DEBUG:numba.core.byteflow:stack ['$phi748.0', '$phi748.1', '$phi748.2', '$current748.3', '$d750.4', '$754binary_subscr.7', '$grad_d756.8', '$alpha758.9']
DEBUG:numba.core.byteflow:dispatch pc=762, inst=INPLACE_ADD(arg=None, lineno=182)
DEBUG:numba.core.byteflow:stack ['$phi748.0', '$phi748.1', '$phi748.2', '$current748.3', '$d750.4', '$754binary_subscr.7', '$760binary_multiply.10']
DEBUG:numba.core.byteflow:dispatch pc=764, inst=ROT_THREE(arg=None, lineno=182)
DEBUG:numba.core.byteflow:stack ['$phi748.0', '$phi748.1', '$phi748.2', '$current748.3', '$d750.4', '$762inplace_add.11']
DEBUG:numba.core.byteflow:dispatch pc=766, inst=STORE_SUBSCR(arg=None, lineno=182)
DEBUG:numba.core.byteflow:stack ['$phi748.0', '$phi748.1', '$phi748.2', '$762inplace_add.11', '$current748.3', '$d750.4']
DEBUG:numba.core.byteflow:dispatch pc=768, inst=NOP(arg=1, lineno=182)
DEBUG:numba.core.byteflow:stack ['$phi748.0', '$phi748.1', '$phi748.2']
DEBUG:numba.core.byteflow:dispatch pc=770, inst=JUMP_ABSOLUTE(arg=353, lineno=182)
DEBUG:numba.core.byteflow:stack ['$phi748.0', '$phi748.1', '$phi748.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=704, stack=('$phi748.0', '$phi748.1', '$phi748.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=748 nstack_initial=3), State(pc_initial=704 nstack_initial=3)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=704 nstack_initial=3)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=1): set(),
             State(pc_initial=20 nstack_initial=1): {'$phi20.0'},
             State(pc_initial=22 nstack_initial=2): {'$phi22.1'},
             State(pc_initial=38 nstack_initial=1): set(),
             State(pc_initial=84 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=358 nstack_initial=1): set(),
             State(pc_initial=408 nstack_initial=1): set(),
             State(pc_initial=412 nstack_initial=1): set(),
             State(pc_initial=420 nstack_initial=2): {'$phi420.1'},
             State(pc_initial=422 nstack_initial=3): {'$phi422.2'},
             State(pc_initial=452 nstack_initial=2): set(),
             State(pc_initial=484 nstack_initial=2): set(),
             State(pc_initial=510 nstack_initial=2): set(),
             State(pc_initial=532 nstack_initial=2): set(),
             State(pc_initial=534 nstack_initial=1): set(),
             State(pc_initial=586 nstack_initial=2): {'$phi586.1'},
             State(pc_initial=588 nstack_initial=3): {'$phi588.2'},
             State(pc_initial=634 nstack_initial=2): set(),
             State(pc_initial=678 nstack_initial=2): set(),
             State(pc_initial=688 nstack_initial=2): set(),
             State(pc_initial=692 nstack_initial=2): set(),
             State(pc_initial=696 nstack_initial=2): set(),
             State(pc_initial=704 nstack_initial=3): {'$phi704.2'},
             State(pc_initial=706 nstack_initial=4): {'$phi706.3'},
             State(pc_initial=718 nstack_initial=3): set(),
             State(pc_initial=744 nstack_initial=3): set(),
             State(pc_initial=748 nstack_initial=3): set(),
             State(pc_initial=772 nstack_initial=2): set(),
             State(pc_initial=776 nstack_initial=1): set(),
             State(pc_initial=800 nstack_initial=1): set(),
             State(pc_initial=802 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi18.0': State(pc_initial=0 nstack_initial=0),
 '$phi22.1': State(pc_initial=20 nstack_initial=1),
 '$phi420.1': State(pc_initial=412 nstack_initial=1),
 '$phi422.2': State(pc_initial=420 nstack_initial=2),
 '$phi586.1': State(pc_initial=534 nstack_initial=1),
 '$phi588.2': State(pc_initial=586 nstack_initial=2),
 '$phi704.2': State(pc_initial=696 nstack_initial=2),
 '$phi706.3': State(pc_initial=704 nstack_initial=3)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi800.0',
                           State(pc_initial=800 nstack_initial=1))},
             '$phi20.0': {('$phi18.0', State(pc_initial=18 nstack_initial=1))},
             '$phi22.0': {('$phi20.0', State(pc_initial=20 nstack_initial=1))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi350.0': {('$phi38.0', State(pc_initial=38 nstack_initial=1)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi358.0': {('$phi350.0',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi38.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi408.0': {('$phi350.0',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.0': {('$phi358.0',
                            State(pc_initial=358 nstack_initial=1)),
                           ('$phi408.0',
                            State(pc_initial=408 nstack_initial=1))},
             '$phi420.0': {('$phi412.0',
                            State(pc_initial=412 nstack_initial=1)),
                           ('$phi532.0',
                            State(pc_initial=532 nstack_initial=2))},
             '$phi420.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1)),
                           ('$phi532.1',
                            State(pc_initial=532 nstack_initial=2))},
             '$phi422.0': {('$phi420.0',
                            State(pc_initial=420 nstack_initial=2))},
             '$phi422.1': {('$phi420.1',
                            State(pc_initial=420 nstack_initial=2))},
             '$phi422.2': {('$420for_iter.3',
                            State(pc_initial=420 nstack_initial=2))},
             '$phi452.0': {('$phi422.0',
                            State(pc_initial=422 nstack_initial=3))},
             '$phi452.1': {('$phi422.1',
                            State(pc_initial=422 nstack_initial=3))},
             '$phi484.0': {('$phi422.0',
                            State(pc_initial=422 nstack_initial=3)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2))},
             '$phi484.1': {('$phi422.1',
                            State(pc_initial=422 nstack_initial=3)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2))},
             '$phi510.0': {('$phi484.0',
                            State(pc_initial=484 nstack_initial=2))},
             '$phi510.1': {('$phi484.1',
                            State(pc_initial=484 nstack_initial=2))},
             '$phi532.0': {('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2))},
             '$phi532.1': {('$phi484.1',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2))},
             '$phi534.0': {('$phi420.0',
                            State(pc_initial=420 nstack_initial=2))},
             '$phi586.0': {('$phi534.0',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi688.0',
                            State(pc_initial=688 nstack_initial=2)),
                           ('$phi772.0',
                            State(pc_initial=772 nstack_initial=2))},
             '$phi586.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi688.1',
                            State(pc_initial=688 nstack_initial=2)),
                           ('$phi772.1',
                            State(pc_initial=772 nstack_initial=2))},
             '$phi588.0': {('$phi586.0',
                            State(pc_initial=586 nstack_initial=2))},
             '$phi588.1': {('$phi586.1',
                            State(pc_initial=586 nstack_initial=2))},
             '$phi588.2': {('$586for_iter.3',
                            State(pc_initial=586 nstack_initial=2))},
             '$phi634.0': {('$phi588.0',
                            State(pc_initial=588 nstack_initial=3))},
             '$phi634.1': {('$phi588.1',
                            State(pc_initial=588 nstack_initial=3))},
             '$phi678.0': {('$phi588.0',
                            State(pc_initial=588 nstack_initial=3))},
             '$phi678.1': {('$phi588.1',
                            State(pc_initial=588 nstack_initial=3))},
             '$phi688.0': {('$phi678.0',
                            State(pc_initial=678 nstack_initial=2))},
             '$phi688.1': {('$phi678.1',
                            State(pc_initial=678 nstack_initial=2))},
             '$phi692.0': {('$phi678.0',
                            State(pc_initial=678 nstack_initial=2))},
             '$phi692.1': {('$phi678.1',
                            State(pc_initial=678 nstack_initial=2))},
             '$phi696.0': {('$phi634.0',
                            State(pc_initial=634 nstack_initial=2)),
                           ('$phi692.0',
                            State(pc_initial=692 nstack_initial=2))},
             '$phi696.1': {('$phi634.1',
                            State(pc_initial=634 nstack_initial=2)),
                           ('$phi692.1',
                            State(pc_initial=692 nstack_initial=2))},
             '$phi704.0': {('$phi696.0',
                            State(pc_initial=696 nstack_initial=2)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi704.1': {('$phi696.1',
                            State(pc_initial=696 nstack_initial=2)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi704.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2)),
                           ('$phi748.2',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi706.0': {('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi706.1': {('$phi704.1',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi706.2': {('$phi704.2',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi706.3': {('$704for_iter.4',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi718.0': {('$phi706.0',
                            State(pc_initial=706 nstack_initial=4))},
             '$phi718.1': {('$phi706.1',
                            State(pc_initial=706 nstack_initial=4))},
             '$phi718.2': {('$phi706.2',
                            State(pc_initial=706 nstack_initial=4))},
             '$phi744.0': {('$phi706.0',
                            State(pc_initial=706 nstack_initial=4))},
             '$phi744.1': {('$phi706.1',
                            State(pc_initial=706 nstack_initial=4))},
             '$phi744.2': {('$phi706.2',
                            State(pc_initial=706 nstack_initial=4))},
             '$phi748.0': {('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi748.1': {('$phi718.1',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.1',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi748.2': {('$phi718.2',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.2',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi772.0': {('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi772.1': {('$phi704.1',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi776.0': {('$phi586.0',
                            State(pc_initial=586 nstack_initial=2))},
             '$phi800.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi776.0',
                            State(pc_initial=776 nstack_initial=1))},
             '$phi84.0': {('$phi38.0', State(pc_initial=38 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                          ('$phi776.0',
                           State(pc_initial=776 nstack_initial=1))},
             '$phi20.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                          ('$phi776.0',
                           State(pc_initial=776 nstack_initial=1))},
             '$phi22.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                          ('$phi776.0',
                           State(pc_initial=776 nstack_initial=1))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi350.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi358.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi38.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi776.0',
                           State(pc_initial=776 nstack_initial=1))},
             '$phi408.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi412.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi420.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2))},
             '$phi420.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1)),
                           ('$phi484.1',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2))},
             '$phi422.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2))},
             '$phi422.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1)),
                           ('$phi484.1',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2))},
             '$phi422.2': {('$420for_iter.3',
                            State(pc_initial=420 nstack_initial=2))},
             '$phi452.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2))},
             '$phi452.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1)),
                           ('$phi484.1',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2))},
             '$phi484.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2))},
             '$phi484.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1)),
                           ('$phi484.1',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2))},
             '$phi510.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2))},
             '$phi510.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2))},
             '$phi532.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi532.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi534.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2))},
             '$phi586.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi586.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi678.1',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.1',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi588.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi588.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi678.1',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.1',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi588.2': {('$586for_iter.3',
                            State(pc_initial=586 nstack_initial=2))},
             '$phi634.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi634.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi678.1',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.1',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi678.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi678.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi678.1',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.1',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi688.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi688.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi704.1',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi692.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi692.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi704.1',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi696.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi696.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi678.1',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.1',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi704.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi704.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi678.1',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.1',
                            State(pc_initial=704 nstack_initial=3)),
                           ('$phi718.1',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.1',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi704.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2)),
                           ('$phi718.2',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.2',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi706.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi706.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi678.1',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi718.1',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.1',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi706.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2)),
                           ('$phi718.2',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.2',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi706.3': {('$704for_iter.4',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi718.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi718.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi678.1',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi718.1',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.1',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi718.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2)),
                           ('$phi718.2',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.2',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi744.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi744.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi678.1',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi718.1',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.1',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi744.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2)),
                           ('$phi718.2',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.2',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi748.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2))},
             '$phi748.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi678.1',
                            State(pc_initial=678 nstack_initial=2))},
             '$phi748.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi772.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi772.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi678.1',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi718.1',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.1',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi776.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi800.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi84.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi776.0',
                           State(pc_initial=776 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi484.0', State(pc_initial=484 nstack_initial=2)),
                          ('$phi510.0', State(pc_initial=510 nstack_initial=2)),
                          ('$phi678.0', State(pc_initial=678 nstack_initial=2)),
                          ('$phi704.0',
                           State(pc_initial=704 nstack_initial=3))},
             '$phi20.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi484.0', State(pc_initial=484 nstack_initial=2)),
                          ('$phi510.0', State(pc_initial=510 nstack_initial=2)),
                          ('$phi678.0', State(pc_initial=678 nstack_initial=2)),
                          ('$phi704.0',
                           State(pc_initial=704 nstack_initial=3))},
             '$phi22.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi484.0', State(pc_initial=484 nstack_initial=2)),
                          ('$phi510.0', State(pc_initial=510 nstack_initial=2)),
                          ('$phi678.0', State(pc_initial=678 nstack_initial=2)),
                          ('$phi704.0',
                           State(pc_initial=704 nstack_initial=3))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi350.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi358.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi38.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi484.0', State(pc_initial=484 nstack_initial=2)),
                          ('$phi510.0', State(pc_initial=510 nstack_initial=2)),
                          ('$phi678.0', State(pc_initial=678 nstack_initial=2)),
                          ('$phi704.0',
                           State(pc_initial=704 nstack_initial=3))},
             '$phi408.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi412.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi484.0',
                            State(pc_initial=484 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi420.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi420.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi422.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi422.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi422.2': {('$420for_iter.3',
                            State(pc_initial=420 nstack_initial=2))},
             '$phi452.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi452.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi484.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi484.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi510.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi510.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi532.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi532.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi534.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi678.0',
                            State(pc_initial=678 nstack_initial=2)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi586.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi586.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi718.1',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.1',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi588.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi588.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi718.1',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.1',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi588.2': {('$586for_iter.3',
                            State(pc_initial=586 nstack_initial=2))},
             '$phi634.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi634.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi718.1',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.1',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi678.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi678.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi718.1',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.1',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi688.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi688.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi718.1',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.1',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi692.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi692.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi718.1',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.1',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi696.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi696.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1)),
                           ('$phi718.1',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.1',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi704.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi704.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi704.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi706.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi706.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi706.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi706.3': {('$704for_iter.4',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi718.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi718.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi718.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi744.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi744.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi744.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi748.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi704.0',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi748.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi748.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi772.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi772.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi776.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi800.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi84.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi718.0', State(pc_initial=718 nstack_initial=3)),
                          ('$phi744.0',
                           State(pc_initial=744 nstack_initial=3))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi718.0', State(pc_initial=718 nstack_initial=3)),
                          ('$phi744.0',
                           State(pc_initial=744 nstack_initial=3))},
             '$phi20.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi718.0', State(pc_initial=718 nstack_initial=3)),
                          ('$phi744.0',
                           State(pc_initial=744 nstack_initial=3))},
             '$phi22.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi718.0', State(pc_initial=718 nstack_initial=3)),
                          ('$phi744.0',
                           State(pc_initial=744 nstack_initial=3))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi350.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi358.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi38.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi718.0', State(pc_initial=718 nstack_initial=3)),
                          ('$phi744.0',
                           State(pc_initial=744 nstack_initial=3))},
             '$phi408.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi412.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi420.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi420.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi422.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi422.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi422.2': {('$420for_iter.3',
                            State(pc_initial=420 nstack_initial=2))},
             '$phi452.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi452.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi484.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi484.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi510.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi510.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi532.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi532.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi534.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi718.0',
                            State(pc_initial=718 nstack_initial=3)),
                           ('$phi744.0',
                            State(pc_initial=744 nstack_initial=3))},
             '$phi586.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi586.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi588.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi588.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi588.2': {('$586for_iter.3',
                            State(pc_initial=586 nstack_initial=2))},
             '$phi634.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi634.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi678.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi678.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi688.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi688.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi692.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi692.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi696.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi696.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi704.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi704.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi704.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi706.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi706.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi706.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi706.3': {('$704for_iter.4',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi718.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi718.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi718.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi744.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi744.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi744.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi748.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi748.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi748.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi772.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi772.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi776.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi800.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi350.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi358.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi408.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi412.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi420.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi420.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi422.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi422.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi422.2': {('$420for_iter.3',
                            State(pc_initial=420 nstack_initial=2))},
             '$phi452.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi452.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi484.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi484.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi510.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi510.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi532.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi532.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi534.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi586.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi586.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi588.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi588.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi588.2': {('$586for_iter.3',
                            State(pc_initial=586 nstack_initial=2))},
             '$phi634.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi634.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi678.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi678.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi688.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi688.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi692.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi692.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi696.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi696.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi704.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi704.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi704.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi706.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi706.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi706.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi706.3': {('$704for_iter.4',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi718.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi718.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi718.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi744.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi744.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi744.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi748.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi748.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi748.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi772.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi772.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi776.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi800.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi350.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi358.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi408.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi412.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi420.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi420.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi422.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi422.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi422.2': {('$420for_iter.3',
                            State(pc_initial=420 nstack_initial=2))},
             '$phi452.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi452.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi484.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi484.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi510.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi510.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi532.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi532.1': {('$418get_iter.4',
                            State(pc_initial=412 nstack_initial=1))},
             '$phi534.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi586.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi586.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi588.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi588.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi588.2': {('$586for_iter.3',
                            State(pc_initial=586 nstack_initial=2))},
             '$phi634.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi634.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi678.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi678.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi688.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi688.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi692.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi692.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi696.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi696.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi704.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi704.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi704.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi706.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi706.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi706.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi706.3': {('$704for_iter.4',
                            State(pc_initial=704 nstack_initial=3))},
             '$phi718.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi718.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi718.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi744.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi744.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi744.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi748.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi748.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi748.2': {('$702get_iter.5',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi772.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi772.1': {('$584get_iter.24',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi776.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi800.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi20.0': {('$16get_iter.7', State(pc_initial=0 nstack_initial=0))},
 '$phi22.1': {('$20for_iter.2', State(pc_initial=20 nstack_initial=1))},
 '$phi420.1': {('$418get_iter.4', State(pc_initial=412 nstack_initial=1))},
 '$phi422.2': {('$420for_iter.3', State(pc_initial=420 nstack_initial=2))},
 '$phi586.1': {('$584get_iter.24', State(pc_initial=534 nstack_initial=1))},
 '$phi588.2': {('$586for_iter.3', State(pc_initial=586 nstack_initial=2))},
 '$phi704.2': {('$702get_iter.5', State(pc_initial=696 nstack_initial=2))},
 '$phi706.3': {('$704for_iter.4', State(pc_initial=704 nstack_initial=3))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi20.0': '$16get_iter.7'},
             State(pc_initial=20 nstack_initial=1): {'$phi22.1': '$20for_iter.2'},
             State(pc_initial=412 nstack_initial=1): {'$phi420.1': '$418get_iter.4'},
             State(pc_initial=420 nstack_initial=2): {'$phi422.2': '$420for_iter.3'},
             State(pc_initial=534 nstack_initial=1): {'$phi586.1': '$584get_iter.24'},
             State(pc_initial=586 nstack_initial=2): {'$phi588.2': '$586for_iter.3'},
             State(pc_initial=696 nstack_initial=2): {'$phi704.2': '$702get_iter.5'},
             State(pc_initial=704 nstack_initial=3): {'$phi706.3': '$704for_iter.4'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$epochs_per_sample6.2'}), (8, {'item': '$epochs_per_sample6.2', 'res': '$8load_attr.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$8load_attr.3', 'res': '$12binary_subscr.5'}), (14, {'func': '$4load_method.1', 'args': ['$12binary_subscr.5'], 'res': '$14call_method.6'}), (16, {'value': '$14call_method.6', 'res': '$16get_iter.7'})), outgoing_phis={'$phi20.0': '$16get_iter.7'}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$16get_iter.7',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=18 nstack_initial=1):
AdaptBlockInfo(insts=((18, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={20: ('$phi18.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=20 nstack_initial=1):
AdaptBlockInfo(insts=((20, {'iterator': '$phi20.0', 'pair': '$20for_iter.1', 'indval': '$20for_iter.2', 'pred': '$20for_iter.3'}),), outgoing_phis={'$phi22.1': '$20for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={802: (), 22: ('$phi20.0', '$20for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=22 nstack_initial=2):
AdaptBlockInfo(insts=((22, {'value': '$phi22.1'}), (24, {'res': '$epoch_of_next_sample24.2'}), (26, {'res': '$i26.3'}), (28, {'index': '$i26.3', 'target': '$epoch_of_next_sample24.2', 'res': '$28binary_subscr.4'}), (30, {'res': '$n30.5'}), (32, {'lhs': '$28binary_subscr.4', 'rhs': '$n30.5', 'res': '$32compare_op.6'}), (34, {}), (36, {'pred': '$32compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: ('$phi22.0',), 800: ('$phi22.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=38 nstack_initial=1):
AdaptBlockInfo(insts=((38, {'res': '$head38.1'}), (40, {'res': '$i40.2'}), (42, {'index': '$i40.2', 'target': '$head38.1', 'res': '$42binary_subscr.3'}), (44, {'value': '$42binary_subscr.3'}), (46, {'res': '$tail46.4'}), (48, {'res': '$i48.5'}), (50, {'index': '$i48.5', 'target': '$tail46.4', 'res': '$50binary_subscr.6'}), (52, {'value': '$50binary_subscr.6'}), (54, {'res': '$head_embedding54.7'}), (56, {'res': '$j56.8'}), (58, {'index': '$j56.8', 'target': '$head_embedding54.7', 'res': '$58binary_subscr.9'}), (60, {'value': '$58binary_subscr.9'}), (62, {'res': '$tail_embedding62.10'}), (64, {'res': '$k64.11'}), (66, {'index': '$k64.11', 'target': '$tail_embedding62.10', 'res': '$66binary_subscr.12'}), (68, {'value': '$66binary_subscr.12'}), (70, {'res': '$70load_global.13'}), (72, {'res': '$current72.14'}), (74, {'res': '$other74.15'}), (76, {'func': '$70load_global.13', 'args': ['$current72.14', '$other74.15'], 'res': '$76call_function.16'}), (78, {'value': '$76call_function.16'}), (80, {'res': '$densmap_flag80.17'}), (82, {'pred': '$densmap_flag80.17'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: ('$phi38.0',), 350: ('$phi38.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=84 nstack_initial=1):
AdaptBlockInfo(insts=((84, {'res': '$const84.1'}), (86, {'res': '$const86.2'}), (88, {'res': '$a88.3'}), (90, {'res': '$90load_global.4'}), (92, {'res': '$dist_squared92.5'}), (94, {'res': '$b94.6'}), (96, {'func': '$90load_global.4', 'args': ['$dist_squared92.5', '$b94.6'], 'res': '$96call_function.7'}), (98, {'lhs': '$a88.3', 'rhs': '$96call_function.7', 'res': '$98binary_multiply.8'}), (100, {'lhs': '$const86.2', 'rhs': '$98binary_multiply.8', 'res': '$100binary_add.9'}), (102, {'lhs': '$const84.1', 'rhs': '$100binary_add.9', 'res': '$102binary_true_divide.10'}), (104, {'value': '$102binary_true_divide.10'}), (106, {'res': '$a106.11'}), (108, {'res': '$b108.12'}), (110, {'lhs': '$a106.11', 'rhs': '$b108.12', 'res': '$110binary_multiply.13'}), (112, {'res': '$112load_global.14'}), (114, {'res': '$dist_squared114.15'}), (116, {'res': '$b116.16'}), (118, {'res': '$const118.17'}), (120, {'lhs': '$b116.16', 'rhs': '$const118.17', 'res': '$120binary_subtract.18'}), (122, {'func': '$112load_global.14', 'args': ['$dist_squared114.15', '$120binary_subtract.18'], 'res': '$122call_function.19'}), (124, {'lhs': '$110binary_multiply.13', 'rhs': '$122call_function.19', 'res': '$124binary_multiply.20'}), (126, {'res': '$const126.21'}), (128, {'res': '$a128.22'}), (130, {'res': '$130load_global.23'}), (132, {'res': '$dist_squared132.24'}), (134, {'res': '$b134.25'}), (136, {'func': '$130load_global.23', 'args': ['$dist_squared132.24', '$b134.25'], 'res': '$136call_function.26'}), (138, {'lhs': '$a128.22', 'rhs': '$136call_function.26', 'res': '$138binary_multiply.27'}), (140, {'lhs': '$const126.21', 'rhs': '$138binary_multiply.27', 'res': '$140binary_add.28'}), (142, {'lhs': '$124binary_multiply.20', 'rhs': '$140binary_add.28', 'res': '$142binary_true_divide.29'}), (144, {'value': '$142binary_true_divide.29'}), (146, {'res': '$phi146.30'}), (148, {'res': '$dens_phi_sum148.31'}), (150, {'res': '$k150.32'}), (152, {'index': '$k150.32', 'target': '$dens_phi_sum148.31', 'res': '$152binary_subscr.33'}), (154, {'lhs': '$phi146.30', 'rhs': '$152binary_subscr.33', 'res': '$154binary_true_divide.34'}), (156, {'value': '$154binary_true_divide.34'}), (158, {'res': '$phi158.35'}), (160, {'res': '$dens_phi_sum160.36'}), (162, {'res': '$j162.37'}), (164, {'index': '$j162.37', 'target': '$dens_phi_sum160.36', 'res': '$164binary_subscr.38'}), (166, {'lhs': '$phi158.35', 'rhs': '$164binary_subscr.38', 'res': '$166binary_true_divide.39'}), (168, {'value': '$166binary_true_divide.39'}), (170, {'res': '$q_jk170.40'}), (172, {'res': '$const172.41'}), (174, {'res': '$b174.42'}), (176, {'res': '$const176.43'}), (178, {'res': '$phi178.44'}), (180, {'lhs': '$const176.43', 'rhs': '$phi178.44', 'res': '$180binary_subtract.45'}), (182, {'lhs': '$b174.42', 'rhs': '$180binary_subtract.45', 'res': '$182binary_multiply.46'}), (184, {'lhs': '$const172.41', 'rhs': '$182binary_multiply.46', 'res': '$184binary_subtract.47'}), (186, {'res': '$186load_global.48'}), (188, {'item': '$186load_global.48', 'res': '$188load_method.49'}), (190, {'res': '$dens_re_sum190.50'}), (192, {'res': '$k192.51'}), (194, {'index': '$k192.51', 'target': '$dens_re_sum190.50', 'res': '$194binary_subscr.52'}), (196, {'func': '$188load_method.49', 'args': ['$194binary_subscr.52'], 'res': '$196call_method.53'}), (198, {'lhs': '$184binary_subtract.47', 'rhs': '$196call_method.53', 'res': '$198binary_true_divide.54'}), (200, {'res': '$dphi_term200.55'}), (202, {'lhs': '$198binary_true_divide.54', 'rhs': '$dphi_term200.55', 'res': '$202binary_add.56'}), (204, {'lhs': '$q_jk170.40', 'rhs': '$202binary_add.56', 'res': '$204binary_multiply.57'}), (206, {'value': '$204binary_multiply.57'}), (208, {'res': '$q_kj208.58'}), (210, {'res': '$const210.59'}), (212, {'res': '$b212.60'}), (214, {'res': '$const214.61'}), (216, {'res': '$phi216.62'}), (218, {'lhs': '$const214.61', 'rhs': '$phi216.62', 'res': '$218binary_subtract.63'}), (220, {'lhs': '$b212.60', 'rhs': '$218binary_subtract.63', 'res': '$220binary_multiply.64'}), (222, {'lhs': '$const210.59', 'rhs': '$220binary_multiply.64', 'res': '$222binary_subtract.65'}), (224, {'res': '$224load_global.66'}), (226, {'item': '$224load_global.66', 'res': '$226load_method.67'}), (228, {'res': '$dens_re_sum228.68'}), (230, {'res': '$j230.69'}), (232, {'index': '$j230.69', 'target': '$dens_re_sum228.68', 'res': '$232binary_subscr.70'}), (234, {'func': '$226load_method.67', 'args': ['$232binary_subscr.70'], 'res': '$234call_method.71'}), (236, {'lhs': '$222binary_subtract.65', 'rhs': '$234call_method.71', 'res': '$236binary_true_divide.72'}), (238, {'res': '$dphi_term238.73'}), (240, {'lhs': '$236binary_true_divide.72', 'rhs': '$dphi_term238.73', 'res': '$240binary_add.74'}), (242, {'lhs': '$q_kj208.58', 'rhs': '$240binary_add.74', 'res': '$242binary_multiply.75'}), (244, {'value': '$242binary_multiply.75'}), (246, {'res': '$dens_re_std246.76'}), (248, {'res': '$dens_re_std248.77'}), (250, {'lhs': '$dens_re_std246.76', 'rhs': '$dens_re_std248.77', 'res': '$250binary_multiply.78'}), (252, {'value': '$250binary_multiply.78'}), (254, {'res': '$dens_R254.79'}), (256, {'res': '$k256.80'}), (258, {'index': '$k256.80', 'target': '$dens_R254.79', 'res': '$258binary_subscr.81'}), (260, {'res': '$dens_re_cov260.82'}), (262, {'res': '$dens_re_sum262.83'}), (264, {'res': '$k264.84'}), (266, {'index': '$k264.84', 'target': '$dens_re_sum262.83', 'res': '$266binary_subscr.85'}), (268, {'res': '$dens_re_mean268.86'}), (270, {'lhs': '$266binary_subscr.85', 'rhs': '$dens_re_mean268.86', 'res': '$270binary_subtract.87'}), (272, {'lhs': '$dens_re_cov260.82', 'rhs': '$270binary_subtract.87', 'res': '$272binary_multiply.88'}), (274, {'res': '$re_std_sq274.89'}), (276, {'lhs': '$272binary_multiply.88', 'rhs': '$re_std_sq274.89', 'res': '$276binary_true_divide.90'}), (278, {'lhs': '$258binary_subscr.81', 'rhs': '$276binary_true_divide.90', 'res': '$278binary_subtract.91'}), (280, {'value': '$278binary_subtract.91'}), (282, {'res': '$dens_R282.92'}), (284, {'res': '$j284.93'}), (286, {'index': '$j284.93', 'target': '$dens_R282.92', 'res': '$286binary_subscr.94'}), (288, {'res': '$dens_re_cov288.95'}), (290, {'res': '$dens_re_sum290.96'}), (292, {'res': '$j292.97'}), (294, {'index': '$j292.97', 'target': '$dens_re_sum290.96', 'res': '$294binary_subscr.98'}), (296, {'res': '$dens_re_mean296.99'}), (298, {'lhs': '$294binary_subscr.98', 'rhs': '$dens_re_mean296.99', 'res': '$298binary_subtract.100'}), (300, {'lhs': '$dens_re_cov288.95', 'rhs': '$298binary_subtract.100', 'res': '$300binary_multiply.101'}), (302, {'res': '$re_std_sq302.102'}), (304, {'lhs': '$300binary_multiply.101', 'rhs': '$re_std_sq302.102', 'res': '$304binary_true_divide.103'}), (306, {'lhs': '$286binary_subscr.94', 'rhs': '$304binary_true_divide.103', 'res': '$306binary_subtract.104'}), (308, {'value': '$306binary_subtract.104'}), (310, {'res': '$dens_lambda310.105'}), (312, {'res': '$dens_mu_tot312.106'}), (314, {'lhs': '$dens_lambda310.105', 'rhs': '$dens_mu_tot312.106', 'res': '$314binary_multiply.107'}), (316, {'res': '$weight_k316.108'}), (318, {'res': '$drk318.109'}), (320, {'lhs': '$weight_k316.108', 'rhs': '$drk318.109', 'res': '$320binary_multiply.110'}), (322, {'res': '$weight_j322.111'}), (324, {'res': '$drj324.112'}), (326, {'lhs': '$weight_j322.111', 'rhs': '$drj324.112', 'res': '$326binary_multiply.113'}), (328, {'lhs': '$320binary_multiply.110', 'rhs': '$326binary_multiply.113', 'res': '$328binary_add.114'}), (330, {'lhs': '$314binary_multiply.107', 'rhs': '$328binary_add.114', 'res': '$330binary_multiply.115'}), (332, {'res': '$dens_mu332.116'}), (334, {'res': '$i334.117'}), (336, {'index': '$i334.117', 'target': '$dens_mu332.116', 'res': '$336binary_subscr.118'}), (338, {'res': '$dens_re_std338.119'}), (340, {'lhs': '$336binary_subscr.118', 'rhs': '$dens_re_std338.119', 'res': '$340binary_multiply.120'}), (342, {'lhs': '$330binary_multiply.115', 'rhs': '$340binary_multiply.120', 'res': '$342binary_true_divide.121'}), (344, {'res': '$n_vertices344.122'}), (346, {'lhs': '$342binary_true_divide.121', 'rhs': '$n_vertices344.122', 'res': '$346binary_true_divide.123'}), (348, {'value': '$346binary_true_divide.123'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$phi84.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((350, {'res': '$dist_squared350.1'}), (352, {'res': '$const352.2'}), (354, {'lhs': '$dist_squared350.1', 'rhs': '$const352.2', 'res': '$354compare_op.3'}), (356, {'pred': '$354compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={358: ('$phi350.0',), 408: ('$phi350.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=358 nstack_initial=1):
AdaptBlockInfo(insts=((358, {'res': '$const358.1'}), (360, {'res': '$a360.2'}), (362, {'lhs': '$const358.1', 'rhs': '$a360.2', 'res': '$362binary_multiply.3'}), (364, {'res': '$b364.4'}), (366, {'lhs': '$362binary_multiply.3', 'rhs': '$b364.4', 'res': '$366binary_multiply.5'}), (368, {'res': '$368load_global.6'}), (370, {'res': '$dist_squared370.7'}), (372, {'res': '$b372.8'}), (374, {'res': '$const374.9'}), (376, {'lhs': '$b372.8', 'rhs': '$const374.9', 'res': '$376binary_subtract.10'}), (378, {'func': '$368load_global.6', 'args': ['$dist_squared370.7', '$376binary_subtract.10'], 'res': '$378call_function.11'}), (380, {'lhs': '$366binary_multiply.5', 'rhs': '$378call_function.11', 'res': '$380binary_multiply.12'}), (382, {'value': '$380binary_multiply.12'}), (384, {'res': '$grad_coeff384.13'}), (386, {'res': '$a386.14'}), (388, {'res': '$388load_global.15'}), (390, {'res': '$dist_squared390.16'}), (392, {'res': '$b392.17'}), (394, {'func': '$388load_global.15', 'args': ['$dist_squared390.16', '$b392.17'], 'res': '$394call_function.18'}), (396, {'lhs': '$a386.14', 'rhs': '$394call_function.18', 'res': '$396binary_multiply.19'}), (398, {'res': '$const398.20'}), (400, {'lhs': '$396binary_multiply.19', 'rhs': '$const398.20', 'res': '$400binary_add.21'}), (402, {'lhs': '$grad_coeff384.13', 'rhs': '$400binary_add.21', 'res': '$402inplace_true_divide.22'}), (404, {'value': '$402inplace_true_divide.22'}), (406, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={412: ('$phi358.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=408 nstack_initial=1):
AdaptBlockInfo(insts=((408, {'res': '$const408.1'}), (410, {'value': '$const408.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={412: ('$phi408.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=412 nstack_initial=1):
AdaptBlockInfo(insts=((412, {'res': '$412load_global.1'}), (414, {'res': '$dim414.2'}), (416, {'func': '$412load_global.1', 'args': ['$dim414.2'], 'res': '$416call_function.3'}), (418, {'value': '$416call_function.3', 'res': '$418get_iter.4'})), outgoing_phis={'$phi420.1': '$418get_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={420: ('$phi412.0', '$418get_iter.4')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=420 nstack_initial=2):
AdaptBlockInfo(insts=((420, {'iterator': '$phi420.1', 'pair': '$420for_iter.2', 'indval': '$420for_iter.3', 'pred': '$420for_iter.4'}),), outgoing_phis={'$phi422.2': '$420for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={534: ('$phi420.0',), 422: ('$phi420.0', '$phi420.1', '$420for_iter.3')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=422 nstack_initial=3):
AdaptBlockInfo(insts=((422, {'value': '$phi422.2'}), (424, {'res': '$424load_global.3'}), (426, {'res': '$grad_coeff426.4'}), (428, {'res': '$current428.5'}), (430, {'res': '$d430.6'}), (432, {'index': '$d430.6', 'target': '$current428.5', 'res': '$432binary_subscr.7'}), (434, {'res': '$other434.8'}), (436, {'res': '$d436.9'}), (438, {'index': '$d436.9', 'target': '$other434.8', 'res': '$438binary_subscr.10'}), (440, {'lhs': '$432binary_subscr.7', 'rhs': '$438binary_subscr.10', 'res': '$440binary_subtract.11'}), (442, {'lhs': '$grad_coeff426.4', 'rhs': '$440binary_subtract.11', 'res': '$442binary_multiply.12'}), (444, {'func': '$424load_global.3', 'args': ['$442binary_multiply.12'], 'res': '$444call_function.13'}), (446, {'value': '$444call_function.13'}), (448, {'res': '$densmap_flag448.14'}), (450, {'pred': '$densmap_flag448.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={452: ('$phi422.0', '$phi422.1'), 484: ('$phi422.0', '$phi422.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=452 nstack_initial=2):
AdaptBlockInfo(insts=((452, {'res': '$grad_d452.2'}), (454, {'res': '$454load_global.3'}), (456, {'res': '$const456.4'}), (458, {'res': '$grad_cor_coeff458.5'}), (460, {'lhs': '$const456.4', 'rhs': '$grad_cor_coeff458.5', 'res': '$460binary_multiply.6'}), (462, {'res': '$current462.7'}), (464, {'res': '$d464.8'}), (466, {'index': '$d464.8', 'target': '$current462.7', 'res': '$466binary_subscr.9'}), (468, {'res': '$other468.10'}), (470, {'res': '$d470.11'}), (472, {'index': '$d470.11', 'target': '$other468.10', 'res': '$472binary_subscr.12'}), (474, {'lhs': '$466binary_subscr.9', 'rhs': '$472binary_subscr.12', 'res': '$474binary_subtract.13'}), (476, {'lhs': '$460binary_multiply.6', 'rhs': '$474binary_subtract.13', 'res': '$476binary_multiply.14'}), (478, {'func': '$454load_global.3', 'args': ['$476binary_multiply.14'], 'res': '$478call_function.15'}), (480, {'lhs': '$grad_d452.2', 'rhs': '$478call_function.15', 'res': '$480inplace_add.16'}), (482, {'value': '$480inplace_add.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={484: ('$phi452.0', '$phi452.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=484 nstack_initial=2):
AdaptBlockInfo(insts=((484, {'res': '$current484.2'}), (486, {'res': '$d486.3'}), (488, {'orig': ['$current484.2', '$d486.3'], 'duped': ['$488dup_top_two.4', '$488dup_top_two.5']}), (490, {'index': '$488dup_top_two.5', 'target': '$488dup_top_two.4', 'res': '$490binary_subscr.6'}), (492, {'res': '$grad_d492.7'}), (494, {'res': '$alpha494.8'}), (496, {'lhs': '$grad_d492.7', 'rhs': '$alpha494.8', 'res': '$496binary_multiply.9'}), (498, {'lhs': '$490binary_subscr.6', 'rhs': '$496binary_multiply.9', 'res': '$498inplace_add.10'}), (502, {'target': '$current484.2', 'index': '$d486.3', 'value': '$498inplace_add.10'}), (504, {'res': '$move_other504.11'}), (506, {}), (508, {'pred': '$move_other504.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={510: ('$phi484.0', '$phi484.1'), 532: ('$phi484.0', '$phi484.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=510 nstack_initial=2):
AdaptBlockInfo(insts=((510, {'res': '$other510.2'}), (512, {'res': '$d512.3'}), (514, {'orig': ['$other510.2', '$d512.3'], 'duped': ['$514dup_top_two.4', '$514dup_top_two.5']}), (516, {'index': '$514dup_top_two.5', 'target': '$514dup_top_two.4', 'res': '$516binary_subscr.6'}), (518, {'res': '$grad_d518.7'}), (520, {'value': '$grad_d518.7', 'res': '$520unary_negative.8'}), (522, {'res': '$alpha522.9'}), (524, {'lhs': '$520unary_negative.8', 'rhs': '$alpha522.9', 'res': '$524binary_multiply.10'}), (526, {'lhs': '$516binary_subscr.6', 'rhs': '$524binary_multiply.10', 'res': '$526inplace_add.11'}), (530, {'target': '$other510.2', 'index': '$d512.3', 'value': '$526inplace_add.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={532: ('$phi510.0', '$phi510.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=532 nstack_initial=2):
AdaptBlockInfo(insts=((532, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={420: ('$phi532.0', '$phi532.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=534 nstack_initial=1):
AdaptBlockInfo(insts=((534, {'res': '$epoch_of_next_sample534.1'}), (536, {'res': '$i536.2'}), (538, {'orig': ['$epoch_of_next_sample534.1', '$i536.2'], 'duped': ['$538dup_top_two.3', '$538dup_top_two.4']}), (540, {'index': '$538dup_top_two.4', 'target': '$538dup_top_two.3', 'res': '$540binary_subscr.5'}), (542, {'res': '$epochs_per_sample542.6'}), (544, {'res': '$i544.7'}), (546, {'index': '$i544.7', 'target': '$epochs_per_sample542.6', 'res': '$546binary_subscr.8'}), (548, {'lhs': '$540binary_subscr.5', 'rhs': '$546binary_subscr.8', 'res': '$548inplace_add.9'}), (552, {'target': '$epoch_of_next_sample534.1', 'index': '$i536.2', 'value': '$548inplace_add.9'}), (554, {'res': '$554load_global.10'}), (556, {'res': '$n556.11'}), (558, {'res': '$epoch_of_next_negative_sample558.12'}), (560, {'res': '$i560.13'}), (562, {'index': '$i560.13', 'target': '$epoch_of_next_negative_sample558.12', 'res': '$562binary_subscr.14'}), (564, {'lhs': '$n556.11', 'rhs': '$562binary_subscr.14', 'res': '$564binary_subtract.15'}), (566, {'res': '$epochs_per_negative_sample566.16'}), (568, {'res': '$i568.17'}), (570, {'index': '$i568.17', 'target': '$epochs_per_negative_sample566.16', 'res': '$570binary_subscr.18'}), (572, {'lhs': '$564binary_subtract.15', 'rhs': '$570binary_subscr.18', 'res': '$572binary_true_divide.19'}), (574, {'func': '$554load_global.10', 'args': ['$572binary_true_divide.19'], 'res': '$574call_function.20'}), (576, {'value': '$574call_function.20'}), (578, {'res': '$578load_global.21'}), (580, {'res': '$n_neg_samples580.22'}), (582, {'func': '$578load_global.21', 'args': ['$n_neg_samples580.22'], 'res': '$582call_function.23'}), (584, {'value': '$582call_function.23', 'res': '$584get_iter.24'})), outgoing_phis={'$phi586.1': '$584get_iter.24'}, blockstack=(), active_try_block=None, outgoing_edgepushed={586: ('$phi534.0', '$584get_iter.24')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=586 nstack_initial=2):
AdaptBlockInfo(insts=((586, {'iterator': '$phi586.1', 'pair': '$586for_iter.2', 'indval': '$586for_iter.3', 'pred': '$586for_iter.4'}),), outgoing_phis={'$phi588.2': '$586for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={776: ('$phi586.0',), 588: ('$phi586.0', '$phi586.1', '$586for_iter.3')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=588 nstack_initial=3):
AdaptBlockInfo(insts=((588, {'value': '$phi588.2'}), (590, {'res': '$590load_global.3'}), (592, {'res': '$rng_state_per_sample592.4'}), (594, {'res': '$j594.5'}), (596, {'index': '$j594.5', 'target': '$rng_state_per_sample592.4', 'res': '$596binary_subscr.6'}), (598, {'func': '$590load_global.3', 'args': ['$596binary_subscr.6'], 'res': '$598call_function.7'}), (600, {'res': '$n_vertices600.8'}), (602, {'lhs': '$598call_function.7', 'rhs': '$n_vertices600.8', 'res': '$602binary_modulo.9'}), (604, {'value': '$602binary_modulo.9'}), (606, {'res': '$tail_embedding606.10'}), (608, {'res': '$k608.11'}), (610, {'index': '$k608.11', 'target': '$tail_embedding606.10', 'res': '$610binary_subscr.12'}), (612, {'value': '$610binary_subscr.12'}), (614, {'res': '$614load_global.13'}), (616, {'res': '$current616.14'}), (618, {'res': '$other618.15'}), (620, {'func': '$614load_global.13', 'args': ['$current616.14', '$other618.15'], 'res': '$620call_function.16'}), (622, {'value': '$620call_function.16'}), (624, {'res': '$dist_squared624.17'}), (626, {'res': '$const626.18'}), (628, {'lhs': '$dist_squared624.17', 'rhs': '$const626.18', 'res': '$628compare_op.19'}), (630, {}), (632, {'pred': '$628compare_op.19'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={634: ('$phi588.0', '$phi588.1'), 678: ('$phi588.0', '$phi588.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=634 nstack_initial=2):
AdaptBlockInfo(insts=((634, {'res': '$const634.2'}), (636, {'res': '$gamma636.3'}), (638, {'lhs': '$const634.2', 'rhs': '$gamma636.3', 'res': '$638binary_multiply.4'}), (640, {'res': '$b640.5'}), (642, {'lhs': '$638binary_multiply.4', 'rhs': '$b640.5', 'res': '$642binary_multiply.6'}), (644, {'value': '$642binary_multiply.6'}), (646, {'res': '$grad_coeff646.7'}), (648, {'res': '$const648.8'}), (650, {'res': '$dist_squared650.9'}), (652, {'lhs': '$const648.8', 'rhs': '$dist_squared650.9', 'res': '$652binary_add.10'}), (654, {'res': '$a654.11'}), (656, {'res': '$656load_global.12'}), (658, {'res': '$dist_squared658.13'}), (660, {'res': '$b660.14'}), (662, {'func': '$656load_global.12', 'args': ['$dist_squared658.13', '$b660.14'], 'res': '$662call_function.15'}), (664, {'lhs': '$a654.11', 'rhs': '$662call_function.15', 'res': '$664binary_multiply.16'}), (666, {'res': '$const666.17'}), (668, {'lhs': '$664binary_multiply.16', 'rhs': '$const666.17', 'res': '$668binary_add.18'}), (670, {'lhs': '$652binary_add.10', 'rhs': '$668binary_add.18', 'res': '$670binary_multiply.19'}), (672, {'lhs': '$grad_coeff646.7', 'rhs': '$670binary_multiply.19', 'res': '$672inplace_true_divide.20'}), (674, {'value': '$672inplace_true_divide.20'}), (676, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={696: ('$phi634.0', '$phi634.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=678 nstack_initial=2):
AdaptBlockInfo(insts=((678, {'res': '$j678.2'}), (680, {'res': '$k680.3'}), (682, {'lhs': '$j678.2', 'rhs': '$k680.3', 'res': '$682compare_op.4'}), (684, {}), (686, {'pred': '$682compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={688: ('$phi678.0', '$phi678.1'), 692: ('$phi678.0', '$phi678.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=688 nstack_initial=2):
AdaptBlockInfo(insts=((688, {}), (690, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={586: ('$phi688.0', '$phi688.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=692 nstack_initial=2):
AdaptBlockInfo(insts=((692, {'res': '$const692.2'}), (694, {'value': '$const692.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={696: ('$phi692.0', '$phi692.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=696 nstack_initial=2):
AdaptBlockInfo(insts=((696, {'res': '$696load_global.2'}), (698, {'res': '$dim698.3'}), (700, {'func': '$696load_global.2', 'args': ['$dim698.3'], 'res': '$700call_function.4'}), (702, {'value': '$700call_function.4', 'res': '$702get_iter.5'})), outgoing_phis={'$phi704.2': '$702get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={704: ('$phi696.0', '$phi696.1', '$702get_iter.5')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=704 nstack_initial=3):
AdaptBlockInfo(insts=((704, {'iterator': '$phi704.2', 'pair': '$704for_iter.3', 'indval': '$704for_iter.4', 'pred': '$704for_iter.5'}),), outgoing_phis={'$phi706.3': '$704for_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={772: ('$phi704.0', '$phi704.1'), 706: ('$phi704.0', '$phi704.1', '$phi704.2', '$704for_iter.4')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=706 nstack_initial=4):
AdaptBlockInfo(insts=((706, {'value': '$phi706.3'}), (708, {'res': '$grad_coeff708.4'}), (710, {'res': '$const710.5'}), (712, {'lhs': '$grad_coeff708.4', 'rhs': '$const710.5', 'res': '$712compare_op.6'}), (714, {}), (716, {'pred': '$712compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={718: ('$phi706.0', '$phi706.1', '$phi706.2'), 744: ('$phi706.0', '$phi706.1', '$phi706.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=718 nstack_initial=3):
AdaptBlockInfo(insts=((718, {'res': '$718load_global.3'}), (720, {'res': '$grad_coeff720.4'}), (722, {'res': '$current722.5'}), (724, {'res': '$d724.6'}), (726, {'index': '$d724.6', 'target': '$current722.5', 'res': '$726binary_subscr.7'}), (728, {'res': '$other728.8'}), (730, {'res': '$d730.9'}), (732, {'index': '$d730.9', 'target': '$other728.8', 'res': '$732binary_subscr.10'}), (734, {'lhs': '$726binary_subscr.7', 'rhs': '$732binary_subscr.10', 'res': '$734binary_subtract.11'}), (736, {'lhs': '$grad_coeff720.4', 'rhs': '$734binary_subtract.11', 'res': '$736binary_multiply.12'}), (738, {'func': '$718load_global.3', 'args': ['$736binary_multiply.12'], 'res': '$738call_function.13'}), (740, {'value': '$738call_function.13'}), (742, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={748: ('$phi718.0', '$phi718.1', '$phi718.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=744 nstack_initial=3):
AdaptBlockInfo(insts=((744, {'res': '$const744.3'}), (746, {'value': '$const744.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={748: ('$phi744.0', '$phi744.1', '$phi744.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=748 nstack_initial=3):
AdaptBlockInfo(insts=((748, {'res': '$current748.3'}), (750, {'res': '$d750.4'}), (752, {'orig': ['$current748.3', '$d750.4'], 'duped': ['$752dup_top_two.5', '$752dup_top_two.6']}), (754, {'index': '$752dup_top_two.6', 'target': '$752dup_top_two.5', 'res': '$754binary_subscr.7'}), (756, {'res': '$grad_d756.8'}), (758, {'res': '$alpha758.9'}), (760, {'lhs': '$grad_d756.8', 'rhs': '$alpha758.9', 'res': '$760binary_multiply.10'}), (762, {'lhs': '$754binary_subscr.7', 'rhs': '$760binary_multiply.10', 'res': '$762inplace_add.11'}), (766, {'target': '$current748.3', 'index': '$d750.4', 'value': '$762inplace_add.11'}), (768, {}), (770, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={704: ('$phi748.0', '$phi748.1', '$phi748.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=772 nstack_initial=2):
AdaptBlockInfo(insts=((772, {}), (774, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={586: ('$phi772.0', '$phi772.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=776 nstack_initial=1):
AdaptBlockInfo(insts=((776, {'res': '$epoch_of_next_negative_sample776.1'}), (778, {'res': '$i778.2'}), (780, {'orig': ['$epoch_of_next_negative_sample776.1', '$i778.2'], 'duped': ['$780dup_top_two.3', '$780dup_top_two.4']}), (782, {'index': '$780dup_top_two.4', 'target': '$780dup_top_two.3', 'res': '$782binary_subscr.5'}), (784, {'res': '$n_neg_samples784.6'}), (786, {'res': '$epochs_per_negative_sample786.7'}), (788, {'res': '$i788.8'}), (790, {'index': '$i788.8', 'target': '$epochs_per_negative_sample786.7', 'res': '$790binary_subscr.9'}), (792, {'lhs': '$n_neg_samples784.6', 'rhs': '$790binary_subscr.9', 'res': '$792binary_multiply.10'}), (794, {'lhs': '$782binary_subscr.5', 'rhs': '$792binary_multiply.10', 'res': '$794inplace_add.11'}), (798, {'target': '$epoch_of_next_negative_sample776.1', 'index': '$i778.2', 'value': '$794inplace_add.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={800: ('$phi776.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=800 nstack_initial=1):
AdaptBlockInfo(insts=((800, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$phi800.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=802 nstack_initial=0):
AdaptBlockInfo(insts=((802, {'res': '$const802.0'}), (804, {'retval': '$const802.0', 'castval': '$804return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    head_embedding = arg(0, name=head_embedding) ['head_embedding']
    tail_embedding = arg(1, name=tail_embedding) ['tail_embedding']
    head = arg(2, name=head)                 ['head']
    tail = arg(3, name=tail)                 ['tail']
    n_vertices = arg(4, name=n_vertices)     ['n_vertices']
    epochs_per_sample = arg(5, name=epochs_per_sample) ['epochs_per_sample']
    a = arg(6, name=a)                       ['a']
    b = arg(7, name=b)                       ['b']
    rng_state_per_sample = arg(8, name=rng_state_per_sample) ['rng_state_per_sample']
    gamma = arg(9, name=gamma)               ['gamma']
    dim = arg(10, name=dim)                  ['dim']
    move_other = arg(11, name=move_other)    ['move_other']
    alpha = arg(12, name=alpha)              ['alpha']
    epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample) ['epochs_per_negative_sample']
    epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample) ['epoch_of_next_negative_sample']
    epoch_of_next_sample = arg(15, name=epoch_of_next_sample) ['epoch_of_next_sample']
    n = arg(16, name=n)                      ['n']
    densmap_flag = arg(17, name=densmap_flag) ['densmap_flag']
    dens_phi_sum = arg(18, name=dens_phi_sum) ['dens_phi_sum']
    dens_re_sum = arg(19, name=dens_re_sum)  ['dens_re_sum']
    dens_re_cov = arg(20, name=dens_re_cov)  ['dens_re_cov']
    dens_re_std = arg(21, name=dens_re_std)  ['dens_re_std']
    dens_re_mean = arg(22, name=dens_re_mean) ['dens_re_mean']
    dens_lambda = arg(23, name=dens_lambda)  ['dens_lambda']
    dens_R = arg(24, name=dens_R)            ['dens_R']
    dens_mu = arg(25, name=dens_mu)          ['dens_mu']
    dens_mu_tot = arg(26, name=dens_mu_tot)  ['dens_mu_tot']
    $2load_global.0 = global(numba: <module 'numba' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numba\\__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=prange) ['$2load_global.0', '$4load_method.1']
    $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape) ['$8load_attr.3', 'epochs_per_sample']
    $const10.4 = const(int, 0)               ['$const10.4']
    $12binary_subscr.5 = getitem(value=$8load_attr.3, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$8load_attr.3', '$const10.4']
    $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:92)], kws=(), vararg=None, varkwarg=None, target=None) ['$12binary_subscr.5', '$14call_method.6', '$4load_method.1']
    $16get_iter.7 = getiter(value=$14call_method.6) ['$14call_method.6', '$16get_iter.7']
    $phi20.0 = $16get_iter.7                 ['$16get_iter.7', '$phi20.0']
    jump 18                                  []
label 18:
    jump 20                                  []
label 20:
    $20for_iter.1 = iternext(value=$phi20.0) ['$20for_iter.1', '$phi20.0']
    $20for_iter.2 = pair_first(value=$20for_iter.1) ['$20for_iter.1', '$20for_iter.2']
    $20for_iter.3 = pair_second(value=$20for_iter.1) ['$20for_iter.1', '$20for_iter.3']
    $phi22.1 = $20for_iter.2                 ['$20for_iter.2', '$phi22.1']
    branch $20for_iter.3, 22, 802            ['$20for_iter.3']
label 22:
    i = $phi22.1                             ['$phi22.1', 'i']
    $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>) ['$28binary_subscr.4', 'epoch_of_next_sample', 'i']
    $32compare_op.6 = $28binary_subscr.4 <= n ['$28binary_subscr.4', '$32compare_op.6', 'n']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($32compare_op.6, func=bool36, args=(Var($32compare_op.6, layouts.py:93),), kws=(), vararg=None, varkwarg=None, target=None) ['$32compare_op.6', '$36pred', 'bool36']
    branch $36pred, 38, 800                  ['$36pred']
label 38:
    j = getitem(value=head, index=i, fn=<built-in function getitem>) ['head', 'i', 'j']
    k = getitem(value=tail, index=i, fn=<built-in function getitem>) ['i', 'k', 'tail']
    current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>) ['current', 'head_embedding', 'j']
    other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>) ['k', 'other', 'tail_embedding']
    $70load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>)) ['$70load_global.13']
    dist_squared = call $70load_global.13(current, other, func=$70load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_global.13', 'current', 'dist_squared', 'other']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None) ['$82pred', 'bool82', 'densmap_flag']
    branch $82pred, 84, 350                  ['$82pred']
label 84:
    $const84.1 = const(float, 1.0)           ['$const84.1']
    $const86.2 = const(float, 1.0)           ['$const86.2']
    $90load_global.4 = global(pow: <built-in function pow>) ['$90load_global.4']
    $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None) ['$90load_global.4', '$96call_function.7', 'b', 'dist_squared']
    $98binary_multiply.8 = a * $96call_function.7 ['$96call_function.7', '$98binary_multiply.8', 'a']
    $100binary_add.9 = $const86.2 + $98binary_multiply.8 ['$100binary_add.9', '$98binary_multiply.8', '$const86.2']
    phi = $const84.1 / $100binary_add.9      ['$100binary_add.9', '$const84.1', 'phi']
    $110binary_multiply.13 = a * b           ['$110binary_multiply.13', 'a', 'b']
    $112load_global.14 = global(pow: <built-in function pow>) ['$112load_global.14']
    $const118.17 = const(int, 1)             ['$const118.17']
    $120binary_subtract.18 = b - $const118.17 ['$120binary_subtract.18', '$const118.17', 'b']
    $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:100), Var($120binary_subtract.18, layouts.py:105)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_global.14', '$120binary_subtract.18', '$122call_function.19', 'dist_squared']
    $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19 ['$110binary_multiply.13', '$122call_function.19', '$124binary_multiply.20']
    $const126.21 = const(float, 1.0)         ['$const126.21']
    $130load_global.23 = global(pow: <built-in function pow>) ['$130load_global.23']
    $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None) ['$130load_global.23', '$136call_function.26', 'b', 'dist_squared']
    $138binary_multiply.27 = a * $136call_function.26 ['$136call_function.26', '$138binary_multiply.27', 'a']
    $140binary_add.28 = $const126.21 + $138binary_multiply.27 ['$138binary_multiply.27', '$140binary_add.28', '$const126.21']
    dphi_term = $124binary_multiply.20 / $140binary_add.28 ['$124binary_multiply.20', '$140binary_add.28', 'dphi_term']
    $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>) ['$152binary_subscr.33', 'dens_phi_sum', 'k']
    q_jk = phi / $152binary_subscr.33        ['$152binary_subscr.33', 'phi', 'q_jk']
    $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>) ['$164binary_subscr.38', 'dens_phi_sum', 'j']
    q_kj = phi / $164binary_subscr.38        ['$164binary_subscr.38', 'phi', 'q_kj']
    $const172.41 = const(float, 1.0)         ['$const172.41']
    $const176.43 = const(int, 1)             ['$const176.43']
    $180binary_subtract.45 = $const176.43 - phi ['$180binary_subtract.45', '$const176.43', 'phi']
    $182binary_multiply.46 = b * $180binary_subtract.45 ['$180binary_subtract.45', '$182binary_multiply.46', 'b']
    $184binary_subtract.47 = $const172.41 - $182binary_multiply.46 ['$182binary_multiply.46', '$184binary_subtract.47', '$const172.41']
    $186load_global.48 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$186load_global.48']
    $188load_method.49 = getattr(value=$186load_global.48, attr=exp) ['$186load_global.48', '$188load_method.49']
    $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>) ['$194binary_subscr.52', 'dens_re_sum', 'k']
    $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:112)], kws=(), vararg=None, varkwarg=None, target=None) ['$188load_method.49', '$194binary_subscr.52', '$196call_method.53']
    $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53 ['$184binary_subtract.47', '$196call_method.53', '$198binary_true_divide.54']
    $202binary_add.56 = $198binary_true_divide.54 + dphi_term ['$198binary_true_divide.54', '$202binary_add.56', 'dphi_term']
    drk = q_jk * $202binary_add.56           ['$202binary_add.56', 'drk', 'q_jk']
    $const210.59 = const(float, 1.0)         ['$const210.59']
    $const214.61 = const(int, 1)             ['$const214.61']
    $218binary_subtract.63 = $const214.61 - phi ['$218binary_subtract.63', '$const214.61', 'phi']
    $220binary_multiply.64 = b * $218binary_subtract.63 ['$218binary_subtract.63', '$220binary_multiply.64', 'b']
    $222binary_subtract.65 = $const210.59 - $220binary_multiply.64 ['$220binary_multiply.64', '$222binary_subtract.65', '$const210.59']
    $224load_global.66 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$224load_global.66']
    $226load_method.67 = getattr(value=$224load_global.66, attr=exp) ['$224load_global.66', '$226load_method.67']
    $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>) ['$232binary_subscr.70', 'dens_re_sum', 'j']
    $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:115)], kws=(), vararg=None, varkwarg=None, target=None) ['$226load_method.67', '$232binary_subscr.70', '$234call_method.71']
    $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71 ['$222binary_subtract.65', '$234call_method.71', '$236binary_true_divide.72']
    $240binary_add.74 = $236binary_true_divide.72 + dphi_term ['$236binary_true_divide.72', '$240binary_add.74', 'dphi_term']
    drj = q_kj * $240binary_add.74           ['$240binary_add.74', 'drj', 'q_kj']
    re_std_sq = dens_re_std * dens_re_std    ['dens_re_std', 'dens_re_std', 're_std_sq']
    $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>) ['$258binary_subscr.81', 'dens_R', 'k']
    $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>) ['$266binary_subscr.85', 'dens_re_sum', 'k']
    $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean ['$266binary_subscr.85', '$270binary_subtract.87', 'dens_re_mean']
    $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87 ['$270binary_subtract.87', '$272binary_multiply.88', 'dens_re_cov']
    $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq ['$272binary_multiply.88', '$276binary_true_divide.90', 're_std_sq']
    weight_k = $258binary_subscr.81 - $276binary_true_divide.90 ['$258binary_subscr.81', '$276binary_true_divide.90', 'weight_k']
    $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>) ['$286binary_subscr.94', 'dens_R', 'j']
    $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>) ['$294binary_subscr.98', 'dens_re_sum', 'j']
    $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean ['$294binary_subscr.98', '$298binary_subtract.100', 'dens_re_mean']
    $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100 ['$298binary_subtract.100', '$300binary_multiply.101', 'dens_re_cov']
    $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq ['$300binary_multiply.101', '$304binary_true_divide.103', 're_std_sq']
    weight_j = $286binary_subscr.94 - $304binary_true_divide.103 ['$286binary_subscr.94', '$304binary_true_divide.103', 'weight_j']
    $314binary_multiply.107 = dens_lambda * dens_mu_tot ['$314binary_multiply.107', 'dens_lambda', 'dens_mu_tot']
    $320binary_multiply.110 = weight_k * drk ['$320binary_multiply.110', 'drk', 'weight_k']
    $326binary_multiply.113 = weight_j * drj ['$326binary_multiply.113', 'drj', 'weight_j']
    $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113 ['$320binary_multiply.110', '$326binary_multiply.113', '$328binary_add.114']
    $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114 ['$314binary_multiply.107', '$328binary_add.114', '$330binary_multiply.115']
    $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>) ['$336binary_subscr.118', 'dens_mu', 'i']
    $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std ['$336binary_subscr.118', '$340binary_multiply.120', 'dens_re_std']
    $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120 ['$330binary_multiply.115', '$340binary_multiply.120', '$342binary_true_divide.121']
    grad_cor_coeff = $342binary_true_divide.121 / n_vertices ['$342binary_true_divide.121', 'grad_cor_coeff', 'n_vertices']
    jump 350                                 []
label 350:
    $const352.2 = const(float, 0.0)          ['$const352.2']
    $354compare_op.3 = dist_squared > $const352.2 ['$354compare_op.3', '$const352.2', 'dist_squared']
    bool356 = global(bool: <class 'bool'>)   ['bool356']
    $356pred = call bool356($354compare_op.3, func=bool356, args=(Var($354compare_op.3, layouts.py:136),), kws=(), vararg=None, varkwarg=None, target=None) ['$354compare_op.3', '$356pred', 'bool356']
    branch $356pred, 358, 408                ['$356pred']
label 358:
    $const358.1 = const(float, -2.0)         ['$const358.1']
    $362binary_multiply.3 = $const358.1 * a  ['$362binary_multiply.3', '$const358.1', 'a']
    $366binary_multiply.5 = $362binary_multiply.3 * b ['$362binary_multiply.3', '$366binary_multiply.5', 'b']
    $368load_global.6 = global(pow: <built-in function pow>) ['$368load_global.6']
    $const374.9 = const(float, 1.0)          ['$const374.9']
    $376binary_subtract.10 = b - $const374.9 ['$376binary_subtract.10', '$const374.9', 'b']
    $378call_function.11 = call $368load_global.6(dist_squared, $376binary_subtract.10, func=$368load_global.6, args=[Var(dist_squared, layouts.py:100), Var($376binary_subtract.10, layouts.py:137)], kws=(), vararg=None, varkwarg=None, target=None) ['$368load_global.6', '$376binary_subtract.10', '$378call_function.11', 'dist_squared']
    grad_coeff = $366binary_multiply.5 * $378call_function.11 ['$366binary_multiply.5', '$378call_function.11', 'grad_coeff']
    $388load_global.15 = global(pow: <built-in function pow>) ['$388load_global.15']
    $394call_function.18 = call $388load_global.15(dist_squared, b, func=$388load_global.15, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None) ['$388load_global.15', '$394call_function.18', 'b', 'dist_squared']
    $396binary_multiply.19 = a * $394call_function.18 ['$394call_function.18', '$396binary_multiply.19', 'a']
    $const398.20 = const(float, 1.0)         ['$const398.20']
    $400binary_add.21 = $396binary_multiply.19 + $const398.20 ['$396binary_multiply.19', '$400binary_add.21', '$const398.20']
    $402inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$400binary_add.21, static_lhs=Undefined, static_rhs=Undefined) ['$400binary_add.21', '$402inplace_true_divide.22', 'grad_coeff']
    grad_coeff = $402inplace_true_divide.22  ['$402inplace_true_divide.22', 'grad_coeff']
    jump 412                                 []
label 408:
    grad_coeff = const(float, 0.0)           ['grad_coeff']
    jump 412                                 []
label 412:
    $412load_global.1 = global(range: <class 'range'>) ['$412load_global.1']
    $416call_function.3 = call $412load_global.1(dim, func=$412load_global.1, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None) ['$412load_global.1', '$416call_function.3', 'dim']
    $418get_iter.4 = getiter(value=$416call_function.3) ['$416call_function.3', '$418get_iter.4']
    $phi420.1 = $418get_iter.4               ['$418get_iter.4', '$phi420.1']
    jump 420                                 []
label 420:
    $420for_iter.2 = iternext(value=$phi420.1) ['$420for_iter.2', '$phi420.1']
    $420for_iter.3 = pair_first(value=$420for_iter.2) ['$420for_iter.2', '$420for_iter.3']
    $420for_iter.4 = pair_second(value=$420for_iter.2) ['$420for_iter.2', '$420for_iter.4']
    $phi422.2 = $420for_iter.3               ['$420for_iter.3', '$phi422.2']
    branch $420for_iter.4, 422, 534          ['$420for_iter.4']
label 422:
    d = $phi422.2                            ['$phi422.2', 'd']
    $424load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>)) ['$424load_global.3']
    $432binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>) ['$432binary_subscr.7', 'current', 'd']
    $438binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>) ['$438binary_subscr.10', 'd', 'other']
    $440binary_subtract.11 = $432binary_subscr.7 - $438binary_subscr.10 ['$432binary_subscr.7', '$438binary_subscr.10', '$440binary_subtract.11']
    $442binary_multiply.12 = grad_coeff * $440binary_subtract.11 ['$440binary_subtract.11', '$442binary_multiply.12', 'grad_coeff']
    grad_d = call $424load_global.3($442binary_multiply.12, func=$424load_global.3, args=[Var($442binary_multiply.12, layouts.py:143)], kws=(), vararg=None, varkwarg=None, target=None) ['$424load_global.3', '$442binary_multiply.12', 'grad_d']
    bool450 = global(bool: <class 'bool'>)   ['bool450']
    $450pred = call bool450(densmap_flag, func=bool450, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None) ['$450pred', 'bool450', 'densmap_flag']
    branch $450pred, 452, 484                ['$450pred']
label 452:
    $454load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>)) ['$454load_global.3']
    $const456.4 = const(int, 2)              ['$const456.4']
    $460binary_multiply.6 = $const456.4 * grad_cor_coeff ['$460binary_multiply.6', '$const456.4', 'grad_cor_coeff']
    $466binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>) ['$466binary_subscr.9', 'current', 'd']
    $472binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>) ['$472binary_subscr.12', 'd', 'other']
    $474binary_subtract.13 = $466binary_subscr.9 - $472binary_subscr.12 ['$466binary_subscr.9', '$472binary_subscr.12', '$474binary_subtract.13']
    $476binary_multiply.14 = $460binary_multiply.6 * $474binary_subtract.13 ['$460binary_multiply.6', '$474binary_subtract.13', '$476binary_multiply.14']
    $478call_function.15 = call $454load_global.3($476binary_multiply.14, func=$454load_global.3, args=[Var($476binary_multiply.14, layouts.py:148)], kws=(), vararg=None, varkwarg=None, target=None) ['$454load_global.3', '$476binary_multiply.14', '$478call_function.15']
    $480inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$478call_function.15, static_lhs=Undefined, static_rhs=Undefined) ['$478call_function.15', '$480inplace_add.16', 'grad_d']
    grad_d = $480inplace_add.16              ['$480inplace_add.16', 'grad_d']
    jump 484                                 []
label 484:
    $490binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>) ['$490binary_subscr.6', 'current', 'd']
    $496binary_multiply.9 = grad_d * alpha   ['$496binary_multiply.9', 'alpha', 'grad_d']
    $498inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$490binary_subscr.6, rhs=$496binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined) ['$490binary_subscr.6', '$496binary_multiply.9', '$498inplace_add.10']
    current[d] = $498inplace_add.10          ['$498inplace_add.10', 'current', 'd']
    bool508 = global(bool: <class 'bool'>)   ['bool508']
    $508pred = call bool508(move_other, func=bool508, args=(Var(move_other, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None) ['$508pred', 'bool508', 'move_other']
    branch $508pred, 510, 532                ['$508pred']
label 510:
    $516binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>) ['$516binary_subscr.6', 'd', 'other']
    $520unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d) ['$520unary_negative.8', 'grad_d']
    $524binary_multiply.10 = $520unary_negative.8 * alpha ['$520unary_negative.8', '$524binary_multiply.10', 'alpha']
    $526inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$516binary_subscr.6, rhs=$524binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined) ['$516binary_subscr.6', '$524binary_multiply.10', '$526inplace_add.11']
    other[d] = $526inplace_add.11            ['$526inplace_add.11', 'd', 'other']
    jump 532                                 []
label 532:
    jump 420                                 []
label 534:
    $540binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>) ['$540binary_subscr.5', 'epoch_of_next_sample', 'i']
    $546binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>) ['$546binary_subscr.8', 'epochs_per_sample', 'i']
    $548inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$540binary_subscr.5, rhs=$546binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined) ['$540binary_subscr.5', '$546binary_subscr.8', '$548inplace_add.9']
    epoch_of_next_sample[i] = $548inplace_add.9 ['$548inplace_add.9', 'epoch_of_next_sample', 'i']
    $554load_global.10 = global(int: <class 'int'>) ['$554load_global.10']
    $562binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>) ['$562binary_subscr.14', 'epoch_of_next_negative_sample', 'i']
    $564binary_subtract.15 = n - $562binary_subscr.14 ['$562binary_subscr.14', '$564binary_subtract.15', 'n']
    $570binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>) ['$570binary_subscr.18', 'epochs_per_negative_sample', 'i']
    $572binary_true_divide.19 = $564binary_subtract.15 / $570binary_subscr.18 ['$564binary_subtract.15', '$570binary_subscr.18', '$572binary_true_divide.19']
    n_neg_samples = call $554load_global.10($572binary_true_divide.19, func=$554load_global.10, args=[Var($572binary_true_divide.19, layouts.py:157)], kws=(), vararg=None, varkwarg=None, target=None) ['$554load_global.10', '$572binary_true_divide.19', 'n_neg_samples']
    $578load_global.21 = global(range: <class 'range'>) ['$578load_global.21']
    $582call_function.23 = call $578load_global.21(n_neg_samples, func=$578load_global.21, args=[Var(n_neg_samples, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None) ['$578load_global.21', '$582call_function.23', 'n_neg_samples']
    $584get_iter.24 = getiter(value=$582call_function.23) ['$582call_function.23', '$584get_iter.24']
    $phi586.1 = $584get_iter.24              ['$584get_iter.24', '$phi586.1']
    jump 586                                 []
label 586:
    $586for_iter.2 = iternext(value=$phi586.1) ['$586for_iter.2', '$phi586.1']
    $586for_iter.3 = pair_first(value=$586for_iter.2) ['$586for_iter.2', '$586for_iter.3']
    $586for_iter.4 = pair_second(value=$586for_iter.2) ['$586for_iter.2', '$586for_iter.4']
    $phi588.2 = $586for_iter.3               ['$586for_iter.3', '$phi588.2']
    branch $586for_iter.4, 588, 776          ['$586for_iter.4']
label 588:
    p = $phi588.2                            ['$phi588.2', 'p']
    $590load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x0000017A062CD5A0>)) ['$590load_global.3']
    $596binary_subscr.6 = getitem(value=rng_state_per_sample, index=j, fn=<built-in function getitem>) ['$596binary_subscr.6', 'j', 'rng_state_per_sample']
    $598call_function.7 = call $590load_global.3($596binary_subscr.6, func=$590load_global.3, args=[Var($596binary_subscr.6, layouts.py:161)], kws=(), vararg=None, varkwarg=None, target=None) ['$590load_global.3', '$596binary_subscr.6', '$598call_function.7']
    k = $598call_function.7 % n_vertices     ['$598call_function.7', 'k', 'n_vertices']
    other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>) ['k', 'other', 'tail_embedding']
    $614load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>)) ['$614load_global.13']
    dist_squared = call $614load_global.13(current, other, func=$614load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None) ['$614load_global.13', 'current', 'dist_squared', 'other']
    $const626.18 = const(float, 0.0)         ['$const626.18']
    $628compare_op.19 = dist_squared > $const626.18 ['$628compare_op.19', '$const626.18', 'dist_squared']
    bool632 = global(bool: <class 'bool'>)   ['bool632']
    $632pred = call bool632($628compare_op.19, func=bool632, args=(Var($628compare_op.19, layouts.py:167),), kws=(), vararg=None, varkwarg=None, target=None) ['$628compare_op.19', '$632pred', 'bool632']
    branch $632pred, 634, 678                ['$632pred']
label 634:
    $const634.2 = const(float, 2.0)          ['$const634.2']
    $638binary_multiply.4 = $const634.2 * gamma ['$638binary_multiply.4', '$const634.2', 'gamma']
    grad_coeff = $638binary_multiply.4 * b   ['$638binary_multiply.4', 'b', 'grad_coeff']
    $const648.8 = const(float, 0.001)        ['$const648.8']
    $652binary_add.10 = $const648.8 + dist_squared ['$652binary_add.10', '$const648.8', 'dist_squared']
    $656load_global.12 = global(pow: <built-in function pow>) ['$656load_global.12']
    $662call_function.15 = call $656load_global.12(dist_squared, b, func=$656load_global.12, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None) ['$656load_global.12', '$662call_function.15', 'b', 'dist_squared']
    $664binary_multiply.16 = a * $662call_function.15 ['$662call_function.15', '$664binary_multiply.16', 'a']
    $const666.17 = const(int, 1)             ['$const666.17']
    $668binary_add.18 = $664binary_multiply.16 + $const666.17 ['$664binary_multiply.16', '$668binary_add.18', '$const666.17']
    $670binary_multiply.19 = $652binary_add.10 * $668binary_add.18 ['$652binary_add.10', '$668binary_add.18', '$670binary_multiply.19']
    $672inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$670binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined) ['$670binary_multiply.19', '$672inplace_true_divide.20', 'grad_coeff']
    grad_coeff = $672inplace_true_divide.20  ['$672inplace_true_divide.20', 'grad_coeff']
    jump 696                                 []
label 678:
    $682compare_op.4 = j == k                ['$682compare_op.4', 'j', 'k']
    bool686 = global(bool: <class 'bool'>)   ['bool686']
    $686pred = call bool686($682compare_op.4, func=bool686, args=(Var($682compare_op.4, layouts.py:172),), kws=(), vararg=None, varkwarg=None, target=None) ['$682compare_op.4', '$686pred', 'bool686']
    branch $686pred, 688, 692                ['$686pred']
label 688:
    jump 586                                 []
label 692:
    grad_coeff = const(float, 0.0)           ['grad_coeff']
    jump 696                                 []
label 696:
    $696load_global.2 = global(range: <class 'range'>) ['$696load_global.2']
    $700call_function.4 = call $696load_global.2(dim, func=$696load_global.2, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None) ['$696load_global.2', '$700call_function.4', 'dim']
    $702get_iter.5 = getiter(value=$700call_function.4) ['$700call_function.4', '$702get_iter.5']
    $phi704.2 = $702get_iter.5               ['$702get_iter.5', '$phi704.2']
    jump 704                                 []
label 704:
    $704for_iter.3 = iternext(value=$phi704.2) ['$704for_iter.3', '$phi704.2']
    $704for_iter.4 = pair_first(value=$704for_iter.3) ['$704for_iter.3', '$704for_iter.4']
    $704for_iter.5 = pair_second(value=$704for_iter.3) ['$704for_iter.3', '$704for_iter.5']
    $phi706.3 = $704for_iter.4               ['$704for_iter.4', '$phi706.3']
    branch $704for_iter.5, 706, 772          ['$704for_iter.5']
label 706:
    d = $phi706.3                            ['$phi706.3', 'd']
    $const710.5 = const(float, 0.0)          ['$const710.5']
    $712compare_op.6 = grad_coeff > $const710.5 ['$712compare_op.6', '$const710.5', 'grad_coeff']
    bool716 = global(bool: <class 'bool'>)   ['bool716']
    $716pred = call bool716($712compare_op.6, func=bool716, args=(Var($712compare_op.6, layouts.py:178),), kws=(), vararg=None, varkwarg=None, target=None) ['$712compare_op.6', '$716pred', 'bool716']
    branch $716pred, 718, 744                ['$716pred']
label 718:
    $718load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>)) ['$718load_global.3']
    $726binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>) ['$726binary_subscr.7', 'current', 'd']
    $732binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>) ['$732binary_subscr.10', 'd', 'other']
    $734binary_subtract.11 = $726binary_subscr.7 - $732binary_subscr.10 ['$726binary_subscr.7', '$732binary_subscr.10', '$734binary_subtract.11']
    $736binary_multiply.12 = grad_coeff * $734binary_subtract.11 ['$734binary_subtract.11', '$736binary_multiply.12', 'grad_coeff']
    grad_d = call $718load_global.3($736binary_multiply.12, func=$718load_global.3, args=[Var($736binary_multiply.12, layouts.py:179)], kws=(), vararg=None, varkwarg=None, target=None) ['$718load_global.3', '$736binary_multiply.12', 'grad_d']
    jump 748                                 []
label 744:
    grad_d = const(int, 0)                   ['grad_d']
    jump 748                                 []
label 748:
    $754binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>) ['$754binary_subscr.7', 'current', 'd']
    $760binary_multiply.10 = grad_d * alpha  ['$760binary_multiply.10', 'alpha', 'grad_d']
    $762inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$754binary_subscr.7, rhs=$760binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined) ['$754binary_subscr.7', '$760binary_multiply.10', '$762inplace_add.11']
    current[d] = $762inplace_add.11          ['$762inplace_add.11', 'current', 'd']
    jump 704                                 []
label 772:
    jump 586                                 []
label 776:
    $782binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>) ['$782binary_subscr.5', 'epoch_of_next_negative_sample', 'i']
    $790binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>) ['$790binary_subscr.9', 'epochs_per_negative_sample', 'i']
    $792binary_multiply.10 = n_neg_samples * $790binary_subscr.9 ['$790binary_subscr.9', '$792binary_multiply.10', 'n_neg_samples']
    $794inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$782binary_subscr.5, rhs=$792binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined) ['$782binary_subscr.5', '$792binary_multiply.10', '$794inplace_add.11']
    epoch_of_next_negative_sample[i] = $794inplace_add.11 ['$794inplace_add.11', 'epoch_of_next_negative_sample', 'i']
    jump 800                                 []
label 800:
    jump 18                                  []
label 802:
    $const802.0 = const(NoneType, None)      ['$const802.0']
    $804return_value.1 = cast(value=$const802.0) ['$804return_value.1', '$const802.0']
    return $804return_value.1                ['$804return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: head_embedding = arg(0, name=head_embedding)
DEBUG:numba.core.ssa:on stmt: tail_embedding = arg(1, name=tail_embedding)
DEBUG:numba.core.ssa:on stmt: head = arg(2, name=head)
DEBUG:numba.core.ssa:on stmt: tail = arg(3, name=tail)
DEBUG:numba.core.ssa:on stmt: n_vertices = arg(4, name=n_vertices)
DEBUG:numba.core.ssa:on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
DEBUG:numba.core.ssa:on stmt: a = arg(6, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(7, name=b)
DEBUG:numba.core.ssa:on stmt: rng_state_per_sample = arg(8, name=rng_state_per_sample)
DEBUG:numba.core.ssa:on stmt: gamma = arg(9, name=gamma)
DEBUG:numba.core.ssa:on stmt: dim = arg(10, name=dim)
DEBUG:numba.core.ssa:on stmt: move_other = arg(11, name=move_other)
DEBUG:numba.core.ssa:on stmt: alpha = arg(12, name=alpha)
DEBUG:numba.core.ssa:on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
DEBUG:numba.core.ssa:on stmt: n = arg(16, name=n)
DEBUG:numba.core.ssa:on stmt: densmap_flag = arg(17, name=densmap_flag)
DEBUG:numba.core.ssa:on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_sum = arg(19, name=dens_re_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_cov = arg(20, name=dens_re_cov)
DEBUG:numba.core.ssa:on stmt: dens_re_std = arg(21, name=dens_re_std)
DEBUG:numba.core.ssa:on stmt: dens_re_mean = arg(22, name=dens_re_mean)
DEBUG:numba.core.ssa:on stmt: dens_lambda = arg(23, name=dens_lambda)
DEBUG:numba.core.ssa:on stmt: dens_R = arg(24, name=dens_R)
DEBUG:numba.core.ssa:on stmt: dens_mu = arg(25, name=dens_mu)
DEBUG:numba.core.ssa:on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numba: <module 'numba' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numba\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:92)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
DEBUG:numba.core.ssa:on stmt: $phi20.0 = $16get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block analysis pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block analysis pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: $20for_iter.1 = iternext(value=$phi20.0)
DEBUG:numba.core.ssa:on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi22.1 = $20for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $20for_iter.3, 22, 802
DEBUG:numba.core.ssa:==== SSA block analysis pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: i = $phi22.1
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($32compare_op.6, func=bool36, args=(Var($32compare_op.6, layouts.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $36pred, 38, 800
DEBUG:numba.core.ssa:==== SSA block analysis pass on 38
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $70load_global.13(current, other, func=$70load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 350
DEBUG:numba.core.ssa:==== SSA block analysis pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: $const84.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const86.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $90load_global.4 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_multiply.8 = a * $96call_function.7
DEBUG:numba.core.ssa:on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
DEBUG:numba.core.ssa:on stmt: phi = $const84.1 / $100binary_add.9
DEBUG:numba.core.ssa:on stmt: $110binary_multiply.13 = a * b
DEBUG:numba.core.ssa:on stmt: $112load_global.14 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const118.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subtract.18 = b - $const118.17
DEBUG:numba.core.ssa:on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:100), Var($120binary_subtract.18, layouts.py:105)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
DEBUG:numba.core.ssa:on stmt: $const126.21 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $130load_global.23 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_multiply.27 = a * $136call_function.26
DEBUG:numba.core.ssa:on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
DEBUG:numba.core.ssa:on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
DEBUG:numba.core.ssa:on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_jk = phi / $152binary_subscr.33
DEBUG:numba.core.ssa:on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_kj = phi / $164binary_subscr.38
DEBUG:numba.core.ssa:on stmt: $const172.41 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const176.43 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180binary_subtract.45 = $const176.43 - phi
DEBUG:numba.core.ssa:on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
DEBUG:numba.core.ssa:on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
DEBUG:numba.core.ssa:on stmt: $186load_global.48 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:112)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
DEBUG:numba.core.ssa:on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
DEBUG:numba.core.ssa:on stmt: drk = q_jk * $202binary_add.56
DEBUG:numba.core.ssa:on stmt: $const210.59 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const214.61 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.63 = $const214.61 - phi
DEBUG:numba.core.ssa:on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
DEBUG:numba.core.ssa:on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
DEBUG:numba.core.ssa:on stmt: $224load_global.66 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
DEBUG:numba.core.ssa:on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
DEBUG:numba.core.ssa:on stmt: drj = q_kj * $240binary_add.74
DEBUG:numba.core.ssa:on stmt: re_std_sq = dens_re_std * dens_re_std
DEBUG:numba.core.ssa:on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
DEBUG:numba.core.ssa:on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
DEBUG:numba.core.ssa:on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
DEBUG:numba.core.ssa:on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
DEBUG:numba.core.ssa:on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
DEBUG:numba.core.ssa:on stmt: $320binary_multiply.110 = weight_k * drk
DEBUG:numba.core.ssa:on stmt: $326binary_multiply.113 = weight_j * drj
DEBUG:numba.core.ssa:on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
DEBUG:numba.core.ssa:on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
DEBUG:numba.core.ssa:on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
DEBUG:numba.core.ssa:on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
DEBUG:numba.core.ssa:on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block analysis pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: $const352.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $354compare_op.3 = dist_squared > $const352.2
DEBUG:numba.core.ssa:on stmt: bool356 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $356pred = call bool356($354compare_op.3, func=bool356, args=(Var($354compare_op.3, layouts.py:136),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $356pred, 358, 408
DEBUG:numba.core.ssa:==== SSA block analysis pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: $const358.1 = const(float, -2.0)
DEBUG:numba.core.ssa:on stmt: $362binary_multiply.3 = $const358.1 * a
DEBUG:numba.core.ssa:on stmt: $366binary_multiply.5 = $362binary_multiply.3 * b
DEBUG:numba.core.ssa:on stmt: $368load_global.6 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const374.9 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.10 = b - $const374.9
DEBUG:numba.core.ssa:on stmt: $378call_function.11 = call $368load_global.6(dist_squared, $376binary_subtract.10, func=$368load_global.6, args=[Var(dist_squared, layouts.py:100), Var($376binary_subtract.10, layouts.py:137)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $366binary_multiply.5 * $378call_function.11
DEBUG:numba.core.ssa:on stmt: $388load_global.15 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $394call_function.18 = call $388load_global.15(dist_squared, b, func=$388load_global.15, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $396binary_multiply.19 = a * $394call_function.18
DEBUG:numba.core.ssa:on stmt: $const398.20 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $400binary_add.21 = $396binary_multiply.19 + $const398.20
DEBUG:numba.core.ssa:on stmt: $402inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$400binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $402inplace_true_divide.22
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block analysis pass on 408
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: grad_coeff = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block analysis pass on 412
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: $412load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $416call_function.3 = call $412load_global.1(dim, func=$412load_global.1, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $418get_iter.4 = getiter(value=$416call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi420.1 = $418get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block analysis pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: $420for_iter.2 = iternext(value=$phi420.1)
DEBUG:numba.core.ssa:on stmt: $420for_iter.3 = pair_first(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $420for_iter.4 = pair_second(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi422.2 = $420for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $420for_iter.4, 422, 534
DEBUG:numba.core.ssa:==== SSA block analysis pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: d = $phi422.2
DEBUG:numba.core.ssa:on stmt: $424load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $432binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $438binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $440binary_subtract.11 = $432binary_subscr.7 - $438binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $442binary_multiply.12 = grad_coeff * $440binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $424load_global.3($442binary_multiply.12, func=$424load_global.3, args=[Var($442binary_multiply.12, layouts.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool450 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $450pred = call bool450(densmap_flag, func=bool450, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $450pred, 452, 484
DEBUG:numba.core.ssa:==== SSA block analysis pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: $454load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $const456.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $460binary_multiply.6 = $const456.4 * grad_cor_coeff
DEBUG:numba.core.ssa:on stmt: $466binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $474binary_subtract.13 = $466binary_subscr.9 - $472binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $476binary_multiply.14 = $460binary_multiply.6 * $474binary_subtract.13
DEBUG:numba.core.ssa:on stmt: $478call_function.15 = call $454load_global.3($476binary_multiply.14, func=$454load_global.3, args=[Var($476binary_multiply.14, layouts.py:148)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$478call_function.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_d = $480inplace_add.16
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block analysis pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: $490binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $496binary_multiply.9 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $498inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$490binary_subscr.6, rhs=$496binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $498inplace_add.10
DEBUG:numba.core.ssa:on stmt: bool508 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $508pred = call bool508(move_other, func=bool508, args=(Var(move_other, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $508pred, 510, 532
DEBUG:numba.core.ssa:==== SSA block analysis pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $520unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
DEBUG:numba.core.ssa:on stmt: $524binary_multiply.10 = $520unary_negative.8 * alpha
DEBUG:numba.core.ssa:on stmt: $526inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$516binary_subscr.6, rhs=$524binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: other[d] = $526inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 532
DEBUG:numba.core.ssa:==== SSA block analysis pass on 532
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block analysis pass on 534
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: $540binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $546binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $548inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$540binary_subscr.5, rhs=$546binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample[i] = $548inplace_add.9
DEBUG:numba.core.ssa:on stmt: $554load_global.10 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $564binary_subtract.15 = n - $562binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $570binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $572binary_true_divide.19 = $564binary_subtract.15 / $570binary_subscr.18
DEBUG:numba.core.ssa:on stmt: n_neg_samples = call $554load_global.10($572binary_true_divide.19, func=$554load_global.10, args=[Var($572binary_true_divide.19, layouts.py:157)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $578load_global.21 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $582call_function.23 = call $578load_global.21(n_neg_samples, func=$578load_global.21, args=[Var(n_neg_samples, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $584get_iter.24 = getiter(value=$582call_function.23)
DEBUG:numba.core.ssa:on stmt: $phi586.1 = $584get_iter.24
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:==== SSA block analysis pass on 586
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: $586for_iter.2 = iternext(value=$phi586.1)
DEBUG:numba.core.ssa:on stmt: $586for_iter.3 = pair_first(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $586for_iter.4 = pair_second(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi588.2 = $586for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $586for_iter.4, 588, 776
DEBUG:numba.core.ssa:==== SSA block analysis pass on 588
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: p = $phi588.2
DEBUG:numba.core.ssa:on stmt: $590load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x0000017A062CD5A0>))
DEBUG:numba.core.ssa:on stmt: $596binary_subscr.6 = getitem(value=rng_state_per_sample, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $598call_function.7 = call $590load_global.3($596binary_subscr.6, func=$590load_global.3, args=[Var($596binary_subscr.6, layouts.py:161)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: k = $598call_function.7 % n_vertices
DEBUG:numba.core.ssa:on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $614load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $614load_global.13(current, other, func=$614load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const626.18 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $628compare_op.19 = dist_squared > $const626.18
DEBUG:numba.core.ssa:on stmt: bool632 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $632pred = call bool632($628compare_op.19, func=bool632, args=(Var($628compare_op.19, layouts.py:167),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $632pred, 634, 678
DEBUG:numba.core.ssa:==== SSA block analysis pass on 634
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: $const634.2 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $638binary_multiply.4 = $const634.2 * gamma
DEBUG:numba.core.ssa:on stmt: grad_coeff = $638binary_multiply.4 * b
DEBUG:numba.core.ssa:on stmt: $const648.8 = const(float, 0.001)
DEBUG:numba.core.ssa:on stmt: $652binary_add.10 = $const648.8 + dist_squared
DEBUG:numba.core.ssa:on stmt: $656load_global.12 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $662call_function.15 = call $656load_global.12(dist_squared, b, func=$656load_global.12, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $664binary_multiply.16 = a * $662call_function.15
DEBUG:numba.core.ssa:on stmt: $const666.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $668binary_add.18 = $664binary_multiply.16 + $const666.17
DEBUG:numba.core.ssa:on stmt: $670binary_multiply.19 = $652binary_add.10 * $668binary_add.18
DEBUG:numba.core.ssa:on stmt: $672inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$670binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $672inplace_true_divide.20
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block analysis pass on 678
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: $682compare_op.4 = j == k
DEBUG:numba.core.ssa:on stmt: bool686 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $686pred = call bool686($682compare_op.4, func=bool686, args=(Var($682compare_op.4, layouts.py:172),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $686pred, 688, 692
DEBUG:numba.core.ssa:==== SSA block analysis pass on 688
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block analysis pass on 692
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: grad_coeff = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block analysis pass on 696
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: $696load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $700call_function.4 = call $696load_global.2(dim, func=$696load_global.2, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $702get_iter.5 = getiter(value=$700call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi704.2 = $702get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block analysis pass on 704
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: $704for_iter.3 = iternext(value=$phi704.2)
DEBUG:numba.core.ssa:on stmt: $704for_iter.4 = pair_first(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $704for_iter.5 = pair_second(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi706.3 = $704for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $704for_iter.5, 706, 772
DEBUG:numba.core.ssa:==== SSA block analysis pass on 706
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: d = $phi706.3
DEBUG:numba.core.ssa:on stmt: $const710.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $712compare_op.6 = grad_coeff > $const710.5
DEBUG:numba.core.ssa:on stmt: bool716 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $716pred = call bool716($712compare_op.6, func=bool716, args=(Var($712compare_op.6, layouts.py:178),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $716pred, 718, 744
DEBUG:numba.core.ssa:==== SSA block analysis pass on 718
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: $718load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $726binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $732binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subtract.11 = $726binary_subscr.7 - $732binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $736binary_multiply.12 = grad_coeff * $734binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $718load_global.3($736binary_multiply.12, func=$718load_global.3, args=[Var($736binary_multiply.12, layouts.py:179)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block analysis pass on 744
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: grad_d = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block analysis pass on 748
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: $754binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $760binary_multiply.10 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $762inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$754binary_subscr.7, rhs=$760binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $762inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block analysis pass on 772
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block analysis pass on 776
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: $782binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $790binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $792binary_multiply.10 = n_neg_samples * $790binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $794inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$782binary_subscr.5, rhs=$792binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample[i] = $794inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 800
DEBUG:numba.core.ssa:==== SSA block analysis pass on 800
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block analysis pass on 802
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: $const802.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $804return_value.1 = cast(value=$const802.0)
DEBUG:numba.core.ssa:on stmt: return $804return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 803
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6C568F0>
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100binary_add.9': [(<numba.core.ir.Assign object at 0x0000017AA6C17880>,
                                   84)],
             '$110binary_multiply.13': [(<numba.core.ir.Assign object at 0x0000017AA6C17EE0>,
                                         84)],
             '$112load_global.14': [(<numba.core.ir.Assign object at 0x0000017AA6C1C070>,
                                     84)],
             '$120binary_subtract.18': [(<numba.core.ir.Assign object at 0x0000017AA6C1C5E0>,
                                         84)],
             '$122call_function.19': [(<numba.core.ir.Assign object at 0x0000017AA6C1C790>,
                                       84)],
             '$124binary_multiply.20': [(<numba.core.ir.Assign object at 0x0000017AA6C1C8E0>,
                                         84)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000017AA6C6B1C0>,
                                     0)],
             '$130load_global.23': [(<numba.core.ir.Assign object at 0x0000017AA6C1CCD0>,
                                     84)],
             '$136call_function.26': [(<numba.core.ir.Assign object at 0x0000017AA6C1D0F0>,
                                       84)],
             '$138binary_multiply.27': [(<numba.core.ir.Assign object at 0x0000017AA6C1D240>,
                                         84)],
             '$140binary_add.28': [(<numba.core.ir.Assign object at 0x0000017AA6C1D3C0>,
                                    84)],
             '$14call_method.6': [(<numba.core.ir.Assign object at 0x0000017AA6BD3FA0>,
                                   0)],
             '$152binary_subscr.33': [(<numba.core.ir.Assign object at 0x0000017AA6C1DB40>,
                                       84)],
             '$164binary_subscr.38': [(<numba.core.ir.Assign object at 0x0000017AA6C1E2C0>,
                                       84)],
             '$16get_iter.7': [(<numba.core.ir.Assign object at 0x0000017AA6C140D0>,
                                0)],
             '$180binary_subtract.45': [(<numba.core.ir.Assign object at 0x0000017AA6C1ED40>,
                                         84)],
             '$182binary_multiply.46': [(<numba.core.ir.Assign object at 0x0000017AA6C1EEC0>,
                                         84)],
             '$184binary_subtract.47': [(<numba.core.ir.Assign object at 0x0000017AA6C1F040>,
                                         84)],
             '$186load_global.48': [(<numba.core.ir.Assign object at 0x0000017AA6C1F190>,
                                     84)],
             '$188load_method.49': [(<numba.core.ir.Assign object at 0x0000017AA6C1F310>,
                                     84)],
             '$194binary_subscr.52': [(<numba.core.ir.Assign object at 0x0000017AA6C1F700>,
                                       84)],
             '$196call_method.53': [(<numba.core.ir.Assign object at 0x0000017AA6C1F8E0>,
                                     84)],
             '$198binary_true_divide.54': [(<numba.core.ir.Assign object at 0x0000017AA6C1FA00>,
                                            84)],
             '$202binary_add.56': [(<numba.core.ir.Assign object at 0x0000017AA6C1FCA0>,
                                    84)],
             '$20for_iter.1': [(<numba.core.ir.Assign object at 0x0000017AA6C14520>,
                                20)],
             '$20for_iter.2': [(<numba.core.ir.Assign object at 0x0000017AA6C14640>,
                                20)],
             '$20for_iter.3': [(<numba.core.ir.Assign object at 0x0000017AA6C14760>,
                                20)],
             '$218binary_subtract.63': [(<numba.core.ir.Assign object at 0x0000017AA6C2C760>,
                                         84)],
             '$220binary_multiply.64': [(<numba.core.ir.Assign object at 0x0000017AA6C2C8E0>,
                                         84)],
             '$222binary_subtract.65': [(<numba.core.ir.Assign object at 0x0000017AA6C2CA60>,
                                         84)],
             '$224load_global.66': [(<numba.core.ir.Assign object at 0x0000017AA6C2CBB0>,
                                     84)],
             '$226load_method.67': [(<numba.core.ir.Assign object at 0x0000017AA6C2CD30>,
                                     84)],
             '$232binary_subscr.70': [(<numba.core.ir.Assign object at 0x0000017AA6C2D120>,
                                       84)],
             '$234call_method.71': [(<numba.core.ir.Assign object at 0x0000017AA6C2D300>,
                                     84)],
             '$236binary_true_divide.72': [(<numba.core.ir.Assign object at 0x0000017AA6C2D420>,
                                            84)],
             '$240binary_add.74': [(<numba.core.ir.Assign object at 0x0000017AA6C2D6C0>,
                                    84)],
             '$258binary_subscr.81': [(<numba.core.ir.Assign object at 0x0000017AA6C2E200>,
                                       84)],
             '$266binary_subscr.85': [(<numba.core.ir.Assign object at 0x0000017AA6C2E6E0>,
                                       84)],
             '$270binary_subtract.87': [(<numba.core.ir.Assign object at 0x0000017AA6C2E980>,
                                         84)],
             '$272binary_multiply.88': [(<numba.core.ir.Assign object at 0x0000017AA6C2EB00>,
                                         84)],
             '$276binary_true_divide.90': [(<numba.core.ir.Assign object at 0x0000017AA6C2EDA0>,
                                            84)],
             '$286binary_subscr.94': [(<numba.core.ir.Assign object at 0x0000017AA6C2F400>,
                                       84)],
             '$28binary_subscr.4': [(<numba.core.ir.Assign object at 0x0000017AA6C14E20>,
                                     22)],
             '$294binary_subscr.98': [(<numba.core.ir.Assign object at 0x0000017AA6C2F8E0>,
                                       84)],
             '$298binary_subtract.100': [(<numba.core.ir.Assign object at 0x0000017AA6C2FB80>,
                                          84)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x0000017AA6BD3670>,
                                  0)],
             '$300binary_multiply.101': [(<numba.core.ir.Assign object at 0x0000017AA6C2FD00>,
                                          84)],
             '$304binary_true_divide.103': [(<numba.core.ir.Assign object at 0x0000017AA6C2FFA0>,
                                             84)],
             '$314binary_multiply.107': [(<numba.core.ir.Assign object at 0x0000017AA6C34640>,
                                          84)],
             '$320binary_multiply.110': [(<numba.core.ir.Assign object at 0x0000017AA6C34A00>,
                                          84)],
             '$326binary_multiply.113': [(<numba.core.ir.Assign object at 0x0000017AA6C34DC0>,
                                          84)],
             '$328binary_add.114': [(<numba.core.ir.Assign object at 0x0000017AA6C34F40>,
                                     84)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x0000017AA6C150C0>,
                                  22)],
             '$330binary_multiply.115': [(<numba.core.ir.Assign object at 0x0000017AA6C350C0>,
                                          84)],
             '$336binary_subscr.118': [(<numba.core.ir.Assign object at 0x0000017AA6C35480>,
                                        84)],
             '$340binary_multiply.120': [(<numba.core.ir.Assign object at 0x0000017AA6C35720>,
                                          84)],
             '$342binary_true_divide.121': [(<numba.core.ir.Assign object at 0x0000017AA6C358A0>,
                                             84)],
             '$354compare_op.3': [(<numba.core.ir.Assign object at 0x0000017AA6C1E6E0>,
                                   350)],
             '$356pred': [(<numba.core.ir.Assign object at 0x0000017AA6C2C070>,
                           350)],
             '$362binary_multiply.3': [(<numba.core.ir.Assign object at 0x0000017AA6C2E4A0>,
                                        358)],
             '$366binary_multiply.5': [(<numba.core.ir.Assign object at 0x0000017AA6C2F580>,
                                        358)],
             '$368load_global.6': [(<numba.core.ir.Assign object at 0x0000017AA6C2FDF0>,
                                    358)],
             '$36pred': [(<numba.core.ir.Assign object at 0x0000017AA6C15330>,
                          22)],
             '$376binary_subtract.10': [(<numba.core.ir.Assign object at 0x0000017AA6C34AF0>,
                                         358)],
             '$378call_function.11': [(<numba.core.ir.Assign object at 0x0000017AA6C35600>,
                                       358)],
             '$388load_global.15': [(<numba.core.ir.Assign object at 0x0000017AA6C36230>,
                                     358)],
             '$394call_function.18': [(<numba.core.ir.Assign object at 0x0000017AA6C36650>,
                                       358)],
             '$396binary_multiply.19': [(<numba.core.ir.Assign object at 0x0000017AA6C367A0>,
                                         358)],
             '$400binary_add.21': [(<numba.core.ir.Assign object at 0x0000017AA6C36AA0>,
                                    358)],
             '$402inplace_true_divide.22': [(<numba.core.ir.Assign object at 0x0000017AA6C36C20>,
                                             358)],
             '$412load_global.1': [(<numba.core.ir.Assign object at 0x0000017AA6C36EF0>,
                                    412)],
             '$416call_function.3': [(<numba.core.ir.Assign object at 0x0000017AA6C371F0>,
                                      412)],
             '$418get_iter.4': [(<numba.core.ir.Assign object at 0x0000017AA6C37310>,
                                 412)],
             '$420for_iter.2': [(<numba.core.ir.Assign object at 0x0000017AA6C37640>,
                                 420)],
             '$420for_iter.3': [(<numba.core.ir.Assign object at 0x0000017AA6C37760>,
                                 420)],
             '$420for_iter.4': [(<numba.core.ir.Assign object at 0x0000017AA6C37880>,
                                 420)],
             '$424load_global.3': [(<numba.core.ir.Assign object at 0x0000017AA6C37CD0>,
                                    422)],
             '$432binary_subscr.7': [(<numba.core.ir.Assign object at 0x0000017AA6C3C220>,
                                      422)],
             '$438binary_subscr.10': [(<numba.core.ir.Assign object at 0x0000017AA6C3C5E0>,
                                       422)],
             '$440binary_subtract.11': [(<numba.core.ir.Assign object at 0x0000017AA6C3C760>,
                                         422)],
             '$442binary_multiply.12': [(<numba.core.ir.Assign object at 0x0000017AA6C3C8E0>,
                                         422)],
             '$450pred': [(<numba.core.ir.Assign object at 0x0000017AA6C3CF10>,
                           422)],
             '$454load_global.3': [(<numba.core.ir.Assign object at 0x0000017AA6C3D030>,
                                    452)],
             '$460binary_multiply.6': [(<numba.core.ir.Assign object at 0x0000017AA6C3D480>,
                                        452)],
             '$466binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000017AA6C3D840>,
                                      452)],
             '$472binary_subscr.12': [(<numba.core.ir.Assign object at 0x0000017AA6C3DC00>,
                                       452)],
             '$474binary_subtract.13': [(<numba.core.ir.Assign object at 0x0000017AA6C3DD80>,
                                         452)],
             '$476binary_multiply.14': [(<numba.core.ir.Assign object at 0x0000017AA6C3DF00>,
                                         452)],
             '$478call_function.15': [(<numba.core.ir.Assign object at 0x0000017AA6C3E0B0>,
                                       452)],
             '$480inplace_add.16': [(<numba.core.ir.Assign object at 0x0000017AA6C3E200>,
                                     452)],
             '$490binary_subscr.6': [(<numba.core.ir.Assign object at 0x0000017AA6C3E740>,
                                      484)],
             '$496binary_multiply.9': [(<numba.core.ir.Assign object at 0x0000017AA6C3EB00>,
                                        484)],
             '$498inplace_add.10': [(<numba.core.ir.Assign object at 0x0000017AA6C3EC80>,
                                     484)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x0000017AA6BD37F0>,
                                  0)],
             '$508pred': [(<numba.core.ir.Assign object at 0x0000017AA6C3F0D0>,
                           484)],
             '$516binary_subscr.6': [(<numba.core.ir.Assign object at 0x0000017AA6C3F520>,
                                      510)],
             '$520unary_negative.8': [(<numba.core.ir.Assign object at 0x0000017AA6C3F790>,
                                       510)],
             '$524binary_multiply.10': [(<numba.core.ir.Assign object at 0x0000017AA6C3FA60>,
                                         510)],
             '$526inplace_add.11': [(<numba.core.ir.Assign object at 0x0000017AA6C3FBE0>,
                                     510)],
             '$540binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000017AA6C442E0>,
                                      534)],
             '$546binary_subscr.8': [(<numba.core.ir.Assign object at 0x0000017AA6C446A0>,
                                      534)],
             '$548inplace_add.9': [(<numba.core.ir.Assign object at 0x0000017AA6C44820>,
                                    534)],
             '$554load_global.10': [(<numba.core.ir.Assign object at 0x0000017AA6C44A30>,
                                     534)],
             '$562binary_subscr.14': [(<numba.core.ir.Assign object at 0x0000017AA6C44F40>,
                                       534)],
             '$564binary_subtract.15': [(<numba.core.ir.Assign object at 0x0000017AA6C450C0>,
                                         534)],
             '$570binary_subscr.18': [(<numba.core.ir.Assign object at 0x0000017AA6C45480>,
                                       534)],
             '$572binary_true_divide.19': [(<numba.core.ir.Assign object at 0x0000017AA6C45600>,
                                            534)],
             '$578load_global.21': [(<numba.core.ir.Assign object at 0x0000017AA6C459F0>,
                                     534)],
             '$582call_function.23': [(<numba.core.ir.Assign object at 0x0000017AA6C45CF0>,
                                       534)],
             '$584get_iter.24': [(<numba.core.ir.Assign object at 0x0000017AA6C45E10>,
                                  534)],
             '$586for_iter.2': [(<numba.core.ir.Assign object at 0x0000017AA6C44D90>,
                                 586)],
             '$586for_iter.3': [(<numba.core.ir.Assign object at 0x0000017AA6C45870>,
                                 586)],
             '$586for_iter.4': [(<numba.core.ir.Assign object at 0x0000017AA6C45F00>,
                                 586)],
             '$590load_global.3': [(<numba.core.ir.Assign object at 0x0000017AA6C46350>,
                                    588)],
             '$596binary_subscr.6': [(<numba.core.ir.Assign object at 0x0000017AA6C46740>,
                                      588)],
             '$598call_function.7': [(<numba.core.ir.Assign object at 0x0000017AA6C468F0>,
                                      588)],
             '$614load_global.13': [(<numba.core.ir.Assign object at 0x0000017AA6C471F0>,
                                     588)],
             '$628compare_op.19': [(<numba.core.ir.Assign object at 0x0000017AA6C47AC0>,
                                    588)],
             '$632pred': [(<numba.core.ir.Assign object at 0x0000017AA6C47D30>,
                           588)],
             '$638binary_multiply.4': [(<numba.core.ir.Assign object at 0x0000017AA6C47550>,
                                        634)],
             '$652binary_add.10': [(<numba.core.ir.Assign object at 0x0000017AA6C4C640>,
                                    634)],
             '$656load_global.12': [(<numba.core.ir.Assign object at 0x0000017AA6C4C8B0>,
                                     634)],
             '$662call_function.15': [(<numba.core.ir.Assign object at 0x0000017AA6C4CCD0>,
                                       634)],
             '$664binary_multiply.16': [(<numba.core.ir.Assign object at 0x0000017AA6C4CE20>,
                                         634)],
             '$668binary_add.18': [(<numba.core.ir.Assign object at 0x0000017AA6C4D120>,
                                    634)],
             '$670binary_multiply.19': [(<numba.core.ir.Assign object at 0x0000017AA6C4D2A0>,
                                         634)],
             '$672inplace_true_divide.20': [(<numba.core.ir.Assign object at 0x0000017AA6C4D420>,
                                             634)],
             '$682compare_op.4': [(<numba.core.ir.Assign object at 0x0000017AA6C4D6C0>,
                                   678)],
             '$686pred': [(<numba.core.ir.Assign object at 0x0000017AA6C4D930>,
                           678)],
             '$696load_global.2': [(<numba.core.ir.Assign object at 0x0000017AA6C4DF30>,
                                    696)],
             '$700call_function.4': [(<numba.core.ir.Assign object at 0x0000017AA6C4E230>,
                                      696)],
             '$702get_iter.5': [(<numba.core.ir.Assign object at 0x0000017AA6C4E350>,
                                 696)],
             '$704for_iter.3': [(<numba.core.ir.Assign object at 0x0000017AA6C4E680>,
                                 704)],
             '$704for_iter.4': [(<numba.core.ir.Assign object at 0x0000017AA6C4E7A0>,
                                 704)],
             '$704for_iter.5': [(<numba.core.ir.Assign object at 0x0000017AA6C4E8C0>,
                                 704)],
             '$70load_global.13': [(<numba.core.ir.Assign object at 0x0000017AA6C16830>,
                                    38)],
             '$712compare_op.6': [(<numba.core.ir.Assign object at 0x0000017AA6C4EF80>,
                                   706)],
             '$716pred': [(<numba.core.ir.Assign object at 0x0000017AA6C4F1F0>,
                           706)],
             '$718load_global.3': [(<numba.core.ir.Assign object at 0x0000017AA6C4F430>,
                                    718)],
             '$726binary_subscr.7': [(<numba.core.ir.Assign object at 0x0000017AA6C4F940>,
                                      718)],
             '$732binary_subscr.10': [(<numba.core.ir.Assign object at 0x0000017AA6C4FD00>,
                                       718)],
             '$734binary_subtract.11': [(<numba.core.ir.Assign object at 0x0000017AA6C4FE80>,
                                         718)],
             '$736binary_multiply.12': [(<numba.core.ir.Assign object at 0x0000017AA6C54040>,
                                         718)],
             '$754binary_subscr.7': [(<numba.core.ir.Assign object at 0x0000017AA6C549A0>,
                                      748)],
             '$760binary_multiply.10': [(<numba.core.ir.Assign object at 0x0000017AA6C54D60>,
                                         748)],
             '$762inplace_add.11': [(<numba.core.ir.Assign object at 0x0000017AA6C54EE0>,
                                     748)],
             '$782binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000017AA6C55390>,
                                      776)],
             '$790binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000017AA6C55870>,
                                      776)],
             '$792binary_multiply.10': [(<numba.core.ir.Assign object at 0x0000017AA6C559F0>,
                                         776)],
             '$794inplace_add.11': [(<numba.core.ir.Assign object at 0x0000017AA6C55B70>,
                                     776)],
             '$804return_value.1': [(<numba.core.ir.Assign object at 0x0000017AA6C55F00>,
                                     802)],
             '$82pred': [(<numba.core.ir.Assign object at 0x0000017AA6C170D0>,
                          38)],
             '$8load_attr.3': [(<numba.core.ir.Assign object at 0x0000017AA6BD3A90>,
                                0)],
             '$90load_global.4': [(<numba.core.ir.Assign object at 0x0000017AA6C14970>,
                                   84)],
             '$96call_function.7': [(<numba.core.ir.Assign object at 0x0000017AA6C175B0>,
                                     84)],
             '$98binary_multiply.8': [(<numba.core.ir.Assign object at 0x0000017AA6C17700>,
                                       84)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x0000017AA6BD3C10>,
                             0)],
             '$const118.17': [(<numba.core.ir.Assign object at 0x0000017AA6C1C430>,
                               84)],
             '$const126.21': [(<numba.core.ir.Assign object at 0x0000017AA6C1CA30>,
                               84)],
             '$const172.41': [(<numba.core.ir.Assign object at 0x0000017AA6C1E7D0>,
                               84)],
             '$const176.43': [(<numba.core.ir.Assign object at 0x0000017AA6C1EA70>,
                               84)],
             '$const210.59': [(<numba.core.ir.Assign object at 0x0000017AA6C2C1F0>,
                               84)],
             '$const214.61': [(<numba.core.ir.Assign object at 0x0000017AA6C2C490>,
                               84)],
             '$const352.2': [(<numba.core.ir.Assign object at 0x0000017AA6C1DED0>,
                              350)],
             '$const358.1': [(<numba.core.ir.Assign object at 0x0000017AA6C2D930>,
                              358)],
             '$const374.9': [(<numba.core.ir.Assign object at 0x0000017AA6C342E0>,
                              358)],
             '$const398.20': [(<numba.core.ir.Assign object at 0x0000017AA6C368F0>,
                               358)],
             '$const456.4': [(<numba.core.ir.Assign object at 0x0000017AA6C3D1B0>,
                              452)],
             '$const626.18': [(<numba.core.ir.Assign object at 0x0000017AA6C47910>,
                               588)],
             '$const634.2': [(<numba.core.ir.Assign object at 0x0000017AA6C46D10>,
                              634)],
             '$const648.8': [(<numba.core.ir.Assign object at 0x0000017AA6C4C370>,
                              634)],
             '$const666.17': [(<numba.core.ir.Assign object at 0x0000017AA6C4CF70>,
                               634)],
             '$const710.5': [(<numba.core.ir.Assign object at 0x0000017AA6C4EDD0>,
                              706)],
             '$const802.0': [(<numba.core.ir.Assign object at 0x0000017AA6C55D80>,
                              802)],
             '$const84.1': [(<numba.core.ir.Assign object at 0x0000017AA6C15CF0>,
                             84)],
             '$const86.2': [(<numba.core.ir.Assign object at 0x0000017AA6C162F0>,
                             84)],
             '$phi20.0': [(<numba.core.ir.Assign object at 0x0000017AA6BD39A0>,
                           0)],
             '$phi22.1': [(<numba.core.ir.Assign object at 0x0000017AA6C14460>,
                           20)],
             '$phi420.1': [(<numba.core.ir.Assign object at 0x0000017AA6C37010>,
                            412)],
             '$phi422.2': [(<numba.core.ir.Assign object at 0x0000017AA6C37580>,
                            420)],
             '$phi586.1': [(<numba.core.ir.Assign object at 0x0000017AA6C3FE80>,
                            534)],
             '$phi588.2': [(<numba.core.ir.Assign object at 0x0000017AA6C44B50>,
                            586)],
             '$phi704.2': [(<numba.core.ir.Assign object at 0x0000017AA6C4E0E0>,
                            696)],
             '$phi706.3': [(<numba.core.ir.Assign object at 0x0000017AA6C4E5C0>,
                            704)],
             'a': [(<numba.core.ir.Assign object at 0x0000017AA6BD1330>, 0)],
             'alpha': [(<numba.core.ir.Assign object at 0x0000017AA6BD2530>,
                        0)],
             'b': [(<numba.core.ir.Assign object at 0x0000017AA6BD1990>, 0)],
             'bool356': [(<numba.core.ir.Assign object at 0x0000017AA6C1F550>,
                          350)],
             'bool36': [(<numba.core.ir.Assign object at 0x0000017AA6C15210>,
                         22)],
             'bool450': [(<numba.core.ir.Assign object at 0x0000017AA6C3CDF0>,
                          422)],
             'bool508': [(<numba.core.ir.Assign object at 0x0000017AA6C3EFB0>,
                          484)],
             'bool632': [(<numba.core.ir.Assign object at 0x0000017AA6C47C10>,
                          588)],
             'bool686': [(<numba.core.ir.Assign object at 0x0000017AA6C4D810>,
                          678)],
             'bool716': [(<numba.core.ir.Assign object at 0x0000017AA6C4F0D0>,
                          706)],
             'bool82': [(<numba.core.ir.Assign object at 0x0000017AA6C16FB0>,
                         38)],
             'current': [(<numba.core.ir.Assign object at 0x0000017AA6C160E0>,
                          38)],
             'd': [(<numba.core.ir.Assign object at 0x0000017AA6C37B50>, 422),
                   (<numba.core.ir.Assign object at 0x0000017AA6C4EB60>, 706)],
             'dens_R': [(<numba.core.ir.Assign object at 0x0000017AA6BD32B0>,
                         0)],
             'dens_lambda': [(<numba.core.ir.Assign object at 0x0000017AA6BD3190>,
                              0)],
             'dens_mu': [(<numba.core.ir.Assign object at 0x0000017AA6BD33D0>,
                          0)],
             'dens_mu_tot': [(<numba.core.ir.Assign object at 0x0000017AA6BD34F0>,
                              0)],
             'dens_phi_sum': [(<numba.core.ir.Assign object at 0x0000017AA6BD2BF0>,
                               0)],
             'dens_re_cov': [(<numba.core.ir.Assign object at 0x0000017AA6BD2E30>,
                              0)],
             'dens_re_mean': [(<numba.core.ir.Assign object at 0x0000017AA6BD3070>,
                               0)],
             'dens_re_std': [(<numba.core.ir.Assign object at 0x0000017AA6BD2F50>,
                              0)],
             'dens_re_sum': [(<numba.core.ir.Assign object at 0x0000017AA6BD2D10>,
                              0)],
             'densmap_flag': [(<numba.core.ir.Assign object at 0x0000017AA6BD2AD0>,
                               0)],
             'dim': [(<numba.core.ir.Assign object at 0x0000017AA6BD1DB0>, 0)],
             'dist_squared': [(<numba.core.ir.Assign object at 0x0000017AA6C16C50>,
                               38),
                              (<numba.core.ir.Assign object at 0x0000017AA6C47610>,
                               588)],
             'dphi_term': [(<numba.core.ir.Assign object at 0x0000017AA6C1D540>,
                            84)],
             'drj': [(<numba.core.ir.Assign object at 0x0000017AA6C2D840>, 84)],
             'drk': [(<numba.core.ir.Assign object at 0x0000017AA6C1FE20>, 84)],
             'epoch_of_next_negative_sample': [(<numba.core.ir.Assign object at 0x0000017AA6BD2770>,
                                                0)],
             'epoch_of_next_sample': [(<numba.core.ir.Assign object at 0x0000017AA6BD2890>,
                                       0)],
             'epochs_per_negative_sample': [(<numba.core.ir.Assign object at 0x0000017AA6BD2650>,
                                             0)],
             'epochs_per_sample': [(<numba.core.ir.Assign object at 0x0000017AA6BD2470>,
                                    0)],
             'gamma': [(<numba.core.ir.Assign object at 0x0000017AA6BD2230>,
                        0)],
             'grad_coeff': [(<numba.core.ir.Assign object at 0x0000017AA6C35D80>,
                             358),
                            (<numba.core.ir.Assign object at 0x0000017AA6C36CE0>,
                             358),
                            (<numba.core.ir.Assign object at 0x0000017AA6C35F00>,
                             408),
                            (<numba.core.ir.Assign object at 0x0000017AA6C4C040>,
                             634),
                            (<numba.core.ir.Assign object at 0x0000017AA6C4D4E0>,
                             634),
                            (<numba.core.ir.Assign object at 0x0000017AA6C4DC90>,
                             692)],
             'grad_cor_coeff': [(<numba.core.ir.Assign object at 0x0000017AA6C35B40>,
                                 84)],
             'grad_d': [(<numba.core.ir.Assign object at 0x0000017AA6C3CA90>,
                         422),
                        (<numba.core.ir.Assign object at 0x0000017AA6C3E2C0>,
                         452),
                        (<numba.core.ir.Assign object at 0x0000017AA6C541F0>,
                         718),
                        (<numba.core.ir.Assign object at 0x0000017AA6C4EAD0>,
                         744)],
             'head': [(<numba.core.ir.Assign object at 0x0000017AA6BD1450>, 0)],
             'head_embedding': [(<numba.core.ir.Assign object at 0x0000017AA6BD0310>,
                                 0)],
             'i': [(<numba.core.ir.Assign object at 0x0000017AA6C14A30>, 22)],
             'j': [(<numba.core.ir.Assign object at 0x0000017AA6C15720>, 38)],
             'k': [(<numba.core.ir.Assign object at 0x0000017AA6C15C00>, 38),
                   (<numba.core.ir.Assign object at 0x0000017AA6C46B60>, 588)],
             'move_other': [(<numba.core.ir.Assign object at 0x0000017AA6BD2410>,
                             0)],
             'n': [(<numba.core.ir.Assign object at 0x0000017AA6BD29B0>, 0)],
             'n_neg_samples': [(<numba.core.ir.Assign object at 0x0000017AA6C457B0>,
                                534)],
             'n_vertices': [(<numba.core.ir.Assign object at 0x0000017AA6BD1B10>,
                             0)],
             'other': [(<numba.core.ir.Assign object at 0x0000017AA6C165C0>,
                        38),
                       (<numba.core.ir.Assign object at 0x0000017AA6C46FE0>,
                        588)],
             'p': [(<numba.core.ir.Assign object at 0x0000017AA6C461D0>, 588)],
             'phi': [(<numba.core.ir.Assign object at 0x0000017AA6C17A00>, 84)],
             'q_jk': [(<numba.core.ir.Assign object at 0x0000017AA6C1DCC0>,
                       84)],
             'q_kj': [(<numba.core.ir.Assign object at 0x0000017AA6C1E440>,
                       84)],
             're_std_sq': [(<numba.core.ir.Assign object at 0x0000017AA6C2DD20>,
                            84)],
             'rng_state_per_sample': [(<numba.core.ir.Assign object at 0x0000017AA6BD06D0>,
                                       0)],
             'tail': [(<numba.core.ir.Assign object at 0x0000017AA6BD16F0>, 0)],
             'tail_embedding': [(<numba.core.ir.Assign object at 0x0000017AA6BD0820>,
                                 0)],
             'weight_j': [(<numba.core.ir.Assign object at 0x0000017AA6C34160>,
                           84)],
             'weight_k': [(<numba.core.ir.Assign object at 0x0000017AA6C2EF20>,
                           84)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA6C4DA50>
DEBUG:numba.core.ssa:Fix SSA violator on var k
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: head_embedding = arg(0, name=head_embedding)
DEBUG:numba.core.ssa:on stmt: tail_embedding = arg(1, name=tail_embedding)
DEBUG:numba.core.ssa:on stmt: head = arg(2, name=head)
DEBUG:numba.core.ssa:on stmt: tail = arg(3, name=tail)
DEBUG:numba.core.ssa:on stmt: n_vertices = arg(4, name=n_vertices)
DEBUG:numba.core.ssa:on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
DEBUG:numba.core.ssa:on stmt: a = arg(6, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(7, name=b)
DEBUG:numba.core.ssa:on stmt: rng_state_per_sample = arg(8, name=rng_state_per_sample)
DEBUG:numba.core.ssa:on stmt: gamma = arg(9, name=gamma)
DEBUG:numba.core.ssa:on stmt: dim = arg(10, name=dim)
DEBUG:numba.core.ssa:on stmt: move_other = arg(11, name=move_other)
DEBUG:numba.core.ssa:on stmt: alpha = arg(12, name=alpha)
DEBUG:numba.core.ssa:on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
DEBUG:numba.core.ssa:on stmt: n = arg(16, name=n)
DEBUG:numba.core.ssa:on stmt: densmap_flag = arg(17, name=densmap_flag)
DEBUG:numba.core.ssa:on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_sum = arg(19, name=dens_re_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_cov = arg(20, name=dens_re_cov)
DEBUG:numba.core.ssa:on stmt: dens_re_std = arg(21, name=dens_re_std)
DEBUG:numba.core.ssa:on stmt: dens_re_mean = arg(22, name=dens_re_mean)
DEBUG:numba.core.ssa:on stmt: dens_lambda = arg(23, name=dens_lambda)
DEBUG:numba.core.ssa:on stmt: dens_R = arg(24, name=dens_R)
DEBUG:numba.core.ssa:on stmt: dens_mu = arg(25, name=dens_mu)
DEBUG:numba.core.ssa:on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numba: <module 'numba' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numba\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:92)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
DEBUG:numba.core.ssa:on stmt: $phi20.0 = $16get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $20for_iter.1 = iternext(value=$phi20.0)
DEBUG:numba.core.ssa:on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi22.1 = $20for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $20for_iter.3, 22, 802
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: i = $phi22.1
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($32compare_op.6, func=bool36, args=(Var($32compare_op.6, layouts.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $36pred, 38, 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 38
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:first assign: k
DEBUG:numba.core.ssa:replaced with: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $70load_global.13(current, other, func=$70load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $const84.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const86.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $90load_global.4 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_multiply.8 = a * $96call_function.7
DEBUG:numba.core.ssa:on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
DEBUG:numba.core.ssa:on stmt: phi = $const84.1 / $100binary_add.9
DEBUG:numba.core.ssa:on stmt: $110binary_multiply.13 = a * b
DEBUG:numba.core.ssa:on stmt: $112load_global.14 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const118.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subtract.18 = b - $const118.17
DEBUG:numba.core.ssa:on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:100), Var($120binary_subtract.18, layouts.py:105)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
DEBUG:numba.core.ssa:on stmt: $const126.21 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $130load_global.23 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_multiply.27 = a * $136call_function.26
DEBUG:numba.core.ssa:on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
DEBUG:numba.core.ssa:on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
DEBUG:numba.core.ssa:on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_jk = phi / $152binary_subscr.33
DEBUG:numba.core.ssa:on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_kj = phi / $164binary_subscr.38
DEBUG:numba.core.ssa:on stmt: $const172.41 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const176.43 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180binary_subtract.45 = $const176.43 - phi
DEBUG:numba.core.ssa:on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
DEBUG:numba.core.ssa:on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
DEBUG:numba.core.ssa:on stmt: $186load_global.48 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:112)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
DEBUG:numba.core.ssa:on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
DEBUG:numba.core.ssa:on stmt: drk = q_jk * $202binary_add.56
DEBUG:numba.core.ssa:on stmt: $const210.59 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const214.61 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.63 = $const214.61 - phi
DEBUG:numba.core.ssa:on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
DEBUG:numba.core.ssa:on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
DEBUG:numba.core.ssa:on stmt: $224load_global.66 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
DEBUG:numba.core.ssa:on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
DEBUG:numba.core.ssa:on stmt: drj = q_kj * $240binary_add.74
DEBUG:numba.core.ssa:on stmt: re_std_sq = dens_re_std * dens_re_std
DEBUG:numba.core.ssa:on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
DEBUG:numba.core.ssa:on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
DEBUG:numba.core.ssa:on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
DEBUG:numba.core.ssa:on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
DEBUG:numba.core.ssa:on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
DEBUG:numba.core.ssa:on stmt: $320binary_multiply.110 = weight_k * drk
DEBUG:numba.core.ssa:on stmt: $326binary_multiply.113 = weight_j * drj
DEBUG:numba.core.ssa:on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
DEBUG:numba.core.ssa:on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
DEBUG:numba.core.ssa:on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
DEBUG:numba.core.ssa:on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
DEBUG:numba.core.ssa:on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $const352.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $354compare_op.3 = dist_squared > $const352.2
DEBUG:numba.core.ssa:on stmt: bool356 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $356pred = call bool356($354compare_op.3, func=bool356, args=(Var($354compare_op.3, layouts.py:136),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $356pred, 358, 408
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $const358.1 = const(float, -2.0)
DEBUG:numba.core.ssa:on stmt: $362binary_multiply.3 = $const358.1 * a
DEBUG:numba.core.ssa:on stmt: $366binary_multiply.5 = $362binary_multiply.3 * b
DEBUG:numba.core.ssa:on stmt: $368load_global.6 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const374.9 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.10 = b - $const374.9
DEBUG:numba.core.ssa:on stmt: $378call_function.11 = call $368load_global.6(dist_squared, $376binary_subtract.10, func=$368load_global.6, args=[Var(dist_squared, layouts.py:100), Var($376binary_subtract.10, layouts.py:137)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $366binary_multiply.5 * $378call_function.11
DEBUG:numba.core.ssa:on stmt: $388load_global.15 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $394call_function.18 = call $388load_global.15(dist_squared, b, func=$388load_global.15, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $396binary_multiply.19 = a * $394call_function.18
DEBUG:numba.core.ssa:on stmt: $const398.20 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $400binary_add.21 = $396binary_multiply.19 + $const398.20
DEBUG:numba.core.ssa:on stmt: $402inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$400binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $402inplace_true_divide.22
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 408
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: grad_coeff = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 412
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $412load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $416call_function.3 = call $412load_global.1(dim, func=$412load_global.1, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $418get_iter.4 = getiter(value=$416call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi420.1 = $418get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $420for_iter.2 = iternext(value=$phi420.1)
DEBUG:numba.core.ssa:on stmt: $420for_iter.3 = pair_first(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $420for_iter.4 = pair_second(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi422.2 = $420for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $420for_iter.4, 422, 534
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: d = $phi422.2
DEBUG:numba.core.ssa:on stmt: $424load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $432binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $438binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $440binary_subtract.11 = $432binary_subscr.7 - $438binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $442binary_multiply.12 = grad_coeff * $440binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $424load_global.3($442binary_multiply.12, func=$424load_global.3, args=[Var($442binary_multiply.12, layouts.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool450 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $450pred = call bool450(densmap_flag, func=bool450, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $450pred, 452, 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $454load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $const456.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $460binary_multiply.6 = $const456.4 * grad_cor_coeff
DEBUG:numba.core.ssa:on stmt: $466binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $474binary_subtract.13 = $466binary_subscr.9 - $472binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $476binary_multiply.14 = $460binary_multiply.6 * $474binary_subtract.13
DEBUG:numba.core.ssa:on stmt: $478call_function.15 = call $454load_global.3($476binary_multiply.14, func=$454load_global.3, args=[Var($476binary_multiply.14, layouts.py:148)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$478call_function.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_d = $480inplace_add.16
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $490binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $496binary_multiply.9 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $498inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$490binary_subscr.6, rhs=$496binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $498inplace_add.10
DEBUG:numba.core.ssa:on stmt: bool508 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $508pred = call bool508(move_other, func=bool508, args=(Var(move_other, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $508pred, 510, 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $520unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
DEBUG:numba.core.ssa:on stmt: $524binary_multiply.10 = $520unary_negative.8 * alpha
DEBUG:numba.core.ssa:on stmt: $526inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$516binary_subscr.6, rhs=$524binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: other[d] = $526inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 532
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 534
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $540binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $546binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $548inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$540binary_subscr.5, rhs=$546binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample[i] = $548inplace_add.9
DEBUG:numba.core.ssa:on stmt: $554load_global.10 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $564binary_subtract.15 = n - $562binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $570binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $572binary_true_divide.19 = $564binary_subtract.15 / $570binary_subscr.18
DEBUG:numba.core.ssa:on stmt: n_neg_samples = call $554load_global.10($572binary_true_divide.19, func=$554load_global.10, args=[Var($572binary_true_divide.19, layouts.py:157)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $578load_global.21 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $582call_function.23 = call $578load_global.21(n_neg_samples, func=$578load_global.21, args=[Var(n_neg_samples, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $584get_iter.24 = getiter(value=$582call_function.23)
DEBUG:numba.core.ssa:on stmt: $phi586.1 = $584get_iter.24
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 586
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $586for_iter.2 = iternext(value=$phi586.1)
DEBUG:numba.core.ssa:on stmt: $586for_iter.3 = pair_first(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $586for_iter.4 = pair_second(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi588.2 = $586for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $586for_iter.4, 588, 776
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 588
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: p = $phi588.2
DEBUG:numba.core.ssa:on stmt: $590load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x0000017A062CD5A0>))
DEBUG:numba.core.ssa:on stmt: $596binary_subscr.6 = getitem(value=rng_state_per_sample, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $598call_function.7 = call $590load_global.3($596binary_subscr.6, func=$590load_global.3, args=[Var($596binary_subscr.6, layouts.py:161)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: k = $598call_function.7 % n_vertices
DEBUG:numba.core.ssa:replaced with: k.1 = $598call_function.7 % n_vertices
DEBUG:numba.core.ssa:on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $614load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $614load_global.13(current, other, func=$614load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const626.18 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $628compare_op.19 = dist_squared > $const626.18
DEBUG:numba.core.ssa:on stmt: bool632 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $632pred = call bool632($628compare_op.19, func=bool632, args=(Var($628compare_op.19, layouts.py:167),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $632pred, 634, 678
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 634
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $const634.2 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $638binary_multiply.4 = $const634.2 * gamma
DEBUG:numba.core.ssa:on stmt: grad_coeff = $638binary_multiply.4 * b
DEBUG:numba.core.ssa:on stmt: $const648.8 = const(float, 0.001)
DEBUG:numba.core.ssa:on stmt: $652binary_add.10 = $const648.8 + dist_squared
DEBUG:numba.core.ssa:on stmt: $656load_global.12 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $662call_function.15 = call $656load_global.12(dist_squared, b, func=$656load_global.12, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $664binary_multiply.16 = a * $662call_function.15
DEBUG:numba.core.ssa:on stmt: $const666.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $668binary_add.18 = $664binary_multiply.16 + $const666.17
DEBUG:numba.core.ssa:on stmt: $670binary_multiply.19 = $652binary_add.10 * $668binary_add.18
DEBUG:numba.core.ssa:on stmt: $672inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$670binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $672inplace_true_divide.20
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 678
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $682compare_op.4 = j == k
DEBUG:numba.core.ssa:on stmt: bool686 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $686pred = call bool686($682compare_op.4, func=bool686, args=(Var($682compare_op.4, layouts.py:172),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $686pred, 688, 692
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 688
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 692
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: grad_coeff = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 696
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $696load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $700call_function.4 = call $696load_global.2(dim, func=$696load_global.2, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $702get_iter.5 = getiter(value=$700call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi704.2 = $702get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 704
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $704for_iter.3 = iternext(value=$phi704.2)
DEBUG:numba.core.ssa:on stmt: $704for_iter.4 = pair_first(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $704for_iter.5 = pair_second(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi706.3 = $704for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $704for_iter.5, 706, 772
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 706
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: d = $phi706.3
DEBUG:numba.core.ssa:on stmt: $const710.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $712compare_op.6 = grad_coeff > $const710.5
DEBUG:numba.core.ssa:on stmt: bool716 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $716pred = call bool716($712compare_op.6, func=bool716, args=(Var($712compare_op.6, layouts.py:178),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $716pred, 718, 744
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 718
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $718load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $726binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $732binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subtract.11 = $726binary_subscr.7 - $732binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $736binary_multiply.12 = grad_coeff * $734binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $718load_global.3($736binary_multiply.12, func=$718load_global.3, args=[Var($736binary_multiply.12, layouts.py:179)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 744
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: grad_d = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 748
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $754binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $760binary_multiply.10 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $762inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$754binary_subscr.7, rhs=$760binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $762inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 772
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 776
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $782binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $790binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $792binary_multiply.10 = n_neg_samples * $790binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $794inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$782binary_subscr.5, rhs=$792binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample[i] = $794inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 800
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 802
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $const802.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $804return_value.1 = cast(value=$const802.0)
DEBUG:numba.core.ssa:on stmt: return $804return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 803
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {38: [<numba.core.ir.Assign object at 0x0000017AA6BD0AC0>],
             588: [<numba.core.ir.Assign object at 0x0000017AA6BD15D0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: head_embedding = arg(0, name=head_embedding)
DEBUG:numba.core.ssa:on stmt: tail_embedding = arg(1, name=tail_embedding)
DEBUG:numba.core.ssa:on stmt: head = arg(2, name=head)
DEBUG:numba.core.ssa:on stmt: tail = arg(3, name=tail)
DEBUG:numba.core.ssa:on stmt: n_vertices = arg(4, name=n_vertices)
DEBUG:numba.core.ssa:on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
DEBUG:numba.core.ssa:on stmt: a = arg(6, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(7, name=b)
DEBUG:numba.core.ssa:on stmt: rng_state_per_sample = arg(8, name=rng_state_per_sample)
DEBUG:numba.core.ssa:on stmt: gamma = arg(9, name=gamma)
DEBUG:numba.core.ssa:on stmt: dim = arg(10, name=dim)
DEBUG:numba.core.ssa:on stmt: move_other = arg(11, name=move_other)
DEBUG:numba.core.ssa:on stmt: alpha = arg(12, name=alpha)
DEBUG:numba.core.ssa:on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
DEBUG:numba.core.ssa:on stmt: n = arg(16, name=n)
DEBUG:numba.core.ssa:on stmt: densmap_flag = arg(17, name=densmap_flag)
DEBUG:numba.core.ssa:on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_sum = arg(19, name=dens_re_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_cov = arg(20, name=dens_re_cov)
DEBUG:numba.core.ssa:on stmt: dens_re_std = arg(21, name=dens_re_std)
DEBUG:numba.core.ssa:on stmt: dens_re_mean = arg(22, name=dens_re_mean)
DEBUG:numba.core.ssa:on stmt: dens_lambda = arg(23, name=dens_lambda)
DEBUG:numba.core.ssa:on stmt: dens_R = arg(24, name=dens_R)
DEBUG:numba.core.ssa:on stmt: dens_mu = arg(25, name=dens_mu)
DEBUG:numba.core.ssa:on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numba: <module 'numba' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numba\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:92)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
DEBUG:numba.core.ssa:on stmt: $phi20.0 = $16get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $20for_iter.1 = iternext(value=$phi20.0)
DEBUG:numba.core.ssa:on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi22.1 = $20for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $20for_iter.3, 22, 802
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: i = $phi22.1
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($32compare_op.6, func=bool36, args=(Var($32compare_op.6, layouts.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $36pred, 38, 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 38
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='k' stmt=other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $70load_global.13(current, other, func=$70load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $const84.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const86.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $90load_global.4 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_multiply.8 = a * $96call_function.7
DEBUG:numba.core.ssa:on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
DEBUG:numba.core.ssa:on stmt: phi = $const84.1 / $100binary_add.9
DEBUG:numba.core.ssa:on stmt: $110binary_multiply.13 = a * b
DEBUG:numba.core.ssa:on stmt: $112load_global.14 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const118.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subtract.18 = b - $const118.17
DEBUG:numba.core.ssa:on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:100), Var($120binary_subtract.18, layouts.py:105)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
DEBUG:numba.core.ssa:on stmt: $const126.21 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $130load_global.23 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_multiply.27 = a * $136call_function.26
DEBUG:numba.core.ssa:on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
DEBUG:numba.core.ssa:on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
DEBUG:numba.core.ssa:on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='k' stmt=$152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 84
DEBUG:numba.core.ssa:idom 38 from label 84
DEBUG:numba.core.ssa:find_def_from_bottom label 38
DEBUG:numba.core.ssa:on stmt: q_jk = phi / $152binary_subscr.33
DEBUG:numba.core.ssa:on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_kj = phi / $164binary_subscr.38
DEBUG:numba.core.ssa:on stmt: $const172.41 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const176.43 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180binary_subtract.45 = $const176.43 - phi
DEBUG:numba.core.ssa:on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
DEBUG:numba.core.ssa:on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
DEBUG:numba.core.ssa:on stmt: $186load_global.48 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='k' stmt=$194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 84
DEBUG:numba.core.ssa:idom 38 from label 84
DEBUG:numba.core.ssa:find_def_from_bottom label 38
DEBUG:numba.core.ssa:on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:112)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
DEBUG:numba.core.ssa:on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
DEBUG:numba.core.ssa:on stmt: drk = q_jk * $202binary_add.56
DEBUG:numba.core.ssa:on stmt: $const210.59 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const214.61 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.63 = $const214.61 - phi
DEBUG:numba.core.ssa:on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
DEBUG:numba.core.ssa:on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
DEBUG:numba.core.ssa:on stmt: $224load_global.66 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
DEBUG:numba.core.ssa:on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
DEBUG:numba.core.ssa:on stmt: drj = q_kj * $240binary_add.74
DEBUG:numba.core.ssa:on stmt: re_std_sq = dens_re_std * dens_re_std
DEBUG:numba.core.ssa:on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='k' stmt=$258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 84
DEBUG:numba.core.ssa:idom 38 from label 84
DEBUG:numba.core.ssa:find_def_from_bottom label 38
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='k' stmt=$266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 84
DEBUG:numba.core.ssa:idom 38 from label 84
DEBUG:numba.core.ssa:find_def_from_bottom label 38
DEBUG:numba.core.ssa:on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
DEBUG:numba.core.ssa:on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
DEBUG:numba.core.ssa:on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
DEBUG:numba.core.ssa:on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
DEBUG:numba.core.ssa:on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
DEBUG:numba.core.ssa:on stmt: $320binary_multiply.110 = weight_k * drk
DEBUG:numba.core.ssa:on stmt: $326binary_multiply.113 = weight_j * drj
DEBUG:numba.core.ssa:on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
DEBUG:numba.core.ssa:on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
DEBUG:numba.core.ssa:on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
DEBUG:numba.core.ssa:on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
DEBUG:numba.core.ssa:on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $const352.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $354compare_op.3 = dist_squared > $const352.2
DEBUG:numba.core.ssa:on stmt: bool356 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $356pred = call bool356($354compare_op.3, func=bool356, args=(Var($354compare_op.3, layouts.py:136),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $356pred, 358, 408
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $const358.1 = const(float, -2.0)
DEBUG:numba.core.ssa:on stmt: $362binary_multiply.3 = $const358.1 * a
DEBUG:numba.core.ssa:on stmt: $366binary_multiply.5 = $362binary_multiply.3 * b
DEBUG:numba.core.ssa:on stmt: $368load_global.6 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const374.9 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.10 = b - $const374.9
DEBUG:numba.core.ssa:on stmt: $378call_function.11 = call $368load_global.6(dist_squared, $376binary_subtract.10, func=$368load_global.6, args=[Var(dist_squared, layouts.py:100), Var($376binary_subtract.10, layouts.py:137)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $366binary_multiply.5 * $378call_function.11
DEBUG:numba.core.ssa:on stmt: $388load_global.15 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $394call_function.18 = call $388load_global.15(dist_squared, b, func=$388load_global.15, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $396binary_multiply.19 = a * $394call_function.18
DEBUG:numba.core.ssa:on stmt: $const398.20 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $400binary_add.21 = $396binary_multiply.19 + $const398.20
DEBUG:numba.core.ssa:on stmt: $402inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$400binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $402inplace_true_divide.22
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 408
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: grad_coeff = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 412
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $412load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $416call_function.3 = call $412load_global.1(dim, func=$412load_global.1, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $418get_iter.4 = getiter(value=$416call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi420.1 = $418get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $420for_iter.2 = iternext(value=$phi420.1)
DEBUG:numba.core.ssa:on stmt: $420for_iter.3 = pair_first(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $420for_iter.4 = pair_second(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi422.2 = $420for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $420for_iter.4, 422, 534
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: d = $phi422.2
DEBUG:numba.core.ssa:on stmt: $424load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $432binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $438binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $440binary_subtract.11 = $432binary_subscr.7 - $438binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $442binary_multiply.12 = grad_coeff * $440binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $424load_global.3($442binary_multiply.12, func=$424load_global.3, args=[Var($442binary_multiply.12, layouts.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool450 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $450pred = call bool450(densmap_flag, func=bool450, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $450pred, 452, 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $454load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $const456.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $460binary_multiply.6 = $const456.4 * grad_cor_coeff
DEBUG:numba.core.ssa:on stmt: $466binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $474binary_subtract.13 = $466binary_subscr.9 - $472binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $476binary_multiply.14 = $460binary_multiply.6 * $474binary_subtract.13
DEBUG:numba.core.ssa:on stmt: $478call_function.15 = call $454load_global.3($476binary_multiply.14, func=$454load_global.3, args=[Var($476binary_multiply.14, layouts.py:148)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$478call_function.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_d = $480inplace_add.16
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $490binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $496binary_multiply.9 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $498inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$490binary_subscr.6, rhs=$496binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $498inplace_add.10
DEBUG:numba.core.ssa:on stmt: bool508 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $508pred = call bool508(move_other, func=bool508, args=(Var(move_other, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $508pred, 510, 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $520unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
DEBUG:numba.core.ssa:on stmt: $524binary_multiply.10 = $520unary_negative.8 * alpha
DEBUG:numba.core.ssa:on stmt: $526inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$516binary_subscr.6, rhs=$524binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: other[d] = $526inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 532
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 534
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $540binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $546binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $548inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$540binary_subscr.5, rhs=$546binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample[i] = $548inplace_add.9
DEBUG:numba.core.ssa:on stmt: $554load_global.10 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $564binary_subtract.15 = n - $562binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $570binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $572binary_true_divide.19 = $564binary_subtract.15 / $570binary_subscr.18
DEBUG:numba.core.ssa:on stmt: n_neg_samples = call $554load_global.10($572binary_true_divide.19, func=$554load_global.10, args=[Var($572binary_true_divide.19, layouts.py:157)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $578load_global.21 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $582call_function.23 = call $578load_global.21(n_neg_samples, func=$578load_global.21, args=[Var(n_neg_samples, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $584get_iter.24 = getiter(value=$582call_function.23)
DEBUG:numba.core.ssa:on stmt: $phi586.1 = $584get_iter.24
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 586
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $586for_iter.2 = iternext(value=$phi586.1)
DEBUG:numba.core.ssa:on stmt: $586for_iter.3 = pair_first(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $586for_iter.4 = pair_second(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi588.2 = $586for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $586for_iter.4, 588, 776
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 588
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: p = $phi588.2
DEBUG:numba.core.ssa:on stmt: $590load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x0000017A062CD5A0>))
DEBUG:numba.core.ssa:on stmt: $596binary_subscr.6 = getitem(value=rng_state_per_sample, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $598call_function.7 = call $590load_global.3($596binary_subscr.6, func=$590load_global.3, args=[Var($596binary_subscr.6, layouts.py:161)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: k.1 = $598call_function.7 % n_vertices
DEBUG:numba.core.ssa:on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='k' stmt=other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: other = getitem(value=tail_embedding, index=k.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $614load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $614load_global.13(current, other, func=$614load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const626.18 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $628compare_op.19 = dist_squared > $const626.18
DEBUG:numba.core.ssa:on stmt: bool632 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $632pred = call bool632($628compare_op.19, func=bool632, args=(Var($628compare_op.19, layouts.py:167),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $632pred, 634, 678
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 634
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $const634.2 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $638binary_multiply.4 = $const634.2 * gamma
DEBUG:numba.core.ssa:on stmt: grad_coeff = $638binary_multiply.4 * b
DEBUG:numba.core.ssa:on stmt: $const648.8 = const(float, 0.001)
DEBUG:numba.core.ssa:on stmt: $652binary_add.10 = $const648.8 + dist_squared
DEBUG:numba.core.ssa:on stmt: $656load_global.12 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $662call_function.15 = call $656load_global.12(dist_squared, b, func=$656load_global.12, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $664binary_multiply.16 = a * $662call_function.15
DEBUG:numba.core.ssa:on stmt: $const666.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $668binary_add.18 = $664binary_multiply.16 + $const666.17
DEBUG:numba.core.ssa:on stmt: $670binary_multiply.19 = $652binary_add.10 * $668binary_add.18
DEBUG:numba.core.ssa:on stmt: $672inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$670binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $672inplace_true_divide.20
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 678
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $682compare_op.4 = j == k
DEBUG:numba.core.ssa:find_def var='k' stmt=$682compare_op.4 = j == k
DEBUG:numba.core.ssa:find_def_from_top label 678
DEBUG:numba.core.ssa:idom 588 from label 678
DEBUG:numba.core.ssa:find_def_from_bottom label 588
DEBUG:numba.core.ssa:replaced with: $682compare_op.4 = j == k.1
DEBUG:numba.core.ssa:on stmt: bool686 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $686pred = call bool686($682compare_op.4, func=bool686, args=(Var($682compare_op.4, layouts.py:172),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $686pred, 688, 692
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 688
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 692
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: grad_coeff = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 696
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $696load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $700call_function.4 = call $696load_global.2(dim, func=$696load_global.2, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $702get_iter.5 = getiter(value=$700call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi704.2 = $702get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 704
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $704for_iter.3 = iternext(value=$phi704.2)
DEBUG:numba.core.ssa:on stmt: $704for_iter.4 = pair_first(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $704for_iter.5 = pair_second(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi706.3 = $704for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $704for_iter.5, 706, 772
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 706
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: d = $phi706.3
DEBUG:numba.core.ssa:on stmt: $const710.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $712compare_op.6 = grad_coeff > $const710.5
DEBUG:numba.core.ssa:on stmt: bool716 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $716pred = call bool716($712compare_op.6, func=bool716, args=(Var($712compare_op.6, layouts.py:178),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $716pred, 718, 744
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 718
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $718load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $726binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $732binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subtract.11 = $726binary_subscr.7 - $732binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $736binary_multiply.12 = grad_coeff * $734binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $718load_global.3($736binary_multiply.12, func=$718load_global.3, args=[Var($736binary_multiply.12, layouts.py:179)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 744
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: grad_d = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 748
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $754binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $760binary_multiply.10 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $762inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$754binary_subscr.7, rhs=$760binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $762inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 772
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 776
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $782binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $790binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $792binary_multiply.10 = n_neg_samples * $790binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $794inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$782binary_subscr.5, rhs=$792binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample[i] = $794inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 800
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 802
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: $const802.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $804return_value.1 = cast(value=$const802.0)
DEBUG:numba.core.ssa:on stmt: return $804return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 803
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1270>
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:Fix SSA violator on var other
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: head_embedding = arg(0, name=head_embedding)
DEBUG:numba.core.ssa:on stmt: tail_embedding = arg(1, name=tail_embedding)
DEBUG:numba.core.ssa:on stmt: head = arg(2, name=head)
DEBUG:numba.core.ssa:on stmt: tail = arg(3, name=tail)
DEBUG:numba.core.ssa:on stmt: n_vertices = arg(4, name=n_vertices)
DEBUG:numba.core.ssa:on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
DEBUG:numba.core.ssa:on stmt: a = arg(6, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(7, name=b)
DEBUG:numba.core.ssa:on stmt: rng_state_per_sample = arg(8, name=rng_state_per_sample)
DEBUG:numba.core.ssa:on stmt: gamma = arg(9, name=gamma)
DEBUG:numba.core.ssa:on stmt: dim = arg(10, name=dim)
DEBUG:numba.core.ssa:on stmt: move_other = arg(11, name=move_other)
DEBUG:numba.core.ssa:on stmt: alpha = arg(12, name=alpha)
DEBUG:numba.core.ssa:on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
DEBUG:numba.core.ssa:on stmt: n = arg(16, name=n)
DEBUG:numba.core.ssa:on stmt: densmap_flag = arg(17, name=densmap_flag)
DEBUG:numba.core.ssa:on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_sum = arg(19, name=dens_re_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_cov = arg(20, name=dens_re_cov)
DEBUG:numba.core.ssa:on stmt: dens_re_std = arg(21, name=dens_re_std)
DEBUG:numba.core.ssa:on stmt: dens_re_mean = arg(22, name=dens_re_mean)
DEBUG:numba.core.ssa:on stmt: dens_lambda = arg(23, name=dens_lambda)
DEBUG:numba.core.ssa:on stmt: dens_R = arg(24, name=dens_R)
DEBUG:numba.core.ssa:on stmt: dens_mu = arg(25, name=dens_mu)
DEBUG:numba.core.ssa:on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numba: <module 'numba' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numba\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:92)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
DEBUG:numba.core.ssa:on stmt: $phi20.0 = $16get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $20for_iter.1 = iternext(value=$phi20.0)
DEBUG:numba.core.ssa:on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi22.1 = $20for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $20for_iter.3, 22, 802
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: i = $phi22.1
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($32compare_op.6, func=bool36, args=(Var($32compare_op.6, layouts.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $36pred, 38, 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 38
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:first assign: other
DEBUG:numba.core.ssa:replaced with: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $70load_global.13(current, other, func=$70load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $const84.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const86.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $90load_global.4 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_multiply.8 = a * $96call_function.7
DEBUG:numba.core.ssa:on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
DEBUG:numba.core.ssa:on stmt: phi = $const84.1 / $100binary_add.9
DEBUG:numba.core.ssa:on stmt: $110binary_multiply.13 = a * b
DEBUG:numba.core.ssa:on stmt: $112load_global.14 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const118.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subtract.18 = b - $const118.17
DEBUG:numba.core.ssa:on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:100), Var($120binary_subtract.18, layouts.py:105)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
DEBUG:numba.core.ssa:on stmt: $const126.21 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $130load_global.23 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_multiply.27 = a * $136call_function.26
DEBUG:numba.core.ssa:on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
DEBUG:numba.core.ssa:on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
DEBUG:numba.core.ssa:on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_jk = phi / $152binary_subscr.33
DEBUG:numba.core.ssa:on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_kj = phi / $164binary_subscr.38
DEBUG:numba.core.ssa:on stmt: $const172.41 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const176.43 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180binary_subtract.45 = $const176.43 - phi
DEBUG:numba.core.ssa:on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
DEBUG:numba.core.ssa:on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
DEBUG:numba.core.ssa:on stmt: $186load_global.48 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:112)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
DEBUG:numba.core.ssa:on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
DEBUG:numba.core.ssa:on stmt: drk = q_jk * $202binary_add.56
DEBUG:numba.core.ssa:on stmt: $const210.59 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const214.61 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.63 = $const214.61 - phi
DEBUG:numba.core.ssa:on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
DEBUG:numba.core.ssa:on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
DEBUG:numba.core.ssa:on stmt: $224load_global.66 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
DEBUG:numba.core.ssa:on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
DEBUG:numba.core.ssa:on stmt: drj = q_kj * $240binary_add.74
DEBUG:numba.core.ssa:on stmt: re_std_sq = dens_re_std * dens_re_std
DEBUG:numba.core.ssa:on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
DEBUG:numba.core.ssa:on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
DEBUG:numba.core.ssa:on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
DEBUG:numba.core.ssa:on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
DEBUG:numba.core.ssa:on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
DEBUG:numba.core.ssa:on stmt: $320binary_multiply.110 = weight_k * drk
DEBUG:numba.core.ssa:on stmt: $326binary_multiply.113 = weight_j * drj
DEBUG:numba.core.ssa:on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
DEBUG:numba.core.ssa:on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
DEBUG:numba.core.ssa:on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
DEBUG:numba.core.ssa:on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
DEBUG:numba.core.ssa:on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $const352.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $354compare_op.3 = dist_squared > $const352.2
DEBUG:numba.core.ssa:on stmt: bool356 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $356pred = call bool356($354compare_op.3, func=bool356, args=(Var($354compare_op.3, layouts.py:136),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $356pred, 358, 408
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $const358.1 = const(float, -2.0)
DEBUG:numba.core.ssa:on stmt: $362binary_multiply.3 = $const358.1 * a
DEBUG:numba.core.ssa:on stmt: $366binary_multiply.5 = $362binary_multiply.3 * b
DEBUG:numba.core.ssa:on stmt: $368load_global.6 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const374.9 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.10 = b - $const374.9
DEBUG:numba.core.ssa:on stmt: $378call_function.11 = call $368load_global.6(dist_squared, $376binary_subtract.10, func=$368load_global.6, args=[Var(dist_squared, layouts.py:100), Var($376binary_subtract.10, layouts.py:137)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $366binary_multiply.5 * $378call_function.11
DEBUG:numba.core.ssa:on stmt: $388load_global.15 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $394call_function.18 = call $388load_global.15(dist_squared, b, func=$388load_global.15, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $396binary_multiply.19 = a * $394call_function.18
DEBUG:numba.core.ssa:on stmt: $const398.20 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $400binary_add.21 = $396binary_multiply.19 + $const398.20
DEBUG:numba.core.ssa:on stmt: $402inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$400binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $402inplace_true_divide.22
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 408
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: grad_coeff = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 412
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $412load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $416call_function.3 = call $412load_global.1(dim, func=$412load_global.1, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $418get_iter.4 = getiter(value=$416call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi420.1 = $418get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $420for_iter.2 = iternext(value=$phi420.1)
DEBUG:numba.core.ssa:on stmt: $420for_iter.3 = pair_first(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $420for_iter.4 = pair_second(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi422.2 = $420for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $420for_iter.4, 422, 534
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: d = $phi422.2
DEBUG:numba.core.ssa:on stmt: $424load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $432binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $438binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $440binary_subtract.11 = $432binary_subscr.7 - $438binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $442binary_multiply.12 = grad_coeff * $440binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $424load_global.3($442binary_multiply.12, func=$424load_global.3, args=[Var($442binary_multiply.12, layouts.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool450 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $450pred = call bool450(densmap_flag, func=bool450, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $450pred, 452, 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $454load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $const456.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $460binary_multiply.6 = $const456.4 * grad_cor_coeff
DEBUG:numba.core.ssa:on stmt: $466binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $474binary_subtract.13 = $466binary_subscr.9 - $472binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $476binary_multiply.14 = $460binary_multiply.6 * $474binary_subtract.13
DEBUG:numba.core.ssa:on stmt: $478call_function.15 = call $454load_global.3($476binary_multiply.14, func=$454load_global.3, args=[Var($476binary_multiply.14, layouts.py:148)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$478call_function.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_d = $480inplace_add.16
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $490binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $496binary_multiply.9 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $498inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$490binary_subscr.6, rhs=$496binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $498inplace_add.10
DEBUG:numba.core.ssa:on stmt: bool508 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $508pred = call bool508(move_other, func=bool508, args=(Var(move_other, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $508pred, 510, 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $520unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
DEBUG:numba.core.ssa:on stmt: $524binary_multiply.10 = $520unary_negative.8 * alpha
DEBUG:numba.core.ssa:on stmt: $526inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$516binary_subscr.6, rhs=$524binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: other[d] = $526inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 532
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 534
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $540binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $546binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $548inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$540binary_subscr.5, rhs=$546binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample[i] = $548inplace_add.9
DEBUG:numba.core.ssa:on stmt: $554load_global.10 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $564binary_subtract.15 = n - $562binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $570binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $572binary_true_divide.19 = $564binary_subtract.15 / $570binary_subscr.18
DEBUG:numba.core.ssa:on stmt: n_neg_samples = call $554load_global.10($572binary_true_divide.19, func=$554load_global.10, args=[Var($572binary_true_divide.19, layouts.py:157)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $578load_global.21 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $582call_function.23 = call $578load_global.21(n_neg_samples, func=$578load_global.21, args=[Var(n_neg_samples, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $584get_iter.24 = getiter(value=$582call_function.23)
DEBUG:numba.core.ssa:on stmt: $phi586.1 = $584get_iter.24
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 586
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $586for_iter.2 = iternext(value=$phi586.1)
DEBUG:numba.core.ssa:on stmt: $586for_iter.3 = pair_first(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $586for_iter.4 = pair_second(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi588.2 = $586for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $586for_iter.4, 588, 776
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 588
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: p = $phi588.2
DEBUG:numba.core.ssa:on stmt: $590load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x0000017A062CD5A0>))
DEBUG:numba.core.ssa:on stmt: $596binary_subscr.6 = getitem(value=rng_state_per_sample, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $598call_function.7 = call $590load_global.3($596binary_subscr.6, func=$590load_global.3, args=[Var($596binary_subscr.6, layouts.py:161)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: k.1 = $598call_function.7 % n_vertices
DEBUG:numba.core.ssa:on stmt: other = getitem(value=tail_embedding, index=k.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: other.1 = getitem(value=tail_embedding, index=k.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $614load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $614load_global.13(current, other, func=$614load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const626.18 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $628compare_op.19 = dist_squared > $const626.18
DEBUG:numba.core.ssa:on stmt: bool632 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $632pred = call bool632($628compare_op.19, func=bool632, args=(Var($628compare_op.19, layouts.py:167),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $632pred, 634, 678
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 634
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $const634.2 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $638binary_multiply.4 = $const634.2 * gamma
DEBUG:numba.core.ssa:on stmt: grad_coeff = $638binary_multiply.4 * b
DEBUG:numba.core.ssa:on stmt: $const648.8 = const(float, 0.001)
DEBUG:numba.core.ssa:on stmt: $652binary_add.10 = $const648.8 + dist_squared
DEBUG:numba.core.ssa:on stmt: $656load_global.12 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $662call_function.15 = call $656load_global.12(dist_squared, b, func=$656load_global.12, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $664binary_multiply.16 = a * $662call_function.15
DEBUG:numba.core.ssa:on stmt: $const666.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $668binary_add.18 = $664binary_multiply.16 + $const666.17
DEBUG:numba.core.ssa:on stmt: $670binary_multiply.19 = $652binary_add.10 * $668binary_add.18
DEBUG:numba.core.ssa:on stmt: $672inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$670binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $672inplace_true_divide.20
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 678
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $682compare_op.4 = j == k.1
DEBUG:numba.core.ssa:on stmt: bool686 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $686pred = call bool686($682compare_op.4, func=bool686, args=(Var($682compare_op.4, layouts.py:172),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $686pred, 688, 692
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 688
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 692
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: grad_coeff = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 696
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $696load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $700call_function.4 = call $696load_global.2(dim, func=$696load_global.2, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $702get_iter.5 = getiter(value=$700call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi704.2 = $702get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 704
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $704for_iter.3 = iternext(value=$phi704.2)
DEBUG:numba.core.ssa:on stmt: $704for_iter.4 = pair_first(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $704for_iter.5 = pair_second(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi706.3 = $704for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $704for_iter.5, 706, 772
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 706
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: d = $phi706.3
DEBUG:numba.core.ssa:on stmt: $const710.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $712compare_op.6 = grad_coeff > $const710.5
DEBUG:numba.core.ssa:on stmt: bool716 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $716pred = call bool716($712compare_op.6, func=bool716, args=(Var($712compare_op.6, layouts.py:178),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $716pred, 718, 744
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 718
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $718load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $726binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $732binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subtract.11 = $726binary_subscr.7 - $732binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $736binary_multiply.12 = grad_coeff * $734binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $718load_global.3($736binary_multiply.12, func=$718load_global.3, args=[Var($736binary_multiply.12, layouts.py:179)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 744
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: grad_d = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 748
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $754binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $760binary_multiply.10 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $762inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$754binary_subscr.7, rhs=$760binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $762inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 772
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 776
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $782binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $790binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $792binary_multiply.10 = n_neg_samples * $790binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $794inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$782binary_subscr.5, rhs=$792binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample[i] = $794inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 800
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 802
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $const802.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $804return_value.1 = cast(value=$const802.0)
DEBUG:numba.core.ssa:on stmt: return $804return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 803
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {38: [<numba.core.ir.Assign object at 0x0000017AA6BD0CD0>],
             588: [<numba.core.ir.Assign object at 0x0000017AA6BD0520>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: head_embedding = arg(0, name=head_embedding)
DEBUG:numba.core.ssa:on stmt: tail_embedding = arg(1, name=tail_embedding)
DEBUG:numba.core.ssa:on stmt: head = arg(2, name=head)
DEBUG:numba.core.ssa:on stmt: tail = arg(3, name=tail)
DEBUG:numba.core.ssa:on stmt: n_vertices = arg(4, name=n_vertices)
DEBUG:numba.core.ssa:on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
DEBUG:numba.core.ssa:on stmt: a = arg(6, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(7, name=b)
DEBUG:numba.core.ssa:on stmt: rng_state_per_sample = arg(8, name=rng_state_per_sample)
DEBUG:numba.core.ssa:on stmt: gamma = arg(9, name=gamma)
DEBUG:numba.core.ssa:on stmt: dim = arg(10, name=dim)
DEBUG:numba.core.ssa:on stmt: move_other = arg(11, name=move_other)
DEBUG:numba.core.ssa:on stmt: alpha = arg(12, name=alpha)
DEBUG:numba.core.ssa:on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
DEBUG:numba.core.ssa:on stmt: n = arg(16, name=n)
DEBUG:numba.core.ssa:on stmt: densmap_flag = arg(17, name=densmap_flag)
DEBUG:numba.core.ssa:on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_sum = arg(19, name=dens_re_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_cov = arg(20, name=dens_re_cov)
DEBUG:numba.core.ssa:on stmt: dens_re_std = arg(21, name=dens_re_std)
DEBUG:numba.core.ssa:on stmt: dens_re_mean = arg(22, name=dens_re_mean)
DEBUG:numba.core.ssa:on stmt: dens_lambda = arg(23, name=dens_lambda)
DEBUG:numba.core.ssa:on stmt: dens_R = arg(24, name=dens_R)
DEBUG:numba.core.ssa:on stmt: dens_mu = arg(25, name=dens_mu)
DEBUG:numba.core.ssa:on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numba: <module 'numba' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numba\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:92)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
DEBUG:numba.core.ssa:on stmt: $phi20.0 = $16get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $20for_iter.1 = iternext(value=$phi20.0)
DEBUG:numba.core.ssa:on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi22.1 = $20for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $20for_iter.3, 22, 802
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: i = $phi22.1
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($32compare_op.6, func=bool36, args=(Var($32compare_op.6, layouts.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $36pred, 38, 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 38
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $70load_global.13(current, other, func=$70load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='other' stmt=dist_squared = call $70load_global.13(current, other, func=$70load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $const84.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const86.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $90load_global.4 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_multiply.8 = a * $96call_function.7
DEBUG:numba.core.ssa:on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
DEBUG:numba.core.ssa:on stmt: phi = $const84.1 / $100binary_add.9
DEBUG:numba.core.ssa:on stmt: $110binary_multiply.13 = a * b
DEBUG:numba.core.ssa:on stmt: $112load_global.14 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const118.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subtract.18 = b - $const118.17
DEBUG:numba.core.ssa:on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:100), Var($120binary_subtract.18, layouts.py:105)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
DEBUG:numba.core.ssa:on stmt: $const126.21 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $130load_global.23 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_multiply.27 = a * $136call_function.26
DEBUG:numba.core.ssa:on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
DEBUG:numba.core.ssa:on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
DEBUG:numba.core.ssa:on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_jk = phi / $152binary_subscr.33
DEBUG:numba.core.ssa:on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_kj = phi / $164binary_subscr.38
DEBUG:numba.core.ssa:on stmt: $const172.41 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const176.43 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180binary_subtract.45 = $const176.43 - phi
DEBUG:numba.core.ssa:on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
DEBUG:numba.core.ssa:on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
DEBUG:numba.core.ssa:on stmt: $186load_global.48 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:112)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
DEBUG:numba.core.ssa:on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
DEBUG:numba.core.ssa:on stmt: drk = q_jk * $202binary_add.56
DEBUG:numba.core.ssa:on stmt: $const210.59 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const214.61 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.63 = $const214.61 - phi
DEBUG:numba.core.ssa:on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
DEBUG:numba.core.ssa:on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
DEBUG:numba.core.ssa:on stmt: $224load_global.66 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
DEBUG:numba.core.ssa:on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
DEBUG:numba.core.ssa:on stmt: drj = q_kj * $240binary_add.74
DEBUG:numba.core.ssa:on stmt: re_std_sq = dens_re_std * dens_re_std
DEBUG:numba.core.ssa:on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
DEBUG:numba.core.ssa:on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
DEBUG:numba.core.ssa:on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
DEBUG:numba.core.ssa:on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
DEBUG:numba.core.ssa:on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
DEBUG:numba.core.ssa:on stmt: $320binary_multiply.110 = weight_k * drk
DEBUG:numba.core.ssa:on stmt: $326binary_multiply.113 = weight_j * drj
DEBUG:numba.core.ssa:on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
DEBUG:numba.core.ssa:on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
DEBUG:numba.core.ssa:on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
DEBUG:numba.core.ssa:on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
DEBUG:numba.core.ssa:on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $const352.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $354compare_op.3 = dist_squared > $const352.2
DEBUG:numba.core.ssa:on stmt: bool356 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $356pred = call bool356($354compare_op.3, func=bool356, args=(Var($354compare_op.3, layouts.py:136),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $356pred, 358, 408
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $const358.1 = const(float, -2.0)
DEBUG:numba.core.ssa:on stmt: $362binary_multiply.3 = $const358.1 * a
DEBUG:numba.core.ssa:on stmt: $366binary_multiply.5 = $362binary_multiply.3 * b
DEBUG:numba.core.ssa:on stmt: $368load_global.6 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const374.9 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.10 = b - $const374.9
DEBUG:numba.core.ssa:on stmt: $378call_function.11 = call $368load_global.6(dist_squared, $376binary_subtract.10, func=$368load_global.6, args=[Var(dist_squared, layouts.py:100), Var($376binary_subtract.10, layouts.py:137)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $366binary_multiply.5 * $378call_function.11
DEBUG:numba.core.ssa:on stmt: $388load_global.15 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $394call_function.18 = call $388load_global.15(dist_squared, b, func=$388load_global.15, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $396binary_multiply.19 = a * $394call_function.18
DEBUG:numba.core.ssa:on stmt: $const398.20 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $400binary_add.21 = $396binary_multiply.19 + $const398.20
DEBUG:numba.core.ssa:on stmt: $402inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$400binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $402inplace_true_divide.22
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 408
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: grad_coeff = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 412
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $412load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $416call_function.3 = call $412load_global.1(dim, func=$412load_global.1, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $418get_iter.4 = getiter(value=$416call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi420.1 = $418get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $420for_iter.2 = iternext(value=$phi420.1)
DEBUG:numba.core.ssa:on stmt: $420for_iter.3 = pair_first(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $420for_iter.4 = pair_second(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi422.2 = $420for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $420for_iter.4, 422, 534
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: d = $phi422.2
DEBUG:numba.core.ssa:on stmt: $424load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $432binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $438binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='other' stmt=$438binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 422
DEBUG:numba.core.ssa:idom 420 from label 422
DEBUG:numba.core.ssa:find_def_from_bottom label 420
DEBUG:numba.core.ssa:find_def_from_top label 420
DEBUG:numba.core.ssa:idom 412 from label 420
DEBUG:numba.core.ssa:find_def_from_bottom label 412
DEBUG:numba.core.ssa:find_def_from_top label 412
DEBUG:numba.core.ssa:idom 350 from label 412
DEBUG:numba.core.ssa:find_def_from_bottom label 350
DEBUG:numba.core.ssa:find_def_from_top label 350
DEBUG:numba.core.ssa:idom 38 from label 350
DEBUG:numba.core.ssa:find_def_from_bottom label 38
DEBUG:numba.core.ssa:on stmt: $440binary_subtract.11 = $432binary_subscr.7 - $438binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $442binary_multiply.12 = grad_coeff * $440binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $424load_global.3($442binary_multiply.12, func=$424load_global.3, args=[Var($442binary_multiply.12, layouts.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool450 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $450pred = call bool450(densmap_flag, func=bool450, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $450pred, 452, 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $454load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $const456.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $460binary_multiply.6 = $const456.4 * grad_cor_coeff
DEBUG:numba.core.ssa:on stmt: $466binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='other' stmt=$472binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 452
DEBUG:numba.core.ssa:idom 422 from label 452
DEBUG:numba.core.ssa:find_def_from_bottom label 422
DEBUG:numba.core.ssa:find_def_from_top label 422
DEBUG:numba.core.ssa:idom 420 from label 422
DEBUG:numba.core.ssa:find_def_from_bottom label 420
DEBUG:numba.core.ssa:find_def_from_top label 420
DEBUG:numba.core.ssa:idom 412 from label 420
DEBUG:numba.core.ssa:find_def_from_bottom label 412
DEBUG:numba.core.ssa:find_def_from_top label 412
DEBUG:numba.core.ssa:idom 350 from label 412
DEBUG:numba.core.ssa:find_def_from_bottom label 350
DEBUG:numba.core.ssa:find_def_from_top label 350
DEBUG:numba.core.ssa:idom 38 from label 350
DEBUG:numba.core.ssa:find_def_from_bottom label 38
DEBUG:numba.core.ssa:on stmt: $474binary_subtract.13 = $466binary_subscr.9 - $472binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $476binary_multiply.14 = $460binary_multiply.6 * $474binary_subtract.13
DEBUG:numba.core.ssa:on stmt: $478call_function.15 = call $454load_global.3($476binary_multiply.14, func=$454load_global.3, args=[Var($476binary_multiply.14, layouts.py:148)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$478call_function.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_d = $480inplace_add.16
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $490binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $496binary_multiply.9 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $498inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$490binary_subscr.6, rhs=$496binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $498inplace_add.10
DEBUG:numba.core.ssa:on stmt: bool508 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $508pred = call bool508(move_other, func=bool508, args=(Var(move_other, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $508pred, 510, 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='other' stmt=$516binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 510
DEBUG:numba.core.ssa:idom 484 from label 510
DEBUG:numba.core.ssa:find_def_from_bottom label 484
DEBUG:numba.core.ssa:find_def_from_top label 484
DEBUG:numba.core.ssa:idom 422 from label 484
DEBUG:numba.core.ssa:find_def_from_bottom label 422
DEBUG:numba.core.ssa:find_def_from_top label 422
DEBUG:numba.core.ssa:idom 420 from label 422
DEBUG:numba.core.ssa:find_def_from_bottom label 420
DEBUG:numba.core.ssa:find_def_from_top label 420
DEBUG:numba.core.ssa:idom 412 from label 420
DEBUG:numba.core.ssa:find_def_from_bottom label 412
DEBUG:numba.core.ssa:find_def_from_top label 412
DEBUG:numba.core.ssa:idom 350 from label 412
DEBUG:numba.core.ssa:find_def_from_bottom label 350
DEBUG:numba.core.ssa:find_def_from_top label 350
DEBUG:numba.core.ssa:idom 38 from label 350
DEBUG:numba.core.ssa:find_def_from_bottom label 38
DEBUG:numba.core.ssa:on stmt: $520unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
DEBUG:numba.core.ssa:on stmt: $524binary_multiply.10 = $520unary_negative.8 * alpha
DEBUG:numba.core.ssa:on stmt: $526inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$516binary_subscr.6, rhs=$524binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: other[d] = $526inplace_add.11
DEBUG:numba.core.ssa:find_def var='other' stmt=other[d] = $526inplace_add.11
DEBUG:numba.core.ssa:find_def_from_top label 510
DEBUG:numba.core.ssa:idom 484 from label 510
DEBUG:numba.core.ssa:find_def_from_bottom label 484
DEBUG:numba.core.ssa:find_def_from_top label 484
DEBUG:numba.core.ssa:idom 422 from label 484
DEBUG:numba.core.ssa:find_def_from_bottom label 422
DEBUG:numba.core.ssa:find_def_from_top label 422
DEBUG:numba.core.ssa:idom 420 from label 422
DEBUG:numba.core.ssa:find_def_from_bottom label 420
DEBUG:numba.core.ssa:find_def_from_top label 420
DEBUG:numba.core.ssa:idom 412 from label 420
DEBUG:numba.core.ssa:find_def_from_bottom label 412
DEBUG:numba.core.ssa:find_def_from_top label 412
DEBUG:numba.core.ssa:idom 350 from label 412
DEBUG:numba.core.ssa:find_def_from_bottom label 350
DEBUG:numba.core.ssa:find_def_from_top label 350
DEBUG:numba.core.ssa:idom 38 from label 350
DEBUG:numba.core.ssa:find_def_from_bottom label 38
DEBUG:numba.core.ssa:on stmt: jump 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 532
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 534
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $540binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $546binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $548inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$540binary_subscr.5, rhs=$546binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample[i] = $548inplace_add.9
DEBUG:numba.core.ssa:on stmt: $554load_global.10 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $564binary_subtract.15 = n - $562binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $570binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $572binary_true_divide.19 = $564binary_subtract.15 / $570binary_subscr.18
DEBUG:numba.core.ssa:on stmt: n_neg_samples = call $554load_global.10($572binary_true_divide.19, func=$554load_global.10, args=[Var($572binary_true_divide.19, layouts.py:157)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $578load_global.21 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $582call_function.23 = call $578load_global.21(n_neg_samples, func=$578load_global.21, args=[Var(n_neg_samples, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $584get_iter.24 = getiter(value=$582call_function.23)
DEBUG:numba.core.ssa:on stmt: $phi586.1 = $584get_iter.24
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 586
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $586for_iter.2 = iternext(value=$phi586.1)
DEBUG:numba.core.ssa:on stmt: $586for_iter.3 = pair_first(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $586for_iter.4 = pair_second(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi588.2 = $586for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $586for_iter.4, 588, 776
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 588
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: p = $phi588.2
DEBUG:numba.core.ssa:on stmt: $590load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x0000017A062CD5A0>))
DEBUG:numba.core.ssa:on stmt: $596binary_subscr.6 = getitem(value=rng_state_per_sample, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $598call_function.7 = call $590load_global.3($596binary_subscr.6, func=$590load_global.3, args=[Var($596binary_subscr.6, layouts.py:161)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: k.1 = $598call_function.7 % n_vertices
DEBUG:numba.core.ssa:on stmt: other.1 = getitem(value=tail_embedding, index=k.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $614load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $614load_global.13(current, other, func=$614load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='other' stmt=dist_squared = call $614load_global.13(current, other, func=$614load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: dist_squared = call $614load_global.13(current, other.1, func=$614load_global.13, args=[Var(current, layouts.py:97), Var(other.1, layouts.py:163)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const626.18 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $628compare_op.19 = dist_squared > $const626.18
DEBUG:numba.core.ssa:on stmt: bool632 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $632pred = call bool632($628compare_op.19, func=bool632, args=(Var($628compare_op.19, layouts.py:167),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $632pred, 634, 678
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 634
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $const634.2 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $638binary_multiply.4 = $const634.2 * gamma
DEBUG:numba.core.ssa:on stmt: grad_coeff = $638binary_multiply.4 * b
DEBUG:numba.core.ssa:on stmt: $const648.8 = const(float, 0.001)
DEBUG:numba.core.ssa:on stmt: $652binary_add.10 = $const648.8 + dist_squared
DEBUG:numba.core.ssa:on stmt: $656load_global.12 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $662call_function.15 = call $656load_global.12(dist_squared, b, func=$656load_global.12, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $664binary_multiply.16 = a * $662call_function.15
DEBUG:numba.core.ssa:on stmt: $const666.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $668binary_add.18 = $664binary_multiply.16 + $const666.17
DEBUG:numba.core.ssa:on stmt: $670binary_multiply.19 = $652binary_add.10 * $668binary_add.18
DEBUG:numba.core.ssa:on stmt: $672inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$670binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $672inplace_true_divide.20
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 678
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $682compare_op.4 = j == k.1
DEBUG:numba.core.ssa:on stmt: bool686 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $686pred = call bool686($682compare_op.4, func=bool686, args=(Var($682compare_op.4, layouts.py:172),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $686pred, 688, 692
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 688
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 692
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: grad_coeff = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 696
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $696load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $700call_function.4 = call $696load_global.2(dim, func=$696load_global.2, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $702get_iter.5 = getiter(value=$700call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi704.2 = $702get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 704
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $704for_iter.3 = iternext(value=$phi704.2)
DEBUG:numba.core.ssa:on stmt: $704for_iter.4 = pair_first(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $704for_iter.5 = pair_second(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi706.3 = $704for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $704for_iter.5, 706, 772
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 706
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: d = $phi706.3
DEBUG:numba.core.ssa:on stmt: $const710.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $712compare_op.6 = grad_coeff > $const710.5
DEBUG:numba.core.ssa:on stmt: bool716 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $716pred = call bool716($712compare_op.6, func=bool716, args=(Var($712compare_op.6, layouts.py:178),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $716pred, 718, 744
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 718
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $718load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $726binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $732binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='other' stmt=$732binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 718
DEBUG:numba.core.ssa:idom 706 from label 718
DEBUG:numba.core.ssa:find_def_from_bottom label 706
DEBUG:numba.core.ssa:find_def_from_top label 706
DEBUG:numba.core.ssa:idom 704 from label 706
DEBUG:numba.core.ssa:find_def_from_bottom label 704
DEBUG:numba.core.ssa:find_def_from_top label 704
DEBUG:numba.core.ssa:idom 696 from label 704
DEBUG:numba.core.ssa:find_def_from_bottom label 696
DEBUG:numba.core.ssa:find_def_from_top label 696
DEBUG:numba.core.ssa:idom 588 from label 696
DEBUG:numba.core.ssa:find_def_from_bottom label 588
DEBUG:numba.core.ssa:replaced with: $732binary_subscr.10 = getitem(value=other.1, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subtract.11 = $726binary_subscr.7 - $732binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $736binary_multiply.12 = grad_coeff * $734binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $718load_global.3($736binary_multiply.12, func=$718load_global.3, args=[Var($736binary_multiply.12, layouts.py:179)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 744
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: grad_d = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 748
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $754binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $760binary_multiply.10 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $762inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$754binary_subscr.7, rhs=$760binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $762inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 772
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 776
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $782binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $790binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $792binary_multiply.10 = n_neg_samples * $790binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $794inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$782binary_subscr.5, rhs=$792binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample[i] = $794inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 800
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 802
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $const802.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $804return_value.1 = cast(value=$const802.0)
DEBUG:numba.core.ssa:on stmt: return $804return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 803
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:Fix SSA violator on var dist_squared
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: head_embedding = arg(0, name=head_embedding)
DEBUG:numba.core.ssa:on stmt: tail_embedding = arg(1, name=tail_embedding)
DEBUG:numba.core.ssa:on stmt: head = arg(2, name=head)
DEBUG:numba.core.ssa:on stmt: tail = arg(3, name=tail)
DEBUG:numba.core.ssa:on stmt: n_vertices = arg(4, name=n_vertices)
DEBUG:numba.core.ssa:on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
DEBUG:numba.core.ssa:on stmt: a = arg(6, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(7, name=b)
DEBUG:numba.core.ssa:on stmt: rng_state_per_sample = arg(8, name=rng_state_per_sample)
DEBUG:numba.core.ssa:on stmt: gamma = arg(9, name=gamma)
DEBUG:numba.core.ssa:on stmt: dim = arg(10, name=dim)
DEBUG:numba.core.ssa:on stmt: move_other = arg(11, name=move_other)
DEBUG:numba.core.ssa:on stmt: alpha = arg(12, name=alpha)
DEBUG:numba.core.ssa:on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
DEBUG:numba.core.ssa:on stmt: n = arg(16, name=n)
DEBUG:numba.core.ssa:on stmt: densmap_flag = arg(17, name=densmap_flag)
DEBUG:numba.core.ssa:on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_sum = arg(19, name=dens_re_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_cov = arg(20, name=dens_re_cov)
DEBUG:numba.core.ssa:on stmt: dens_re_std = arg(21, name=dens_re_std)
DEBUG:numba.core.ssa:on stmt: dens_re_mean = arg(22, name=dens_re_mean)
DEBUG:numba.core.ssa:on stmt: dens_lambda = arg(23, name=dens_lambda)
DEBUG:numba.core.ssa:on stmt: dens_R = arg(24, name=dens_R)
DEBUG:numba.core.ssa:on stmt: dens_mu = arg(25, name=dens_mu)
DEBUG:numba.core.ssa:on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numba: <module 'numba' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numba\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:92)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
DEBUG:numba.core.ssa:on stmt: $phi20.0 = $16get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: $20for_iter.1 = iternext(value=$phi20.0)
DEBUG:numba.core.ssa:on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi22.1 = $20for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $20for_iter.3, 22, 802
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: i = $phi22.1
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($32compare_op.6, func=bool36, args=(Var($32compare_op.6, layouts.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $36pred, 38, 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 38
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $70load_global.13(current, other, func=$70load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:first assign: dist_squared
DEBUG:numba.core.ssa:replaced with: dist_squared = call $70load_global.13(current, other, func=$70load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: $const84.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const86.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $90load_global.4 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_multiply.8 = a * $96call_function.7
DEBUG:numba.core.ssa:on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
DEBUG:numba.core.ssa:on stmt: phi = $const84.1 / $100binary_add.9
DEBUG:numba.core.ssa:on stmt: $110binary_multiply.13 = a * b
DEBUG:numba.core.ssa:on stmt: $112load_global.14 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const118.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subtract.18 = b - $const118.17
DEBUG:numba.core.ssa:on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:100), Var($120binary_subtract.18, layouts.py:105)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
DEBUG:numba.core.ssa:on stmt: $const126.21 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $130load_global.23 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_multiply.27 = a * $136call_function.26
DEBUG:numba.core.ssa:on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
DEBUG:numba.core.ssa:on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
DEBUG:numba.core.ssa:on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_jk = phi / $152binary_subscr.33
DEBUG:numba.core.ssa:on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_kj = phi / $164binary_subscr.38
DEBUG:numba.core.ssa:on stmt: $const172.41 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const176.43 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180binary_subtract.45 = $const176.43 - phi
DEBUG:numba.core.ssa:on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
DEBUG:numba.core.ssa:on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
DEBUG:numba.core.ssa:on stmt: $186load_global.48 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:112)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
DEBUG:numba.core.ssa:on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
DEBUG:numba.core.ssa:on stmt: drk = q_jk * $202binary_add.56
DEBUG:numba.core.ssa:on stmt: $const210.59 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const214.61 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.63 = $const214.61 - phi
DEBUG:numba.core.ssa:on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
DEBUG:numba.core.ssa:on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
DEBUG:numba.core.ssa:on stmt: $224load_global.66 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
DEBUG:numba.core.ssa:on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
DEBUG:numba.core.ssa:on stmt: drj = q_kj * $240binary_add.74
DEBUG:numba.core.ssa:on stmt: re_std_sq = dens_re_std * dens_re_std
DEBUG:numba.core.ssa:on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
DEBUG:numba.core.ssa:on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
DEBUG:numba.core.ssa:on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
DEBUG:numba.core.ssa:on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
DEBUG:numba.core.ssa:on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
DEBUG:numba.core.ssa:on stmt: $320binary_multiply.110 = weight_k * drk
DEBUG:numba.core.ssa:on stmt: $326binary_multiply.113 = weight_j * drj
DEBUG:numba.core.ssa:on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
DEBUG:numba.core.ssa:on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
DEBUG:numba.core.ssa:on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
DEBUG:numba.core.ssa:on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
DEBUG:numba.core.ssa:on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: $const352.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $354compare_op.3 = dist_squared > $const352.2
DEBUG:numba.core.ssa:on stmt: bool356 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $356pred = call bool356($354compare_op.3, func=bool356, args=(Var($354compare_op.3, layouts.py:136),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $356pred, 358, 408
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: $const358.1 = const(float, -2.0)
DEBUG:numba.core.ssa:on stmt: $362binary_multiply.3 = $const358.1 * a
DEBUG:numba.core.ssa:on stmt: $366binary_multiply.5 = $362binary_multiply.3 * b
DEBUG:numba.core.ssa:on stmt: $368load_global.6 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const374.9 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.10 = b - $const374.9
DEBUG:numba.core.ssa:on stmt: $378call_function.11 = call $368load_global.6(dist_squared, $376binary_subtract.10, func=$368load_global.6, args=[Var(dist_squared, layouts.py:100), Var($376binary_subtract.10, layouts.py:137)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $366binary_multiply.5 * $378call_function.11
DEBUG:numba.core.ssa:on stmt: $388load_global.15 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $394call_function.18 = call $388load_global.15(dist_squared, b, func=$388load_global.15, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $396binary_multiply.19 = a * $394call_function.18
DEBUG:numba.core.ssa:on stmt: $const398.20 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $400binary_add.21 = $396binary_multiply.19 + $const398.20
DEBUG:numba.core.ssa:on stmt: $402inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$400binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $402inplace_true_divide.22
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 408
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: grad_coeff = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 412
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: $412load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $416call_function.3 = call $412load_global.1(dim, func=$412load_global.1, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $418get_iter.4 = getiter(value=$416call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi420.1 = $418get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: $420for_iter.2 = iternext(value=$phi420.1)
DEBUG:numba.core.ssa:on stmt: $420for_iter.3 = pair_first(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $420for_iter.4 = pair_second(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi422.2 = $420for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $420for_iter.4, 422, 534
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: d = $phi422.2
DEBUG:numba.core.ssa:on stmt: $424load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $432binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $438binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $440binary_subtract.11 = $432binary_subscr.7 - $438binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $442binary_multiply.12 = grad_coeff * $440binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $424load_global.3($442binary_multiply.12, func=$424load_global.3, args=[Var($442binary_multiply.12, layouts.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool450 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $450pred = call bool450(densmap_flag, func=bool450, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $450pred, 452, 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: $454load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $const456.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $460binary_multiply.6 = $const456.4 * grad_cor_coeff
DEBUG:numba.core.ssa:on stmt: $466binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $474binary_subtract.13 = $466binary_subscr.9 - $472binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $476binary_multiply.14 = $460binary_multiply.6 * $474binary_subtract.13
DEBUG:numba.core.ssa:on stmt: $478call_function.15 = call $454load_global.3($476binary_multiply.14, func=$454load_global.3, args=[Var($476binary_multiply.14, layouts.py:148)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$478call_function.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_d = $480inplace_add.16
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: $490binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $496binary_multiply.9 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $498inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$490binary_subscr.6, rhs=$496binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $498inplace_add.10
DEBUG:numba.core.ssa:on stmt: bool508 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $508pred = call bool508(move_other, func=bool508, args=(Var(move_other, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $508pred, 510, 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $520unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
DEBUG:numba.core.ssa:on stmt: $524binary_multiply.10 = $520unary_negative.8 * alpha
DEBUG:numba.core.ssa:on stmt: $526inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$516binary_subscr.6, rhs=$524binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: other[d] = $526inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 532
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 534
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: $540binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $546binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $548inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$540binary_subscr.5, rhs=$546binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample[i] = $548inplace_add.9
DEBUG:numba.core.ssa:on stmt: $554load_global.10 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $564binary_subtract.15 = n - $562binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $570binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $572binary_true_divide.19 = $564binary_subtract.15 / $570binary_subscr.18
DEBUG:numba.core.ssa:on stmt: n_neg_samples = call $554load_global.10($572binary_true_divide.19, func=$554load_global.10, args=[Var($572binary_true_divide.19, layouts.py:157)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $578load_global.21 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $582call_function.23 = call $578load_global.21(n_neg_samples, func=$578load_global.21, args=[Var(n_neg_samples, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $584get_iter.24 = getiter(value=$582call_function.23)
DEBUG:numba.core.ssa:on stmt: $phi586.1 = $584get_iter.24
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 586
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: $586for_iter.2 = iternext(value=$phi586.1)
DEBUG:numba.core.ssa:on stmt: $586for_iter.3 = pair_first(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $586for_iter.4 = pair_second(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi588.2 = $586for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $586for_iter.4, 588, 776
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 588
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: p = $phi588.2
DEBUG:numba.core.ssa:on stmt: $590load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x0000017A062CD5A0>))
DEBUG:numba.core.ssa:on stmt: $596binary_subscr.6 = getitem(value=rng_state_per_sample, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $598call_function.7 = call $590load_global.3($596binary_subscr.6, func=$590load_global.3, args=[Var($596binary_subscr.6, layouts.py:161)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: k.1 = $598call_function.7 % n_vertices
DEBUG:numba.core.ssa:on stmt: other.1 = getitem(value=tail_embedding, index=k.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $614load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $614load_global.13(current, other.1, func=$614load_global.13, args=[Var(current, layouts.py:97), Var(other.1, layouts.py:163)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: dist_squared.1 = call $614load_global.13(current, other.1, func=$614load_global.13, args=[Var(current, layouts.py:97), Var(other.1, layouts.py:163)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const626.18 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $628compare_op.19 = dist_squared > $const626.18
DEBUG:numba.core.ssa:on stmt: bool632 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $632pred = call bool632($628compare_op.19, func=bool632, args=(Var($628compare_op.19, layouts.py:167),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $632pred, 634, 678
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 634
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: $const634.2 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $638binary_multiply.4 = $const634.2 * gamma
DEBUG:numba.core.ssa:on stmt: grad_coeff = $638binary_multiply.4 * b
DEBUG:numba.core.ssa:on stmt: $const648.8 = const(float, 0.001)
DEBUG:numba.core.ssa:on stmt: $652binary_add.10 = $const648.8 + dist_squared
DEBUG:numba.core.ssa:on stmt: $656load_global.12 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $662call_function.15 = call $656load_global.12(dist_squared, b, func=$656load_global.12, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $664binary_multiply.16 = a * $662call_function.15
DEBUG:numba.core.ssa:on stmt: $const666.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $668binary_add.18 = $664binary_multiply.16 + $const666.17
DEBUG:numba.core.ssa:on stmt: $670binary_multiply.19 = $652binary_add.10 * $668binary_add.18
DEBUG:numba.core.ssa:on stmt: $672inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$670binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $672inplace_true_divide.20
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 678
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: $682compare_op.4 = j == k.1
DEBUG:numba.core.ssa:on stmt: bool686 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $686pred = call bool686($682compare_op.4, func=bool686, args=(Var($682compare_op.4, layouts.py:172),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $686pred, 688, 692
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 688
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 692
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: grad_coeff = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 696
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: $696load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $700call_function.4 = call $696load_global.2(dim, func=$696load_global.2, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $702get_iter.5 = getiter(value=$700call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi704.2 = $702get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 704
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: $704for_iter.3 = iternext(value=$phi704.2)
DEBUG:numba.core.ssa:on stmt: $704for_iter.4 = pair_first(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $704for_iter.5 = pair_second(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi706.3 = $704for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $704for_iter.5, 706, 772
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 706
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: d = $phi706.3
DEBUG:numba.core.ssa:on stmt: $const710.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $712compare_op.6 = grad_coeff > $const710.5
DEBUG:numba.core.ssa:on stmt: bool716 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $716pred = call bool716($712compare_op.6, func=bool716, args=(Var($712compare_op.6, layouts.py:178),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $716pred, 718, 744
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 718
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: $718load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $726binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $732binary_subscr.10 = getitem(value=other.1, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subtract.11 = $726binary_subscr.7 - $732binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $736binary_multiply.12 = grad_coeff * $734binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $718load_global.3($736binary_multiply.12, func=$718load_global.3, args=[Var($736binary_multiply.12, layouts.py:179)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 744
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: grad_d = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 748
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: $754binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $760binary_multiply.10 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $762inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$754binary_subscr.7, rhs=$760binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $762inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 772
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 776
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: $782binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $790binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $792binary_multiply.10 = n_neg_samples * $790binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $794inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$782binary_subscr.5, rhs=$792binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample[i] = $794inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 800
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 802
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: $const802.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $804return_value.1 = cast(value=$const802.0)
DEBUG:numba.core.ssa:on stmt: return $804return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 803
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD14B0>
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {38: [<numba.core.ir.Assign object at 0x0000017AA6BD10C0>],
             588: [<numba.core.ir.Assign object at 0x0000017AA6BD1660>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: head_embedding = arg(0, name=head_embedding)
DEBUG:numba.core.ssa:on stmt: tail_embedding = arg(1, name=tail_embedding)
DEBUG:numba.core.ssa:on stmt: head = arg(2, name=head)
DEBUG:numba.core.ssa:on stmt: tail = arg(3, name=tail)
DEBUG:numba.core.ssa:on stmt: n_vertices = arg(4, name=n_vertices)
DEBUG:numba.core.ssa:on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
DEBUG:numba.core.ssa:on stmt: a = arg(6, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(7, name=b)
DEBUG:numba.core.ssa:on stmt: rng_state_per_sample = arg(8, name=rng_state_per_sample)
DEBUG:numba.core.ssa:on stmt: gamma = arg(9, name=gamma)
DEBUG:numba.core.ssa:on stmt: dim = arg(10, name=dim)
DEBUG:numba.core.ssa:on stmt: move_other = arg(11, name=move_other)
DEBUG:numba.core.ssa:on stmt: alpha = arg(12, name=alpha)
DEBUG:numba.core.ssa:on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
DEBUG:numba.core.ssa:on stmt: n = arg(16, name=n)
DEBUG:numba.core.ssa:on stmt: densmap_flag = arg(17, name=densmap_flag)
DEBUG:numba.core.ssa:on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_sum = arg(19, name=dens_re_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_cov = arg(20, name=dens_re_cov)
DEBUG:numba.core.ssa:on stmt: dens_re_std = arg(21, name=dens_re_std)
DEBUG:numba.core.ssa:on stmt: dens_re_mean = arg(22, name=dens_re_mean)
DEBUG:numba.core.ssa:on stmt: dens_lambda = arg(23, name=dens_lambda)
DEBUG:numba.core.ssa:on stmt: dens_R = arg(24, name=dens_R)
DEBUG:numba.core.ssa:on stmt: dens_mu = arg(25, name=dens_mu)
DEBUG:numba.core.ssa:on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numba: <module 'numba' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numba\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:92)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
DEBUG:numba.core.ssa:on stmt: $phi20.0 = $16get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $20for_iter.1 = iternext(value=$phi20.0)
DEBUG:numba.core.ssa:on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi22.1 = $20for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $20for_iter.3, 22, 802
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: i = $phi22.1
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($32compare_op.6, func=bool36, args=(Var($32compare_op.6, layouts.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $36pred, 38, 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 38
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $70load_global.13(current, other, func=$70load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $const84.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const86.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $90load_global.4 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='dist_squared' stmt=$96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 84
DEBUG:numba.core.ssa:idom 38 from label 84
DEBUG:numba.core.ssa:find_def_from_bottom label 38
DEBUG:numba.core.ssa:on stmt: $98binary_multiply.8 = a * $96call_function.7
DEBUG:numba.core.ssa:on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
DEBUG:numba.core.ssa:on stmt: phi = $const84.1 / $100binary_add.9
DEBUG:numba.core.ssa:on stmt: $110binary_multiply.13 = a * b
DEBUG:numba.core.ssa:on stmt: $112load_global.14 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const118.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subtract.18 = b - $const118.17
DEBUG:numba.core.ssa:on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:100), Var($120binary_subtract.18, layouts.py:105)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='dist_squared' stmt=$122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:100), Var($120binary_subtract.18, layouts.py:105)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 84
DEBUG:numba.core.ssa:idom 38 from label 84
DEBUG:numba.core.ssa:find_def_from_bottom label 38
DEBUG:numba.core.ssa:on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
DEBUG:numba.core.ssa:on stmt: $const126.21 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $130load_global.23 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='dist_squared' stmt=$136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 84
DEBUG:numba.core.ssa:idom 38 from label 84
DEBUG:numba.core.ssa:find_def_from_bottom label 38
DEBUG:numba.core.ssa:on stmt: $138binary_multiply.27 = a * $136call_function.26
DEBUG:numba.core.ssa:on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
DEBUG:numba.core.ssa:on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
DEBUG:numba.core.ssa:on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_jk = phi / $152binary_subscr.33
DEBUG:numba.core.ssa:on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_kj = phi / $164binary_subscr.38
DEBUG:numba.core.ssa:on stmt: $const172.41 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const176.43 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180binary_subtract.45 = $const176.43 - phi
DEBUG:numba.core.ssa:on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
DEBUG:numba.core.ssa:on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
DEBUG:numba.core.ssa:on stmt: $186load_global.48 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:112)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
DEBUG:numba.core.ssa:on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
DEBUG:numba.core.ssa:on stmt: drk = q_jk * $202binary_add.56
DEBUG:numba.core.ssa:on stmt: $const210.59 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const214.61 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.63 = $const214.61 - phi
DEBUG:numba.core.ssa:on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
DEBUG:numba.core.ssa:on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
DEBUG:numba.core.ssa:on stmt: $224load_global.66 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
DEBUG:numba.core.ssa:on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
DEBUG:numba.core.ssa:on stmt: drj = q_kj * $240binary_add.74
DEBUG:numba.core.ssa:on stmt: re_std_sq = dens_re_std * dens_re_std
DEBUG:numba.core.ssa:on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
DEBUG:numba.core.ssa:on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
DEBUG:numba.core.ssa:on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
DEBUG:numba.core.ssa:on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
DEBUG:numba.core.ssa:on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
DEBUG:numba.core.ssa:on stmt: $320binary_multiply.110 = weight_k * drk
DEBUG:numba.core.ssa:on stmt: $326binary_multiply.113 = weight_j * drj
DEBUG:numba.core.ssa:on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
DEBUG:numba.core.ssa:on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
DEBUG:numba.core.ssa:on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
DEBUG:numba.core.ssa:on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
DEBUG:numba.core.ssa:on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $const352.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $354compare_op.3 = dist_squared > $const352.2
DEBUG:numba.core.ssa:find_def var='dist_squared' stmt=$354compare_op.3 = dist_squared > $const352.2
DEBUG:numba.core.ssa:find_def_from_top label 350
DEBUG:numba.core.ssa:idom 38 from label 350
DEBUG:numba.core.ssa:find_def_from_bottom label 38
DEBUG:numba.core.ssa:on stmt: bool356 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $356pred = call bool356($354compare_op.3, func=bool356, args=(Var($354compare_op.3, layouts.py:136),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $356pred, 358, 408
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $const358.1 = const(float, -2.0)
DEBUG:numba.core.ssa:on stmt: $362binary_multiply.3 = $const358.1 * a
DEBUG:numba.core.ssa:on stmt: $366binary_multiply.5 = $362binary_multiply.3 * b
DEBUG:numba.core.ssa:on stmt: $368load_global.6 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const374.9 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.10 = b - $const374.9
DEBUG:numba.core.ssa:on stmt: $378call_function.11 = call $368load_global.6(dist_squared, $376binary_subtract.10, func=$368load_global.6, args=[Var(dist_squared, layouts.py:100), Var($376binary_subtract.10, layouts.py:137)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='dist_squared' stmt=$378call_function.11 = call $368load_global.6(dist_squared, $376binary_subtract.10, func=$368load_global.6, args=[Var(dist_squared, layouts.py:100), Var($376binary_subtract.10, layouts.py:137)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 358
DEBUG:numba.core.ssa:idom 350 from label 358
DEBUG:numba.core.ssa:find_def_from_bottom label 350
DEBUG:numba.core.ssa:find_def_from_top label 350
DEBUG:numba.core.ssa:idom 38 from label 350
DEBUG:numba.core.ssa:find_def_from_bottom label 38
DEBUG:numba.core.ssa:on stmt: grad_coeff = $366binary_multiply.5 * $378call_function.11
DEBUG:numba.core.ssa:on stmt: $388load_global.15 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $394call_function.18 = call $388load_global.15(dist_squared, b, func=$388load_global.15, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='dist_squared' stmt=$394call_function.18 = call $388load_global.15(dist_squared, b, func=$388load_global.15, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 358
DEBUG:numba.core.ssa:idom 350 from label 358
DEBUG:numba.core.ssa:find_def_from_bottom label 350
DEBUG:numba.core.ssa:find_def_from_top label 350
DEBUG:numba.core.ssa:idom 38 from label 350
DEBUG:numba.core.ssa:find_def_from_bottom label 38
DEBUG:numba.core.ssa:on stmt: $396binary_multiply.19 = a * $394call_function.18
DEBUG:numba.core.ssa:on stmt: $const398.20 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $400binary_add.21 = $396binary_multiply.19 + $const398.20
DEBUG:numba.core.ssa:on stmt: $402inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$400binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $402inplace_true_divide.22
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 408
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: grad_coeff = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 412
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $412load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $416call_function.3 = call $412load_global.1(dim, func=$412load_global.1, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $418get_iter.4 = getiter(value=$416call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi420.1 = $418get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $420for_iter.2 = iternext(value=$phi420.1)
DEBUG:numba.core.ssa:on stmt: $420for_iter.3 = pair_first(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $420for_iter.4 = pair_second(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi422.2 = $420for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $420for_iter.4, 422, 534
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: d = $phi422.2
DEBUG:numba.core.ssa:on stmt: $424load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $432binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $438binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $440binary_subtract.11 = $432binary_subscr.7 - $438binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $442binary_multiply.12 = grad_coeff * $440binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $424load_global.3($442binary_multiply.12, func=$424load_global.3, args=[Var($442binary_multiply.12, layouts.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool450 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $450pred = call bool450(densmap_flag, func=bool450, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $450pred, 452, 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $454load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $const456.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $460binary_multiply.6 = $const456.4 * grad_cor_coeff
DEBUG:numba.core.ssa:on stmt: $466binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $474binary_subtract.13 = $466binary_subscr.9 - $472binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $476binary_multiply.14 = $460binary_multiply.6 * $474binary_subtract.13
DEBUG:numba.core.ssa:on stmt: $478call_function.15 = call $454load_global.3($476binary_multiply.14, func=$454load_global.3, args=[Var($476binary_multiply.14, layouts.py:148)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$478call_function.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_d = $480inplace_add.16
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $490binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $496binary_multiply.9 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $498inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$490binary_subscr.6, rhs=$496binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $498inplace_add.10
DEBUG:numba.core.ssa:on stmt: bool508 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $508pred = call bool508(move_other, func=bool508, args=(Var(move_other, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $508pred, 510, 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $520unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
DEBUG:numba.core.ssa:on stmt: $524binary_multiply.10 = $520unary_negative.8 * alpha
DEBUG:numba.core.ssa:on stmt: $526inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$516binary_subscr.6, rhs=$524binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: other[d] = $526inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 532
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 534
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $540binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $546binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $548inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$540binary_subscr.5, rhs=$546binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample[i] = $548inplace_add.9
DEBUG:numba.core.ssa:on stmt: $554load_global.10 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $564binary_subtract.15 = n - $562binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $570binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $572binary_true_divide.19 = $564binary_subtract.15 / $570binary_subscr.18
DEBUG:numba.core.ssa:on stmt: n_neg_samples = call $554load_global.10($572binary_true_divide.19, func=$554load_global.10, args=[Var($572binary_true_divide.19, layouts.py:157)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $578load_global.21 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $582call_function.23 = call $578load_global.21(n_neg_samples, func=$578load_global.21, args=[Var(n_neg_samples, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $584get_iter.24 = getiter(value=$582call_function.23)
DEBUG:numba.core.ssa:on stmt: $phi586.1 = $584get_iter.24
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 586
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $586for_iter.2 = iternext(value=$phi586.1)
DEBUG:numba.core.ssa:on stmt: $586for_iter.3 = pair_first(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $586for_iter.4 = pair_second(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi588.2 = $586for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $586for_iter.4, 588, 776
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 588
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: p = $phi588.2
DEBUG:numba.core.ssa:on stmt: $590load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x0000017A062CD5A0>))
DEBUG:numba.core.ssa:on stmt: $596binary_subscr.6 = getitem(value=rng_state_per_sample, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $598call_function.7 = call $590load_global.3($596binary_subscr.6, func=$590load_global.3, args=[Var($596binary_subscr.6, layouts.py:161)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: k.1 = $598call_function.7 % n_vertices
DEBUG:numba.core.ssa:on stmt: other.1 = getitem(value=tail_embedding, index=k.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $614load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared.1 = call $614load_global.13(current, other.1, func=$614load_global.13, args=[Var(current, layouts.py:97), Var(other.1, layouts.py:163)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const626.18 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $628compare_op.19 = dist_squared > $const626.18
DEBUG:numba.core.ssa:find_def var='dist_squared' stmt=$628compare_op.19 = dist_squared > $const626.18
DEBUG:numba.core.ssa:replaced with: $628compare_op.19 = dist_squared.1 > $const626.18
DEBUG:numba.core.ssa:on stmt: bool632 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $632pred = call bool632($628compare_op.19, func=bool632, args=(Var($628compare_op.19, layouts.py:167),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $632pred, 634, 678
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 634
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $const634.2 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $638binary_multiply.4 = $const634.2 * gamma
DEBUG:numba.core.ssa:on stmt: grad_coeff = $638binary_multiply.4 * b
DEBUG:numba.core.ssa:on stmt: $const648.8 = const(float, 0.001)
DEBUG:numba.core.ssa:on stmt: $652binary_add.10 = $const648.8 + dist_squared
DEBUG:numba.core.ssa:find_def var='dist_squared' stmt=$652binary_add.10 = $const648.8 + dist_squared
DEBUG:numba.core.ssa:find_def_from_top label 634
DEBUG:numba.core.ssa:idom 588 from label 634
DEBUG:numba.core.ssa:find_def_from_bottom label 588
DEBUG:numba.core.ssa:replaced with: $652binary_add.10 = $const648.8 + dist_squared.1
DEBUG:numba.core.ssa:on stmt: $656load_global.12 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $662call_function.15 = call $656load_global.12(dist_squared, b, func=$656load_global.12, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='dist_squared' stmt=$662call_function.15 = call $656load_global.12(dist_squared, b, func=$656load_global.12, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 634
DEBUG:numba.core.ssa:idom 588 from label 634
DEBUG:numba.core.ssa:find_def_from_bottom label 588
DEBUG:numba.core.ssa:replaced with: $662call_function.15 = call $656load_global.12(dist_squared.1, b, func=$656load_global.12, args=[Var(dist_squared.1, layouts.py:165), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $664binary_multiply.16 = a * $662call_function.15
DEBUG:numba.core.ssa:on stmt: $const666.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $668binary_add.18 = $664binary_multiply.16 + $const666.17
DEBUG:numba.core.ssa:on stmt: $670binary_multiply.19 = $652binary_add.10 * $668binary_add.18
DEBUG:numba.core.ssa:on stmt: $672inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$670binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $672inplace_true_divide.20
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 678
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $682compare_op.4 = j == k.1
DEBUG:numba.core.ssa:on stmt: bool686 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $686pred = call bool686($682compare_op.4, func=bool686, args=(Var($682compare_op.4, layouts.py:172),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $686pred, 688, 692
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 688
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 692
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: grad_coeff = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 696
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $696load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $700call_function.4 = call $696load_global.2(dim, func=$696load_global.2, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $702get_iter.5 = getiter(value=$700call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi704.2 = $702get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 704
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $704for_iter.3 = iternext(value=$phi704.2)
DEBUG:numba.core.ssa:on stmt: $704for_iter.4 = pair_first(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $704for_iter.5 = pair_second(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi706.3 = $704for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $704for_iter.5, 706, 772
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 706
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: d = $phi706.3
DEBUG:numba.core.ssa:on stmt: $const710.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $712compare_op.6 = grad_coeff > $const710.5
DEBUG:numba.core.ssa:on stmt: bool716 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $716pred = call bool716($712compare_op.6, func=bool716, args=(Var($712compare_op.6, layouts.py:178),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $716pred, 718, 744
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 718
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $718load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $726binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $732binary_subscr.10 = getitem(value=other.1, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subtract.11 = $726binary_subscr.7 - $732binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $736binary_multiply.12 = grad_coeff * $734binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $718load_global.3($736binary_multiply.12, func=$718load_global.3, args=[Var($736binary_multiply.12, layouts.py:179)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 744
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: grad_d = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 748
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $754binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $760binary_multiply.10 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $762inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$754binary_subscr.7, rhs=$760binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $762inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 772
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 776
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $782binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $790binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $792binary_multiply.10 = n_neg_samples * $790binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $794inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$782binary_subscr.5, rhs=$792binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample[i] = $794inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 800
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 802
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $const802.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $804return_value.1 = cast(value=$const802.0)
DEBUG:numba.core.ssa:on stmt: return $804return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 803
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:Fix SSA violator on var grad_coeff
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: head_embedding = arg(0, name=head_embedding)
DEBUG:numba.core.ssa:on stmt: tail_embedding = arg(1, name=tail_embedding)
DEBUG:numba.core.ssa:on stmt: head = arg(2, name=head)
DEBUG:numba.core.ssa:on stmt: tail = arg(3, name=tail)
DEBUG:numba.core.ssa:on stmt: n_vertices = arg(4, name=n_vertices)
DEBUG:numba.core.ssa:on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
DEBUG:numba.core.ssa:on stmt: a = arg(6, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(7, name=b)
DEBUG:numba.core.ssa:on stmt: rng_state_per_sample = arg(8, name=rng_state_per_sample)
DEBUG:numba.core.ssa:on stmt: gamma = arg(9, name=gamma)
DEBUG:numba.core.ssa:on stmt: dim = arg(10, name=dim)
DEBUG:numba.core.ssa:on stmt: move_other = arg(11, name=move_other)
DEBUG:numba.core.ssa:on stmt: alpha = arg(12, name=alpha)
DEBUG:numba.core.ssa:on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
DEBUG:numba.core.ssa:on stmt: n = arg(16, name=n)
DEBUG:numba.core.ssa:on stmt: densmap_flag = arg(17, name=densmap_flag)
DEBUG:numba.core.ssa:on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_sum = arg(19, name=dens_re_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_cov = arg(20, name=dens_re_cov)
DEBUG:numba.core.ssa:on stmt: dens_re_std = arg(21, name=dens_re_std)
DEBUG:numba.core.ssa:on stmt: dens_re_mean = arg(22, name=dens_re_mean)
DEBUG:numba.core.ssa:on stmt: dens_lambda = arg(23, name=dens_lambda)
DEBUG:numba.core.ssa:on stmt: dens_R = arg(24, name=dens_R)
DEBUG:numba.core.ssa:on stmt: dens_mu = arg(25, name=dens_mu)
DEBUG:numba.core.ssa:on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numba: <module 'numba' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numba\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:92)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
DEBUG:numba.core.ssa:on stmt: $phi20.0 = $16get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $20for_iter.1 = iternext(value=$phi20.0)
DEBUG:numba.core.ssa:on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi22.1 = $20for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $20for_iter.3, 22, 802
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: i = $phi22.1
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($32compare_op.6, func=bool36, args=(Var($32compare_op.6, layouts.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $36pred, 38, 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 38
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $70load_global.13(current, other, func=$70load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $const84.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const86.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $90load_global.4 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_multiply.8 = a * $96call_function.7
DEBUG:numba.core.ssa:on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
DEBUG:numba.core.ssa:on stmt: phi = $const84.1 / $100binary_add.9
DEBUG:numba.core.ssa:on stmt: $110binary_multiply.13 = a * b
DEBUG:numba.core.ssa:on stmt: $112load_global.14 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const118.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subtract.18 = b - $const118.17
DEBUG:numba.core.ssa:on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:100), Var($120binary_subtract.18, layouts.py:105)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
DEBUG:numba.core.ssa:on stmt: $const126.21 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $130load_global.23 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_multiply.27 = a * $136call_function.26
DEBUG:numba.core.ssa:on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
DEBUG:numba.core.ssa:on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
DEBUG:numba.core.ssa:on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_jk = phi / $152binary_subscr.33
DEBUG:numba.core.ssa:on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_kj = phi / $164binary_subscr.38
DEBUG:numba.core.ssa:on stmt: $const172.41 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const176.43 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180binary_subtract.45 = $const176.43 - phi
DEBUG:numba.core.ssa:on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
DEBUG:numba.core.ssa:on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
DEBUG:numba.core.ssa:on stmt: $186load_global.48 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:112)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
DEBUG:numba.core.ssa:on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
DEBUG:numba.core.ssa:on stmt: drk = q_jk * $202binary_add.56
DEBUG:numba.core.ssa:on stmt: $const210.59 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const214.61 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.63 = $const214.61 - phi
DEBUG:numba.core.ssa:on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
DEBUG:numba.core.ssa:on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
DEBUG:numba.core.ssa:on stmt: $224load_global.66 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
DEBUG:numba.core.ssa:on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
DEBUG:numba.core.ssa:on stmt: drj = q_kj * $240binary_add.74
DEBUG:numba.core.ssa:on stmt: re_std_sq = dens_re_std * dens_re_std
DEBUG:numba.core.ssa:on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
DEBUG:numba.core.ssa:on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
DEBUG:numba.core.ssa:on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
DEBUG:numba.core.ssa:on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
DEBUG:numba.core.ssa:on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
DEBUG:numba.core.ssa:on stmt: $320binary_multiply.110 = weight_k * drk
DEBUG:numba.core.ssa:on stmt: $326binary_multiply.113 = weight_j * drj
DEBUG:numba.core.ssa:on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
DEBUG:numba.core.ssa:on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
DEBUG:numba.core.ssa:on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
DEBUG:numba.core.ssa:on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
DEBUG:numba.core.ssa:on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $const352.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $354compare_op.3 = dist_squared > $const352.2
DEBUG:numba.core.ssa:on stmt: bool356 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $356pred = call bool356($354compare_op.3, func=bool356, args=(Var($354compare_op.3, layouts.py:136),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $356pred, 358, 408
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $const358.1 = const(float, -2.0)
DEBUG:numba.core.ssa:on stmt: $362binary_multiply.3 = $const358.1 * a
DEBUG:numba.core.ssa:on stmt: $366binary_multiply.5 = $362binary_multiply.3 * b
DEBUG:numba.core.ssa:on stmt: $368load_global.6 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const374.9 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.10 = b - $const374.9
DEBUG:numba.core.ssa:on stmt: $378call_function.11 = call $368load_global.6(dist_squared, $376binary_subtract.10, func=$368load_global.6, args=[Var(dist_squared, layouts.py:100), Var($376binary_subtract.10, layouts.py:137)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $366binary_multiply.5 * $378call_function.11
DEBUG:numba.core.ssa:first assign: grad_coeff
DEBUG:numba.core.ssa:replaced with: grad_coeff = $366binary_multiply.5 * $378call_function.11
DEBUG:numba.core.ssa:on stmt: $388load_global.15 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $394call_function.18 = call $388load_global.15(dist_squared, b, func=$388load_global.15, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $396binary_multiply.19 = a * $394call_function.18
DEBUG:numba.core.ssa:on stmt: $const398.20 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $400binary_add.21 = $396binary_multiply.19 + $const398.20
DEBUG:numba.core.ssa:on stmt: $402inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$400binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $402inplace_true_divide.22
DEBUG:numba.core.ssa:replaced with: grad_coeff.1 = $402inplace_true_divide.22
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 408
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: grad_coeff = const(float, 0.0)
DEBUG:numba.core.ssa:replaced with: grad_coeff.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 412
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $412load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $416call_function.3 = call $412load_global.1(dim, func=$412load_global.1, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $418get_iter.4 = getiter(value=$416call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi420.1 = $418get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $420for_iter.2 = iternext(value=$phi420.1)
DEBUG:numba.core.ssa:on stmt: $420for_iter.3 = pair_first(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $420for_iter.4 = pair_second(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi422.2 = $420for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $420for_iter.4, 422, 534
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: d = $phi422.2
DEBUG:numba.core.ssa:on stmt: $424load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $432binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $438binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $440binary_subtract.11 = $432binary_subscr.7 - $438binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $442binary_multiply.12 = grad_coeff * $440binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $424load_global.3($442binary_multiply.12, func=$424load_global.3, args=[Var($442binary_multiply.12, layouts.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool450 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $450pred = call bool450(densmap_flag, func=bool450, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $450pred, 452, 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $454load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $const456.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $460binary_multiply.6 = $const456.4 * grad_cor_coeff
DEBUG:numba.core.ssa:on stmt: $466binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $474binary_subtract.13 = $466binary_subscr.9 - $472binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $476binary_multiply.14 = $460binary_multiply.6 * $474binary_subtract.13
DEBUG:numba.core.ssa:on stmt: $478call_function.15 = call $454load_global.3($476binary_multiply.14, func=$454load_global.3, args=[Var($476binary_multiply.14, layouts.py:148)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$478call_function.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_d = $480inplace_add.16
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $490binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $496binary_multiply.9 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $498inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$490binary_subscr.6, rhs=$496binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $498inplace_add.10
DEBUG:numba.core.ssa:on stmt: bool508 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $508pred = call bool508(move_other, func=bool508, args=(Var(move_other, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $508pred, 510, 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $520unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
DEBUG:numba.core.ssa:on stmt: $524binary_multiply.10 = $520unary_negative.8 * alpha
DEBUG:numba.core.ssa:on stmt: $526inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$516binary_subscr.6, rhs=$524binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: other[d] = $526inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 532
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 534
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $540binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $546binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $548inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$540binary_subscr.5, rhs=$546binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample[i] = $548inplace_add.9
DEBUG:numba.core.ssa:on stmt: $554load_global.10 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $564binary_subtract.15 = n - $562binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $570binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $572binary_true_divide.19 = $564binary_subtract.15 / $570binary_subscr.18
DEBUG:numba.core.ssa:on stmt: n_neg_samples = call $554load_global.10($572binary_true_divide.19, func=$554load_global.10, args=[Var($572binary_true_divide.19, layouts.py:157)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $578load_global.21 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $582call_function.23 = call $578load_global.21(n_neg_samples, func=$578load_global.21, args=[Var(n_neg_samples, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $584get_iter.24 = getiter(value=$582call_function.23)
DEBUG:numba.core.ssa:on stmt: $phi586.1 = $584get_iter.24
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 586
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $586for_iter.2 = iternext(value=$phi586.1)
DEBUG:numba.core.ssa:on stmt: $586for_iter.3 = pair_first(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $586for_iter.4 = pair_second(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi588.2 = $586for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $586for_iter.4, 588, 776
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 588
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: p = $phi588.2
DEBUG:numba.core.ssa:on stmt: $590load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x0000017A062CD5A0>))
DEBUG:numba.core.ssa:on stmt: $596binary_subscr.6 = getitem(value=rng_state_per_sample, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $598call_function.7 = call $590load_global.3($596binary_subscr.6, func=$590load_global.3, args=[Var($596binary_subscr.6, layouts.py:161)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: k.1 = $598call_function.7 % n_vertices
DEBUG:numba.core.ssa:on stmt: other.1 = getitem(value=tail_embedding, index=k.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $614load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared.1 = call $614load_global.13(current, other.1, func=$614load_global.13, args=[Var(current, layouts.py:97), Var(other.1, layouts.py:163)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const626.18 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $628compare_op.19 = dist_squared.1 > $const626.18
DEBUG:numba.core.ssa:on stmt: bool632 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $632pred = call bool632($628compare_op.19, func=bool632, args=(Var($628compare_op.19, layouts.py:167),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $632pred, 634, 678
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 634
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $const634.2 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $638binary_multiply.4 = $const634.2 * gamma
DEBUG:numba.core.ssa:on stmt: grad_coeff = $638binary_multiply.4 * b
DEBUG:numba.core.ssa:replaced with: grad_coeff.3 = $638binary_multiply.4 * b
DEBUG:numba.core.ssa:on stmt: $const648.8 = const(float, 0.001)
DEBUG:numba.core.ssa:on stmt: $652binary_add.10 = $const648.8 + dist_squared.1
DEBUG:numba.core.ssa:on stmt: $656load_global.12 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $662call_function.15 = call $656load_global.12(dist_squared.1, b, func=$656load_global.12, args=[Var(dist_squared.1, layouts.py:165), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $664binary_multiply.16 = a * $662call_function.15
DEBUG:numba.core.ssa:on stmt: $const666.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $668binary_add.18 = $664binary_multiply.16 + $const666.17
DEBUG:numba.core.ssa:on stmt: $670binary_multiply.19 = $652binary_add.10 * $668binary_add.18
DEBUG:numba.core.ssa:on stmt: $672inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$670binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $672inplace_true_divide.20
DEBUG:numba.core.ssa:replaced with: grad_coeff.4 = $672inplace_true_divide.20
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 678
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $682compare_op.4 = j == k.1
DEBUG:numba.core.ssa:on stmt: bool686 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $686pred = call bool686($682compare_op.4, func=bool686, args=(Var($682compare_op.4, layouts.py:172),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $686pred, 688, 692
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 688
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 692
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: grad_coeff = const(float, 0.0)
DEBUG:numba.core.ssa:replaced with: grad_coeff.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 696
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $696load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $700call_function.4 = call $696load_global.2(dim, func=$696load_global.2, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $702get_iter.5 = getiter(value=$700call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi704.2 = $702get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 704
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $704for_iter.3 = iternext(value=$phi704.2)
DEBUG:numba.core.ssa:on stmt: $704for_iter.4 = pair_first(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $704for_iter.5 = pair_second(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi706.3 = $704for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $704for_iter.5, 706, 772
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 706
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: d = $phi706.3
DEBUG:numba.core.ssa:on stmt: $const710.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $712compare_op.6 = grad_coeff > $const710.5
DEBUG:numba.core.ssa:on stmt: bool716 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $716pred = call bool716($712compare_op.6, func=bool716, args=(Var($712compare_op.6, layouts.py:178),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $716pred, 718, 744
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 718
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $718load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $726binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $732binary_subscr.10 = getitem(value=other.1, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subtract.11 = $726binary_subscr.7 - $732binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $736binary_multiply.12 = grad_coeff * $734binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $718load_global.3($736binary_multiply.12, func=$718load_global.3, args=[Var($736binary_multiply.12, layouts.py:179)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 744
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: grad_d = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 748
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $754binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $760binary_multiply.10 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $762inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$754binary_subscr.7, rhs=$760binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $762inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 772
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 776
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $782binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $790binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $792binary_multiply.10 = n_neg_samples * $790binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $794inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$782binary_subscr.5, rhs=$792binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample[i] = $794inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 800
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 802
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $const802.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $804return_value.1 = cast(value=$const802.0)
DEBUG:numba.core.ssa:on stmt: return $804return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 803
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {358: [<numba.core.ir.Assign object at 0x0000017AA6BD0CA0>,
                   <numba.core.ir.Assign object at 0x0000017AA6BD04F0>],
             408: [<numba.core.ir.Assign object at 0x0000017AA6BD0A90>],
             634: [<numba.core.ir.Assign object at 0x0000017AA6C562F0>,
                   <numba.core.ir.Assign object at 0x0000017AA6C57970>],
             692: [<numba.core.ir.Assign object at 0x0000017AA6C57A60>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: head_embedding = arg(0, name=head_embedding)
DEBUG:numba.core.ssa:on stmt: tail_embedding = arg(1, name=tail_embedding)
DEBUG:numba.core.ssa:on stmt: head = arg(2, name=head)
DEBUG:numba.core.ssa:on stmt: tail = arg(3, name=tail)
DEBUG:numba.core.ssa:on stmt: n_vertices = arg(4, name=n_vertices)
DEBUG:numba.core.ssa:on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
DEBUG:numba.core.ssa:on stmt: a = arg(6, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(7, name=b)
DEBUG:numba.core.ssa:on stmt: rng_state_per_sample = arg(8, name=rng_state_per_sample)
DEBUG:numba.core.ssa:on stmt: gamma = arg(9, name=gamma)
DEBUG:numba.core.ssa:on stmt: dim = arg(10, name=dim)
DEBUG:numba.core.ssa:on stmt: move_other = arg(11, name=move_other)
DEBUG:numba.core.ssa:on stmt: alpha = arg(12, name=alpha)
DEBUG:numba.core.ssa:on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
DEBUG:numba.core.ssa:on stmt: n = arg(16, name=n)
DEBUG:numba.core.ssa:on stmt: densmap_flag = arg(17, name=densmap_flag)
DEBUG:numba.core.ssa:on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_sum = arg(19, name=dens_re_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_cov = arg(20, name=dens_re_cov)
DEBUG:numba.core.ssa:on stmt: dens_re_std = arg(21, name=dens_re_std)
DEBUG:numba.core.ssa:on stmt: dens_re_mean = arg(22, name=dens_re_mean)
DEBUG:numba.core.ssa:on stmt: dens_lambda = arg(23, name=dens_lambda)
DEBUG:numba.core.ssa:on stmt: dens_R = arg(24, name=dens_R)
DEBUG:numba.core.ssa:on stmt: dens_mu = arg(25, name=dens_mu)
DEBUG:numba.core.ssa:on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numba: <module 'numba' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numba\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:92)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
DEBUG:numba.core.ssa:on stmt: $phi20.0 = $16get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $20for_iter.1 = iternext(value=$phi20.0)
DEBUG:numba.core.ssa:on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi22.1 = $20for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $20for_iter.3, 22, 802
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: i = $phi22.1
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($32compare_op.6, func=bool36, args=(Var($32compare_op.6, layouts.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $36pred, 38, 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 38
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $70load_global.13(current, other, func=$70load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $const84.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const86.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $90load_global.4 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_multiply.8 = a * $96call_function.7
DEBUG:numba.core.ssa:on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
DEBUG:numba.core.ssa:on stmt: phi = $const84.1 / $100binary_add.9
DEBUG:numba.core.ssa:on stmt: $110binary_multiply.13 = a * b
DEBUG:numba.core.ssa:on stmt: $112load_global.14 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const118.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subtract.18 = b - $const118.17
DEBUG:numba.core.ssa:on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:100), Var($120binary_subtract.18, layouts.py:105)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
DEBUG:numba.core.ssa:on stmt: $const126.21 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $130load_global.23 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_multiply.27 = a * $136call_function.26
DEBUG:numba.core.ssa:on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
DEBUG:numba.core.ssa:on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
DEBUG:numba.core.ssa:on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_jk = phi / $152binary_subscr.33
DEBUG:numba.core.ssa:on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_kj = phi / $164binary_subscr.38
DEBUG:numba.core.ssa:on stmt: $const172.41 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const176.43 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180binary_subtract.45 = $const176.43 - phi
DEBUG:numba.core.ssa:on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
DEBUG:numba.core.ssa:on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
DEBUG:numba.core.ssa:on stmt: $186load_global.48 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:112)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
DEBUG:numba.core.ssa:on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
DEBUG:numba.core.ssa:on stmt: drk = q_jk * $202binary_add.56
DEBUG:numba.core.ssa:on stmt: $const210.59 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const214.61 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.63 = $const214.61 - phi
DEBUG:numba.core.ssa:on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
DEBUG:numba.core.ssa:on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
DEBUG:numba.core.ssa:on stmt: $224load_global.66 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
DEBUG:numba.core.ssa:on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
DEBUG:numba.core.ssa:on stmt: drj = q_kj * $240binary_add.74
DEBUG:numba.core.ssa:on stmt: re_std_sq = dens_re_std * dens_re_std
DEBUG:numba.core.ssa:on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
DEBUG:numba.core.ssa:on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
DEBUG:numba.core.ssa:on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
DEBUG:numba.core.ssa:on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
DEBUG:numba.core.ssa:on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
DEBUG:numba.core.ssa:on stmt: $320binary_multiply.110 = weight_k * drk
DEBUG:numba.core.ssa:on stmt: $326binary_multiply.113 = weight_j * drj
DEBUG:numba.core.ssa:on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
DEBUG:numba.core.ssa:on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
DEBUG:numba.core.ssa:on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
DEBUG:numba.core.ssa:on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
DEBUG:numba.core.ssa:on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $const352.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $354compare_op.3 = dist_squared > $const352.2
DEBUG:numba.core.ssa:on stmt: bool356 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $356pred = call bool356($354compare_op.3, func=bool356, args=(Var($354compare_op.3, layouts.py:136),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $356pred, 358, 408
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $const358.1 = const(float, -2.0)
DEBUG:numba.core.ssa:on stmt: $362binary_multiply.3 = $const358.1 * a
DEBUG:numba.core.ssa:on stmt: $366binary_multiply.5 = $362binary_multiply.3 * b
DEBUG:numba.core.ssa:on stmt: $368load_global.6 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const374.9 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.10 = b - $const374.9
DEBUG:numba.core.ssa:on stmt: $378call_function.11 = call $368load_global.6(dist_squared, $376binary_subtract.10, func=$368load_global.6, args=[Var(dist_squared, layouts.py:100), Var($376binary_subtract.10, layouts.py:137)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $366binary_multiply.5 * $378call_function.11
DEBUG:numba.core.ssa:on stmt: $388load_global.15 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $394call_function.18 = call $388load_global.15(dist_squared, b, func=$388load_global.15, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $396binary_multiply.19 = a * $394call_function.18
DEBUG:numba.core.ssa:on stmt: $const398.20 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $400binary_add.21 = $396binary_multiply.19 + $const398.20
DEBUG:numba.core.ssa:on stmt: $402inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$400binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='grad_coeff' stmt=$402inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$400binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff.1 = $402inplace_true_divide.22
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 408
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: grad_coeff.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 412
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $412load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $416call_function.3 = call $412load_global.1(dim, func=$412load_global.1, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $418get_iter.4 = getiter(value=$416call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi420.1 = $418get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $420for_iter.2 = iternext(value=$phi420.1)
DEBUG:numba.core.ssa:on stmt: $420for_iter.3 = pair_first(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $420for_iter.4 = pair_second(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi422.2 = $420for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $420for_iter.4, 422, 534
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: d = $phi422.2
DEBUG:numba.core.ssa:on stmt: $424load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $432binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $438binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $440binary_subtract.11 = $432binary_subscr.7 - $438binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $442binary_multiply.12 = grad_coeff * $440binary_subtract.11
DEBUG:numba.core.ssa:find_def var='grad_coeff' stmt=$442binary_multiply.12 = grad_coeff * $440binary_subtract.11
DEBUG:numba.core.ssa:find_def_from_top label 422
DEBUG:numba.core.ssa:idom 420 from label 422
DEBUG:numba.core.ssa:find_def_from_bottom label 420
DEBUG:numba.core.ssa:find_def_from_top label 420
DEBUG:numba.core.ssa:idom 412 from label 420
DEBUG:numba.core.ssa:find_def_from_bottom label 412
DEBUG:numba.core.ssa:find_def_from_top label 412
DEBUG:numba.core.ssa:insert phi node grad_coeff.6 = phi(incoming_values=[], incoming_blocks=[]) at 412
DEBUG:numba.core.ssa:find_def_from_bottom label 408
DEBUG:numba.core.ssa:incoming_def grad_coeff.2 = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 358
DEBUG:numba.core.ssa:incoming_def grad_coeff.1 = $402inplace_true_divide.22
DEBUG:numba.core.ssa:replaced with: $442binary_multiply.12 = grad_coeff.6 * $440binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $424load_global.3($442binary_multiply.12, func=$424load_global.3, args=[Var($442binary_multiply.12, layouts.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool450 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $450pred = call bool450(densmap_flag, func=bool450, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $450pred, 452, 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $454load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $const456.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $460binary_multiply.6 = $const456.4 * grad_cor_coeff
DEBUG:numba.core.ssa:on stmt: $466binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $474binary_subtract.13 = $466binary_subscr.9 - $472binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $476binary_multiply.14 = $460binary_multiply.6 * $474binary_subtract.13
DEBUG:numba.core.ssa:on stmt: $478call_function.15 = call $454load_global.3($476binary_multiply.14, func=$454load_global.3, args=[Var($476binary_multiply.14, layouts.py:148)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$478call_function.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_d = $480inplace_add.16
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $490binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $496binary_multiply.9 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $498inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$490binary_subscr.6, rhs=$496binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $498inplace_add.10
DEBUG:numba.core.ssa:on stmt: bool508 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $508pred = call bool508(move_other, func=bool508, args=(Var(move_other, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $508pred, 510, 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $520unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
DEBUG:numba.core.ssa:on stmt: $524binary_multiply.10 = $520unary_negative.8 * alpha
DEBUG:numba.core.ssa:on stmt: $526inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$516binary_subscr.6, rhs=$524binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: other[d] = $526inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 532
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 534
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $540binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $546binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $548inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$540binary_subscr.5, rhs=$546binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample[i] = $548inplace_add.9
DEBUG:numba.core.ssa:on stmt: $554load_global.10 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $564binary_subtract.15 = n - $562binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $570binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $572binary_true_divide.19 = $564binary_subtract.15 / $570binary_subscr.18
DEBUG:numba.core.ssa:on stmt: n_neg_samples = call $554load_global.10($572binary_true_divide.19, func=$554load_global.10, args=[Var($572binary_true_divide.19, layouts.py:157)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $578load_global.21 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $582call_function.23 = call $578load_global.21(n_neg_samples, func=$578load_global.21, args=[Var(n_neg_samples, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $584get_iter.24 = getiter(value=$582call_function.23)
DEBUG:numba.core.ssa:on stmt: $phi586.1 = $584get_iter.24
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 586
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $586for_iter.2 = iternext(value=$phi586.1)
DEBUG:numba.core.ssa:on stmt: $586for_iter.3 = pair_first(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $586for_iter.4 = pair_second(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi588.2 = $586for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $586for_iter.4, 588, 776
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 588
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: p = $phi588.2
DEBUG:numba.core.ssa:on stmt: $590load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x0000017A062CD5A0>))
DEBUG:numba.core.ssa:on stmt: $596binary_subscr.6 = getitem(value=rng_state_per_sample, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $598call_function.7 = call $590load_global.3($596binary_subscr.6, func=$590load_global.3, args=[Var($596binary_subscr.6, layouts.py:161)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: k.1 = $598call_function.7 % n_vertices
DEBUG:numba.core.ssa:on stmt: other.1 = getitem(value=tail_embedding, index=k.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $614load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared.1 = call $614load_global.13(current, other.1, func=$614load_global.13, args=[Var(current, layouts.py:97), Var(other.1, layouts.py:163)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const626.18 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $628compare_op.19 = dist_squared.1 > $const626.18
DEBUG:numba.core.ssa:on stmt: bool632 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $632pred = call bool632($628compare_op.19, func=bool632, args=(Var($628compare_op.19, layouts.py:167),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $632pred, 634, 678
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 634
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $const634.2 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $638binary_multiply.4 = $const634.2 * gamma
DEBUG:numba.core.ssa:on stmt: grad_coeff.3 = $638binary_multiply.4 * b
DEBUG:numba.core.ssa:on stmt: $const648.8 = const(float, 0.001)
DEBUG:numba.core.ssa:on stmt: $652binary_add.10 = $const648.8 + dist_squared.1
DEBUG:numba.core.ssa:on stmt: $656load_global.12 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $662call_function.15 = call $656load_global.12(dist_squared.1, b, func=$656load_global.12, args=[Var(dist_squared.1, layouts.py:165), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $664binary_multiply.16 = a * $662call_function.15
DEBUG:numba.core.ssa:on stmt: $const666.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $668binary_add.18 = $664binary_multiply.16 + $const666.17
DEBUG:numba.core.ssa:on stmt: $670binary_multiply.19 = $652binary_add.10 * $668binary_add.18
DEBUG:numba.core.ssa:on stmt: $672inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$670binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='grad_coeff' stmt=$672inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$670binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:replaced with: $672inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff.3, rhs=$670binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff.4 = $672inplace_true_divide.20
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 678
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $682compare_op.4 = j == k.1
DEBUG:numba.core.ssa:on stmt: bool686 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $686pred = call bool686($682compare_op.4, func=bool686, args=(Var($682compare_op.4, layouts.py:172),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $686pred, 688, 692
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 688
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 692
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: grad_coeff.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 696
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $696load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $700call_function.4 = call $696load_global.2(dim, func=$696load_global.2, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $702get_iter.5 = getiter(value=$700call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi704.2 = $702get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 704
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $704for_iter.3 = iternext(value=$phi704.2)
DEBUG:numba.core.ssa:on stmt: $704for_iter.4 = pair_first(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $704for_iter.5 = pair_second(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi706.3 = $704for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $704for_iter.5, 706, 772
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 706
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: d = $phi706.3
DEBUG:numba.core.ssa:on stmt: $const710.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $712compare_op.6 = grad_coeff > $const710.5
DEBUG:numba.core.ssa:find_def var='grad_coeff' stmt=$712compare_op.6 = grad_coeff > $const710.5
DEBUG:numba.core.ssa:find_def_from_top label 706
DEBUG:numba.core.ssa:idom 704 from label 706
DEBUG:numba.core.ssa:find_def_from_bottom label 704
DEBUG:numba.core.ssa:find_def_from_top label 704
DEBUG:numba.core.ssa:idom 696 from label 704
DEBUG:numba.core.ssa:find_def_from_bottom label 696
DEBUG:numba.core.ssa:find_def_from_top label 696
DEBUG:numba.core.ssa:insert phi node grad_coeff.7 = phi(incoming_values=[], incoming_blocks=[]) at 696
DEBUG:numba.core.ssa:find_def_from_bottom label 634
DEBUG:numba.core.ssa:incoming_def grad_coeff.4 = $672inplace_true_divide.20
DEBUG:numba.core.ssa:find_def_from_bottom label 692
DEBUG:numba.core.ssa:incoming_def grad_coeff.5 = const(float, 0.0)
DEBUG:numba.core.ssa:replaced with: $712compare_op.6 = grad_coeff.7 > $const710.5
DEBUG:numba.core.ssa:on stmt: bool716 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $716pred = call bool716($712compare_op.6, func=bool716, args=(Var($712compare_op.6, layouts.py:178),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $716pred, 718, 744
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 718
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $718load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $726binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $732binary_subscr.10 = getitem(value=other.1, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subtract.11 = $726binary_subscr.7 - $732binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $736binary_multiply.12 = grad_coeff * $734binary_subtract.11
DEBUG:numba.core.ssa:find_def var='grad_coeff' stmt=$736binary_multiply.12 = grad_coeff * $734binary_subtract.11
DEBUG:numba.core.ssa:find_def_from_top label 718
DEBUG:numba.core.ssa:idom 706 from label 718
DEBUG:numba.core.ssa:find_def_from_bottom label 706
DEBUG:numba.core.ssa:find_def_from_top label 706
DEBUG:numba.core.ssa:idom 704 from label 706
DEBUG:numba.core.ssa:find_def_from_bottom label 704
DEBUG:numba.core.ssa:find_def_from_top label 704
DEBUG:numba.core.ssa:idom 696 from label 704
DEBUG:numba.core.ssa:find_def_from_bottom label 696
DEBUG:numba.core.ssa:replaced with: $736binary_multiply.12 = grad_coeff.7 * $734binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $718load_global.3($736binary_multiply.12, func=$718load_global.3, args=[Var($736binary_multiply.12, layouts.py:179)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 744
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: grad_d = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 748
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $754binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $760binary_multiply.10 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $762inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$754binary_subscr.7, rhs=$760binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $762inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 772
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 776
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $782binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $790binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $792binary_multiply.10 = n_neg_samples * $790binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $794inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$782binary_subscr.5, rhs=$792binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample[i] = $794inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 800
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 802
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: $const802.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $804return_value.1 = cast(value=$const802.0)
DEBUG:numba.core.ssa:on stmt: return $804return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 803
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD09A0>
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:Fix SSA violator on var d
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: head_embedding = arg(0, name=head_embedding)
DEBUG:numba.core.ssa:on stmt: tail_embedding = arg(1, name=tail_embedding)
DEBUG:numba.core.ssa:on stmt: head = arg(2, name=head)
DEBUG:numba.core.ssa:on stmt: tail = arg(3, name=tail)
DEBUG:numba.core.ssa:on stmt: n_vertices = arg(4, name=n_vertices)
DEBUG:numba.core.ssa:on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
DEBUG:numba.core.ssa:on stmt: a = arg(6, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(7, name=b)
DEBUG:numba.core.ssa:on stmt: rng_state_per_sample = arg(8, name=rng_state_per_sample)
DEBUG:numba.core.ssa:on stmt: gamma = arg(9, name=gamma)
DEBUG:numba.core.ssa:on stmt: dim = arg(10, name=dim)
DEBUG:numba.core.ssa:on stmt: move_other = arg(11, name=move_other)
DEBUG:numba.core.ssa:on stmt: alpha = arg(12, name=alpha)
DEBUG:numba.core.ssa:on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
DEBUG:numba.core.ssa:on stmt: n = arg(16, name=n)
DEBUG:numba.core.ssa:on stmt: densmap_flag = arg(17, name=densmap_flag)
DEBUG:numba.core.ssa:on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_sum = arg(19, name=dens_re_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_cov = arg(20, name=dens_re_cov)
DEBUG:numba.core.ssa:on stmt: dens_re_std = arg(21, name=dens_re_std)
DEBUG:numba.core.ssa:on stmt: dens_re_mean = arg(22, name=dens_re_mean)
DEBUG:numba.core.ssa:on stmt: dens_lambda = arg(23, name=dens_lambda)
DEBUG:numba.core.ssa:on stmt: dens_R = arg(24, name=dens_R)
DEBUG:numba.core.ssa:on stmt: dens_mu = arg(25, name=dens_mu)
DEBUG:numba.core.ssa:on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numba: <module 'numba' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numba\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:92)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
DEBUG:numba.core.ssa:on stmt: $phi20.0 = $16get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $20for_iter.1 = iternext(value=$phi20.0)
DEBUG:numba.core.ssa:on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi22.1 = $20for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $20for_iter.3, 22, 802
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: i = $phi22.1
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($32compare_op.6, func=bool36, args=(Var($32compare_op.6, layouts.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $36pred, 38, 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 38
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $70load_global.13(current, other, func=$70load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $const84.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const86.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $90load_global.4 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_multiply.8 = a * $96call_function.7
DEBUG:numba.core.ssa:on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
DEBUG:numba.core.ssa:on stmt: phi = $const84.1 / $100binary_add.9
DEBUG:numba.core.ssa:on stmt: $110binary_multiply.13 = a * b
DEBUG:numba.core.ssa:on stmt: $112load_global.14 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const118.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subtract.18 = b - $const118.17
DEBUG:numba.core.ssa:on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:100), Var($120binary_subtract.18, layouts.py:105)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
DEBUG:numba.core.ssa:on stmt: $const126.21 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $130load_global.23 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_multiply.27 = a * $136call_function.26
DEBUG:numba.core.ssa:on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
DEBUG:numba.core.ssa:on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
DEBUG:numba.core.ssa:on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_jk = phi / $152binary_subscr.33
DEBUG:numba.core.ssa:on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_kj = phi / $164binary_subscr.38
DEBUG:numba.core.ssa:on stmt: $const172.41 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const176.43 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180binary_subtract.45 = $const176.43 - phi
DEBUG:numba.core.ssa:on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
DEBUG:numba.core.ssa:on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
DEBUG:numba.core.ssa:on stmt: $186load_global.48 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:112)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
DEBUG:numba.core.ssa:on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
DEBUG:numba.core.ssa:on stmt: drk = q_jk * $202binary_add.56
DEBUG:numba.core.ssa:on stmt: $const210.59 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const214.61 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.63 = $const214.61 - phi
DEBUG:numba.core.ssa:on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
DEBUG:numba.core.ssa:on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
DEBUG:numba.core.ssa:on stmt: $224load_global.66 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
DEBUG:numba.core.ssa:on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
DEBUG:numba.core.ssa:on stmt: drj = q_kj * $240binary_add.74
DEBUG:numba.core.ssa:on stmt: re_std_sq = dens_re_std * dens_re_std
DEBUG:numba.core.ssa:on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
DEBUG:numba.core.ssa:on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
DEBUG:numba.core.ssa:on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
DEBUG:numba.core.ssa:on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
DEBUG:numba.core.ssa:on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
DEBUG:numba.core.ssa:on stmt: $320binary_multiply.110 = weight_k * drk
DEBUG:numba.core.ssa:on stmt: $326binary_multiply.113 = weight_j * drj
DEBUG:numba.core.ssa:on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
DEBUG:numba.core.ssa:on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
DEBUG:numba.core.ssa:on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
DEBUG:numba.core.ssa:on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
DEBUG:numba.core.ssa:on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $const352.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $354compare_op.3 = dist_squared > $const352.2
DEBUG:numba.core.ssa:on stmt: bool356 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $356pred = call bool356($354compare_op.3, func=bool356, args=(Var($354compare_op.3, layouts.py:136),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $356pred, 358, 408
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $const358.1 = const(float, -2.0)
DEBUG:numba.core.ssa:on stmt: $362binary_multiply.3 = $const358.1 * a
DEBUG:numba.core.ssa:on stmt: $366binary_multiply.5 = $362binary_multiply.3 * b
DEBUG:numba.core.ssa:on stmt: $368load_global.6 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const374.9 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.10 = b - $const374.9
DEBUG:numba.core.ssa:on stmt: $378call_function.11 = call $368load_global.6(dist_squared, $376binary_subtract.10, func=$368load_global.6, args=[Var(dist_squared, layouts.py:100), Var($376binary_subtract.10, layouts.py:137)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $366binary_multiply.5 * $378call_function.11
DEBUG:numba.core.ssa:on stmt: $388load_global.15 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $394call_function.18 = call $388load_global.15(dist_squared, b, func=$388load_global.15, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $396binary_multiply.19 = a * $394call_function.18
DEBUG:numba.core.ssa:on stmt: $const398.20 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $400binary_add.21 = $396binary_multiply.19 + $const398.20
DEBUG:numba.core.ssa:on stmt: $402inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$400binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff.1 = $402inplace_true_divide.22
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 408
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: grad_coeff.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 412
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: grad_coeff.6 = phi(incoming_values=[Var(grad_coeff.2, layouts.py:140), Var(grad_coeff.1, layouts.py:138)], incoming_blocks=[408, 358])
DEBUG:numba.core.ssa:on stmt: $412load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $416call_function.3 = call $412load_global.1(dim, func=$412load_global.1, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $418get_iter.4 = getiter(value=$416call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi420.1 = $418get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $420for_iter.2 = iternext(value=$phi420.1)
DEBUG:numba.core.ssa:on stmt: $420for_iter.3 = pair_first(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $420for_iter.4 = pair_second(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi422.2 = $420for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $420for_iter.4, 422, 534
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: d = $phi422.2
DEBUG:numba.core.ssa:first assign: d
DEBUG:numba.core.ssa:replaced with: d = $phi422.2
DEBUG:numba.core.ssa:on stmt: $424load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $432binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $438binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $440binary_subtract.11 = $432binary_subscr.7 - $438binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $442binary_multiply.12 = grad_coeff.6 * $440binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $424load_global.3($442binary_multiply.12, func=$424load_global.3, args=[Var($442binary_multiply.12, layouts.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool450 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $450pred = call bool450(densmap_flag, func=bool450, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $450pred, 452, 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $454load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $const456.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $460binary_multiply.6 = $const456.4 * grad_cor_coeff
DEBUG:numba.core.ssa:on stmt: $466binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $474binary_subtract.13 = $466binary_subscr.9 - $472binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $476binary_multiply.14 = $460binary_multiply.6 * $474binary_subtract.13
DEBUG:numba.core.ssa:on stmt: $478call_function.15 = call $454load_global.3($476binary_multiply.14, func=$454load_global.3, args=[Var($476binary_multiply.14, layouts.py:148)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$478call_function.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_d = $480inplace_add.16
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $490binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $496binary_multiply.9 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $498inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$490binary_subscr.6, rhs=$496binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $498inplace_add.10
DEBUG:numba.core.ssa:on stmt: bool508 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $508pred = call bool508(move_other, func=bool508, args=(Var(move_other, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $508pred, 510, 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $520unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
DEBUG:numba.core.ssa:on stmt: $524binary_multiply.10 = $520unary_negative.8 * alpha
DEBUG:numba.core.ssa:on stmt: $526inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$516binary_subscr.6, rhs=$524binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: other[d] = $526inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 532
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 534
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $540binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $546binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $548inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$540binary_subscr.5, rhs=$546binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample[i] = $548inplace_add.9
DEBUG:numba.core.ssa:on stmt: $554load_global.10 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $564binary_subtract.15 = n - $562binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $570binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $572binary_true_divide.19 = $564binary_subtract.15 / $570binary_subscr.18
DEBUG:numba.core.ssa:on stmt: n_neg_samples = call $554load_global.10($572binary_true_divide.19, func=$554load_global.10, args=[Var($572binary_true_divide.19, layouts.py:157)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $578load_global.21 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $582call_function.23 = call $578load_global.21(n_neg_samples, func=$578load_global.21, args=[Var(n_neg_samples, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $584get_iter.24 = getiter(value=$582call_function.23)
DEBUG:numba.core.ssa:on stmt: $phi586.1 = $584get_iter.24
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 586
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $586for_iter.2 = iternext(value=$phi586.1)
DEBUG:numba.core.ssa:on stmt: $586for_iter.3 = pair_first(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $586for_iter.4 = pair_second(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi588.2 = $586for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $586for_iter.4, 588, 776
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 588
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: p = $phi588.2
DEBUG:numba.core.ssa:on stmt: $590load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x0000017A062CD5A0>))
DEBUG:numba.core.ssa:on stmt: $596binary_subscr.6 = getitem(value=rng_state_per_sample, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $598call_function.7 = call $590load_global.3($596binary_subscr.6, func=$590load_global.3, args=[Var($596binary_subscr.6, layouts.py:161)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: k.1 = $598call_function.7 % n_vertices
DEBUG:numba.core.ssa:on stmt: other.1 = getitem(value=tail_embedding, index=k.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $614load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared.1 = call $614load_global.13(current, other.1, func=$614load_global.13, args=[Var(current, layouts.py:97), Var(other.1, layouts.py:163)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const626.18 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $628compare_op.19 = dist_squared.1 > $const626.18
DEBUG:numba.core.ssa:on stmt: bool632 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $632pred = call bool632($628compare_op.19, func=bool632, args=(Var($628compare_op.19, layouts.py:167),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $632pred, 634, 678
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 634
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $const634.2 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $638binary_multiply.4 = $const634.2 * gamma
DEBUG:numba.core.ssa:on stmt: grad_coeff.3 = $638binary_multiply.4 * b
DEBUG:numba.core.ssa:on stmt: $const648.8 = const(float, 0.001)
DEBUG:numba.core.ssa:on stmt: $652binary_add.10 = $const648.8 + dist_squared.1
DEBUG:numba.core.ssa:on stmt: $656load_global.12 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $662call_function.15 = call $656load_global.12(dist_squared.1, b, func=$656load_global.12, args=[Var(dist_squared.1, layouts.py:165), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $664binary_multiply.16 = a * $662call_function.15
DEBUG:numba.core.ssa:on stmt: $const666.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $668binary_add.18 = $664binary_multiply.16 + $const666.17
DEBUG:numba.core.ssa:on stmt: $670binary_multiply.19 = $652binary_add.10 * $668binary_add.18
DEBUG:numba.core.ssa:on stmt: $672inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff.3, rhs=$670binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff.4 = $672inplace_true_divide.20
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 678
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $682compare_op.4 = j == k.1
DEBUG:numba.core.ssa:on stmt: bool686 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $686pred = call bool686($682compare_op.4, func=bool686, args=(Var($682compare_op.4, layouts.py:172),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $686pred, 688, 692
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 688
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 692
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: grad_coeff.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 696
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: grad_coeff.7 = phi(incoming_values=[Var(grad_coeff.4, layouts.py:169), Var(grad_coeff.5, layouts.py:175)], incoming_blocks=[634, 692])
DEBUG:numba.core.ssa:on stmt: $696load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $700call_function.4 = call $696load_global.2(dim, func=$696load_global.2, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $702get_iter.5 = getiter(value=$700call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi704.2 = $702get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 704
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $704for_iter.3 = iternext(value=$phi704.2)
DEBUG:numba.core.ssa:on stmt: $704for_iter.4 = pair_first(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $704for_iter.5 = pair_second(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi706.3 = $704for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $704for_iter.5, 706, 772
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 706
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: d = $phi706.3
DEBUG:numba.core.ssa:replaced with: d.1 = $phi706.3
DEBUG:numba.core.ssa:on stmt: $const710.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $712compare_op.6 = grad_coeff.7 > $const710.5
DEBUG:numba.core.ssa:on stmt: bool716 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $716pred = call bool716($712compare_op.6, func=bool716, args=(Var($712compare_op.6, layouts.py:178),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $716pred, 718, 744
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 718
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $718load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $726binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $732binary_subscr.10 = getitem(value=other.1, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subtract.11 = $726binary_subscr.7 - $732binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $736binary_multiply.12 = grad_coeff.7 * $734binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $718load_global.3($736binary_multiply.12, func=$718load_global.3, args=[Var($736binary_multiply.12, layouts.py:179)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 744
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: grad_d = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 748
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $754binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $760binary_multiply.10 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $762inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$754binary_subscr.7, rhs=$760binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $762inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 772
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 776
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $782binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $790binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $792binary_multiply.10 = n_neg_samples * $790binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $794inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$782binary_subscr.5, rhs=$792binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample[i] = $794inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 800
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 802
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $const802.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $804return_value.1 = cast(value=$const802.0)
DEBUG:numba.core.ssa:on stmt: return $804return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 803
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {422: [<numba.core.ir.Assign object at 0x0000017AA6C57A00>],
             706: [<numba.core.ir.Assign object at 0x0000017AA6BD0100>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: head_embedding = arg(0, name=head_embedding)
DEBUG:numba.core.ssa:on stmt: tail_embedding = arg(1, name=tail_embedding)
DEBUG:numba.core.ssa:on stmt: head = arg(2, name=head)
DEBUG:numba.core.ssa:on stmt: tail = arg(3, name=tail)
DEBUG:numba.core.ssa:on stmt: n_vertices = arg(4, name=n_vertices)
DEBUG:numba.core.ssa:on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
DEBUG:numba.core.ssa:on stmt: a = arg(6, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(7, name=b)
DEBUG:numba.core.ssa:on stmt: rng_state_per_sample = arg(8, name=rng_state_per_sample)
DEBUG:numba.core.ssa:on stmt: gamma = arg(9, name=gamma)
DEBUG:numba.core.ssa:on stmt: dim = arg(10, name=dim)
DEBUG:numba.core.ssa:on stmt: move_other = arg(11, name=move_other)
DEBUG:numba.core.ssa:on stmt: alpha = arg(12, name=alpha)
DEBUG:numba.core.ssa:on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
DEBUG:numba.core.ssa:on stmt: n = arg(16, name=n)
DEBUG:numba.core.ssa:on stmt: densmap_flag = arg(17, name=densmap_flag)
DEBUG:numba.core.ssa:on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_sum = arg(19, name=dens_re_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_cov = arg(20, name=dens_re_cov)
DEBUG:numba.core.ssa:on stmt: dens_re_std = arg(21, name=dens_re_std)
DEBUG:numba.core.ssa:on stmt: dens_re_mean = arg(22, name=dens_re_mean)
DEBUG:numba.core.ssa:on stmt: dens_lambda = arg(23, name=dens_lambda)
DEBUG:numba.core.ssa:on stmt: dens_R = arg(24, name=dens_R)
DEBUG:numba.core.ssa:on stmt: dens_mu = arg(25, name=dens_mu)
DEBUG:numba.core.ssa:on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numba: <module 'numba' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numba\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:92)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
DEBUG:numba.core.ssa:on stmt: $phi20.0 = $16get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $20for_iter.1 = iternext(value=$phi20.0)
DEBUG:numba.core.ssa:on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi22.1 = $20for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $20for_iter.3, 22, 802
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: i = $phi22.1
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($32compare_op.6, func=bool36, args=(Var($32compare_op.6, layouts.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $36pred, 38, 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 38
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $70load_global.13(current, other, func=$70load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $const84.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const86.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $90load_global.4 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_multiply.8 = a * $96call_function.7
DEBUG:numba.core.ssa:on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
DEBUG:numba.core.ssa:on stmt: phi = $const84.1 / $100binary_add.9
DEBUG:numba.core.ssa:on stmt: $110binary_multiply.13 = a * b
DEBUG:numba.core.ssa:on stmt: $112load_global.14 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const118.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subtract.18 = b - $const118.17
DEBUG:numba.core.ssa:on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:100), Var($120binary_subtract.18, layouts.py:105)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
DEBUG:numba.core.ssa:on stmt: $const126.21 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $130load_global.23 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_multiply.27 = a * $136call_function.26
DEBUG:numba.core.ssa:on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
DEBUG:numba.core.ssa:on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
DEBUG:numba.core.ssa:on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_jk = phi / $152binary_subscr.33
DEBUG:numba.core.ssa:on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_kj = phi / $164binary_subscr.38
DEBUG:numba.core.ssa:on stmt: $const172.41 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const176.43 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180binary_subtract.45 = $const176.43 - phi
DEBUG:numba.core.ssa:on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
DEBUG:numba.core.ssa:on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
DEBUG:numba.core.ssa:on stmt: $186load_global.48 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:112)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
DEBUG:numba.core.ssa:on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
DEBUG:numba.core.ssa:on stmt: drk = q_jk * $202binary_add.56
DEBUG:numba.core.ssa:on stmt: $const210.59 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const214.61 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.63 = $const214.61 - phi
DEBUG:numba.core.ssa:on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
DEBUG:numba.core.ssa:on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
DEBUG:numba.core.ssa:on stmt: $224load_global.66 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
DEBUG:numba.core.ssa:on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
DEBUG:numba.core.ssa:on stmt: drj = q_kj * $240binary_add.74
DEBUG:numba.core.ssa:on stmt: re_std_sq = dens_re_std * dens_re_std
DEBUG:numba.core.ssa:on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
DEBUG:numba.core.ssa:on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
DEBUG:numba.core.ssa:on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
DEBUG:numba.core.ssa:on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
DEBUG:numba.core.ssa:on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
DEBUG:numba.core.ssa:on stmt: $320binary_multiply.110 = weight_k * drk
DEBUG:numba.core.ssa:on stmt: $326binary_multiply.113 = weight_j * drj
DEBUG:numba.core.ssa:on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
DEBUG:numba.core.ssa:on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
DEBUG:numba.core.ssa:on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
DEBUG:numba.core.ssa:on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
DEBUG:numba.core.ssa:on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $const352.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $354compare_op.3 = dist_squared > $const352.2
DEBUG:numba.core.ssa:on stmt: bool356 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $356pred = call bool356($354compare_op.3, func=bool356, args=(Var($354compare_op.3, layouts.py:136),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $356pred, 358, 408
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $const358.1 = const(float, -2.0)
DEBUG:numba.core.ssa:on stmt: $362binary_multiply.3 = $const358.1 * a
DEBUG:numba.core.ssa:on stmt: $366binary_multiply.5 = $362binary_multiply.3 * b
DEBUG:numba.core.ssa:on stmt: $368load_global.6 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const374.9 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.10 = b - $const374.9
DEBUG:numba.core.ssa:on stmt: $378call_function.11 = call $368load_global.6(dist_squared, $376binary_subtract.10, func=$368load_global.6, args=[Var(dist_squared, layouts.py:100), Var($376binary_subtract.10, layouts.py:137)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $366binary_multiply.5 * $378call_function.11
DEBUG:numba.core.ssa:on stmt: $388load_global.15 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $394call_function.18 = call $388load_global.15(dist_squared, b, func=$388load_global.15, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $396binary_multiply.19 = a * $394call_function.18
DEBUG:numba.core.ssa:on stmt: $const398.20 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $400binary_add.21 = $396binary_multiply.19 + $const398.20
DEBUG:numba.core.ssa:on stmt: $402inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$400binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff.1 = $402inplace_true_divide.22
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 408
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: grad_coeff.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 412
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: grad_coeff.6 = phi(incoming_values=[Var(grad_coeff.2, layouts.py:140), Var(grad_coeff.1, layouts.py:138)], incoming_blocks=[408, 358])
DEBUG:numba.core.ssa:on stmt: $412load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $416call_function.3 = call $412load_global.1(dim, func=$412load_global.1, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $418get_iter.4 = getiter(value=$416call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi420.1 = $418get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $420for_iter.2 = iternext(value=$phi420.1)
DEBUG:numba.core.ssa:on stmt: $420for_iter.3 = pair_first(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $420for_iter.4 = pair_second(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi422.2 = $420for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $420for_iter.4, 422, 534
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: d = $phi422.2
DEBUG:numba.core.ssa:on stmt: $424load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $432binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='d' stmt=$432binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $438binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='d' stmt=$438binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $440binary_subtract.11 = $432binary_subscr.7 - $438binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $442binary_multiply.12 = grad_coeff.6 * $440binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $424load_global.3($442binary_multiply.12, func=$424load_global.3, args=[Var($442binary_multiply.12, layouts.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool450 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $450pred = call bool450(densmap_flag, func=bool450, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $450pred, 452, 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $454load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $const456.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $460binary_multiply.6 = $const456.4 * grad_cor_coeff
DEBUG:numba.core.ssa:on stmt: $466binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='d' stmt=$466binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 452
DEBUG:numba.core.ssa:idom 422 from label 452
DEBUG:numba.core.ssa:find_def_from_bottom label 422
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='d' stmt=$472binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 452
DEBUG:numba.core.ssa:idom 422 from label 452
DEBUG:numba.core.ssa:find_def_from_bottom label 422
DEBUG:numba.core.ssa:on stmt: $474binary_subtract.13 = $466binary_subscr.9 - $472binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $476binary_multiply.14 = $460binary_multiply.6 * $474binary_subtract.13
DEBUG:numba.core.ssa:on stmt: $478call_function.15 = call $454load_global.3($476binary_multiply.14, func=$454load_global.3, args=[Var($476binary_multiply.14, layouts.py:148)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$478call_function.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_d = $480inplace_add.16
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $490binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='d' stmt=$490binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 484
DEBUG:numba.core.ssa:idom 422 from label 484
DEBUG:numba.core.ssa:find_def_from_bottom label 422
DEBUG:numba.core.ssa:on stmt: $496binary_multiply.9 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $498inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$490binary_subscr.6, rhs=$496binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $498inplace_add.10
DEBUG:numba.core.ssa:find_def var='d' stmt=current[d] = $498inplace_add.10
DEBUG:numba.core.ssa:find_def_from_top label 484
DEBUG:numba.core.ssa:idom 422 from label 484
DEBUG:numba.core.ssa:find_def_from_bottom label 422
DEBUG:numba.core.ssa:on stmt: bool508 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $508pred = call bool508(move_other, func=bool508, args=(Var(move_other, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $508pred, 510, 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='d' stmt=$516binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 510
DEBUG:numba.core.ssa:idom 484 from label 510
DEBUG:numba.core.ssa:find_def_from_bottom label 484
DEBUG:numba.core.ssa:find_def_from_top label 484
DEBUG:numba.core.ssa:idom 422 from label 484
DEBUG:numba.core.ssa:find_def_from_bottom label 422
DEBUG:numba.core.ssa:on stmt: $520unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
DEBUG:numba.core.ssa:on stmt: $524binary_multiply.10 = $520unary_negative.8 * alpha
DEBUG:numba.core.ssa:on stmt: $526inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$516binary_subscr.6, rhs=$524binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: other[d] = $526inplace_add.11
DEBUG:numba.core.ssa:find_def var='d' stmt=other[d] = $526inplace_add.11
DEBUG:numba.core.ssa:find_def_from_top label 510
DEBUG:numba.core.ssa:idom 484 from label 510
DEBUG:numba.core.ssa:find_def_from_bottom label 484
DEBUG:numba.core.ssa:find_def_from_top label 484
DEBUG:numba.core.ssa:idom 422 from label 484
DEBUG:numba.core.ssa:find_def_from_bottom label 422
DEBUG:numba.core.ssa:on stmt: jump 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 532
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 534
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $540binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $546binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $548inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$540binary_subscr.5, rhs=$546binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample[i] = $548inplace_add.9
DEBUG:numba.core.ssa:on stmt: $554load_global.10 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $564binary_subtract.15 = n - $562binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $570binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $572binary_true_divide.19 = $564binary_subtract.15 / $570binary_subscr.18
DEBUG:numba.core.ssa:on stmt: n_neg_samples = call $554load_global.10($572binary_true_divide.19, func=$554load_global.10, args=[Var($572binary_true_divide.19, layouts.py:157)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $578load_global.21 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $582call_function.23 = call $578load_global.21(n_neg_samples, func=$578load_global.21, args=[Var(n_neg_samples, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $584get_iter.24 = getiter(value=$582call_function.23)
DEBUG:numba.core.ssa:on stmt: $phi586.1 = $584get_iter.24
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 586
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $586for_iter.2 = iternext(value=$phi586.1)
DEBUG:numba.core.ssa:on stmt: $586for_iter.3 = pair_first(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $586for_iter.4 = pair_second(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi588.2 = $586for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $586for_iter.4, 588, 776
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 588
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: p = $phi588.2
DEBUG:numba.core.ssa:on stmt: $590load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x0000017A062CD5A0>))
DEBUG:numba.core.ssa:on stmt: $596binary_subscr.6 = getitem(value=rng_state_per_sample, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $598call_function.7 = call $590load_global.3($596binary_subscr.6, func=$590load_global.3, args=[Var($596binary_subscr.6, layouts.py:161)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: k.1 = $598call_function.7 % n_vertices
DEBUG:numba.core.ssa:on stmt: other.1 = getitem(value=tail_embedding, index=k.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $614load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared.1 = call $614load_global.13(current, other.1, func=$614load_global.13, args=[Var(current, layouts.py:97), Var(other.1, layouts.py:163)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const626.18 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $628compare_op.19 = dist_squared.1 > $const626.18
DEBUG:numba.core.ssa:on stmt: bool632 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $632pred = call bool632($628compare_op.19, func=bool632, args=(Var($628compare_op.19, layouts.py:167),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $632pred, 634, 678
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 634
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $const634.2 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $638binary_multiply.4 = $const634.2 * gamma
DEBUG:numba.core.ssa:on stmt: grad_coeff.3 = $638binary_multiply.4 * b
DEBUG:numba.core.ssa:on stmt: $const648.8 = const(float, 0.001)
DEBUG:numba.core.ssa:on stmt: $652binary_add.10 = $const648.8 + dist_squared.1
DEBUG:numba.core.ssa:on stmt: $656load_global.12 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $662call_function.15 = call $656load_global.12(dist_squared.1, b, func=$656load_global.12, args=[Var(dist_squared.1, layouts.py:165), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $664binary_multiply.16 = a * $662call_function.15
DEBUG:numba.core.ssa:on stmt: $const666.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $668binary_add.18 = $664binary_multiply.16 + $const666.17
DEBUG:numba.core.ssa:on stmt: $670binary_multiply.19 = $652binary_add.10 * $668binary_add.18
DEBUG:numba.core.ssa:on stmt: $672inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff.3, rhs=$670binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff.4 = $672inplace_true_divide.20
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 678
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $682compare_op.4 = j == k.1
DEBUG:numba.core.ssa:on stmt: bool686 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $686pred = call bool686($682compare_op.4, func=bool686, args=(Var($682compare_op.4, layouts.py:172),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $686pred, 688, 692
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 688
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 692
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: grad_coeff.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 696
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: grad_coeff.7 = phi(incoming_values=[Var(grad_coeff.4, layouts.py:169), Var(grad_coeff.5, layouts.py:175)], incoming_blocks=[634, 692])
DEBUG:numba.core.ssa:on stmt: $696load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $700call_function.4 = call $696load_global.2(dim, func=$696load_global.2, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $702get_iter.5 = getiter(value=$700call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi704.2 = $702get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 704
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $704for_iter.3 = iternext(value=$phi704.2)
DEBUG:numba.core.ssa:on stmt: $704for_iter.4 = pair_first(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $704for_iter.5 = pair_second(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi706.3 = $704for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $704for_iter.5, 706, 772
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 706
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: d.1 = $phi706.3
DEBUG:numba.core.ssa:on stmt: $const710.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $712compare_op.6 = grad_coeff.7 > $const710.5
DEBUG:numba.core.ssa:on stmt: bool716 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $716pred = call bool716($712compare_op.6, func=bool716, args=(Var($712compare_op.6, layouts.py:178),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $716pred, 718, 744
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 718
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $718load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $726binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='d' stmt=$726binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 718
DEBUG:numba.core.ssa:idom 706 from label 718
DEBUG:numba.core.ssa:find_def_from_bottom label 706
DEBUG:numba.core.ssa:replaced with: $726binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $732binary_subscr.10 = getitem(value=other.1, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='d' stmt=$732binary_subscr.10 = getitem(value=other.1, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 718
DEBUG:numba.core.ssa:idom 706 from label 718
DEBUG:numba.core.ssa:find_def_from_bottom label 706
DEBUG:numba.core.ssa:replaced with: $732binary_subscr.10 = getitem(value=other.1, index=d.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subtract.11 = $726binary_subscr.7 - $732binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $736binary_multiply.12 = grad_coeff.7 * $734binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $718load_global.3($736binary_multiply.12, func=$718load_global.3, args=[Var($736binary_multiply.12, layouts.py:179)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 744
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: grad_d = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 748
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $754binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='d' stmt=$754binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 748
DEBUG:numba.core.ssa:idom 706 from label 748
DEBUG:numba.core.ssa:find_def_from_bottom label 706
DEBUG:numba.core.ssa:replaced with: $754binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $760binary_multiply.10 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $762inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$754binary_subscr.7, rhs=$760binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $762inplace_add.11
DEBUG:numba.core.ssa:find_def var='d' stmt=current[d] = $762inplace_add.11
DEBUG:numba.core.ssa:find_def_from_top label 748
DEBUG:numba.core.ssa:idom 706 from label 748
DEBUG:numba.core.ssa:find_def_from_bottom label 706
DEBUG:numba.core.ssa:replaced with: current[d.1] = $762inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 772
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 776
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $782binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $790binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $792binary_multiply.10 = n_neg_samples * $790binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $794inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$782binary_subscr.5, rhs=$792binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample[i] = $794inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 800
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 802
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: $const802.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $804return_value.1 = cast(value=$const802.0)
DEBUG:numba.core.ssa:on stmt: return $804return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 803
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1F90>
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:Fix SSA violator on var grad_d
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: head_embedding = arg(0, name=head_embedding)
DEBUG:numba.core.ssa:on stmt: tail_embedding = arg(1, name=tail_embedding)
DEBUG:numba.core.ssa:on stmt: head = arg(2, name=head)
DEBUG:numba.core.ssa:on stmt: tail = arg(3, name=tail)
DEBUG:numba.core.ssa:on stmt: n_vertices = arg(4, name=n_vertices)
DEBUG:numba.core.ssa:on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
DEBUG:numba.core.ssa:on stmt: a = arg(6, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(7, name=b)
DEBUG:numba.core.ssa:on stmt: rng_state_per_sample = arg(8, name=rng_state_per_sample)
DEBUG:numba.core.ssa:on stmt: gamma = arg(9, name=gamma)
DEBUG:numba.core.ssa:on stmt: dim = arg(10, name=dim)
DEBUG:numba.core.ssa:on stmt: move_other = arg(11, name=move_other)
DEBUG:numba.core.ssa:on stmt: alpha = arg(12, name=alpha)
DEBUG:numba.core.ssa:on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
DEBUG:numba.core.ssa:on stmt: n = arg(16, name=n)
DEBUG:numba.core.ssa:on stmt: densmap_flag = arg(17, name=densmap_flag)
DEBUG:numba.core.ssa:on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_sum = arg(19, name=dens_re_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_cov = arg(20, name=dens_re_cov)
DEBUG:numba.core.ssa:on stmt: dens_re_std = arg(21, name=dens_re_std)
DEBUG:numba.core.ssa:on stmt: dens_re_mean = arg(22, name=dens_re_mean)
DEBUG:numba.core.ssa:on stmt: dens_lambda = arg(23, name=dens_lambda)
DEBUG:numba.core.ssa:on stmt: dens_R = arg(24, name=dens_R)
DEBUG:numba.core.ssa:on stmt: dens_mu = arg(25, name=dens_mu)
DEBUG:numba.core.ssa:on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numba: <module 'numba' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numba\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:92)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
DEBUG:numba.core.ssa:on stmt: $phi20.0 = $16get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $20for_iter.1 = iternext(value=$phi20.0)
DEBUG:numba.core.ssa:on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi22.1 = $20for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $20for_iter.3, 22, 802
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: i = $phi22.1
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($32compare_op.6, func=bool36, args=(Var($32compare_op.6, layouts.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $36pred, 38, 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 38
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $70load_global.13(current, other, func=$70load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $const84.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const86.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $90load_global.4 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_multiply.8 = a * $96call_function.7
DEBUG:numba.core.ssa:on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
DEBUG:numba.core.ssa:on stmt: phi = $const84.1 / $100binary_add.9
DEBUG:numba.core.ssa:on stmt: $110binary_multiply.13 = a * b
DEBUG:numba.core.ssa:on stmt: $112load_global.14 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const118.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subtract.18 = b - $const118.17
DEBUG:numba.core.ssa:on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:100), Var($120binary_subtract.18, layouts.py:105)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
DEBUG:numba.core.ssa:on stmt: $const126.21 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $130load_global.23 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_multiply.27 = a * $136call_function.26
DEBUG:numba.core.ssa:on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
DEBUG:numba.core.ssa:on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
DEBUG:numba.core.ssa:on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_jk = phi / $152binary_subscr.33
DEBUG:numba.core.ssa:on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_kj = phi / $164binary_subscr.38
DEBUG:numba.core.ssa:on stmt: $const172.41 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const176.43 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180binary_subtract.45 = $const176.43 - phi
DEBUG:numba.core.ssa:on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
DEBUG:numba.core.ssa:on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
DEBUG:numba.core.ssa:on stmt: $186load_global.48 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:112)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
DEBUG:numba.core.ssa:on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
DEBUG:numba.core.ssa:on stmt: drk = q_jk * $202binary_add.56
DEBUG:numba.core.ssa:on stmt: $const210.59 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const214.61 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.63 = $const214.61 - phi
DEBUG:numba.core.ssa:on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
DEBUG:numba.core.ssa:on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
DEBUG:numba.core.ssa:on stmt: $224load_global.66 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
DEBUG:numba.core.ssa:on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
DEBUG:numba.core.ssa:on stmt: drj = q_kj * $240binary_add.74
DEBUG:numba.core.ssa:on stmt: re_std_sq = dens_re_std * dens_re_std
DEBUG:numba.core.ssa:on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
DEBUG:numba.core.ssa:on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
DEBUG:numba.core.ssa:on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
DEBUG:numba.core.ssa:on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
DEBUG:numba.core.ssa:on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
DEBUG:numba.core.ssa:on stmt: $320binary_multiply.110 = weight_k * drk
DEBUG:numba.core.ssa:on stmt: $326binary_multiply.113 = weight_j * drj
DEBUG:numba.core.ssa:on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
DEBUG:numba.core.ssa:on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
DEBUG:numba.core.ssa:on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
DEBUG:numba.core.ssa:on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
DEBUG:numba.core.ssa:on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $const352.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $354compare_op.3 = dist_squared > $const352.2
DEBUG:numba.core.ssa:on stmt: bool356 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $356pred = call bool356($354compare_op.3, func=bool356, args=(Var($354compare_op.3, layouts.py:136),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $356pred, 358, 408
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $const358.1 = const(float, -2.0)
DEBUG:numba.core.ssa:on stmt: $362binary_multiply.3 = $const358.1 * a
DEBUG:numba.core.ssa:on stmt: $366binary_multiply.5 = $362binary_multiply.3 * b
DEBUG:numba.core.ssa:on stmt: $368load_global.6 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const374.9 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.10 = b - $const374.9
DEBUG:numba.core.ssa:on stmt: $378call_function.11 = call $368load_global.6(dist_squared, $376binary_subtract.10, func=$368load_global.6, args=[Var(dist_squared, layouts.py:100), Var($376binary_subtract.10, layouts.py:137)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $366binary_multiply.5 * $378call_function.11
DEBUG:numba.core.ssa:on stmt: $388load_global.15 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $394call_function.18 = call $388load_global.15(dist_squared, b, func=$388load_global.15, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $396binary_multiply.19 = a * $394call_function.18
DEBUG:numba.core.ssa:on stmt: $const398.20 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $400binary_add.21 = $396binary_multiply.19 + $const398.20
DEBUG:numba.core.ssa:on stmt: $402inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$400binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff.1 = $402inplace_true_divide.22
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 408
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: grad_coeff.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 412
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: grad_coeff.6 = phi(incoming_values=[Var(grad_coeff.2, layouts.py:140), Var(grad_coeff.1, layouts.py:138)], incoming_blocks=[408, 358])
DEBUG:numba.core.ssa:on stmt: $412load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $416call_function.3 = call $412load_global.1(dim, func=$412load_global.1, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $418get_iter.4 = getiter(value=$416call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi420.1 = $418get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $420for_iter.2 = iternext(value=$phi420.1)
DEBUG:numba.core.ssa:on stmt: $420for_iter.3 = pair_first(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $420for_iter.4 = pair_second(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi422.2 = $420for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $420for_iter.4, 422, 534
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: d = $phi422.2
DEBUG:numba.core.ssa:on stmt: $424load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $432binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $438binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $440binary_subtract.11 = $432binary_subscr.7 - $438binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $442binary_multiply.12 = grad_coeff.6 * $440binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $424load_global.3($442binary_multiply.12, func=$424load_global.3, args=[Var($442binary_multiply.12, layouts.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:first assign: grad_d
DEBUG:numba.core.ssa:replaced with: grad_d = call $424load_global.3($442binary_multiply.12, func=$424load_global.3, args=[Var($442binary_multiply.12, layouts.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool450 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $450pred = call bool450(densmap_flag, func=bool450, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $450pred, 452, 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $454load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $const456.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $460binary_multiply.6 = $const456.4 * grad_cor_coeff
DEBUG:numba.core.ssa:on stmt: $466binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $474binary_subtract.13 = $466binary_subscr.9 - $472binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $476binary_multiply.14 = $460binary_multiply.6 * $474binary_subtract.13
DEBUG:numba.core.ssa:on stmt: $478call_function.15 = call $454load_global.3($476binary_multiply.14, func=$454load_global.3, args=[Var($476binary_multiply.14, layouts.py:148)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$478call_function.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_d = $480inplace_add.16
DEBUG:numba.core.ssa:replaced with: grad_d.1 = $480inplace_add.16
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $490binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $496binary_multiply.9 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $498inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$490binary_subscr.6, rhs=$496binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $498inplace_add.10
DEBUG:numba.core.ssa:on stmt: bool508 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $508pred = call bool508(move_other, func=bool508, args=(Var(move_other, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $508pred, 510, 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $520unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
DEBUG:numba.core.ssa:on stmt: $524binary_multiply.10 = $520unary_negative.8 * alpha
DEBUG:numba.core.ssa:on stmt: $526inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$516binary_subscr.6, rhs=$524binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: other[d] = $526inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 532
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 534
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $540binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $546binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $548inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$540binary_subscr.5, rhs=$546binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample[i] = $548inplace_add.9
DEBUG:numba.core.ssa:on stmt: $554load_global.10 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $564binary_subtract.15 = n - $562binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $570binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $572binary_true_divide.19 = $564binary_subtract.15 / $570binary_subscr.18
DEBUG:numba.core.ssa:on stmt: n_neg_samples = call $554load_global.10($572binary_true_divide.19, func=$554load_global.10, args=[Var($572binary_true_divide.19, layouts.py:157)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $578load_global.21 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $582call_function.23 = call $578load_global.21(n_neg_samples, func=$578load_global.21, args=[Var(n_neg_samples, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $584get_iter.24 = getiter(value=$582call_function.23)
DEBUG:numba.core.ssa:on stmt: $phi586.1 = $584get_iter.24
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 586
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $586for_iter.2 = iternext(value=$phi586.1)
DEBUG:numba.core.ssa:on stmt: $586for_iter.3 = pair_first(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $586for_iter.4 = pair_second(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi588.2 = $586for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $586for_iter.4, 588, 776
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 588
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: p = $phi588.2
DEBUG:numba.core.ssa:on stmt: $590load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x0000017A062CD5A0>))
DEBUG:numba.core.ssa:on stmt: $596binary_subscr.6 = getitem(value=rng_state_per_sample, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $598call_function.7 = call $590load_global.3($596binary_subscr.6, func=$590load_global.3, args=[Var($596binary_subscr.6, layouts.py:161)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: k.1 = $598call_function.7 % n_vertices
DEBUG:numba.core.ssa:on stmt: other.1 = getitem(value=tail_embedding, index=k.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $614load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared.1 = call $614load_global.13(current, other.1, func=$614load_global.13, args=[Var(current, layouts.py:97), Var(other.1, layouts.py:163)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const626.18 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $628compare_op.19 = dist_squared.1 > $const626.18
DEBUG:numba.core.ssa:on stmt: bool632 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $632pred = call bool632($628compare_op.19, func=bool632, args=(Var($628compare_op.19, layouts.py:167),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $632pred, 634, 678
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 634
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $const634.2 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $638binary_multiply.4 = $const634.2 * gamma
DEBUG:numba.core.ssa:on stmt: grad_coeff.3 = $638binary_multiply.4 * b
DEBUG:numba.core.ssa:on stmt: $const648.8 = const(float, 0.001)
DEBUG:numba.core.ssa:on stmt: $652binary_add.10 = $const648.8 + dist_squared.1
DEBUG:numba.core.ssa:on stmt: $656load_global.12 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $662call_function.15 = call $656load_global.12(dist_squared.1, b, func=$656load_global.12, args=[Var(dist_squared.1, layouts.py:165), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $664binary_multiply.16 = a * $662call_function.15
DEBUG:numba.core.ssa:on stmt: $const666.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $668binary_add.18 = $664binary_multiply.16 + $const666.17
DEBUG:numba.core.ssa:on stmt: $670binary_multiply.19 = $652binary_add.10 * $668binary_add.18
DEBUG:numba.core.ssa:on stmt: $672inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff.3, rhs=$670binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff.4 = $672inplace_true_divide.20
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 678
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $682compare_op.4 = j == k.1
DEBUG:numba.core.ssa:on stmt: bool686 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $686pred = call bool686($682compare_op.4, func=bool686, args=(Var($682compare_op.4, layouts.py:172),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $686pred, 688, 692
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 688
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 692
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: grad_coeff.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 696
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: grad_coeff.7 = phi(incoming_values=[Var(grad_coeff.4, layouts.py:169), Var(grad_coeff.5, layouts.py:175)], incoming_blocks=[634, 692])
DEBUG:numba.core.ssa:on stmt: $696load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $700call_function.4 = call $696load_global.2(dim, func=$696load_global.2, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $702get_iter.5 = getiter(value=$700call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi704.2 = $702get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 704
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $704for_iter.3 = iternext(value=$phi704.2)
DEBUG:numba.core.ssa:on stmt: $704for_iter.4 = pair_first(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $704for_iter.5 = pair_second(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi706.3 = $704for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $704for_iter.5, 706, 772
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 706
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: d.1 = $phi706.3
DEBUG:numba.core.ssa:on stmt: $const710.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $712compare_op.6 = grad_coeff.7 > $const710.5
DEBUG:numba.core.ssa:on stmt: bool716 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $716pred = call bool716($712compare_op.6, func=bool716, args=(Var($712compare_op.6, layouts.py:178),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $716pred, 718, 744
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 718
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $718load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $726binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $732binary_subscr.10 = getitem(value=other.1, index=d.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subtract.11 = $726binary_subscr.7 - $732binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $736binary_multiply.12 = grad_coeff.7 * $734binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $718load_global.3($736binary_multiply.12, func=$718load_global.3, args=[Var($736binary_multiply.12, layouts.py:179)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: grad_d.2 = call $718load_global.3($736binary_multiply.12, func=$718load_global.3, args=[Var($736binary_multiply.12, layouts.py:179)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 744
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: grad_d = const(int, 0)
DEBUG:numba.core.ssa:replaced with: grad_d.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 748
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $754binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $760binary_multiply.10 = grad_d * alpha
DEBUG:numba.core.ssa:on stmt: $762inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$754binary_subscr.7, rhs=$760binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d.1] = $762inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 772
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 776
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $782binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $790binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $792binary_multiply.10 = n_neg_samples * $790binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $794inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$782binary_subscr.5, rhs=$792binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample[i] = $794inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 800
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 802
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $const802.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $804return_value.1 = cast(value=$const802.0)
DEBUG:numba.core.ssa:on stmt: return $804return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 803
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {422: [<numba.core.ir.Assign object at 0x0000017AA6BD0D30>],
             452: [<numba.core.ir.Assign object at 0x0000017AA6BD1240>],
             718: [<numba.core.ir.Assign object at 0x0000017AA6C6A8C0>],
             744: [<numba.core.ir.Assign object at 0x0000017AA6C6B5B0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: head_embedding = arg(0, name=head_embedding)
DEBUG:numba.core.ssa:on stmt: tail_embedding = arg(1, name=tail_embedding)
DEBUG:numba.core.ssa:on stmt: head = arg(2, name=head)
DEBUG:numba.core.ssa:on stmt: tail = arg(3, name=tail)
DEBUG:numba.core.ssa:on stmt: n_vertices = arg(4, name=n_vertices)
DEBUG:numba.core.ssa:on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
DEBUG:numba.core.ssa:on stmt: a = arg(6, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(7, name=b)
DEBUG:numba.core.ssa:on stmt: rng_state_per_sample = arg(8, name=rng_state_per_sample)
DEBUG:numba.core.ssa:on stmt: gamma = arg(9, name=gamma)
DEBUG:numba.core.ssa:on stmt: dim = arg(10, name=dim)
DEBUG:numba.core.ssa:on stmt: move_other = arg(11, name=move_other)
DEBUG:numba.core.ssa:on stmt: alpha = arg(12, name=alpha)
DEBUG:numba.core.ssa:on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
DEBUG:numba.core.ssa:on stmt: n = arg(16, name=n)
DEBUG:numba.core.ssa:on stmt: densmap_flag = arg(17, name=densmap_flag)
DEBUG:numba.core.ssa:on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_sum = arg(19, name=dens_re_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_cov = arg(20, name=dens_re_cov)
DEBUG:numba.core.ssa:on stmt: dens_re_std = arg(21, name=dens_re_std)
DEBUG:numba.core.ssa:on stmt: dens_re_mean = arg(22, name=dens_re_mean)
DEBUG:numba.core.ssa:on stmt: dens_lambda = arg(23, name=dens_lambda)
DEBUG:numba.core.ssa:on stmt: dens_R = arg(24, name=dens_R)
DEBUG:numba.core.ssa:on stmt: dens_mu = arg(25, name=dens_mu)
DEBUG:numba.core.ssa:on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numba: <module 'numba' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numba\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:92)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
DEBUG:numba.core.ssa:on stmt: $phi20.0 = $16get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $20for_iter.1 = iternext(value=$phi20.0)
DEBUG:numba.core.ssa:on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi22.1 = $20for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $20for_iter.3, 22, 802
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: i = $phi22.1
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($32compare_op.6, func=bool36, args=(Var($32compare_op.6, layouts.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $36pred, 38, 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 38
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $70load_global.13(current, other, func=$70load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $const84.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const86.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $90load_global.4 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_multiply.8 = a * $96call_function.7
DEBUG:numba.core.ssa:on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
DEBUG:numba.core.ssa:on stmt: phi = $const84.1 / $100binary_add.9
DEBUG:numba.core.ssa:on stmt: $110binary_multiply.13 = a * b
DEBUG:numba.core.ssa:on stmt: $112load_global.14 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const118.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subtract.18 = b - $const118.17
DEBUG:numba.core.ssa:on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:100), Var($120binary_subtract.18, layouts.py:105)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
DEBUG:numba.core.ssa:on stmt: $const126.21 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $130load_global.23 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_multiply.27 = a * $136call_function.26
DEBUG:numba.core.ssa:on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
DEBUG:numba.core.ssa:on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
DEBUG:numba.core.ssa:on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_jk = phi / $152binary_subscr.33
DEBUG:numba.core.ssa:on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_kj = phi / $164binary_subscr.38
DEBUG:numba.core.ssa:on stmt: $const172.41 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const176.43 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180binary_subtract.45 = $const176.43 - phi
DEBUG:numba.core.ssa:on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
DEBUG:numba.core.ssa:on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
DEBUG:numba.core.ssa:on stmt: $186load_global.48 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:112)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
DEBUG:numba.core.ssa:on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
DEBUG:numba.core.ssa:on stmt: drk = q_jk * $202binary_add.56
DEBUG:numba.core.ssa:on stmt: $const210.59 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const214.61 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.63 = $const214.61 - phi
DEBUG:numba.core.ssa:on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
DEBUG:numba.core.ssa:on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
DEBUG:numba.core.ssa:on stmt: $224load_global.66 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
DEBUG:numba.core.ssa:on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
DEBUG:numba.core.ssa:on stmt: drj = q_kj * $240binary_add.74
DEBUG:numba.core.ssa:on stmt: re_std_sq = dens_re_std * dens_re_std
DEBUG:numba.core.ssa:on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
DEBUG:numba.core.ssa:on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
DEBUG:numba.core.ssa:on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
DEBUG:numba.core.ssa:on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
DEBUG:numba.core.ssa:on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
DEBUG:numba.core.ssa:on stmt: $320binary_multiply.110 = weight_k * drk
DEBUG:numba.core.ssa:on stmt: $326binary_multiply.113 = weight_j * drj
DEBUG:numba.core.ssa:on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
DEBUG:numba.core.ssa:on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
DEBUG:numba.core.ssa:on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
DEBUG:numba.core.ssa:on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
DEBUG:numba.core.ssa:on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $const352.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $354compare_op.3 = dist_squared > $const352.2
DEBUG:numba.core.ssa:on stmt: bool356 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $356pred = call bool356($354compare_op.3, func=bool356, args=(Var($354compare_op.3, layouts.py:136),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $356pred, 358, 408
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $const358.1 = const(float, -2.0)
DEBUG:numba.core.ssa:on stmt: $362binary_multiply.3 = $const358.1 * a
DEBUG:numba.core.ssa:on stmt: $366binary_multiply.5 = $362binary_multiply.3 * b
DEBUG:numba.core.ssa:on stmt: $368load_global.6 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const374.9 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.10 = b - $const374.9
DEBUG:numba.core.ssa:on stmt: $378call_function.11 = call $368load_global.6(dist_squared, $376binary_subtract.10, func=$368load_global.6, args=[Var(dist_squared, layouts.py:100), Var($376binary_subtract.10, layouts.py:137)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $366binary_multiply.5 * $378call_function.11
DEBUG:numba.core.ssa:on stmt: $388load_global.15 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $394call_function.18 = call $388load_global.15(dist_squared, b, func=$388load_global.15, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $396binary_multiply.19 = a * $394call_function.18
DEBUG:numba.core.ssa:on stmt: $const398.20 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $400binary_add.21 = $396binary_multiply.19 + $const398.20
DEBUG:numba.core.ssa:on stmt: $402inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$400binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff.1 = $402inplace_true_divide.22
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 408
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: grad_coeff.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 412
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: grad_coeff.6 = phi(incoming_values=[Var(grad_coeff.2, layouts.py:140), Var(grad_coeff.1, layouts.py:138)], incoming_blocks=[408, 358])
DEBUG:numba.core.ssa:on stmt: $412load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $416call_function.3 = call $412load_global.1(dim, func=$412load_global.1, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $418get_iter.4 = getiter(value=$416call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi420.1 = $418get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $420for_iter.2 = iternext(value=$phi420.1)
DEBUG:numba.core.ssa:on stmt: $420for_iter.3 = pair_first(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $420for_iter.4 = pair_second(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi422.2 = $420for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $420for_iter.4, 422, 534
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: d = $phi422.2
DEBUG:numba.core.ssa:on stmt: $424load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $432binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $438binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $440binary_subtract.11 = $432binary_subscr.7 - $438binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $442binary_multiply.12 = grad_coeff.6 * $440binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $424load_global.3($442binary_multiply.12, func=$424load_global.3, args=[Var($442binary_multiply.12, layouts.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool450 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $450pred = call bool450(densmap_flag, func=bool450, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $450pred, 452, 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $454load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $const456.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $460binary_multiply.6 = $const456.4 * grad_cor_coeff
DEBUG:numba.core.ssa:on stmt: $466binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $474binary_subtract.13 = $466binary_subscr.9 - $472binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $476binary_multiply.14 = $460binary_multiply.6 * $474binary_subtract.13
DEBUG:numba.core.ssa:on stmt: $478call_function.15 = call $454load_global.3($476binary_multiply.14, func=$454load_global.3, args=[Var($476binary_multiply.14, layouts.py:148)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$478call_function.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='grad_d' stmt=$480inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$478call_function.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 452
DEBUG:numba.core.ssa:idom 422 from label 452
DEBUG:numba.core.ssa:find_def_from_bottom label 422
DEBUG:numba.core.ssa:on stmt: grad_d.1 = $480inplace_add.16
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $490binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $496binary_multiply.9 = grad_d * alpha
DEBUG:numba.core.ssa:find_def var='grad_d' stmt=$496binary_multiply.9 = grad_d * alpha
DEBUG:numba.core.ssa:find_def_from_top label 484
DEBUG:numba.core.ssa:insert phi node grad_d.4 = phi(incoming_values=[], incoming_blocks=[]) at 484
DEBUG:numba.core.ssa:find_def_from_bottom label 452
DEBUG:numba.core.ssa:incoming_def grad_d.1 = $480inplace_add.16
DEBUG:numba.core.ssa:find_def_from_bottom label 422
DEBUG:numba.core.ssa:incoming_def grad_d = call $424load_global.3($442binary_multiply.12, func=$424load_global.3, args=[Var($442binary_multiply.12, layouts.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: $496binary_multiply.9 = grad_d.4 * alpha
DEBUG:numba.core.ssa:on stmt: $498inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$490binary_subscr.6, rhs=$496binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $498inplace_add.10
DEBUG:numba.core.ssa:on stmt: bool508 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $508pred = call bool508(move_other, func=bool508, args=(Var(move_other, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $508pred, 510, 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $520unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
DEBUG:numba.core.ssa:find_def var='grad_d' stmt=$520unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
DEBUG:numba.core.ssa:find_def_from_top label 510
DEBUG:numba.core.ssa:idom 484 from label 510
DEBUG:numba.core.ssa:find_def_from_bottom label 484
DEBUG:numba.core.ssa:replaced with: $520unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d.4)
DEBUG:numba.core.ssa:on stmt: $524binary_multiply.10 = $520unary_negative.8 * alpha
DEBUG:numba.core.ssa:on stmt: $526inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$516binary_subscr.6, rhs=$524binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: other[d] = $526inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 532
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 534
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $540binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $546binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $548inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$540binary_subscr.5, rhs=$546binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample[i] = $548inplace_add.9
DEBUG:numba.core.ssa:on stmt: $554load_global.10 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $564binary_subtract.15 = n - $562binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $570binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $572binary_true_divide.19 = $564binary_subtract.15 / $570binary_subscr.18
DEBUG:numba.core.ssa:on stmt: n_neg_samples = call $554load_global.10($572binary_true_divide.19, func=$554load_global.10, args=[Var($572binary_true_divide.19, layouts.py:157)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $578load_global.21 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $582call_function.23 = call $578load_global.21(n_neg_samples, func=$578load_global.21, args=[Var(n_neg_samples, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $584get_iter.24 = getiter(value=$582call_function.23)
DEBUG:numba.core.ssa:on stmt: $phi586.1 = $584get_iter.24
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 586
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $586for_iter.2 = iternext(value=$phi586.1)
DEBUG:numba.core.ssa:on stmt: $586for_iter.3 = pair_first(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $586for_iter.4 = pair_second(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi588.2 = $586for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $586for_iter.4, 588, 776
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 588
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: p = $phi588.2
DEBUG:numba.core.ssa:on stmt: $590load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x0000017A062CD5A0>))
DEBUG:numba.core.ssa:on stmt: $596binary_subscr.6 = getitem(value=rng_state_per_sample, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $598call_function.7 = call $590load_global.3($596binary_subscr.6, func=$590load_global.3, args=[Var($596binary_subscr.6, layouts.py:161)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: k.1 = $598call_function.7 % n_vertices
DEBUG:numba.core.ssa:on stmt: other.1 = getitem(value=tail_embedding, index=k.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $614load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared.1 = call $614load_global.13(current, other.1, func=$614load_global.13, args=[Var(current, layouts.py:97), Var(other.1, layouts.py:163)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const626.18 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $628compare_op.19 = dist_squared.1 > $const626.18
DEBUG:numba.core.ssa:on stmt: bool632 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $632pred = call bool632($628compare_op.19, func=bool632, args=(Var($628compare_op.19, layouts.py:167),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $632pred, 634, 678
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 634
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $const634.2 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $638binary_multiply.4 = $const634.2 * gamma
DEBUG:numba.core.ssa:on stmt: grad_coeff.3 = $638binary_multiply.4 * b
DEBUG:numba.core.ssa:on stmt: $const648.8 = const(float, 0.001)
DEBUG:numba.core.ssa:on stmt: $652binary_add.10 = $const648.8 + dist_squared.1
DEBUG:numba.core.ssa:on stmt: $656load_global.12 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $662call_function.15 = call $656load_global.12(dist_squared.1, b, func=$656load_global.12, args=[Var(dist_squared.1, layouts.py:165), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $664binary_multiply.16 = a * $662call_function.15
DEBUG:numba.core.ssa:on stmt: $const666.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $668binary_add.18 = $664binary_multiply.16 + $const666.17
DEBUG:numba.core.ssa:on stmt: $670binary_multiply.19 = $652binary_add.10 * $668binary_add.18
DEBUG:numba.core.ssa:on stmt: $672inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff.3, rhs=$670binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff.4 = $672inplace_true_divide.20
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 678
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $682compare_op.4 = j == k.1
DEBUG:numba.core.ssa:on stmt: bool686 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $686pred = call bool686($682compare_op.4, func=bool686, args=(Var($682compare_op.4, layouts.py:172),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $686pred, 688, 692
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 688
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 692
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: grad_coeff.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 696
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: grad_coeff.7 = phi(incoming_values=[Var(grad_coeff.4, layouts.py:169), Var(grad_coeff.5, layouts.py:175)], incoming_blocks=[634, 692])
DEBUG:numba.core.ssa:on stmt: $696load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $700call_function.4 = call $696load_global.2(dim, func=$696load_global.2, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $702get_iter.5 = getiter(value=$700call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi704.2 = $702get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 704
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $704for_iter.3 = iternext(value=$phi704.2)
DEBUG:numba.core.ssa:on stmt: $704for_iter.4 = pair_first(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $704for_iter.5 = pair_second(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi706.3 = $704for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $704for_iter.5, 706, 772
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 706
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: d.1 = $phi706.3
DEBUG:numba.core.ssa:on stmt: $const710.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $712compare_op.6 = grad_coeff.7 > $const710.5
DEBUG:numba.core.ssa:on stmt: bool716 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $716pred = call bool716($712compare_op.6, func=bool716, args=(Var($712compare_op.6, layouts.py:178),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $716pred, 718, 744
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 718
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $718load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $726binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $732binary_subscr.10 = getitem(value=other.1, index=d.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subtract.11 = $726binary_subscr.7 - $732binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $736binary_multiply.12 = grad_coeff.7 * $734binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d.2 = call $718load_global.3($736binary_multiply.12, func=$718load_global.3, args=[Var($736binary_multiply.12, layouts.py:179)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 744
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: grad_d.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 748
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $754binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $760binary_multiply.10 = grad_d * alpha
DEBUG:numba.core.ssa:find_def var='grad_d' stmt=$760binary_multiply.10 = grad_d * alpha
DEBUG:numba.core.ssa:find_def_from_top label 748
DEBUG:numba.core.ssa:insert phi node grad_d.5 = phi(incoming_values=[], incoming_blocks=[]) at 748
DEBUG:numba.core.ssa:find_def_from_bottom label 744
DEBUG:numba.core.ssa:incoming_def grad_d.3 = const(int, 0)
DEBUG:numba.core.ssa:find_def_from_bottom label 718
DEBUG:numba.core.ssa:incoming_def grad_d.2 = call $718load_global.3($736binary_multiply.12, func=$718load_global.3, args=[Var($736binary_multiply.12, layouts.py:179)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: $760binary_multiply.10 = grad_d.5 * alpha
DEBUG:numba.core.ssa:on stmt: $762inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$754binary_subscr.7, rhs=$760binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d.1] = $762inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 772
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 776
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $782binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $790binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $792binary_multiply.10 = n_neg_samples * $790binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $794inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$782binary_subscr.5, rhs=$792binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample[i] = $794inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 800
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 802
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: $const802.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $804return_value.1 = cast(value=$const802.0)
DEBUG:numba.core.ssa:on stmt: return $804return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 803
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6C57670>
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:Fix SSA violator on var grad_cor_coeff
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: head_embedding = arg(0, name=head_embedding)
DEBUG:numba.core.ssa:on stmt: tail_embedding = arg(1, name=tail_embedding)
DEBUG:numba.core.ssa:on stmt: head = arg(2, name=head)
DEBUG:numba.core.ssa:on stmt: tail = arg(3, name=tail)
DEBUG:numba.core.ssa:on stmt: n_vertices = arg(4, name=n_vertices)
DEBUG:numba.core.ssa:on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
DEBUG:numba.core.ssa:on stmt: a = arg(6, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(7, name=b)
DEBUG:numba.core.ssa:on stmt: rng_state_per_sample = arg(8, name=rng_state_per_sample)
DEBUG:numba.core.ssa:on stmt: gamma = arg(9, name=gamma)
DEBUG:numba.core.ssa:on stmt: dim = arg(10, name=dim)
DEBUG:numba.core.ssa:on stmt: move_other = arg(11, name=move_other)
DEBUG:numba.core.ssa:on stmt: alpha = arg(12, name=alpha)
DEBUG:numba.core.ssa:on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
DEBUG:numba.core.ssa:on stmt: n = arg(16, name=n)
DEBUG:numba.core.ssa:on stmt: densmap_flag = arg(17, name=densmap_flag)
DEBUG:numba.core.ssa:on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_sum = arg(19, name=dens_re_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_cov = arg(20, name=dens_re_cov)
DEBUG:numba.core.ssa:on stmt: dens_re_std = arg(21, name=dens_re_std)
DEBUG:numba.core.ssa:on stmt: dens_re_mean = arg(22, name=dens_re_mean)
DEBUG:numba.core.ssa:on stmt: dens_lambda = arg(23, name=dens_lambda)
DEBUG:numba.core.ssa:on stmt: dens_R = arg(24, name=dens_R)
DEBUG:numba.core.ssa:on stmt: dens_mu = arg(25, name=dens_mu)
DEBUG:numba.core.ssa:on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numba: <module 'numba' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numba\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:92)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
DEBUG:numba.core.ssa:on stmt: $phi20.0 = $16get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: $20for_iter.1 = iternext(value=$phi20.0)
DEBUG:numba.core.ssa:on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi22.1 = $20for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $20for_iter.3, 22, 802
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: i = $phi22.1
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($32compare_op.6, func=bool36, args=(Var($32compare_op.6, layouts.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $36pred, 38, 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 38
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $70load_global.13(current, other, func=$70load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: $const84.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const86.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $90load_global.4 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_multiply.8 = a * $96call_function.7
DEBUG:numba.core.ssa:on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
DEBUG:numba.core.ssa:on stmt: phi = $const84.1 / $100binary_add.9
DEBUG:numba.core.ssa:on stmt: $110binary_multiply.13 = a * b
DEBUG:numba.core.ssa:on stmt: $112load_global.14 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const118.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subtract.18 = b - $const118.17
DEBUG:numba.core.ssa:on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:100), Var($120binary_subtract.18, layouts.py:105)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
DEBUG:numba.core.ssa:on stmt: $const126.21 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $130load_global.23 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_multiply.27 = a * $136call_function.26
DEBUG:numba.core.ssa:on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
DEBUG:numba.core.ssa:on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
DEBUG:numba.core.ssa:on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_jk = phi / $152binary_subscr.33
DEBUG:numba.core.ssa:on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_kj = phi / $164binary_subscr.38
DEBUG:numba.core.ssa:on stmt: $const172.41 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const176.43 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180binary_subtract.45 = $const176.43 - phi
DEBUG:numba.core.ssa:on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
DEBUG:numba.core.ssa:on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
DEBUG:numba.core.ssa:on stmt: $186load_global.48 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:112)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
DEBUG:numba.core.ssa:on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
DEBUG:numba.core.ssa:on stmt: drk = q_jk * $202binary_add.56
DEBUG:numba.core.ssa:on stmt: $const210.59 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const214.61 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.63 = $const214.61 - phi
DEBUG:numba.core.ssa:on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
DEBUG:numba.core.ssa:on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
DEBUG:numba.core.ssa:on stmt: $224load_global.66 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
DEBUG:numba.core.ssa:on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
DEBUG:numba.core.ssa:on stmt: drj = q_kj * $240binary_add.74
DEBUG:numba.core.ssa:on stmt: re_std_sq = dens_re_std * dens_re_std
DEBUG:numba.core.ssa:on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
DEBUG:numba.core.ssa:on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
DEBUG:numba.core.ssa:on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
DEBUG:numba.core.ssa:on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
DEBUG:numba.core.ssa:on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
DEBUG:numba.core.ssa:on stmt: $320binary_multiply.110 = weight_k * drk
DEBUG:numba.core.ssa:on stmt: $326binary_multiply.113 = weight_j * drj
DEBUG:numba.core.ssa:on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
DEBUG:numba.core.ssa:on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
DEBUG:numba.core.ssa:on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
DEBUG:numba.core.ssa:on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
DEBUG:numba.core.ssa:on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
DEBUG:numba.core.ssa:first assign: grad_cor_coeff
DEBUG:numba.core.ssa:replaced with: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: $const352.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $354compare_op.3 = dist_squared > $const352.2
DEBUG:numba.core.ssa:on stmt: bool356 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $356pred = call bool356($354compare_op.3, func=bool356, args=(Var($354compare_op.3, layouts.py:136),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $356pred, 358, 408
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: $const358.1 = const(float, -2.0)
DEBUG:numba.core.ssa:on stmt: $362binary_multiply.3 = $const358.1 * a
DEBUG:numba.core.ssa:on stmt: $366binary_multiply.5 = $362binary_multiply.3 * b
DEBUG:numba.core.ssa:on stmt: $368load_global.6 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const374.9 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.10 = b - $const374.9
DEBUG:numba.core.ssa:on stmt: $378call_function.11 = call $368load_global.6(dist_squared, $376binary_subtract.10, func=$368load_global.6, args=[Var(dist_squared, layouts.py:100), Var($376binary_subtract.10, layouts.py:137)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $366binary_multiply.5 * $378call_function.11
DEBUG:numba.core.ssa:on stmt: $388load_global.15 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $394call_function.18 = call $388load_global.15(dist_squared, b, func=$388load_global.15, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $396binary_multiply.19 = a * $394call_function.18
DEBUG:numba.core.ssa:on stmt: $const398.20 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $400binary_add.21 = $396binary_multiply.19 + $const398.20
DEBUG:numba.core.ssa:on stmt: $402inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$400binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff.1 = $402inplace_true_divide.22
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 408
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: grad_coeff.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 412
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: grad_coeff.6 = phi(incoming_values=[Var(grad_coeff.2, layouts.py:140), Var(grad_coeff.1, layouts.py:138)], incoming_blocks=[408, 358])
DEBUG:numba.core.ssa:on stmt: $412load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $416call_function.3 = call $412load_global.1(dim, func=$412load_global.1, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $418get_iter.4 = getiter(value=$416call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi420.1 = $418get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: $420for_iter.2 = iternext(value=$phi420.1)
DEBUG:numba.core.ssa:on stmt: $420for_iter.3 = pair_first(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $420for_iter.4 = pair_second(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi422.2 = $420for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $420for_iter.4, 422, 534
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: d = $phi422.2
DEBUG:numba.core.ssa:on stmt: $424load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $432binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $438binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $440binary_subtract.11 = $432binary_subscr.7 - $438binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $442binary_multiply.12 = grad_coeff.6 * $440binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $424load_global.3($442binary_multiply.12, func=$424load_global.3, args=[Var($442binary_multiply.12, layouts.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool450 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $450pred = call bool450(densmap_flag, func=bool450, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $450pred, 452, 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: $454load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $const456.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $460binary_multiply.6 = $const456.4 * grad_cor_coeff
DEBUG:numba.core.ssa:on stmt: $466binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $474binary_subtract.13 = $466binary_subscr.9 - $472binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $476binary_multiply.14 = $460binary_multiply.6 * $474binary_subtract.13
DEBUG:numba.core.ssa:on stmt: $478call_function.15 = call $454load_global.3($476binary_multiply.14, func=$454load_global.3, args=[Var($476binary_multiply.14, layouts.py:148)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$478call_function.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_d.1 = $480inplace_add.16
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: grad_d.4 = phi(incoming_values=[Var(grad_d.1, layouts.py:148), Var(grad_d, layouts.py:143)], incoming_blocks=[452, 422])
DEBUG:numba.core.ssa:on stmt: $490binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $496binary_multiply.9 = grad_d.4 * alpha
DEBUG:numba.core.ssa:on stmt: $498inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$490binary_subscr.6, rhs=$496binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $498inplace_add.10
DEBUG:numba.core.ssa:on stmt: bool508 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $508pred = call bool508(move_other, func=bool508, args=(Var(move_other, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $508pred, 510, 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $520unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d.4)
DEBUG:numba.core.ssa:on stmt: $524binary_multiply.10 = $520unary_negative.8 * alpha
DEBUG:numba.core.ssa:on stmt: $526inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$516binary_subscr.6, rhs=$524binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: other[d] = $526inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 532
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 534
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: $540binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $546binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $548inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$540binary_subscr.5, rhs=$546binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample[i] = $548inplace_add.9
DEBUG:numba.core.ssa:on stmt: $554load_global.10 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $564binary_subtract.15 = n - $562binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $570binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $572binary_true_divide.19 = $564binary_subtract.15 / $570binary_subscr.18
DEBUG:numba.core.ssa:on stmt: n_neg_samples = call $554load_global.10($572binary_true_divide.19, func=$554load_global.10, args=[Var($572binary_true_divide.19, layouts.py:157)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $578load_global.21 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $582call_function.23 = call $578load_global.21(n_neg_samples, func=$578load_global.21, args=[Var(n_neg_samples, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $584get_iter.24 = getiter(value=$582call_function.23)
DEBUG:numba.core.ssa:on stmt: $phi586.1 = $584get_iter.24
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 586
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: $586for_iter.2 = iternext(value=$phi586.1)
DEBUG:numba.core.ssa:on stmt: $586for_iter.3 = pair_first(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $586for_iter.4 = pair_second(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi588.2 = $586for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $586for_iter.4, 588, 776
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 588
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: p = $phi588.2
DEBUG:numba.core.ssa:on stmt: $590load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x0000017A062CD5A0>))
DEBUG:numba.core.ssa:on stmt: $596binary_subscr.6 = getitem(value=rng_state_per_sample, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $598call_function.7 = call $590load_global.3($596binary_subscr.6, func=$590load_global.3, args=[Var($596binary_subscr.6, layouts.py:161)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: k.1 = $598call_function.7 % n_vertices
DEBUG:numba.core.ssa:on stmt: other.1 = getitem(value=tail_embedding, index=k.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $614load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared.1 = call $614load_global.13(current, other.1, func=$614load_global.13, args=[Var(current, layouts.py:97), Var(other.1, layouts.py:163)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const626.18 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $628compare_op.19 = dist_squared.1 > $const626.18
DEBUG:numba.core.ssa:on stmt: bool632 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $632pred = call bool632($628compare_op.19, func=bool632, args=(Var($628compare_op.19, layouts.py:167),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $632pred, 634, 678
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 634
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: $const634.2 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $638binary_multiply.4 = $const634.2 * gamma
DEBUG:numba.core.ssa:on stmt: grad_coeff.3 = $638binary_multiply.4 * b
DEBUG:numba.core.ssa:on stmt: $const648.8 = const(float, 0.001)
DEBUG:numba.core.ssa:on stmt: $652binary_add.10 = $const648.8 + dist_squared.1
DEBUG:numba.core.ssa:on stmt: $656load_global.12 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $662call_function.15 = call $656load_global.12(dist_squared.1, b, func=$656load_global.12, args=[Var(dist_squared.1, layouts.py:165), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $664binary_multiply.16 = a * $662call_function.15
DEBUG:numba.core.ssa:on stmt: $const666.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $668binary_add.18 = $664binary_multiply.16 + $const666.17
DEBUG:numba.core.ssa:on stmt: $670binary_multiply.19 = $652binary_add.10 * $668binary_add.18
DEBUG:numba.core.ssa:on stmt: $672inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff.3, rhs=$670binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff.4 = $672inplace_true_divide.20
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 678
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: $682compare_op.4 = j == k.1
DEBUG:numba.core.ssa:on stmt: bool686 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $686pred = call bool686($682compare_op.4, func=bool686, args=(Var($682compare_op.4, layouts.py:172),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $686pred, 688, 692
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 688
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 692
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: grad_coeff.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 696
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: grad_coeff.7 = phi(incoming_values=[Var(grad_coeff.4, layouts.py:169), Var(grad_coeff.5, layouts.py:175)], incoming_blocks=[634, 692])
DEBUG:numba.core.ssa:on stmt: $696load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $700call_function.4 = call $696load_global.2(dim, func=$696load_global.2, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $702get_iter.5 = getiter(value=$700call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi704.2 = $702get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 704
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: $704for_iter.3 = iternext(value=$phi704.2)
DEBUG:numba.core.ssa:on stmt: $704for_iter.4 = pair_first(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $704for_iter.5 = pair_second(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi706.3 = $704for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $704for_iter.5, 706, 772
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 706
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: d.1 = $phi706.3
DEBUG:numba.core.ssa:on stmt: $const710.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $712compare_op.6 = grad_coeff.7 > $const710.5
DEBUG:numba.core.ssa:on stmt: bool716 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $716pred = call bool716($712compare_op.6, func=bool716, args=(Var($712compare_op.6, layouts.py:178),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $716pred, 718, 744
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 718
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: $718load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $726binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $732binary_subscr.10 = getitem(value=other.1, index=d.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subtract.11 = $726binary_subscr.7 - $732binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $736binary_multiply.12 = grad_coeff.7 * $734binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d.2 = call $718load_global.3($736binary_multiply.12, func=$718load_global.3, args=[Var($736binary_multiply.12, layouts.py:179)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 744
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: grad_d.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 748
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: grad_d.5 = phi(incoming_values=[Var(grad_d.3, layouts.py:181), Var(grad_d.2, layouts.py:179)], incoming_blocks=[744, 718])
DEBUG:numba.core.ssa:on stmt: $754binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $760binary_multiply.10 = grad_d.5 * alpha
DEBUG:numba.core.ssa:on stmt: $762inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$754binary_subscr.7, rhs=$760binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d.1] = $762inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 772
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 776
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: $782binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $790binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $792binary_multiply.10 = n_neg_samples * $790binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $794inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$782binary_subscr.5, rhs=$792binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample[i] = $794inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 800
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 802
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: $const802.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $804return_value.1 = cast(value=$const802.0)
DEBUG:numba.core.ssa:on stmt: return $804return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 803
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000017AA6C576A0>
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {84: [<numba.core.ir.Assign object at 0x0000017AA6C56DD0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: head_embedding = arg(0, name=head_embedding)
DEBUG:numba.core.ssa:on stmt: tail_embedding = arg(1, name=tail_embedding)
DEBUG:numba.core.ssa:on stmt: head = arg(2, name=head)
DEBUG:numba.core.ssa:on stmt: tail = arg(3, name=tail)
DEBUG:numba.core.ssa:on stmt: n_vertices = arg(4, name=n_vertices)
DEBUG:numba.core.ssa:on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
DEBUG:numba.core.ssa:on stmt: a = arg(6, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(7, name=b)
DEBUG:numba.core.ssa:on stmt: rng_state_per_sample = arg(8, name=rng_state_per_sample)
DEBUG:numba.core.ssa:on stmt: gamma = arg(9, name=gamma)
DEBUG:numba.core.ssa:on stmt: dim = arg(10, name=dim)
DEBUG:numba.core.ssa:on stmt: move_other = arg(11, name=move_other)
DEBUG:numba.core.ssa:on stmt: alpha = arg(12, name=alpha)
DEBUG:numba.core.ssa:on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
DEBUG:numba.core.ssa:on stmt: n = arg(16, name=n)
DEBUG:numba.core.ssa:on stmt: densmap_flag = arg(17, name=densmap_flag)
DEBUG:numba.core.ssa:on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_sum = arg(19, name=dens_re_sum)
DEBUG:numba.core.ssa:on stmt: dens_re_cov = arg(20, name=dens_re_cov)
DEBUG:numba.core.ssa:on stmt: dens_re_std = arg(21, name=dens_re_std)
DEBUG:numba.core.ssa:on stmt: dens_re_mean = arg(22, name=dens_re_mean)
DEBUG:numba.core.ssa:on stmt: dens_lambda = arg(23, name=dens_lambda)
DEBUG:numba.core.ssa:on stmt: dens_R = arg(24, name=dens_R)
DEBUG:numba.core.ssa:on stmt: dens_mu = arg(25, name=dens_mu)
DEBUG:numba.core.ssa:on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numba: <module 'numba' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numba\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:92)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
DEBUG:numba.core.ssa:on stmt: $phi20.0 = $16get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $20for_iter.1 = iternext(value=$phi20.0)
DEBUG:numba.core.ssa:on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi22.1 = $20for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $20for_iter.3, 22, 802
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: i = $phi22.1
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($32compare_op.6, func=bool36, args=(Var($32compare_op.6, layouts.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $36pred, 38, 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 38
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $70load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared = call $70load_global.13(current, other, func=$70load_global.13, args=[Var(current, layouts.py:97), Var(other, layouts.py:98)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $const84.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const86.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $90load_global.4 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_multiply.8 = a * $96call_function.7
DEBUG:numba.core.ssa:on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
DEBUG:numba.core.ssa:on stmt: phi = $const84.1 / $100binary_add.9
DEBUG:numba.core.ssa:on stmt: $110binary_multiply.13 = a * b
DEBUG:numba.core.ssa:on stmt: $112load_global.14 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const118.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subtract.18 = b - $const118.17
DEBUG:numba.core.ssa:on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:100), Var($120binary_subtract.18, layouts.py:105)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
DEBUG:numba.core.ssa:on stmt: $const126.21 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $130load_global.23 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138binary_multiply.27 = a * $136call_function.26
DEBUG:numba.core.ssa:on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
DEBUG:numba.core.ssa:on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
DEBUG:numba.core.ssa:on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_jk = phi / $152binary_subscr.33
DEBUG:numba.core.ssa:on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: q_kj = phi / $164binary_subscr.38
DEBUG:numba.core.ssa:on stmt: $const172.41 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const176.43 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $180binary_subtract.45 = $const176.43 - phi
DEBUG:numba.core.ssa:on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
DEBUG:numba.core.ssa:on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
DEBUG:numba.core.ssa:on stmt: $186load_global.48 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
DEBUG:numba.core.ssa:on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:112)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
DEBUG:numba.core.ssa:on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
DEBUG:numba.core.ssa:on stmt: drk = q_jk * $202binary_add.56
DEBUG:numba.core.ssa:on stmt: $const210.59 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const214.61 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.63 = $const214.61 - phi
DEBUG:numba.core.ssa:on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
DEBUG:numba.core.ssa:on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
DEBUG:numba.core.ssa:on stmt: $224load_global.66 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
DEBUG:numba.core.ssa:on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
DEBUG:numba.core.ssa:on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
DEBUG:numba.core.ssa:on stmt: drj = q_kj * $240binary_add.74
DEBUG:numba.core.ssa:on stmt: re_std_sq = dens_re_std * dens_re_std
DEBUG:numba.core.ssa:on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
DEBUG:numba.core.ssa:on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
DEBUG:numba.core.ssa:on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
DEBUG:numba.core.ssa:on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
DEBUG:numba.core.ssa:on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
DEBUG:numba.core.ssa:on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
DEBUG:numba.core.ssa:on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
DEBUG:numba.core.ssa:on stmt: $320binary_multiply.110 = weight_k * drk
DEBUG:numba.core.ssa:on stmt: $326binary_multiply.113 = weight_j * drj
DEBUG:numba.core.ssa:on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
DEBUG:numba.core.ssa:on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
DEBUG:numba.core.ssa:on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
DEBUG:numba.core.ssa:on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
DEBUG:numba.core.ssa:on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $const352.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $354compare_op.3 = dist_squared > $const352.2
DEBUG:numba.core.ssa:on stmt: bool356 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $356pred = call bool356($354compare_op.3, func=bool356, args=(Var($354compare_op.3, layouts.py:136),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $356pred, 358, 408
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $const358.1 = const(float, -2.0)
DEBUG:numba.core.ssa:on stmt: $362binary_multiply.3 = $const358.1 * a
DEBUG:numba.core.ssa:on stmt: $366binary_multiply.5 = $362binary_multiply.3 * b
DEBUG:numba.core.ssa:on stmt: $368load_global.6 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $const374.9 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $376binary_subtract.10 = b - $const374.9
DEBUG:numba.core.ssa:on stmt: $378call_function.11 = call $368load_global.6(dist_squared, $376binary_subtract.10, func=$368load_global.6, args=[Var(dist_squared, layouts.py:100), Var($376binary_subtract.10, layouts.py:137)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: grad_coeff = $366binary_multiply.5 * $378call_function.11
DEBUG:numba.core.ssa:on stmt: $388load_global.15 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $394call_function.18 = call $388load_global.15(dist_squared, b, func=$388load_global.15, args=[Var(dist_squared, layouts.py:100), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $396binary_multiply.19 = a * $394call_function.18
DEBUG:numba.core.ssa:on stmt: $const398.20 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $400binary_add.21 = $396binary_multiply.19 + $const398.20
DEBUG:numba.core.ssa:on stmt: $402inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$400binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff.1 = $402inplace_true_divide.22
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 408
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: grad_coeff.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 412
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 412
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: grad_coeff.6 = phi(incoming_values=[Var(grad_coeff.2, layouts.py:140), Var(grad_coeff.1, layouts.py:138)], incoming_blocks=[408, 358])
DEBUG:numba.core.ssa:on stmt: $412load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $416call_function.3 = call $412load_global.1(dim, func=$412load_global.1, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $418get_iter.4 = getiter(value=$416call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi420.1 = $418get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $420for_iter.2 = iternext(value=$phi420.1)
DEBUG:numba.core.ssa:on stmt: $420for_iter.3 = pair_first(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $420for_iter.4 = pair_second(value=$420for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi422.2 = $420for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $420for_iter.4, 422, 534
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: d = $phi422.2
DEBUG:numba.core.ssa:on stmt: $424load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $432binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $438binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $440binary_subtract.11 = $432binary_subscr.7 - $438binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $442binary_multiply.12 = grad_coeff.6 * $440binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d = call $424load_global.3($442binary_multiply.12, func=$424load_global.3, args=[Var($442binary_multiply.12, layouts.py:143)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool450 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $450pred = call bool450(densmap_flag, func=bool450, args=(Var(densmap_flag, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $450pred, 452, 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $454load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $const456.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $460binary_multiply.6 = $const456.4 * grad_cor_coeff
DEBUG:numba.core.ssa:find_def var='grad_cor_coeff' stmt=$460binary_multiply.6 = $const456.4 * grad_cor_coeff
DEBUG:numba.core.ssa:find_def_from_top label 452
DEBUG:numba.core.ssa:idom 422 from label 452
DEBUG:numba.core.ssa:find_def_from_bottom label 422
DEBUG:numba.core.ssa:find_def_from_top label 422
DEBUG:numba.core.ssa:idom 420 from label 422
DEBUG:numba.core.ssa:find_def_from_bottom label 420
DEBUG:numba.core.ssa:find_def_from_top label 420
DEBUG:numba.core.ssa:idom 412 from label 420
DEBUG:numba.core.ssa:find_def_from_bottom label 412
DEBUG:numba.core.ssa:find_def_from_top label 412
DEBUG:numba.core.ssa:idom 350 from label 412
DEBUG:numba.core.ssa:find_def_from_bottom label 350
DEBUG:numba.core.ssa:find_def_from_top label 350
DEBUG:numba.core.ssa:insert phi node grad_cor_coeff.1 = phi(incoming_values=[], incoming_blocks=[]) at 350
DEBUG:numba.core.ssa:find_def_from_bottom label 84
DEBUG:numba.core.ssa:incoming_def grad_cor_coeff = $342binary_true_divide.121 / n_vertices
DEBUG:numba.core.ssa:find_def_from_bottom label 38
DEBUG:numba.core.ssa:find_def_from_top label 38
DEBUG:numba.core.ssa:idom 22 from label 38
DEBUG:numba.core.ssa:find_def_from_bottom label 22
DEBUG:numba.core.ssa:find_def_from_top label 22
DEBUG:numba.core.ssa:idom 20 from label 22
DEBUG:numba.core.ssa:find_def_from_bottom label 20
DEBUG:numba.core.ssa:find_def_from_top label 20
DEBUG:numba.core.ssa:idom 18 from label 20
DEBUG:numba.core.ssa:find_def_from_bottom label 18
DEBUG:numba.core.ssa:find_def_from_top label 18
DEBUG:numba.core.ssa:insert phi node grad_cor_coeff.2 = phi(incoming_values=[], incoming_blocks=[]) at 18
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:find_def_from_top label 0
DEBUG:numba.core.ssa:incoming_def <class 'numba.core.ssa.UndefinedVariable'>
DEBUG:numba.core.ssa:find_def_from_bottom label 800
DEBUG:numba.core.ssa:find_def_from_top label 800
DEBUG:numba.core.ssa:insert phi node grad_cor_coeff.3 = phi(incoming_values=[], incoming_blocks=[]) at 800
DEBUG:numba.core.ssa:find_def_from_bottom label 776
DEBUG:numba.core.ssa:find_def_from_top label 776
DEBUG:numba.core.ssa:idom 586 from label 776
DEBUG:numba.core.ssa:find_def_from_bottom label 586
DEBUG:numba.core.ssa:find_def_from_top label 586
DEBUG:numba.core.ssa:idom 534 from label 586
DEBUG:numba.core.ssa:find_def_from_bottom label 534
DEBUG:numba.core.ssa:find_def_from_top label 534
DEBUG:numba.core.ssa:idom 420 from label 534
DEBUG:numba.core.ssa:find_def_from_bottom label 420
DEBUG:numba.core.ssa:find_def_from_top label 420
DEBUG:numba.core.ssa:idom 412 from label 420
DEBUG:numba.core.ssa:find_def_from_bottom label 412
DEBUG:numba.core.ssa:find_def_from_top label 412
DEBUG:numba.core.ssa:idom 350 from label 412
DEBUG:numba.core.ssa:find_def_from_bottom label 350
DEBUG:numba.core.ssa:incoming_def grad_cor_coeff.1 = phi(incoming_values=[Var(grad_cor_coeff, layouts.py:128)], incoming_blocks=[84])
DEBUG:numba.core.ssa:find_def_from_bottom label 22
DEBUG:numba.core.ssa:find_def_from_top label 22
DEBUG:numba.core.ssa:idom 20 from label 22
DEBUG:numba.core.ssa:find_def_from_bottom label 20
DEBUG:numba.core.ssa:find_def_from_top label 20
DEBUG:numba.core.ssa:idom 18 from label 20
DEBUG:numba.core.ssa:find_def_from_bottom label 18
DEBUG:numba.core.ssa:incoming_def grad_cor_coeff.2 = phi(incoming_values=[Undefined], incoming_blocks=[0])
DEBUG:numba.core.ssa:incoming_def grad_cor_coeff.3 = phi(incoming_values=[Var(grad_cor_coeff.1, layouts.py:148), Var(grad_cor_coeff.2, layouts.py:148)], incoming_blocks=[776, 22])
DEBUG:numba.core.ssa:incoming_def grad_cor_coeff.2 = phi(incoming_values=[Undefined, Var(grad_cor_coeff.3, layouts.py:148)], incoming_blocks=[0, 800])
DEBUG:numba.core.ssa:replaced with: $460binary_multiply.6 = $const456.4 * grad_cor_coeff.1
DEBUG:numba.core.ssa:on stmt: $466binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $474binary_subtract.13 = $466binary_subscr.9 - $472binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $476binary_multiply.14 = $460binary_multiply.6 * $474binary_subtract.13
DEBUG:numba.core.ssa:on stmt: $478call_function.15 = call $454load_global.3($476binary_multiply.14, func=$454load_global.3, args=[Var($476binary_multiply.14, layouts.py:148)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$478call_function.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_d.1 = $480inplace_add.16
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: grad_d.4 = phi(incoming_values=[Var(grad_d.1, layouts.py:148), Var(grad_d, layouts.py:143)], incoming_blocks=[452, 422])
DEBUG:numba.core.ssa:on stmt: $490binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $496binary_multiply.9 = grad_d.4 * alpha
DEBUG:numba.core.ssa:on stmt: $498inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$490binary_subscr.6, rhs=$496binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d] = $498inplace_add.10
DEBUG:numba.core.ssa:on stmt: bool508 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $508pred = call bool508(move_other, func=bool508, args=(Var(move_other, layouts.py:63),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $508pred, 510, 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $516binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $520unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d.4)
DEBUG:numba.core.ssa:on stmt: $524binary_multiply.10 = $520unary_negative.8 * alpha
DEBUG:numba.core.ssa:on stmt: $526inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$516binary_subscr.6, rhs=$524binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: other[d] = $526inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 532
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 532
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: jump 420
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 534
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $540binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $546binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $548inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$540binary_subscr.5, rhs=$546binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_sample[i] = $548inplace_add.9
DEBUG:numba.core.ssa:on stmt: $554load_global.10 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $564binary_subtract.15 = n - $562binary_subscr.14
DEBUG:numba.core.ssa:on stmt: $570binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $572binary_true_divide.19 = $564binary_subtract.15 / $570binary_subscr.18
DEBUG:numba.core.ssa:on stmt: n_neg_samples = call $554load_global.10($572binary_true_divide.19, func=$554load_global.10, args=[Var($572binary_true_divide.19, layouts.py:157)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $578load_global.21 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $582call_function.23 = call $578load_global.21(n_neg_samples, func=$578load_global.21, args=[Var(n_neg_samples, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $584get_iter.24 = getiter(value=$582call_function.23)
DEBUG:numba.core.ssa:on stmt: $phi586.1 = $584get_iter.24
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 586
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $586for_iter.2 = iternext(value=$phi586.1)
DEBUG:numba.core.ssa:on stmt: $586for_iter.3 = pair_first(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $586for_iter.4 = pair_second(value=$586for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi588.2 = $586for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $586for_iter.4, 588, 776
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 588
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: p = $phi588.2
DEBUG:numba.core.ssa:on stmt: $590load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x0000017A062CD5A0>))
DEBUG:numba.core.ssa:on stmt: $596binary_subscr.6 = getitem(value=rng_state_per_sample, index=j, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $598call_function.7 = call $590load_global.3($596binary_subscr.6, func=$590load_global.3, args=[Var($596binary_subscr.6, layouts.py:161)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: k.1 = $598call_function.7 % n_vertices
DEBUG:numba.core.ssa:on stmt: other.1 = getitem(value=tail_embedding, index=k.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $614load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x0000017A08385900>))
DEBUG:numba.core.ssa:on stmt: dist_squared.1 = call $614load_global.13(current, other.1, func=$614load_global.13, args=[Var(current, layouts.py:97), Var(other.1, layouts.py:163)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const626.18 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $628compare_op.19 = dist_squared.1 > $const626.18
DEBUG:numba.core.ssa:on stmt: bool632 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $632pred = call bool632($628compare_op.19, func=bool632, args=(Var($628compare_op.19, layouts.py:167),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $632pred, 634, 678
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 634
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $const634.2 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $638binary_multiply.4 = $const634.2 * gamma
DEBUG:numba.core.ssa:on stmt: grad_coeff.3 = $638binary_multiply.4 * b
DEBUG:numba.core.ssa:on stmt: $const648.8 = const(float, 0.001)
DEBUG:numba.core.ssa:on stmt: $652binary_add.10 = $const648.8 + dist_squared.1
DEBUG:numba.core.ssa:on stmt: $656load_global.12 = global(pow: <built-in function pow>)
DEBUG:numba.core.ssa:on stmt: $662call_function.15 = call $656load_global.12(dist_squared.1, b, func=$656load_global.12, args=[Var(dist_squared.1, layouts.py:165), Var(b, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $664binary_multiply.16 = a * $662call_function.15
DEBUG:numba.core.ssa:on stmt: $const666.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $668binary_add.18 = $664binary_multiply.16 + $const666.17
DEBUG:numba.core.ssa:on stmt: $670binary_multiply.19 = $652binary_add.10 * $668binary_add.18
DEBUG:numba.core.ssa:on stmt: $672inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff.3, rhs=$670binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: grad_coeff.4 = $672inplace_true_divide.20
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 678
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $682compare_op.4 = j == k.1
DEBUG:numba.core.ssa:on stmt: bool686 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $686pred = call bool686($682compare_op.4, func=bool686, args=(Var($682compare_op.4, layouts.py:172),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $686pred, 688, 692
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 688
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 692
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: grad_coeff.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 696
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 696
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: grad_coeff.7 = phi(incoming_values=[Var(grad_coeff.4, layouts.py:169), Var(grad_coeff.5, layouts.py:175)], incoming_blocks=[634, 692])
DEBUG:numba.core.ssa:on stmt: $696load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $700call_function.4 = call $696load_global.2(dim, func=$696load_global.2, args=[Var(dim, layouts.py:63)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $702get_iter.5 = getiter(value=$700call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi704.2 = $702get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 704
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $704for_iter.3 = iternext(value=$phi704.2)
DEBUG:numba.core.ssa:on stmt: $704for_iter.4 = pair_first(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $704for_iter.5 = pair_second(value=$704for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi706.3 = $704for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $704for_iter.5, 706, 772
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 706
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: d.1 = $phi706.3
DEBUG:numba.core.ssa:on stmt: $const710.5 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $712compare_op.6 = grad_coeff.7 > $const710.5
DEBUG:numba.core.ssa:on stmt: bool716 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $716pred = call bool716($712compare_op.6, func=bool716, args=(Var($712compare_op.6, layouts.py:178),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $716pred, 718, 744
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 718
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $718load_global.3 = global(clip: CPUDispatcher(<function clip at 0x0000017A083852D0>))
DEBUG:numba.core.ssa:on stmt: $726binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $732binary_subscr.10 = getitem(value=other.1, index=d.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subtract.11 = $726binary_subscr.7 - $732binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $736binary_multiply.12 = grad_coeff.7 * $734binary_subtract.11
DEBUG:numba.core.ssa:on stmt: grad_d.2 = call $718load_global.3($736binary_multiply.12, func=$718load_global.3, args=[Var($736binary_multiply.12, layouts.py:179)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 744
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: grad_d.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 748
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 748
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: grad_d.5 = phi(incoming_values=[Var(grad_d.3, layouts.py:181), Var(grad_d.2, layouts.py:179)], incoming_blocks=[744, 718])
DEBUG:numba.core.ssa:on stmt: $754binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $760binary_multiply.10 = grad_d.5 * alpha
DEBUG:numba.core.ssa:on stmt: $762inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$754binary_subscr.7, rhs=$760binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: current[d.1] = $762inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 704
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 772
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: jump 803
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 776
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $782binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $790binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $792binary_multiply.10 = n_neg_samples * $790binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $794inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$782binary_subscr.5, rhs=$792binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: epoch_of_next_negative_sample[i] = $794inplace_add.11
DEBUG:numba.core.ssa:on stmt: jump 800
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 800
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 802
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: $const802.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $804return_value.1 = cast(value=$const802.0)
DEBUG:numba.core.ssa:on stmt: return $804return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 803
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000017AA6BD1A80>
DEBUG:numba.core.ssa:on stmt: jump 586
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=9)
           2	LOAD_FAST(arg=0, lineno=23)
           4	LOAD_CONST(arg=1, lineno=23)
           6	COMPARE_OP(arg=4, lineno=23)
           8	POP_JUMP_IF_FALSE(arg=8, lineno=23)
          10	LOAD_CONST(arg=1, lineno=24)
          12	RETURN_VALUE(arg=None, lineno=24)
>         14	LOAD_FAST(arg=0, lineno=25)
          16	LOAD_CONST(arg=2, lineno=25)
          18	COMPARE_OP(arg=0, lineno=25)
          20	POP_JUMP_IF_FALSE(arg=14, lineno=25)
          22	LOAD_CONST(arg=2, lineno=26)
          24	RETURN_VALUE(arg=None, lineno=26)
>         26	LOAD_FAST(arg=0, lineno=28)
          28	RETURN_VALUE(arg=None, lineno=28)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=9)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=23)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=23)
DEBUG:numba.core.byteflow:stack ['$val2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=COMPARE_OP(arg=4, lineno=23)
DEBUG:numba.core.byteflow:stack ['$val2.0', '$const4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=POP_JUMP_IF_FALSE(arg=8, lineno=23)
DEBUG:numba.core.byteflow:stack ['$6compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=10, stack=(), blockstack=(), npush=0), Edge(pc=14, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=10 nstack_initial=0), State(pc_initial=14 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=10 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=24)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=24)
DEBUG:numba.core.byteflow:stack ['$const10.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=14 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=14 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=25)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_CONST(arg=2, lineno=25)
DEBUG:numba.core.byteflow:stack ['$val14.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=COMPARE_OP(arg=0, lineno=25)
DEBUG:numba.core.byteflow:stack ['$val14.0', '$const16.1']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=POP_JUMP_IF_FALSE(arg=14, lineno=25)
DEBUG:numba.core.byteflow:stack ['$18compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=22, stack=(), blockstack=(), npush=0), Edge(pc=26, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=22 nstack_initial=0), State(pc_initial=26 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=22 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_CONST(arg=2, lineno=26)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=26)
DEBUG:numba.core.byteflow:stack ['$const22.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=26 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=28)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=RETURN_VALUE(arg=None, lineno=28)
DEBUG:numba.core.byteflow:stack ['$val26.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=10 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=22 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$val2.0'}), (4, {'res': '$const4.1'}), (6, {'lhs': '$val2.0', 'rhs': '$const4.1', 'res': '$6compare_op.2'}), (8, {'pred': '$6compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={10: (), 14: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=10 nstack_initial=0):
AdaptBlockInfo(insts=((10, {'res': '$const10.0'}), (12, {'retval': '$const10.0', 'castval': '$12return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((14, {'res': '$val14.0'}), (16, {'res': '$const16.1'}), (18, {'lhs': '$val14.0', 'rhs': '$const16.1', 'res': '$18compare_op.2'}), (20, {'pred': '$18compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: (), 26: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=22 nstack_initial=0):
AdaptBlockInfo(insts=((22, {'res': '$const22.0'}), (24, {'retval': '$const22.0', 'castval': '$24return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$val26.0'}), (28, {'retval': '$val26.0', 'castval': '$28return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    val = arg(0, name=val)                   ['val']
    $const4.1 = const(float, 4.0)            ['$const4.1']
    $6compare_op.2 = val > $const4.1         ['$6compare_op.2', '$const4.1', 'val']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, layouts.py:23),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    branch $8pred, 10, 14                    ['$8pred']
label 10:
    $const10.0 = const(float, 4.0)           ['$const10.0']
    $12return_value.1 = cast(value=$const10.0) ['$12return_value.1', '$const10.0']
    return $12return_value.1                 ['$12return_value.1']
label 14:
    $const16.1 = const(float, -4.0)          ['$const16.1']
    $18compare_op.2 = val < $const16.1       ['$18compare_op.2', '$const16.1', 'val']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, layouts.py:25),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
    branch $20pred, 22, 26                   ['$20pred']
label 22:
    $const22.0 = const(float, -4.0)          ['$const22.0']
    $24return_value.1 = cast(value=$const22.0) ['$24return_value.1', '$const22.0']
    return $24return_value.1                 ['$24return_value.1']
label 26:
    $28return_value.1 = cast(value=val)      ['$28return_value.1', 'val']
    return $28return_value.1                 ['$28return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6BC51B0>
DEBUG:numba.core.ssa:on stmt: val = arg(0, name=val)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 4.0)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = val > $const4.1
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, layouts.py:23),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 10, 14
DEBUG:numba.core.ssa:==== SSA block analysis pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6BC51B0>
DEBUG:numba.core.ssa:on stmt: $const10.0 = const(float, 4.0)
DEBUG:numba.core.ssa:on stmt: $12return_value.1 = cast(value=$const10.0)
DEBUG:numba.core.ssa:on stmt: return $12return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6BC51B0>
DEBUG:numba.core.ssa:on stmt: $const16.1 = const(float, -4.0)
DEBUG:numba.core.ssa:on stmt: $18compare_op.2 = val < $const16.1
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, layouts.py:25),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 26
DEBUG:numba.core.ssa:==== SSA block analysis pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6BC51B0>
DEBUG:numba.core.ssa:on stmt: $const22.0 = const(float, -4.0)
DEBUG:numba.core.ssa:on stmt: $24return_value.1 = cast(value=$const22.0)
DEBUG:numba.core.ssa:on stmt: return $24return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000017AA6BC51B0>
DEBUG:numba.core.ssa:on stmt: $28return_value.1 = cast(value=val)
DEBUG:numba.core.ssa:on stmt: return $28return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12return_value.1': [(<numba.core.ir.Assign object at 0x0000017AA6C918A0>,
                                    10)],
             '$18compare_op.2': [(<numba.core.ir.Assign object at 0x0000017AA6C91120>,
                                  14)],
             '$20pred': [(<numba.core.ir.Assign object at 0x0000017AA6C90F40>,
                          14)],
             '$24return_value.1': [(<numba.core.ir.Assign object at 0x0000017AA6C90910>,
                                    22)],
             '$28return_value.1': [(<numba.core.ir.Assign object at 0x0000017AA6C906A0>,
                                    26)],
             '$6compare_op.2': [(<numba.core.ir.Assign object at 0x0000017AA6C91F90>,
                                 0)],
             '$8pred': [(<numba.core.ir.Assign object at 0x0000017AA6C91C90>,
                         0)],
             '$const10.0': [(<numba.core.ir.Assign object at 0x0000017AA6C91AE0>,
                             10)],
             '$const16.1': [(<numba.core.ir.Assign object at 0x0000017AA6C912A0>,
                             14)],
             '$const22.0': [(<numba.core.ir.Assign object at 0x0000017AA6C90CA0>,
                             22)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x0000017AA6C92290>,
                            0)],
             'bool20': [(<numba.core.ir.Assign object at 0x0000017AA6C91090>,
                         14)],
             'bool8': [(<numba.core.ir.Assign object at 0x0000017AA6C91F60>,
                        0)],
             'val': [(<numba.core.ir.Assign object at 0x0000017AA6C92620>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000017AA6BC51B0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=2)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_CONST(arg=1, lineno=2)
           8	BINARY_SUBSCR(arg=None, lineno=2)
          10	LOAD_FAST(arg=0, lineno=2)
          12	LOAD_CONST(arg=2, lineno=2)
          14	BINARY_SUBSCR(arg=None, lineno=2)
          16	LOAD_GLOBAL(arg=1, lineno=2)
          18	LOAD_METHOD(arg=2, lineno=2)
          20	LOAD_CONST(arg=2, lineno=2)
          22	CALL_METHOD(arg=1, lineno=2)
          24	BINARY_ADD(arg=None, lineno=2)
          26	CALL_FUNCTION(arg=2, lineno=2)
          28	GET_ITER(arg=None, lineno=2)
>         30	FOR_ITER(arg=4, lineno=2)
          32	STORE_FAST(arg=28, lineno=2)
          34	LOAD_CONST(arg=1, lineno=3)
          36	STORE_FAST(arg=29, lineno=3)
          38	JUMP_ABSOLUTE(arg=16, lineno=3)
>         40	LOAD_CONST(arg=0, lineno=4)
          42	RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$sched4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$sched4.1', '$const6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4', '$const12.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$16load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL_METHOD(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8', '$const20.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=BINARY_ADD(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$22call_method.10']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL_FUNCTION(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8binary_subscr.3', '$24binary_add.11']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=GET_ITER(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$26call_function.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=('$28get_iter.13',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi30.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=30 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=30, inst=FOR_ITER(arg=4, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=('$phi30.0', '$30for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=32 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=40 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const40.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0', '$phi32.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=STORE_FAST(arg=28, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$phi32.1']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=STORE_FAST(arg=29, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$const34.2']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=JUMP_ABSOLUTE(arg=16, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=('$phi32.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=32 nstack_initial=2): {'$phi32.1'},
             State(pc_initial=40 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.1': State(pc_initial=30 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2))},
             '$phi32.0': {('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi30.0': {('$28get_iter.13', State(pc_initial=0 nstack_initial=0))},
 '$phi32.1': {('$30for_iter.2', State(pc_initial=30 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$28get_iter.13'},
             State(pc_initial=30 nstack_initial=1): {'$phi32.1': '$30for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sched4.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$sched4.1', 'res': '$8binary_subscr.3'}), (10, {'res': '$sched10.4'}), (12, {'res': '$const12.5'}), (14, {'index': '$const12.5', 'target': '$sched10.4', 'res': '$14binary_subscr.6'}), (16, {'res': '$16load_global.7'}), (18, {'item': '$16load_global.7', 'res': '$18load_method.8'}), (20, {'res': '$const20.9'}), (22, {'func': '$18load_method.8', 'args': ['$const20.9'], 'res': '$22call_method.10'}), (24, {'lhs': '$14binary_subscr.6', 'rhs': '$22call_method.10', 'res': '$24binary_add.11'}), (26, {'func': '$2load_global.0', 'args': ['$8binary_subscr.3', '$24binary_add.11'], 'res': '$26call_function.12'}), (28, {'value': '$26call_function.12', 'res': '$28get_iter.13'})), outgoing_phis={'$phi30.0': '$28get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28get_iter.13',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'iterator': '$phi30.0', 'pair': '$30for_iter.1', 'indval': '$30for_iter.2', 'pred': '$30for_iter.3'}),), outgoing_phis={'$phi32.1': '$30for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 32: ('$phi30.0', '$30for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=2):
AdaptBlockInfo(insts=((32, {'value': '$phi32.1'}), (34, {'res': '$const34.2'}), (36, {'value': '$const34.2'}), (38, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi32.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$const40.0'}), (42, {'retval': '$const40.0', 'castval': '$42return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    sched = arg(0, name=sched)               ['sched']
    a = arg(1, name=a)                       ['a']
    alpha = arg(2, name=alpha)               ['alpha']
    b = arg(3, name=b)                       ['b']
    dens__R = arg(4, name=dens__R)           ['dens__R']
    dens__lambda = arg(5, name=dens__lambda) ['dens__lambda']
    dens__mu = arg(6, name=dens__mu)         ['dens__mu']
    dens__mu__tot = arg(7, name=dens__mu__tot) ['dens__mu__tot']
    dens__phi__sum = arg(8, name=dens__phi__sum) ['dens__phi__sum']
    dens__re__cov = arg(9, name=dens__re__cov) ['dens__re__cov']
    dens__re__mean = arg(10, name=dens__re__mean) ['dens__re__mean']
    dens__re__std = arg(11, name=dens__re__std) ['dens__re__std']
    dens__re__sum = arg(12, name=dens__re__sum) ['dens__re__sum']
    densmap__flag = arg(13, name=densmap__flag) ['densmap__flag']
    dim = arg(14, name=dim)                  ['dim']
    epochs__per__negative__sample = arg(15, name=epochs__per__negative__sample) ['epochs__per__negative__sample']
    epochs__per__sample = arg(16, name=epochs__per__sample) ['epochs__per__sample']
    gamma = arg(17, name=gamma)              ['gamma']
    head = arg(18, name=head)                ['head']
    head__embedding = arg(19, name=head__embedding) ['head__embedding']
    move__other = arg(20, name=move__other)  ['move__other']
    n = arg(21, name=n)                      ['n']
    n__vertices = arg(22, name=n__vertices)  ['n__vertices']
    rng__state__per__sample = arg(23, name=rng__state__per__sample) ['rng__state__per__sample']
    tail = arg(24, name=tail)                ['tail']
    tail__embedding = arg(25, name=tail__embedding) ['tail__embedding']
    epoch__of__next__negative__sample = arg(26, name=epoch__of__next__negative__sample) ['epoch__of__next__negative__sample']
    epoch__of__next__sample = arg(27, name=epoch__of__next__sample) ['epoch__of__next__sample']
    $2load_global.0 = global(range: <class 'range'>) ['$2load_global.0']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8binary_subscr.3 = getitem(value=sched, index=$const6.2, fn=<built-in function getitem>) ['$8binary_subscr.3', '$const6.2', 'sched']
    $const12.5 = const(int, 1)               ['$const12.5']
    $14binary_subscr.6 = getitem(value=sched, index=$const12.5, fn=<built-in function getitem>) ['$14binary_subscr.6', '$const12.5', 'sched']
    $16load_global.7 = global(np: <module 'numpy' from 'c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\numpy\\__init__.py'>) ['$16load_global.7']
    $18load_method.8 = getattr(value=$16load_global.7, attr=uint8) ['$16load_global.7', '$18load_method.8']
    $const20.9 = const(int, 1)               ['$const20.9']
    $22call_method.10 = call $18load_method.8($const20.9, func=$18load_method.8, args=[Var($const20.9, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.8', '$22call_method.10', '$const20.9']
    $24binary_add.11 = $14binary_subscr.6 + $22call_method.10 ['$14binary_subscr.6', '$22call_method.10', '$24binary_add.11']
    $26call_function.12 = call $2load_global.0($8binary_subscr.3, $24binary_add.11, func=$2load_global.0, args=[Var($8binary_subscr.3, <string>:2), Var($24binary_add.11, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$24binary_add.11', '$26call_function.12', '$2load_global.0', '$8binary_subscr.3']
    $28get_iter.13 = getiter(value=$26call_function.12) ['$26call_function.12', '$28get_iter.13']
    $phi30.0 = $28get_iter.13                ['$28get_iter.13', '$phi30.0']
    jump 30                                  []
label 30:
    $30for_iter.1 = iternext(value=$phi30.0) ['$30for_iter.1', '$phi30.0']
    $30for_iter.2 = pair_first(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.2']
    $30for_iter.3 = pair_second(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.3']
    $phi32.1 = $30for_iter.2                 ['$30for_iter.2', '$phi32.1']
    branch $30for_iter.3, 32, 40             ['$30for_iter.3']
label 32:
    parfor__index_234 = $phi32.1             ['$phi32.1', 'parfor__index_234']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 30                                  []
label 40:
    $const40.0 = const(NoneType, None)       ['$const40.0']
    $42return_value.1 = cast(value=$const40.0) ['$42return_value.1', '$const40.0']
    return $42return_value.1                 ['$42return_value.1']

DEBUG:matplotlib.pyplot:Loaded backend module://matplotlib_inline.backend_inline version unknown.
DEBUG:matplotlib.pyplot:Loaded backend module://matplotlib_inline.backend_inline version unknown.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\hpsimplifiedhans-light.ttf', name='HP Simplified Hans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaMono.ttf', name='Cascadia Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_BdIt.ttf', name='HP Simplified', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\hpsimplifiedhans-regular.ttf', name='HP Simplified Hans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RMPro-Regular.ttf', name='RM Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_Rg.ttf', name='HP Simplified', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_LtIt.ttf', name='HP Simplified', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CeraPROModern-Medium.ttf', name='Cera PROModern', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified.ttf', name='HP Simplified', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_It.ttf', name='HP Simplified', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\hpsimplifiedjpan-light.ttf', name='HP Simplified Jpan', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CascadiaCode.ttf', name='Cascadia Code', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\hpsimplifiedjpan-regular.ttf', name='HP Simplified Jpan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_Lt.ttf', name='HP Simplified', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('c:\\Users\\rooty\\UWEC\\Fall 24\\CS 426\\GroupProject\\GroupProject\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
