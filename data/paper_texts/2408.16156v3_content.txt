SECTION: Transformations to simplify phylogenetic networks

The evolutionary relationships between species are typically represented in the biological literature by rooted phylogenetic trees. However, a tree fails to capture ancestral reticulate processes, such as the formation of hybrid species or lateral gene transfer events between lineages, and so the history of life is more accurately described by a rooted phylogenetic network. Nevertheless, phylogenetic networks may be complex and difficult to interpret, so biologists sometimes prefer a tree that summarises the central tree-like trend of evolution. In this paper, we formally investigate methods for transforming an arbitrary phylogenetic network into a tree (on the same set of leaves) and ask which ones (if any) satisfy a simple consistency condition. This consistency condition states that if we add additional species into a phylogenetic network (without otherwise changing this original network) then transforming this enlarged network into a rooted phylogenetic tree induces the same tree on the original set of species as transforming the original network. We show that the LSA (lowest stable ancestor) tree method satisfies this consistency property, whereas several other commonly used methods (and a new one we introduce) do not. We also briefly consider transformations that convert arbitrary phylogenetic networks to another simpler class, namely normal networks.

SECTION: 1Introduction

The traditional representation of evolutionary history is based on rooted phylogenetic trees. Such trees provide a simple illustration of speciation events and ancestry. The leaves correspond to known species, and the root represents the most recent common ancestor of this set of species. However, a tree fails to capture ancestral reticulate processes, such as hybridisation events or lateral gene transfer. Thus, the evolutionary history is more accurately described by rooted phylogenetic networks[11,18]. Nevertheless, it is often helpful to extract the overall tree-like pattern that is present in a complex and highly reticulated network, sometimes referred to as the ‘central tree-like trend’ in the evolution of the taxa[16,20]. Such a tree is less complete than a network, but it is more easily interpreted and visualised[4].

In this paper, we investigate ways to transform arbitrary rooted phylogenetic networks into rooted phylogenetic trees. There are many ways to do this, and we take an axiomatic approach, listing three desirable properties for such a transformation. We show that several current methods fail to satisfy all three properties; however, one transformation (the LSA tree construction) satisfies all three. Our approach is similar in spirit to an analogous axiomatic treatment of consensus methods (which transform an arbitrary set of trees into a single tree) inBryant et al [3]. We also briefly consider transformations that convert phylogenetic networks to ‘normal’ networks (a class of networks that allows a limited degree of reticulation). We begin by defining some concepts that will play a central role in our axiomatic approach.

SECTION: 1.1Preliminaries

In this paper, we only consider rooted phylogenetic networks and trees on any leaf setof taxa. Such trees and networks are defined by a connected acyclic graph containing a set of verticesand a set of arcs. We refer to arcs as edges, which are directed. The vertexis determined as theroot vertexwith an out-degree of at least, where all edges are directed away from. The set of labelled leaves is defined by, which are vertices of an in-degreeand an out-degree. In phylogenetic trees the remaininginterior verticesare unlabelled, of in-degreeand of out-degree at least[18]. In contrast to trees, we distinguishtree verticeswith an in-degree ofand an out-degree of at leastfromreticulate verticeswith an in-degree of at leastin phylogenetic networks. Each reticulate vertex has an out-degree of. We do not allow vertices with an in- and out-degree of[11]. Phylogenetic networks can contain pairs of parallel edges. We letdenote the set of rooted phylogenetic networks, andbe the set of rooted phylogenetic trees.

Letbe any phylogenetic network. FollowingHuson et al [11], for any vertex, except the root, thelowest stable ancestor(LSA) is defined as the lowest vertexthat is part of all directed paths from the root towithout beingitself. Here, ‘lowest’ refers to the vertex closest to the leaves of the network. Furthermore, the subscriptindicates thatrefers to vertices in the network. For any tree vertex, the LSA equals its parent vertex[11]. InFig.1.1, for example,equals the vertex labelled, whereasis the vertex labelled. The idea of the LSA can be extended by computing the LSA for multiple vertices. Assume thatdenotes a non-empty set of taxa. The vertexis the lowest vertex in all directed paths from the root to every. For short, we also writeinstead of. InFig.1.1, for instance,is the vertex labelled.

Consider a networkand a subset. The restricted networkis obtained fromby restrictingto the leaves in. The root of the new networkis. After deleting all vertices and edges that are not part of any directed path from the new root to any, all remaining vertices with an in- and out-degree ofare suppressed. When, the resulting network is called atrinet[17]. We say that a rooted tree with exactly three leaves is arooted triple. In comparison to trinets, which can take an unlimited number of (unlabelled) shapes, there are only two distinct shapes for rooted triples[18].

Two phylogenetic networksare isomorphic if a (directed graph) isomorphism exists between these networks, that is the identity map on. We write[18]. The isomorphism of two trees can also be established by using the concept of rooted triples. The following result is classical and well known (for a proof, see, e.g. Theorem 1 fromBryant and Steel [2]).

Two phylogenetic treesare isomorphic if and only if, for every subsetsuch that, the treesrestricted toandrestricted toare isomorphic:

We also require the following notions. Letdenote the group of permutations on. Given a networkand a permutation, letdenote the network obtained by reordering the labels of the leaves according to.

Letbe a phylogenetic network andbe a phylogenetic tree.
We say thatisdisplayedbyifcan be obtained fromby the following process: For each reticulation vertex, delete all but one of its incoming arcs, then ignore any resulting leaves that are not inand suppress any vertices of in-degree and out-degree both equal to 1.

SECTION: 2Axiomatic properties for transformations that simplify phylogenetic networks

Letbe a defined subclass of the set of all phylogenetic networkson any leaf set.
We assume that the definition ensures the property
that permuting the taxa of any member does not destroy membership.
Mainly, we focus on the case whereholds, and we also briefly discuss the case whereis the class of normal networks. The transformations that we study are defined as follows:

for every leaf set(including the subsets of any given leaf set).

We investigate the question of whether there are transformations that satisfy the following three specific properties (following the approach inDress et al [5]):\setlistdepth3

,

,

.

Propertystates that given a network that belongs to the subclass, the transformation returns the original network without further changes. It is an essential property because the transformation should not change the relationship of a set of taxa when the network correctly shows its evolutionary history[5]. This property implies thatif and only if.

Propertycorresponds to a mathematical term that is referred to asequivariance[3,5]. This means that the names of the taxa do not play any specific role in deciding how to simplify a network. In other words, when a transformation is applied to a network with permuted leaf labels, it should result in the same network as when we apply the transformation to the original network and then relabel the leaves. This property ensures that only the relationships between the taxa are relevant and not the way the taxa are named or ordered[5]. Thus, this property could fail, for example, if a transformation depends on the order in which a user enters the species into a computer program, or if a non-deterministic approach is applied in which ties arising in some optimisation procedure are broken randomly.

It is easily checked that all of the methods we consider in this paper satisfy these two properties.

Propertyis more interesting and we refer to it as theconsistencycondition. It states that taking a subnetwork on a subset of taxa and applying the transformation gives the same network as that obtained by applying the transformation first and taking the subnetwork induced by the subset of taxa afterwards. The rationale for this axiom is as follows. Suppose a biologist adds new species to an existing network without changing the original network. Then, after transforming the new (enlarged) network, the network relationship between the original species should remain the same. It turns out thatholds if and only if it holds for all subsetsofof size. We establish this result for transformations that convert a phylogenetic network into a phylogenetic tree.
To prove the statement, we first require another result. The proof of the following result is provided in the Appendix.

Letbe a phylogenetic network and letwithdenote two subsets. The networkrestricted toand then restricted further togives a network that is isomorphic torestricted to. Formally:

Letbe a rooted phylogenetic network anddenote a transformation, where. Propertyholds if and only ifholds for subsetsof size:

Clearly, ifis satisfied for all subsetsof, thenholds for allof size.

We now prove that ifholds for allof size, thenis satisfied for all. Assume thatholds for all subsetsofof size 3. Considering any, it suffices to show that

because ofLemma1. ByLemma2we have:

Thus, it remains to show that:

Letbe the restricted network. We have:

Consequently,holds for allif it holds for all, and vice versa.
∎

SECTION: 3Results

We now consider various methods to transform an arbitrary rooted phylogenetic network into a rooted phylogenetic tree, and show that exactly one of these methods satisfies all three of the properties (

SECTION: 3.1Transformations that fail to satisfy the consistency condition

We consider four transformations that transform a rooted phylogenetic network into a tree and satisfyand. First,Gusfield [8]introduced theblob treetransformation, which we denote by. In this transformation, abiconnected component111A biconnected component of a phylogenetic network is a maximal subgraph that cannot be disconnected by removing a single vertex ([12]).is replaced by a new vertex; moreover, if several biconnected components share a vertex, they are only replaced by one vertex (for further details, seeGusfield [8]). An example blob tree for the networkinFig.1.1is shown inFig.1(a).

Second, we include theclosed treetransformation defined byHuber et al [9]. For this method, we extract all closed sets of the network. For, a subsetis aclosed setofif, or ifand the set of leaves ofthat are descended from the vertexis equal to. InFig.1.1the subsetcorresponds to a closed set because the descending vertices ofequal. From[9], the collection of all closed sets of a network forms ahierarchy(i.e. a collection of nestedclusters(subsets of the leaf set)), and so corresponds to a tree (seeFig.1(a)). We denote this transformation (fromto) as.

Another method is thetight clusterstransformation described byDress et al [5], which we denote by. It works exactly as the previous transformation, except that we extract all ‘tight clusters’ from the network instead of the closed sets.
Formally, for, a non-empty subsetofis atight clusterofif there is a subsetof vertices offor whichis the set of leaves ofreachable fromand deletingfromseparatesfrom. InFig.1.1, for instance,is a tight cluster asis a valid subset that separatesfrom. The tight clusters ofalso form a tree[5], which is shown inFig.1(b).

Finally, it is possible to apply any consensus method (e.g. strict consensus, majority rule, Adams consensus) on the set of treesthat are displayed by a networkto get a transformation that satisfiesand. We considered the Adams consensus methodfor a set of trees, which is a mathematically natural method based on the notion of ‘nesting’[1].
To constructrepresent each treeas a hierarchy. The maximal clusters ofare simply the collection of non-empty intersections of the maximal clusters of(these non-empty intersections partition, and can be computed in polynomial time).
The method then adds further clusters recursively by restricting the treesto each block of the partition ofdescribed. This process continues until the singleton sets(for all) are present in the resulting partitions, in which case the resulting hierarchy of sets corresponds to a rooted phylogenetic tree on leaf set, which is. For further details, see[18].

Our newAdams consensus treetransformation is defined as follows:

It turns out that all four of the transformations mentioned above fail to satisfy. Stated formally:

The transformationsandfail to satisfy.

Counterexamples for the proof of this result are provided in the second part of the Appendix.

SECTION: 3.2A transformation that satisfies the consistency condition

We now describe a transformation thatdoessatisfy all three of the properties (. First, we define the transformation. Then, we prove that the consistency condition () is satisfied (propertiesandare easily seen to also hold for this transformation).

For any given rooted phylogenetic network, one can compute a
rooted phylogenetic tree as follows:
First, for every reticulation vertexin,
determine its lowest stable ancestor. Then, delete all edges leading intoand create a new edge fromto.
Second, repeatedly delete all unlabelled leaves
and suppress all vertices that have both in- and out-degree of,
until no further such operation is possible[11].
This treeis uniquely defined and is called the LSA tree for.

We denote this transformation as follows:

Fig.3.2shows the computation of the LSA tree for a biological network, which includes reticulate evolution, as investigated in the study of theViolagenus byMarcussen et al [15]. The networkwas studied inJetten and van Iersel [13]. We usedPhyloSketch[10]to produce the LSA tree.

Before we prove thatis satisfied, we look at a certain relationship between the LSA of a subsetand the LSA of two vertices.

Letbe a phylogenetic network, anddenote a non-empty set with. Then,lies on all directed paths fromto bothand.

First, we will derive a contradiction to show thatis either a descendant ofor is equal to it. Assume thatis a descendant of. The LSA ofis defined as the lowest vertex that is part of all directed paths from the root to each. Therefore, the LSA ofandis eitheritself or a descendant of the LSA of. This is a contradiction to the assumption. On the other hand, suppose thatandare different, and neither is a descendant of the other. This is impossible because.

Second, we show thatlies on all directed paths fromtoand. We consider two cases. In the first case, suppose that. In this case,is clearly part of every directed path fromto any. In the other case,is a descendant of. Without loss of generality, assume that at least one directed path fromtodoes not include. According to the definition of the LSA,is part of all directed paths from the root to,
and this is also true for. Ifandlie on every directed path from the root to, andis a descendant of,needs to be part of all directed paths fromto, a contradiction to the assumption. The same applies for.
∎

There is a similar relationship when it comes to the LSA of reticulate vertices.

Letbe a phylogenetic network with. Consider a reticulate vertexthat is part of a directed path fromto. The LSA ofis either a descendant oforholds.

The two verticesandhave to be comparable becauselies on a directed path fromto. Thus, suppose thatis a descendant of the LSA of. Becauseis part of a directed path fromto, there are at least two directed paths from the root to, and thus from the root to. All these directed paths need to include theandaccording to the definition of the LSA. Therefore, themust either beitself or a descendant of, which is a contradiction to the assumption.
∎

In contrast to all the other above mentioned transformations, the LSA tree transformation satisfies, as we now state formally.

The LSA tree method () satisfies:

In other words, the LSA tree of a subnetwork on a subset of taxa equals the LSA tree of the original network restricted to the same subset of taxa.

In order to prove this theorem, we first require two results.

Letdenote a rooted phylogenetic network and letbe a non-empty subset of. For every pair of vertices,holds. In other words, restricting the network does not affect the LSA of pairs of vertices.

The root of the restricted networkcorresponds to. According toLemma4, the LSA ofandis part of the directed path fromtoand. All vertices that are part of a directed path from the new root to bothandremain. Vertices that have an in- and out-degree ofafter deleting all vertices and edges that do not belong to the restricted network are suppressed. The vertexhas out-degree of at leastbecause there are at least two directed paths (one toand another to) going through this vertex. This means thatis not suppressed. Thus,is equal to, as the directed path of the remaining leaves does not change.
∎

Letbe the LSA tree of. For all pairs of vertices,equals.

Two cases need to be distinguished.

In the first case, no reticulate vertex lies on any directed path fromto bothand. By applying the LSA tree transformation, vertices with in- and out-degree ofmay be suppressed within these directed paths, but this does not affect the LSA ofand. Thus,.

In the second case, assume that there is at least one reticulate vertexin at least one of the directed paths (either fromtoorto). This directed path changes by applying the LSA tree method as there is a new edge fromto. ByLemma5, eitherholds, or the LSA ofis a descendant of. Therefore, the modification of the directed path does not affect the LSA ofand. Thus,.
∎

It is sufficient to prove the following statement because ofLemma3:

By definition of the LSA tree method, when, bothandare rooted phylogenetic trees with exactly three leaves. These trees can only take two different shapes; they either have one or two interior vertices. Assume that. We distinguish two different cases.

In the first case, we apply the LSA tree method to. In the resulting treeandare more closely related to each other than to, without loss of generality. Therefore,. This implies:

Thus,is isomorphic toas the LSA of all pairs of leaves is the same in both trees, and as noted above there are only two possible shapes (having one or two interior vertices).

In the other case, we consider the tree where all three leaves are equally related to each other. Thus,holds. This implies:

Therefore, again,is isomorphic to.
∎

SECTION: 4Concluding comments

In this paper, we have discovered that the LSA tree transformation satisfies all three desirable properties (–), whereas several other published transformations fail to satisfy.

Our results suggest further questions and lines of inquiry. For example, is the LSA tree the only transformation from networks to trees that satisfies–and if not, can one classify the set of such transformations?

Secondly, for the transformationdescribed in (3.1), is it possible to compute theefficiently (i.e., in polynomial time in)? Although computing the Adams consensus of a fixed set of trees can be done in polynomial time, the setcan grow exponentially with the number of reticulation vertices in. More generally, for other consensus tree methods (e.g., strict consensus, majority rule) one can similarly define a transformation from phylogenetic networks to trees based on, so the same question of computational complexity arises for these methods.

Finally, an alternative to transforming arbitrary phylogenetic networks to rooted trees is to consider transformations to other well-behaved network classes that allow for limited reticulation. A particular class of interest is the set ofnormalnetworks (i.e., every vertex is either a leaf or has at least one child that is a tree vertex, and there is no arcfor which there is another path fromto) which have attractive mathematical and computational characteristics[7,6,14].
Thus, it is of interest to consider transformations from arbitrary phylogenetic networks onto the class of normal networks onand ask if such transformations can satisfy,and.
For the simple normalisation methodintroduced inFrancis et al [7],andhold butfails. A counterexample is shown inFig.4.1. Whether or not there is a transformation that satisfies all three properties is thus an interesting question. One possible candidate could be the transformation described byWillson [19], but we do not consider this further in this paper.

Acknowledgements

MS thanks the NZ Marsden Fund for funding support (23-UOC-003). We also thank the two anonymous reviewers for their helpful comments on an earlier version of this manuscript.

SECTION: Declarations

The authors have no conflicts of interest to declare. There is no data associated with this paper.

SECTION: Appendix

We first proveLemma2.

Letbe any network. Instead of the two subsetsand, we considerand. Furthermore, letdenote the network restricted to. First,Eqn.4.1is proven. We then establishEqn.2.2by induction:

To obtainfrom, we keep all vertices and edges that are part of any directed path fromto any. To get, we also delete all vertices and edges that lie on any directed path fromto any, excluding the ones that are part of a directed path fromto any.

To obtainfrom, we can proceed the same way as described above because, by definition. First, delete. Second, remove. Thus,.Eqn.2.2can be rephrased as follows:

We proveEqn.4.2by induction on. To start the induction, suppose. This case equalsEqn.4.1and was proven above. Now, assume thatEqn.4.2is true for some. We show that the statement then holds for. Suppose that. We have:

Eqn.4.2is proven, and thereby,Eqn.2.2.
∎

Secondly, turning to the proof ofProposition1,Fig.4.2provides a counterexample for the transformationsand. The counterexample for the transformationis shown inFig.4.3.

SECTION: References