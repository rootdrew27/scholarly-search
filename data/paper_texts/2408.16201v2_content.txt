SECTION: Uni-3DAD: GAN-Inversion Aided Universal 3D Anomaly Detection on Model-free Products

Anomaly detection is a long-standing challenge in manufacturing systems, aiming to locate surface defects and improve product quality. Traditionally, anomaly detection has relied on human inspectors or image-based methods. However, 3D point clouds have gained attention due to their robustness to environmental factors and their ability to represent geometric data. Existing 3D anomaly detection methods generally fall into two categories. One compares scanned 3D point clouds with design files, assuming these files are always available. However, such assumptions are often violated in many real-world applications where model-free products exist, such as fresh produce (i.e., “Cookie”, “Bagel”, “Potato”, etc.), dentures, bone, etc. The other category compares patches of scanned 3D point clouds with a library of normal patches named memory bank. However, those methods usually fail to detect incomplete shapes, which is a fairly common defect type (i.e., missing pieces of different products). The main challenge is that, unlike missing regions in images, which manifest as different pixel values or patterns compared to a normal image patch, missing areas in 3D point clouds represent the absence of scanned points. This makes it infeasible to compare the missing region (with no representation in the recorded 3D Scan) with existing point cloud patches in the memory bank. To address these two challenges, we proposed a unified, unsupervised 3D anomaly detection framework capable of identifying all types of defects on model-free products. Our method integrates two detection modules: a feature-based detection module and a reconstruction-based detection module. Feature-based detection covers geometric defects, such as dents, holes, and cracks, while the reconstruction-based method detects missing regions. Additionally, we employ a One-class Support Vector Machine (OCSVM) to fuse the detection results from both modules. The results demonstrate that (1) our proposed method outperforms the state-of-the-art (SOTA) methods in identifying incomplete shapes and (2) it still maintains comparable performance with the SOTA methods in detecting all other types of anomalies.

SECTION: 1Introduction

Surface defects, including cracks, dents, and missing parts, are common during manufacturing and can significantly weaken a component’s structural integrity. Anomaly detection is crucial for maintaining high-quality standards by identifying defects that could lead to failures or poor performance. This challenge has been recognized since the beginning of the Industrial Revolution, when anomaly detection was heavily reliant on labor-intensive human visual inspections. However, human inspectors are historically prone to errors due to carelessness and fatigue. With the emergence of automated defect detection technologies, it has become possible to significantly reduce dependence on human inspection while enhancing efficiency and reliability in industrial quality control. The simplest approach involves directly comparing the pending to-detect samples to a computer-aided design (CAD) file to identify differences. However, this method assumes the assumption that the design file exists, which is not always the case in many industrial settings. Hence, researchers have focused on developing anomaly detection methods formodel-freeproducts, for which the CAD files are unavailable.

Image-based defect detection techniques on model-free products have significantly advanced.
Several methods have been developed, including filter[Tsai & Wu,2000], tensor-based method[Zhang et al.,2016], and wavelet transformation[Zhang et al.,2017]. Recently, with the rise of deep learning, the focus has shifted from traditional approaches like tensor-based decomposition, filters, and digital processing to a range of deep learning methods applied to two-dimensional (2D) RGB images[Li et al.,2017, Cheon et al.,2019,Wang et al.,2021b, Mou et al.,2024]. Although these methods have been proven effective in many industrial applications, they exhibit limitations: specifically, 2D RGB data are less robust than 3D point clouds since (i) they are susceptible to variations in camera angles and lighting conditions, and (ii) they lack the rich geometric information needed for detecting minimal surface defects.

Addressing the limitations of 2D anomaly detection methods, 3D detection methods have garnered more attention than before. 3D anomaly detection methods typically utilize 3D point clouds, which consist of spatial coordinates that accurately represent the surface topology of products. Compared to 2D images, 3D point clouds offer significant advantages: (i) they maintain the integrity of surface shapes regardless of viewing angles and various lighting conditions, and (ii) they provide comprehensive geometric details crucial for detecting tiny surface defects. Recent state-of-the-art (SOTA) unsupervised 3D anomaly detection methods demonstrate comparable or even better detection results than 2D methods[Horwitz & Hoshen,2022, Chu et al.,2023,Wang et al.,2023]on MVTec 3D-AD dataset[Bergmann et al.,2022]. The core composition of these methods is the 3D point cloud feature extractors that are built on the-nearest-neighbor (KNN) algorithm. By extracting local geometric features from training and testing samples and comparing the differences between them, these methods effectively identify and detect surface defects. We term these methods asfeature-based methods. Despite these successes, these feature-based methods primarily focus on identifying defects that can be represented by local geometric features in the point cloud. However, for those defects that cannot be represented by local geometric features, i.e., the product is incomplete and has missing regions, the feature-based method failed to accurately identify them. Conversely, in recent years, with the advent of new 3D anomaly detection datasets[Li et al.,2024, Liu et al.,2023]and fast growth in 3D generative models,reconstruction-based methodshave become popular[Li et al.,2024,Zhou et al.,2024]. The nature of reconstruction-based methods is different from the feature-based methods: they generate the normal sample and compare it with the input sample for defect detection. However, the existing reconstruction-based methods have two limitations: (1) the current 3D generative model showed success in reconstructing the overall shape of the product while failing to fully recover the high-resolution geometric information in local surfaces. Reconstruction-based methods failed to identify defects from surfaces with complex geometric shapes. (2) The generated sample might introduce false alarms to the detection results by over- or under-estimating the shape of the input sample. Therefore, significant research gaps still exist in 3D anomaly detection.

To address the abovementioned issues, this work proposes a unified framework for detecting all types of geometric defects in the 3D point clouds. This architecture fuses two branches of detection methods: feature-based and reconstruction-based. The feature-based branch mainly focuses on surface defects that can be represented by local geometric features, while the reconstruction-based branch targets the detection of missing regions. In addition, Generative Adversarial Network (GAN)-Inversion is first introduced in 3D anomaly detection to ensure the generated sample in the reconstruction-based branch is the normal sample that is most similar to the input sample, reducing the false alarms. Finally, One-Class Support Vector Machine (OCSVM) is tailored to fuse the detection results from two branches and generate the overall anomaly score. The performance of our proposed methods is evaluated on two datasets: (1) the original MVTec 3D-AD dataset and (2) the augmented dataset derived from the original MVTec 3D-AD dataset, which contains extra incomplete samples.

We summarize our contributions as follows:

Our proposed method has notable adaptability to model-free industrial products.

The two-branch design (feature-based and reconstruction-based branches) enables the model to detect all kinds of defects. (capable of identifying incomplete shapes).

The model maintains the unsupervised nature that only uses non-defective unlabeled training data, which eases the burden on point-wise labeling.

The rest of the paper is organized as follows: Sec.2provides a concise overview of related works in anomaly detection. Sec.3introduces our proposed method, including each branch’s
details. Sec.4presents the experimental design, results, and a discussion of an ablation study. Finally, Sec.5summarizes the main findings and concludes the work.

SECTION: 2Related Works

In industrial anomaly detection, there are three main research areas, including (i) few-shot anomaly detection, in which limited data with pixel/point-wise labels are available for training; (ii) unsupervised anomaly detection, which aims to reduce human labor in labeling; and (iii) noisy anomaly detection, in which the data is often corrupted. Our research primarily focuses on unsupervised anomaly detection methods, which aligns well with the practical scenario where pixel/point-wise labels are usually unavailable. We first review popular 2D anomaly detection methods and then extend the review to include 3D anomaly detection approaches.

SECTION: 2.12D Anomaly Detection

Bergmann et al. [2021]released an industrial dataset for unsupervised anomaly detection, which has become prevalent in recent 2D anomaly detection research. Additionally,Zheng et al.[2022]summarizes two mainstream unsupervised 2D deep learning anomaly detection methods: (i) reconstruction-based methods and (ii) feature-based methods.

Reconstruction-based methods represent a significant strand in 2D anomaly detection. These methods are grounded in generative models, which are trained to generate normal samples. Therefore, when the testing sample comes in, the generative model will generate the most similar normal sample to the testing sample. The defects are then detected by comparing the testing sample with the generated normal samples. A notable approach of these methods leverages auto-encoders for image reconstruction and subsequent anomaly region identification, as demonstrated in studies[Bergmann et al.,2019,Zavrtanik et al.,2021a,b].
Additionally, there is a growing interest in employing GAN-based methods on 2D anomaly detection[Schlegl et al.,2017, Mou et al.,2023], since GAN can better capture the data distribution and hence generate high-quality data. However, it is difficult to train the GAN network. The most recent advancements in this domain have been directed towards exploring the potential of diffusion models[Song et al.,2021], an emerging technique showing promise and easy training compared with the GAN, particularly in medical anomaly detection.Wolleb et al.[2022]further exemplified this direction by proposing a novel anomaly detection framework utilizing diffusion models.

On the other hand, normalizing flows, which are another popular generative model, can perform 2D anomaly detection as well[Chiu & Lai,2023,Rudolph et al.,2021]. Unlike GAN-based detection methods, normalizing flows converts the normal input images into multi-variable Gaussian distribution and learns the converting process. When performing anomaly detection, the model aims to separate the in-distribution (normal) and out-of-distribution (abnormal) samples with the trained model. CFLOW-AD is a conditional normalizing flow that performs the positional encoding on the input 2D images[Gudovskiy et al.,2022]. The model is faster and smaller than the other normalizing flow models.Rudolph et al.[2022]use multi-scale features jointly to estimate the distribution throughout normalizing flow blocks for 2D anomaly detection.

Feature-based methods use different feature extractors to obtain representative features from normal images. After feature extraction, these features can be stored as discrete reference feature sets (referred to as the memory bank). Then, when the testing sample comes in, the same feature extractor is applied, and the difference between the testing features and features in the memory bank is used to calculate the anomaly score based on the predefined distance metric, thereby localizing the anomaly regions.

SPADE adoptsnearest features (in the memory bank) to the testing feature to calculate the anomaly score and detect defects[Cohen & Hoshen,2020].Roth et al. [2021]addresses the problem of long inference time in SPADE and proposes using a subset of the memory bank to increase computation speed.Defard et al. [2021]first proposes a continuous representation of the reference feature set by fitting a multi-variate Gaussian distribution.Kim et al. [2023]uses a patch-wise memory bank, which largely reduces the inference time during anomaly detection.

The teacher-student network is another popular feature-based anomaly detection technique.
The teacher-student network anomaly detection method usually consists of two identical networks: the teacher network (pre-trained on a large dataset) and the student network (trained against the output of the teacher network on the anomaly-free dataset). During testing, the defects are marked when the outputs from the teacher network and the student network in the same area are different.Bergmann et al. [2020]is the first to utilize teacher-student structure on 2D anomaly detection. In addition,Salehi et al.[2021]andWang et al.[2021a]use a more compact and powerful network and multi-scale features for detection.Rudolph et al.[2023]adopt an asymmetric teacher-student network; namely, the teacher network has a different structure from the student network. This structure can increase the gap between the output of the teacher network and the student network on the testing data, which is beneficial for anomaly detection.

SECTION: 2.23D Anomaly Detection

3D anomaly detection is different from 2D anomaly detection because of the nature of the dataset. The current popular 3D point cloud dataset for industrial 3D anomaly detection is MVTec 3D-AD[Bergmann et al.,2022]. The dataset contains RGB images and 3D point clouds of both model-free and model-fixed samples. In recent two years, with the development of 3D sensors, there have been several newly released 3D datasets for the anomaly detection task[Liu et al.,2023, Li et al.,2024]. Compared with the bloom of 2D anomaly detection, the methods of 3D anomaly detection are limited. Despite limited methods, there are two main branches for 3D anomaly detection: feature-based methods and reconstruction-based methods.

Similar to 2D reconstruction-based methods, 3D reconstruction-based methods also have generative models that are trained on the normal samples. Voxel f-AnoGAN, which utilizes 3D voxel grids, performs anomaly detection in the 3D brain data, opening a new direction for 3D reconstruction-based methods in the medical field[Simarro Viana et al.,2021]. This represents a significant expansion of the 2D GAN-based anomaly detection method[Schlegl et al.,2017]. Historically, the development of 3D reconstruction-based methods in industrial settings has been hindered by the absence of appropriate datasets for 3D generative models. This situation changed with a new synthetic 3D anomaly detection dataset, Anomaly-ShapeNet, which has significantly propelled the 3D reconstruction-based methods forward[Li et al.,2024]. In their work, they introduce IMRNet, a self-supervised learning network that utilizes a masking and reconstruction strategy for detecting 3D anomalies. Furthermore, R3D-AD employs the 3D diffusion model to detect defects[Zhou et al.,2024]. However, they still face the challenge that the generated 3D point clouds only capture the shape of the target products, indicating they are inadequate for reconstructing the high-resolution 3D point clouds for surfaces with complex geometric features. This limitation is primarily caused by the characteristics of the training dataset, the capacity of generative models, and the nature of the loss functions in training. The dataset built upon ShapeNet[Chang et al.,2015]has around 2000 points in each sample of the 3D point cloud, which is insufficient for high-resolution surface representation. In addition, the 3D point cloud with high-resolution surface representation typically contains millions of points to represent a whole product, which exceeds the capacity of existing generative models. Furthermore, commonly used loss functions, such as Mean Square Error (MSE) and Earth Mover’s Distance (EMD), tend to prioritize the accuracy of the overall shape over local surface details.

Inspired by the success of 2D teacher-student anomaly detection,Bergmann & Sattlegger [2023]first introduced teacher-student networks to detect defects from 3D point clouds. In addition,Rudolph et al.[2023]utilizes the depth image instead of the 3D point clouds in the asymmetric teacher-student network for anomaly detection. Although these methods have successfully identified surface defects in 3D point clouds, they are constrained by the need for additional training datasets or suffer from reduced accuracy in localization since there is little difference between the output of the teacher network and that of the student network. Meanwhile, a different line of research has explored using memory banks for 3D anomaly detection[Horwitz & Hoshen,2022,Wang et al.,2023, Chu et al.,2023, Cao et al.,2023]. These studies have shown that memory bank-based methods perform effectively on objects with complex geometric shapes. However, these approaches still have significant limitations. One issue is the large computational complexity since these methods require the calculation of a pairwise distance matrix between the features in the memory bank and those of samples. This implies that the computational cost largely depends on the size of the memory bank, making it impractical for online detection. Moreover, these methods typically rely on both well-aligned 2D images and 3D point clouds for anomaly detection, which may not be practical in real-world industrial environments where 2D images (and/or the alignment) are not always available.

However, without the aid of 2D images, incomplete shape detection – a fairly important defect detection task in industrial applications – using current 3D feature-based methods is highly challenging when relying solely on 3D scan data. The primary difficulty lies in the fact that unlike missing regions in images—where differences are reflected in pixel values or patterns compared to a normal product image—missing areas in 3D point clouds are characterized by the absence of scanned points. This absence makes it impossible to compare the missing region with existing point cloud patches in the memory bank. To address these limitations, we propose a unified 3D anomaly detection model to fuse both feature-based and reconstruction-based methods for the industrial products anomaly detection task.

SECTION: 3GAN-Inversion Aided Universal 3D Anomaly Detection

SECTION: 3.1Overview

Our proposed model is comprised of two key branches and one fusion module: a feature-based branch (Sec.3.2), a reconstruction-based branch (Sec.3.3), and a fusion module for the final decision (Sec.3.4). The feature-based module captures the local geometric information of the products, enabling the identification of defects on the local surfaces (e.g., dents, cracks, etc.). In contrast, the reconstruction-based method focuses on localizing and restoring the overall shape of the products by extracting global geometric features, which is a key function that the feature-based method fails to perform. Finally, we use an OCSVM to fuse the outputs of these two branches and output the final anomaly score[Schölkopf et al.,1999]. The architecture of our proposed method is illustrated in Fig.2.

SECTION: 3.2Feature-based Anomaly Detection

The first component of our proposed method is feature-based anomaly detection. As discussed in Sec.1, the industrial application requires methods capable of localizing small or even minute defects on the surface of a 3D point cloud. To address this, we utilize the Fast Point Feature Histogram (FPFH), a manually defined point cloud feature descriptor, as the feature extractor for our feature-based method. By comparing the training and testing features obtained from the feature extractor, we can precisely localize defect areas.

Inspired by BTF[Horwitz & Hoshen,2022], our proposed method uses FPFH as the descriptor of local surface geometric features for industrial anomaly detection. FPFH is a manual point cloud feature descriptor[Rusu et al.,2009]. Unlike neural network-extracted features, FPFH provides a robust representation of local geometric information with considerably lower computational cost[Bergmann & Sattlegger,2023,Wang et al.,2023, Chu et al.,2023], which directly employs the relative coordinates and normal vector of each point.

To compute FPFH, we first calculate the Simplified Point Feature Histograms (SPFH), calculated according to Alg.1. In Alg.1, we use “” to represent the cross-product. In the rest of the paper, “” denotes the regular product unless otherwise specified. For a given pointlocated on the point cloud and its nearby region, built using k-nearest-neighbor (KNN) algorithm, we can calculate the tuple set for this point and its nearby region,, in Darboux frame () for every point pairand(). The tuple set is then transferred as a histogram, i.e.,, which records the frequency ofin the. We denote SPFH of this point as

Once the SPFH of all points on the 3D point cloud is computed, we can further compute the FPFH of the point cloud sample using Eq. (1), summarized in Alg.2. Unlike SPFH, which is based on first-order nearest neighbor points, FPFH has a larger receptive field since it can aggregate the geometric information over both one-hop and two-hop neighbor points of the given point. In addition, since FPFH adopts weights,, it can be more accurate to depict the local geometric information than SPFH, defined as follows:

During training, the 3D point cloud, containingpoints, is passed through the feature extractor and outputs FPFH featuresfor each point. These features are then stored in the memory bank, i.e.,. For convenience, we useto representfor the remainder of the document. However, with a large number of training samples, the size ofbecomes massive because the number of training samples determines the size of, leading to substantial memory usage and time-consuming inference.
To mitigate this issue, we employPatchCoreto reduce the inference time and achieve acceptable results simultaneously[Roth et al.,2021].PatchCoreis a sub-sampling algorithm that constructs a Core-set. This algorithm adopts a minimax strategy, using a limited number of features to cover the entire feature space as much as possible[Sener & Savarese,2018]. Hence, the Core-setcomprises the most representative features instead of saving all features. The number of representative features in theis controlled by the pre-determined size. Once the number of features in thereaches the given size, the algorithm stops sub-sampling. The algorithm is summarized in Alg.3.

In the context of anomaly detection, the proposed module compares the features of the testing samplewith the features in theto yield a distance matrix,. The row element for, denoted as, indicates the distance of thetesting features to all training features in.
To calculate the anomaly score for each sample, we extract the minimum value of each row, such that, where the suffix 1 indicates the first branch. The minimum value of each row represents the smallest distance of each testing feature to all training features in the Core-set. If the testing feature is the normal feature, this minimum value will be relatively small; conversely, a large value indicates a deviation from the normal features, suggesting defect points.
The detailed algorithm and its implementation are depicted in Eq. (2) and Fig.4.

whereis the anomaly score array for each sample.

SECTION: 3.3Reconstruction-based Anomaly Detection

The feature-based detection module, introduced in Sec.3.2, is effective at identifying local surface defects but fails to detect defects on the overall shape (i.e., missing regions), limiting the versatility of 3D anomaly detection. To overcome this limitation, we introduce a reconstruction-based method for identifying missing regions in the 3D point clouds by restoring the incomplete shapes. The design details are shown in Fig.5. To the best of our knowledge, our proposed method is the first to adoptGAN-Inversionto a 3D anomaly detection task. In this section, we first introduce the mechanism of GAN and GAN-Inversion, followed by a discussion on how we apply GAN-Inversion to 3D anomaly detection.

To identify the missing regions, we require a model that can represent anomaly-free samples based on GAN.
GAN is a generative model[Goodfellow et al.,2014], which is comprised of two foundational modules: a generatorand a discriminator, parameterized byand, respectively. We will refer to these functions asand, respectively, when there is no ambiguity.
The generator aims to fool the discriminator by generating artificial samples, while the discriminator simultaneously attempts to distinguish the generated samples from real ones. When training is finished, the generator can be viewed as the data distribution of normal samples. Hence, the generated samples can be compared with testing samples to localize the missing regions.
The training loss function of the GAN is denoted in Eq. (3),

whereis the distribution of normal 3D point clouds.
The training stops when the loss in Eq. (3) converges. After that, the model can draw a randomand feed into the model using the following Eq. (4),

This paper uses SP-GAN as a case study for the 3D point cloud generation[Li et al.,2021]. Instead of turning a latent codeinto the 3D point cloud, SP-GAN adoptsglobal priorandlocal priorto generate the 3D point clouds, whereglobal prior, provides general spatial guidance for the generation andlocal prior, provides the surface details. Specifically,global prioris the skeleton of the target point cloud, which fixes the number of points. In contrast,local priormodifies the points onto minimize Eq. (3) by the training of generatorand discriminator.

In our experiment, GAN is trained on normal samples. Therefore, after training the GAN, it can be assumed that the model has learned the manifold of the normal products. However, for model-free products, variations in shape may occur even within the same type of product (i.e., no two apples are identical). Thus, a key question arises: How can we ensure the generated samples are always most similar to the input samples?
Inspired byShape-Inversion[Zhang et al.,2021a], we introduce GAN-inversion to ensure the generated sample closely resembles the input. The primary objective of this module is to always reconstruct the most similar normal sample to the input 3D point cloud, which is denoted as, from a specific latent code. This reconstruction is achieved by exploiting and finetuning the pre-trained GAN, as described in the following equation:

This process is commonly referred to as Optimization-based GAN Inversion[Xia et al.,2022]. Our model, however, extends beyond merely identifying the optimal latent codefor reconstructing. We simultaneously engage in the optimization of the GAN parameters. This dual optimization process involves both the latent code and the GAN parameters and is essential for achieving a higher fidelity in the reconstructed 3D point cloud. This advanced method is shown in the Eq. (6):

In our study, the total loss function consists of Chamfer Distance and Feature Distance, shown in Eq. (7):

The detailed expression ofis shown in Eq. (8). The Chamfer distance mainly depicts the difference in the coordinates between two 3D point clouds. In Eq. (8),,are 3D point clouds, and,are some points within the 3D point clouds. Chamfer distance is a metric to measure the similarity between 3D point clouds, which has two advantages: (i) Chamfer distance is a 2-norm distance, which has a low computational cost, and (ii) Chamfer distance is robust to outliers since it averages all the points. The Chamfer distance is defined as:

Given thatprimarily addresses the positional attribute of the 3D point clouds, the Feature Distance,, shown in Eq. (9), is essential for maintaining the overall structural information:

whereis the pre-trained discriminator

The inversion process starts from a latent code. Then the model optimizesandby minimizing the loss function in Eq. (6). When the inversion stage is completed, we assume thatis the closest non-defective sample of the input testing object.

Since we consider the missing region detection to be mainly determined by the shape of the normal product, the detailed geometric information on the local surface can be neglected when using reconstruction-based anomaly detection. Hence, we project reconstructed sampleand input testing sampleon the 2D plane withoutcoordinates, denoted asand. Using these two samples, these points inwhile not inare likely from the missing regions, denoted as, whereis an arbitrary point. Using this definition, the anomaly score that indicates whether each point is from the missing region is defined in Eq. (10):

In this equation, the anomaly score is set as the distance from the point in the reconstructed sample to its closest point in the testing sample. In this way, the module assigns a small anomaly score for the points in the reconstructed sample with the same or nearby points on the testing sample. If there are missing regions in the testing sample, a high anomaly score will be assigned to points in the corresponding regions of the reconstructed sample (always be the closest normal sample to the testing one) as there is no nearby or same point in the testing sample. Once the computation is completed, we perform a density clustering algorithm to reduce the noise to get a robust result[Ester et al.,1996]. Since the anomaly regions are sparsely distributed, we dilate the defect regions for better results.

SECTION: 3.4Fusion Module

So far, we have successfully adopted feature-based and reconstruction-based models for detecting defects on the local surface and incomplete shapes, respectively. However, in industrial settings, the conditions of the testing samples are often unknown. In other words, we do not have prior information about whether there are defects and what kinds of defects exist in the testing samples. To address this, we need to fuse the detection results from feature-based and reconstruction-based modules to produce an integrated anomaly score, which can uniformly identify all types of defects without any prior information.

In our model, each branch independently generates an anomaly score, which exhibits a unique scale. Hence, we propose OCSVM to fuse anomaly scores from different branches into an integrated anomaly score. OCSVM is an unsupervised anomaly detection method[Schölkopf et al.,1999]. Unlike traditional supervised support vector machines, OCSVM is only trained on single-class samples (normal samples in our case), making it well-suited for our unsupervised 3D anomaly detection task. The function of the decision boundary is defined in Eq. (11):

whereandare the optimized parameters andis kernel function.

Given a 2D feature space, we define the horizontal axis as the anomaly score from the feature-based method and the vertical axis as the reconstruction-based anomaly score. Each point on the 2D space represents the joint anomaly score of a specific point on the point cloud. During training, we select and pass several samples from the training dataset through each branch to obtain two sets of anomaly scores,and, for each point of the sample. We denote the anomaly score pairs as. We then train our OCSVM and determine the decision boundary using these anomaly score pairs. Fig.6visually presents the mechanism of calculating the final anomaly score.

To effectively train the decision boundary, it is necessary to adjust the anomaly scores from both branches to a comparable range. This involves finding the optimal coefficientbetween the two branches, such that. In this paper, we adopt the ratio of the specific quantile of the anomaly scores from both branches as the coefficient. Throughout the grid search, we obtain the optimal coefficient,, such thatallows the model to output the highest detection accuracy on the validation dataset (for details, see the ablation study in Sec.4.3.2) on the effect of different values of). Onceis determined, we follow the same training procedure during testing: passing the validation samples through each branch to acquire the joint anomaly scores in the 2D space, i.e.,. In this scenario, we define the final anomaly score as the distance of the joint anomaly score point to the decision boundary in the 2D feature space.

SECTION: 4Experiments

SECTION: 4.1Experiments

We evaluate our proposed method on the original MVTec 3D-AD dataset[Bergmann et al.,2022]and an augmented version of MVTec 3D-AD with additional samples that contain missing regions. A summary of the original MVTec 3D-AD dataset is shown in Tab.1. The dataset has ten categories, with only normal samples used for training. It is worth noticing that the dataset contains multiple categories of model-free products, such as “Bagel”, “Cookie”, “Peach”, etc. The testing dataset includes both anomaly-free and anomalous samples, such as scratches, dents, holes, contamination, or combinations of multiple defects. In Tab.1, we use “Test (good)” and “Test” to represent anomaly-free and anomalous samples in testing, respectively. As discussed in Sec.3.4.1, we conduct a grid search to find the optimal coefficientfor each category for determining the decision boundary. To facilitate this, we create a validation dataset comprising 5 samples of each defect type for every product category, along with 5 anomaly-free samples to maintain a distribution consistent with the testing dataset.

The augmented version of the MVTec 3D-AD dataset is created by adding abnormal samples with missing regions for the “Bagel”, “Peach, and “Potato” categories while keeping the remaining categories unchanged, as summarized in Tab.2. It is worth noticing that the “Cookie” category in the original dataset already contains several incomplete shape samples in the original test set.

For data preprocessing, we follow the methods described in BTF[Horwitz & Hoshen,2022]. Initially, we use the RANSAC algorithm to estimate the background plane and remove the background in the training and testing dataset, thereby enhancing the computation speed. Subsequently, we downsample the positional tensors of the entire dataset to a resolution ofto further conserve computation.
We implement our experiments on NVIDIA A5000 GPUs using PyTorch[Paszke et al.,2019].

In the feature-based module, we select 30 neighbor points to construct thegraph. We thento build the memory bankand Core-set.

We train our base GAN model across all categories using the latent codeand output the reconstructed point cloud, which haspoints. The training process was set to 300 epochs. In the GAN-Inversion component, we use a two-stage optimization strategy for faster and more accurate reconstruction of the incoming testing samples. The learning ratefor the latent codeandis set tofor the first stage andfor the second stage. Each stage consists of 40 iterations.

Our study focuses on pixel-level anomaly detection tasks. Hence, we follow the Area Under Per-Region Overlap (AU-PRO) metric introduced in[Bergmann et al.,2022].

The AU-PRO metric ranges from 0 to 1, in which a higher score means better model performance. In this study, we setas the integration limit (false positive rate) to ensure a fair comparison with other benchmark methods. As illustrated in Fig.7, the AU-PRO is directly proportional to the integration limit. The value ofis considered an ideal value for industrial anomaly detection tasks, where the abnormal regions are typically tiny compared to normal regions[Bergmann et al.,2022]. A high AU-PRO at a given integration limit reflects the robust performance of the model.

SECTION: 4.2Results

Tab.3presents the performance of the proposed method, measured by AU-PRO, alongside that of current SOTA methods on the original and augmented datasets. We compare our method with BTF[Horwitz & Hoshen,2022], M3DM[Wang et al.,2023], and Shape-guided method[Chu et al.,2023]. On the original dataset, our method achieves the best performance in anomaly detection across five out of the ten product categories and also the highest overall performance. It is worth noting that in the original dataset, “Cookie” is the only category of the product containing the missing region. Our proposed method outperforms all benchmark methods by a large margin (improving over the second-best method by 2.6 in AU-PRO). To further demonstrate the superior performance of our proposed method in identifying the missing regions, we also evaluate it on the augmented dataset. Specifically, our proposed method largely outperforms the benchmarks in the categories of “Bagel”, “Peach”, and “Potato”, in which we manually added samples with missing regions. The results clearly demonstrate that the benchmark methods apparently failed in anomaly detection when a large number of samples have missing regions, while our proposed method still maintains outstanding performance and significantly outperforms the existing benchmarks.

Incomplete shape detection is critical in industrial anomaly detection, for which current methods fail to localize. With the reconstruction-based method and OCSVM, it is possible to detect missing regions on the model-free products, such as “Bagel”, “Cookie”, “Peach”, “Potato”, etc., for subsequent restoration.

SECTION: 4.3Ablation Study

We conduct the following three ablation experiments to better understand our proposed method: (i) examining the compatibility of different feature-based methods with the reconstruction-based method using OCSVM as the fusion module; (ii) discussing the impact of choosing differenton the accuracy when training the decision boundary for OCSVM; (iii) comparing the detection results of different fusion methods compared with OCSVM.

We evaluate the compatibility of our GAN-Inversion anomaly detection module by embedding it with the Shape-guided method and M3DM.
Tab.4shows the AU-PRO accuracy for both the original and the augmented datasets. The results indicate that the Shape-guided method + GAN maintains comparable accuracy on the original dataset and improves the accuracy of the augmented dataset. On the other hand, although M3DM + GAN effectively improves the detection accuracy on the augmented dataset, the overall accuracy drops 0.5 percentage points on the original dataset.

In conclusion, the results of Tab.4suggest that the reconstruction and fusion modules are versatile, plug-and-play modules that can be effectively integrated with current SOTA feature-based methods. Additionally, these plug-and-play modules improve upon the vanilla SOTA detection accuracy, particularly in categories with incomplete samples. Although the reconstruction-based and fusion modules generally improve the detection accuracy of incomplete shapes, using BTF proves to be the best fit for the feature-based module.

In this subsection, we investigate the impacts of the coefficienton the accuracy of the validation dataset. Our proposed method requires an adjustable ratioto effectively scale anomaly scores from the two distinct branches of anomaly detection into a comparable range. This is essential since each branch generates anomaly scores with different scales. Ensuring that anomaly scores from both branches are balanced is crucial to avoid any single branch disproportionately influencing the final anomaly score, thereby ensuring effective detection of all defect types.

In Fig.8, we plot AU-PRO on the validation dataset versus the ratio that is adjusted by(with values from 0.0 to 1 quantile). To determine the optimal, we perform a grid search across the given range of quantiles, where we choose 21 ratios and calculate the accuracy on the validation set for each setting. The model then selects thewith the highest accuracy to carry forward into the subsequent inference stage. The results demonstrate that selecting an appropriate coefficientcan largely improve the detection accuracy for each category.

In this subsection, we evaluate the effectiveness of the OCSVM module. We compare our proposed method, the benchmark (BTF), and the fusion method (using weight () and bias ()) introduced in the Shape-guided method[Chu et al.,2023]. In Shape-guided method,Chu et al. [2023]adopt Eq. (13) to adjust two anomaly scores:

whereandare the standard deviation and mean of anomaly scorefrom thebranch on the validation set.
The idea of Eq. (13) is also to adjust the anomaly scores from one branch to be compatible with another using the validation set. The Shape-guided method views anomaly scores from each branch as a specific distribution. By aligning the means () of two anomaly scores using the bias () and scaling the range with the weight (), the method computes the scaled anomaly scorefor one branch. The final anomaly score is then calculated as the summation of two anomaly scores. In this design, the fusion module only accesses the validation set once to obtainand, which avoids the grid search in our proposed method and reduces the inference time. However, Tab.5shows that OCSVM outperforms the fusion method using mean and standard deviation on all categories for the original dataset, which demonstrates the effectiveness of the proposed fusion module.

SECTION: 5Conclusion

This paper addresses the research gap concerning the lack of a unified 3D anomaly detection method that can handle all types of defects in model-free products with complex geometric features. Specifically, feature-based methods struggle to identify anomalies in incomplete shapes, while reconstruction-based approaches have not yet achieved the required resolution for the detection of tiny defects for industrial standards. No method has been proposed to unify both of these methods to overcome the weaknesses present in these individual methods.

To address these problems, we proposed a unified framework for unsupervised detection of universal industrial product defects. To our knowledge, this is the first method to adopt GAN-inversion for the 3D point clouds anomaly detection task. Our method has three critical modules: feature-based, reconstruction-based, and fusion. The feature-based module is specifically designed to identify geometric defects on product surfaces, while the reconstruction-based module evaluates the completeness of product shapes. In the last step, we employ OCSVM to integrate the results from the two modules and generate a final anomaly score. To evaluate our method, we create an augmented dataset with artificially generated incomplete samples, given the absence of such samples in the original dataset. Our experimental results in Tab.3show that our method not only performs comparably with existing SOTA methods on the original dataset but also significantly outperforms them on the augmented dataset. This demonstrates the robustness and adaptability of our proposed method. Overall, the advantages of our proposed method can be summarized in two key aspects: (i) our proposed method is an unsupervised 3D anomaly detection for model-free products; (ii) it uses the feature-based method, reconstruction-based method and a fusion module, which improves the detection accuracy across defect types.

SECTION: Acknowledgements

This research is partially supported by the Air Force Office of Scientific Research (AFOSR) under the Dynamic Data and Information Processing (DDIP) portfolio via Grant 23AFCOR003.

SECTION: References