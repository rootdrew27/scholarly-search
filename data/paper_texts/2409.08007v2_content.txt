SECTION: MLody- Deep Learning Generated Polarized Synchrotron Coefficients

Polarized synchrotron emission is a fundamental process in high-energy astrophysics, particularly in the environments around black holes and pulsars. Accurate modeling of this emission requires precise computation of the emission, absorption, rotation, and conversion coefficients, which are critical for radiative transfer simulations. Traditionally, these coefficients are derived using fit functions based on precomputed ground truth values. However, these fit functions often lack accuracy, particularly in specific plasma conditions not well represented in the datasets used to generate them. In this work, we introduceMLody, a deep neural network designed to compute polarized synchrotron coefficients with high accuracy across a wide range of plasma parameters. We demonstrateMLody’s capabilities by integrating it with a radiative transfer code to generate synthetic polarized synchrotron images for an accreting black hole simulation. Our results reveal significant differences, up to a factor of two, in both linear and circular polarization compared to traditional methods. These differences could have important implications for parameter estimation in Event Horizon Telescope observations, suggesting thatMLodycould enhance the accuracy of future astrophysical analyses.

SECTION: 1Introduction

Polarized synchrotron emission is a cornerstone of high-energy astrophysics, providing critical insights into some of the universe’s most extreme environments, such as the regions around black holes and pulsars. This type of emission is generated when charged particles undergo an acceleration perpendicular to their motion. High-energy astrophysical sources produce synchrotron emission via electrons gyrating around magnetic field lines. A key characteristic of synchrotron emission is its highly polarized nature(Rybicki & Lightman,1979), making it a widely used tool for probing magnetic field structures and understanding the dynamics of these extreme astrophysical systems.

The Event Horizon Telescope (EHT) produced the first historic pictures of black holes, either in the center of Messier 87(Event Horizon Telescope Collaboration
et al.,2019a)or from the center of our own galaxy, Sagittarius A* (SgrA*)(Event Horizon Telescope Collaboration
et al.,2022a). These observations, conducted at millimeter wavelengths, revealed polarized synchrotron emission originating from a relativistic population of electrons within the accretion flow surrounding the black hole. In the years following these historic results, the EHT also analyzed the polarization signatures coming from both Messier 87(Event Horizon Telescope Collaboration et al.,2021,2023)and SgrA*(Event Horizon Telescope Collaboration
et al.,2024a). These polarization studies provide critical insights into the magnetic field structures near event horizons, which are essential for understanding the dynamics of accretion flows and jet formation.

For the interpretation of the observations, the EHT uses general relativistic magnetohydrodynamical simulations of the accretion flow, which are post-processed by general relativistic ray tracing codes to compute synthetic images and spectra(Event Horizon Telescope Collaboration
et al.,2019b,2022b,2024b). These radiative transfer codes generally all follow a similar algorithmic design(Dexter,2016; Mościbrodzka et al.,2017; Bronzwaer et al.,2018,2020). In this approach, the code defines a virtual camera positioned outside of the simulations consisting of a predefined amount of pixels; each pixel is assigned a wave vector, which is used as the initial condition for solving the geodesic equation. The resulting trajectories (or rays) are then used to solve the radiation transfer equation

The left hand side of Eqn.1, contains;the affine parameter, andthe Lorentz invariant Stokes vector given by

hereis the specific intensity for every Stokes component, andis the frequency. The right-hand side of Eqn.1depends on the polarized synchrotron coefficients, first the emission coefficients, secondly absorption coefficients, and finally the rotation and conversion coefficients. Polarized radiative-transfer computations depend on the orientation of the frame in which the Stokes vector can be defined. This requires constructing a frame at the observer’s location (the camera) and any location where the ray interacts with radiating matter. A suitable choice for the latter is one where Stokesis aligned with the magnetic field vector, resulting in, and.

At every time step along the ray, the coefficients are computed based on the local plasma conditions. Calculating these coefficients involves an integral over momentum space and a sum over the synchrotron harmonics, see, e.g.,Leung et al. (2011); Dexter (2016). The integral over momentum space depends on the shape of the electron distribution function, which gives the particle number at a given energy (or momentum). Common choices for the electron distribution function include the relativistic Maxwellian,-distribution functions, and power-law distribution functions. Computing this integral accurately over the full range of possible plasma conditions is computationally very demanding. Therefore, many forms of approximate “fit formula” are used instead of performing the full complex computation for every step. Common fit formulas in the literature that are tested against the exact numerical solution areShcherbakov (2008); Leung et al. (2011); Dexter (2016); Pandya et al. (2016); Marszewski et al. (2021). The weakness of this approach is that fit functions are by construction approximate and are only constructed using a limited range of the parameter domain, e.g.,Pandya et al. (2016)111We will compare our results mainly to the work byPandya et al. (2016)since it is the most commonly used fit formula within the Event Horizon Telescope Collaboration.only considered dimensionless electron temperatures between 2 and 40, which limits their accuracy in regions where absorption and Faraday rotation dominate at lower temperatures. Additionally in the ultra-relativistic synchrotron limit the integral over the distribution function can be analytically approximated, e.g.Mahadevan et al. (1996); Dexter (2016).

To address the limitations of traditional fit functions, we developedMLody, a deep neural network designed to enhance the accuracy of polarized synchrotron coefficient computations across a diverse range of plasma conditions, extending high accuracy to the lower temperature regime. The code is publicly availbe onGitHub222https://github.com/jordydavelaar/mlody. In Section2, we will outline the training data generation, the network architecture, and how we interfacedMLodywithRAPTOR333Publicly available at https://github.com/jordydavelaar/raptor(Bronzwaer et al.,2018,2020). In Section3, we will show the network’s training results, and present a use case ofMLody’s capabilities by computing synthetic images of black hole accretion flow simulations. In Section4we will draw our conclusions.

SECTION: 2Methods

SECTION: 2.1Training Data Generation

We used the publicly available codesymphonyto generate a large sample of polarized synchrotron radiation coefficients. For a detailed explanation ofsymphony, seePandya et al. (2016)and references therein. The coefficients generally depend on four variables: the electron number density, the frequency, the magnetic field strength,, and the angle between the wave vectorand magnetic field, referred to as the pitch angle,. Additionally, certain variables are connected to the specific distribution function. For a thermal Maxwellian, this includes the dimensionless electron temperature, withthe Boltzmann constant,the electron mass, andthe speed of light.

Naively this would require a five-dimensional data cube for our input vector. However, by utilizing the exact form of the integrals solved bysymphony, we can reduce this to three dimensions. First, all coefficients depend linearly on electron number density; therefore, we can always multiply with density after computing the coefficients. Secondly, we can define, whereis the electron cyclotron frequency, this combines the frequency and magnetic field, resulting in another reduction of our input dimension. The coefficients can then be written in a universal form

whereandare dimensionless functions. For training data of our network we will computed,andby sampling the three input variables randomly over the following ranges,, and. In total, the training data includes nearly 20 million coefficients.

SECTION: 2.2Network Architecture and Learning Strategy

To build our neural network we useKeras(Chollet et al.,2015)with aTensorFlow(Abadi et al.,2015)backend. The network architecture is a fully connected deep neural network with nine Dense layers. These layers are divided into three groups, each with 100, 200, and 300 neurons, respectively. For every Dense layer, we use a rectified linear unit (ReLU) activation function, described by(Nair & Hinton,2010). ReLU activation functions are essential for introducing non-linearities into the network, enabling it to learn complex underlying functions. After the last group of Dense Layers, we have our output layer which consists of eight neurons and utilizes a linear activation function. For a summary of our network architecture see Table1.

We split the data 80/20 between training and validation. Additionally, we keep 20,000 randomly selected samples aside for testing after training is finished. The validation set is used to monitor for overfitting. Overfitting occurs when the network perfectly replicates the training data without learning how to generalize, which would result in poor performance on unseen data. By comparing the loss on the training set with the validation set, we ensure the network is learning the true underlying correlations rather than simply memorizing the training data. If the training loss decreases while the validation loss increases, this indicates overfitting.

We employed the Adam optimizer(Kingma & Ba,2014), and the network uses an exponential-decay learning-rate schedule with an initial learning rate of, a decay rate of 0.95, and a decay step of 10,000. This means the learning rate decreases by a factor of 0.95 for every 10,000 gradient descent steps. The loss function used was mean squared error:

whereis the true value of the’th sample,is corresponding network prediction, andis the total number of data points. The network was trained for 1,000 epochs and used a batch size of 2,000.

Before training, the input vectorand outputare transformed and rescaled so that their values map betweenandand their mean is zero. In the case of,,,, we 1) take the logarithm, 2) recenter them to have a mean of zero, and 3) normalize with their maximum value. For, we train on, which is naturally normalized between. Sinceand, both have positive as well as negative values, we did not use a logarithmic function; instead, their scaling was performed by first applying, then recentering and normalizing by the maximum value.

SECTION: 2.3Integration withRAPTOR

After the network was successfully trained, we interfacedMLodywithRAPTORby using the publicly availablekeras2cpp444See https://github.com/gosha20777/keras2cpplibrary. This library is aC++framework that reads in a model file that contains all the information on the network architecture and the neuron weights. The library also provides functions that can be called byRAPTORto compute new outputs. For this final step, the code converts the plasma quantities to the input vector format ofMLody, obtains an output vector, and computes,andby rescaling the output and add units via Equations3-5. In case the input variables forMLodyare outside the range of the training data, we default to using the fit functions.

SECTION: 3Results

SECTION: 3.1Network Training and Performance Assessment

The training data set, computed withsymphony, consists of nearly 20 million coefficients. To assess the performance of the training data against the fit formula fromPandya et al. (2016), we compared the results using both approaches, as illustrated in Fig.1. In an ideal scenario, all values would align along the diagonal, indicating perfect agreement between the fit function on theaxis and thesymphonyoutput on theaxis. The emission and absorption coefficients all show a wider band around the optimal diagonal, with the largest discrepancies at lowand electron temperatures, which are outside the data range on which the fit functions were constructed. Moreover, the rotation and conversion coefficients display significant deviations across the entire parameter range, including incorrect signs. The deviations are found to be largest for small electron temperaturesand, which indicates that this is at lower electron energies. These deviations with fit functions arise since in the literature they are constructed by either computing them analytically in the high-energy limit(Shcherbakov,2008; Pandya et al.,2016; Marszewski et al.,2021)In this case the lower energy limit is poorly incorporated and the fit functions need to extrapolation outside of their range where the high-energy assumption holds.

Next, we train the network for 1,000 epochs and evaluate its performance. Fig.2shows the training and validation Loss as a function epoch. Both losses steadily decrease with epoch and follow similar trajectories, indicating good network performance and a lack of overfitting. At the end of the training, the Loss reaches a value of. We additionally also compute the mean absolute relative error of the network, and for both the training as well as the validation set, this is below one percent at the end of training.

To further evaluateMLody’s performance, we compared the network’s predictions to the ground truth fromsymphonyin Fig.3by using the 20,000 samples in the test data set. Compared to Fig.1,MLodyoutperforms the traditional fit functions across all coefficients. The most notable improvements can be seen in the rotation and conversion coefficientsand.

SECTION: 3.2Performance Comparison for Black Hole Accretion Modeling

As an example ofMLody’s capabilities, we integrated the network withRAPTORto compute synthetic images of a black hole accretion flow simulation. We use a simulation snapshot run with the GRMHD codeBHAC(Porth et al.,2017). The black hole simulation is in the Magnetically Arrested Disk (MAD) regimeNarayan et al. (2003); Tchekhovskoy et al. (2011); seeDavelaar et al. (2023)for simulation details. Meaning that the black hole reaches a saturated state in the amount of magnetic flux on the horizon. The spin of the black hole is. Ideal GRMHD simulations are scale-free and typically do not evolve the electron thermodynamics explicitly. Therefore, plasma variables must be rescaled to achieve a physical scale in post-processing. For this test, we chose scaling parameters to model the black hole at the center of our galaxy, Sagittarius A*. The black hole mass and distance are constrained by long-term observations of stellar orbits in the galactic nucleus,,kpc(Do et al.,2019; GRAVITY Collaboration et al.,2019). The mass accretion rate we set to, resultingJy of flux at 230 GHz.

Finally, the electron temperature was parameterized using the prescription fromMościbrodzka et al. (2016)which relates the electron temperatureto the proton temperaturesvia

wherethe proton mass,the electron mass,the internal energy, andthe dimensionless electron temperature. The free parameterdetermines the temperature ratio in regions where. The choice ofwill change the morphology of the resulting image, e.g., the disk dominates the emission forwhile the jet dominates if. For our test case, we will set, meaning a jet-dominated model. Finally, we set the inclination of the observer relative to the black hole spin axis at 30 degrees. We then generate synthetic polarized spectra and images betweenHz using bothMLodyand the fit function fromPandya et al. (2016).

We computed spectra for all Stokes variables and compared them to results obtained using the fit function method. In Fig.4we show the spectra for Stokes. Overall, we found good agreement between both methods, with relative differences remaining close to one percent across the entire frequency range, as shown in the bottom panel. This small discrepancy is not unexpected given that there is a relatively small difference between the ground truth and the fit formula for Stokes(see Fig.1) in contrast to the rotation and conversion coefficients which only affect Stokes,and.

Given the poorer performance of the fit function for the rotation and conversion coefficients, we expect larger discrepancies in the polarized quantities. We computed both image-integrated and pixel-integrated values of linear and circular polarization. The difference lies in when the summation over pixel values occurs: we either sum Stokesandfirst and then compute the total linear polarization, or we computeper pixel and then the sum. The former approach mimics an under-resolved measurement, such as one from a single telescope with a large field of view, while the latter represents a perfectly resolved measurement.

Fig.5shows the linear polarizationfor both unresolved (top panel) and resolved (middle panel) cases, with the relative difference between the two methods shown in the bottom panel. In both cases, we find maximum differences of%, whereMLodygenerates less linear polarization than the fit functions. Since the sign ofcorrelates with the Faraday Rotation Measure we expect deviations betweenMLodyand the fit functions. The rotation measure is given by, withthe EVPA andthe wavelength. We use the image integratedandatGHz andGHz to compute the. We find slightly lower values for thebut with the same sign forMLodycompared to the fit functions, namely,rad/m2andrad/m2, respectively.

Fig.6presents the circular polarization results,. The top panel shows the unresolved circular polarization, the middle panel the resolved circular polarization, and the bottom panel the relative difference between the two models. The relative difference with the fit function is largest for Stokes, reaching up to 100% for most frequencies, withMLodygenerating more circular polarization than the fit functions.

In Fig.7, we show the pixel-to-pixel residuals between synthetic images computed with and withoutMLodyatHz. Each image is normalized to its largest pixel value, with an inset showing the absolute error divided by the maximum pixel value of the image. The first column shows residual images for Stokes. As expected from the spectra, the residuals are small, generally below. For Stokes,, and, larger differences are observed. This is in agreement with the larger relative differences found in the linear and circular polarization spectra, see Figs.5and6. The maximum differences are found aroundHz and decrease at higher frequencies. The largest discrepancies are seen either far out in the jet, seeHz, where the temperature anddecrease, or close to the black hole for higher frequencies. At the higher frequencies,Hz andHz, we find a flip in the sign of the offset in stokes V on the photon ring, however since the offset is small, the sign found in the individual images is the same for bothMLodyand the fit functions.

The computational speed ofRAPTORis affected by the current implementation ofMLody, making the code a factor of a few slower compared to when it is run with the fit functions. However, the keras2cpp library used to connectMLodywithRAPTORis not yet optimized for our specific use case. Improving the computational performance of the network is ongoing, and speed-ups are expected to be needed to make the network more efficient for EHT analysis. However, improvements observed withMLodysuggest that deep learning techniques could become integral to modeling efforts for the study of black hole environments.

SECTION: 4Conclusion

In this letter, we introducedMLody, a novel deep neural network specifically designed to generate polarized synchrotron coefficients with high accuracy, particularly tailored for black hole accretion studies. Trained on millions of coefficients from the publicly availablesymphonycode,MLodyoutperforms traditional fit functions across a wide range of plasma conditions. Our results not only demonstrate the increased performance ofMLodyover traditional methods but also highlight its potential to increase the accuracy of the analysis of future EHT observations and related astrophysical research.

This work focused on the thermal Maxwellian electron distribution function, demonstrating significant improvements in the accuracy of polarization modeling. Future developments will extendMLodyto supportand power-law distribution functions, as well as other more complex electron distributions, such as anisotropic distribution function(Galishnikova et al.,2023)or distribution function computed by first-principle kinetic plasma simulations. These expansions will further enhanceMLody’s applicability to a broader range of astrophysical scenarios.

By interfacingMLodywith the radiative transfer codeRAPTOR, we generated synthetic images from a black hole accretion simulation and observed discrepancies in polarization spectra—ranging from 10% to 100%—compared to results derived from fit functions. These differences are substantial and could critically impact the parameter estimations used in EHT observations, particularly for M87 and SgrA*(Event Horizon Telescope Collaboration et al.,2021,2023; Event Horizon Telescope Collaboration
et al.,2024a), where models are often validated against specific polarization thresholds. While a comprehensive comparison with EHT data is beyond the scope of this letter, our findings suggest that incorporatingMLodycould lead to more accurate model-to-data comparisons and potentially refine the interpretation of EHT results.

In conclusion,MLodydemonstrates enhanced accuracy in modeling polarized synchrotron emission, providing a more precise tool for studying black hole environments. Its application in upcoming observational campaigns, including those by the next-generation Event Horizon Telescope, may lead to more accurate interpretations of black hole observations.

SECTION: References