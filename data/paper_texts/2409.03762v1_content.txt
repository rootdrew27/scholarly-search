SECTION: Combining supervised and unsupervised learning methods to predict financial market movements

1. Hamilton Institute, Maynooth University, Maynooth, Ireland;

2. Department of Mathematics and Statistics, Maynooth University, Maynooth, Ireland;

3. Department of Computer Science, Maynooth University, Maynooth, Ireland;

4. DLT Capital, Maynooth, Ireland

Corresponding author; e-mail: gabriel.palma.2022@mumail.ie

Keywords: Gaussian mixture model, Cryptocurrencies, Stock market, Machine learning, Feature engineering.

Manuscript type: Research paper.

Prepared using the suggestedLaTeXtemplate forAm. Nat.

SECTION: Abstract

The decisions traders make to buy or sell an asset depend on various analyses, with expertise required to identify patterns that can be exploited for profit. In this paper we identify novel features extracted from emergent and well-established financial markets using linear models and Gaussian Mixture Models (GMM) with the aim of finding profitable opportunities. We used approximately six months of data consisting of minute candles from the Bitcoin, Pepecoin, and Nasdaq markets to derive and compare the proposed novel features with commonly used ones. These features were extracted based on the previousminutes for each market and used to identify predictions for the hour ahead. We explored the performance of various machine learning strategies, such as Random Forests (RF) and K-Nearest Neighbours (KNN) to classify market movements. A naive random approach to selecting trading decisions was used as a benchmark, with outcomes assumed to be equally likely. We used a temporal cross-validation approach using test sets of,andof total hours to evaluate the learning algorithms’ performances. Our results showed that filtering the time series facilitates algorithms’ generalisation. The GMM filtering approach revealed that the KNN and RF algorithms produced higher average returns than the random algorithm.

SECTION: 1   Introduction

Financial markets are complex systems driven by the collective behaviour and decision-making of market participants(Prasad and Seetharaman,,2021; Buczynski et al.,,2021; Granha et al.,,2023). The decisions these participants make to buy or sell an asset depend on various analyses, with expertise required to identify patterns that can be exploited for profit(Singh et al., 2024a,;Singh et al., 2024b,). These patterns can be identified through multiple means such as technical indicators, candlestick charts, or time series statistics(Singh et al., 2024b,; Parente et al.,,2024). Professional traders hunt for exploitable patterns across all liquid markets including well-established exchanges such as the Nasdaq stock market, the second largest exchange by capitalisation in the USA, as well as emergent markets. One such emergent market is the cryptocurrency domain, which boasts a diverse set of digital coins that can be highly correlated, from meme coins such as Pepe the frog to the classic Bitcoin(Sebastião and Godinho,,2021; Fang et al.,,2022; Cheng and Chen,,2023).

In recent years, machine learning techniques have shown promising results in extracting insights from financial data to forecast market movements and inform trading strategies(Gerlein et al.,,2016; Dash and Dash,,2016; Paiva et al.,,2019; Hasan et al.,,2020; Jaquart et al.,,2021; Lin et al.,,2021; Prasad and Seetharaman,,2021; Buczynski et al.,,2021; Sokolovsky et al.,,2023; Parente et al.,,2024; Bouteska et al.,,2024; Kwon and Lee,,2024; Zou et al.,,2024; Avramelou et al.,,2024). These techniques have been applied in several markets from the various cryptocurrencies(Sebastião and Godinho,,2021; Fang et al.,,2022; Jaquart et al.,,2021; Parente et al.,,2024; Bouteska et al.,,2024)to the Istanbul Stock Exchange (BIST100) national index(Hasan et al.,,2020)and other stocks markets(Dash and Dash,,2016; Prasad and Seetharaman,,2021; Lin et al.,,2021; Zou et al.,,2024). These applications have highlighted the challenges of predicting the future direction of financial markets(Buczynski et al.,,2021).

The difficulty of creating price forecasting systems capable of guiding human trading decisions has motivated studies in feature engineering and the design of associated trading strategies(Buczynski et al.,,2021; Bouteska et al.,,2024). Other authors have examined the use of clustering analysis for understanding financial trends and relationships among financial assets based on unsupervised learning methods, such as Gaussian Mixture Models (GMM)(De Luca and Zuccolotto,,2014; Bai and Dang,,2014), portfolio optimisation(Paiva et al.,,2019; Cheng and Chen,,2023), as well as machine learning algorithms, such as deep neural networks, support vector machine, cascaded lstm networks, ensemble algorithms and others(Gerlein et al.,,2016; Zou et al.,,2024;Singh et al., 2024b,; Parente et al.,,2024).

The results of these studies have indicated a need for more sophisticated feature engineering approaches to capture subtle market dynamics. In this paper, we propose a new set of features designed based on the slope and intercept of a linear model fitted to price peaks. The curvature of each peak is used as an explanatory variable based on the close price of the Nasdaq, Pepecoin and Bitcoin markets to illustrate the use of these features following the method proposed byPalma et al., 2023b. Moreover, inspired by previous findings of the use of Gaussian Mixture Models (GMMs) as a pre-processing technique applied to time series(Eirola and Lendasse,,2013; Fan et al.,,2022,2024), we use GMMs to filter market data, checking for scenarios where machine learning algorithms might produce profit. The target is to decide between buying, selling and holding each hour, with approximatelymonths of data for the three markets.

We compared the performance of commonly used machine learning algorithms to make trading decisions using a traditional set of features used in previous work(Parente et al.,,2024). A baseline naive algorithm which made decisions randomly, each with the same probability, was used to aid the comparison of the various algorithms. The proposed approach serves as a basis for further development in feature engineering and pre-processing techniques applied to financial markets.

The rest of this paper is organized as follows. In Section 2, we detail the data acquisition, labelling algorithm, feature engineering and the approach used to cluster the time series based on the set of proposed features. In Section 3, we present and discuss the results obtained. Finally, in Section 4 we present the main conclusions of the study and directions for future work.

SECTION: 2   Methods

SECTION: Data acquisition and labelling algorithm

We obtained approximately six months of data from Bitcoin and Pepecoin markets, with minute candles describing the open, close, high and low, using the OKX API. Also, we used the backtestmarket API to collect minute candles for the Nasdaq market in the same period. Letbe an observation of the close price at minutefor a time seriesfor a market. We first obtained the percentage change by computingfor every market, thus producing time series of percentage changes,,for Bitcoin, Pepecoin and Nasdaq respectively.

We defined trading decisions for all markets by employing a simple symmetric threshold algorithm based on thequantile of the. We selected the specified quantile to produce a balanced dataset of market movements. The selected quantile yields a negativethat is defined as the lower threshold, whereas the absolute value is defined as the upper threshold. Thus, ifis smaller than the lower threshold, we categorize a selling decision for the minuteof the time series. We categorize a buying decision ifis higher upper threshold. Otherwise, we categorize a holding decision for the minuteof the time series. Figure1shows an illustration of the results of the threshold algorithm for the studied markets. By following these criteria we obtained a time series of market movementsfor Bitcoin, Pepecoin and Nasdaq markets.

SECTION: Feature engineering

For each market, the time series was organised so that for everyobservations (minutes), we extracted features using the firstminutes to predict theth observation. We extracted the buy proportion, sell proportion, close price, linear model intercept, linear model slope, peaks average curvature, peaks average magnitude, and estimated the percentage change following the previous description for each market. The linear model parameters were estimated using an adaptation of the features extraction method applied for the EEG time series proposed byPalma et al., 2023b. We first collected the peaks of the close price using everyminute interval and collected the estimated curvatures of each peak calculated by taking the second-order difference of,, and, whereis the time where a peak occurred. Therefore, we fitted a linear model to the peak heights using the curvature of each peak as an explanatory variable and obtained the overall peak average magnitude. Finally, we collected the estimated percentage for eachminutes interval by computing the average of the lastvalues,, and the all values of the close price,, and computed the estimated percentage of change using.

To compare the effect of using these proposed features to make trading decisions, we followed the recommendations ofParente et al., (2024)and used RSI (Relative Strength Index), ULTOSC (Ultimate Oscillator), Close price percentage change, Z-Score of the close price in a given number of time frames, Z-Score of the volume and the MA (Moving Average) ratio. These features were computed for the entire time series as proposed byParente et al., (2024), and their values at timewere used to predict, respecting the temporal component and not including any future information on feature calculation.

SECTION: Clustering markets using Gaussian mixture models

All Bitcoin, Pepecoin and Nasdaq markets were filtered using a Gaussian Mixture Model (GMM). We selected the number of GMM components (i.e. clusters) based on the BIC criterion, selecting the model with the lowest values of BIC for each market. The parameters of the GMM were estimated using the standardised proposed features and commonly used ones to evaluate possible changes in performance and cluster estimation for both cases.

The GMM-filtering took into account all the features used for classifying trading decisions. Figure2presents a diagram illustrating this procedure based on the Bitcoin market, which uses the proposed features withclustered time series selected based on the BIC criterion. The Gaussian mixture model serves as a clustering method that combines similar trends of the financial time series. The hourly observations are rearranged and filtered based on the features collected from the original observations of the studied market. This approach helps test the hypothesis that training machine learning algorithms based on similar market trends can enhance their performance.

SECTION: Modelling market movements using machine learning

Before employing any learning algorithm, we defined a baseline algorithm representing a naive prediction where a decisionfor a marketon minuteis obtained, assuming that the three possible decisions are equally likely to be sampled. The naive approach does not consider any features extracted by the markets. This benchmark allows us to evaluate the performance of the various learning algorithms. We used K-nearest neighbours (KNN), Deep Neural Networks (DNN), Polynomial Support Vector Machines (Poly SVM), Random Forests and XGBoost algorithms to classify trading decisions (buy, sell and hold).

To estimate the performance of these algorithms we computed the number of times the learning algorithm accurately selected a buying (), selling () and holding () decision. We also calculated the number of times the learning algorithm misclassified buying as a selling (), buying as a holding (), selling as a buying () selling as a holding (), holding as a buying (), and holding as a selling () decision. Based on these metrics we calculated the accuracy for buying,, selling,, and holding,, categories. Finally, we reported the average of individual accuracies by computing.

We also computed a profit performance based on the time series of percentage of change,, and selected decisionsfor each marketusing the function

whereis the percentage change andis the predicted decision by a learning algorithm at time. Based on this function we compute the Accumulated Percentage Change. We produced random trading decisions as the benchmark by following the naive algorithm that assigns equal probability to all possible decisions, thus allowing us to computeand. We producedvalues of both performance metrics. A temporal cross-validation approach was applied using the initial percentage of observations to train the learning algorithms. The unseen percentage of the data to obtainandfor the algorithms and to obtainvalues of both performance metrics based on the naive algorithm. We used a temporal train and test approach to obtain the performance of the learning algorithms. The test sets that were evaluated included,andof the data. Finally, the Python and R programming languages were used to implement the methods proposed in this paper. To allow full reproducibility of the findings, we have made the code available athttps://github.com/GabrielRPalma/ClarrifyingTraderDecisionsWithML.

SECTION: 3   Results and discussion

SECTION: Gaussian Mixture Model clustering

Based on the BIC criterion for selecting the number of clusters using the Gaussian Mixture Model approach, the indicated number of clusters when using the proposed features was. On the other hand, when using the commonly used features (RSI, ULTOSC, Close price percentage change, Z-Score of the close price, volume Z-Score, and Moving average ratio), a single unique cluster was indicated based on the BIC values. As a result, we couldn’t use the proposed filtering strategy when using these features, considering that for each analysed market, all observations belong to a single cluster. The obtained clusters in both cases had BIC values approximatelysmaller than the second best number of clusters

TableLABEL:GMMAveragesTableCommonpresents the standardised mean values of the commonly used features collected at 59-minute intervals for the single estimated cluster derived using the Gaussian Mixture Model (GMM) method. The Nasdaq market cluster is characterized by higher price levels, the Bitcoin cluster by higher price movements, and the Pepecoin cluster by lower RSI, ULTOSC, and moving average ratio values. This result highlights the importance of the feature engineering process when exploring the capabilities of learning algorithms in different market scenarios based on GMM filtering.

TableLABEL:GMMAveragesTablepresents the standardised mean values of the proposed features collected using 59-minute intervals for the four estimated clusters derived using the Gaussian Mixture Model (GMM) method. For the Bitcoin market, the clearer differences are in the close price, linear model intercept, and peaks average magnitude features. Clusterhas substantially higher mean values for these three features (,,respectively) compared to the other clusters, suggesting that this cluster represents time periods with higher price levels. In contrast, clusters,andhave lower and relatively similar mean values for these price-related features. Also, clusterhas the highest proportion of buying and selling behaviour, indicating more decisions based on the proposed threshold algorithm.

For the Pepecoin cryptocurrency, our results showed that the most notable differences are observed in the buy and sell proportions, with clusterhaving the highest mean values (and, respectively), followed by cluster(and). Clusters 2 and 4 have lower mean values for these features, with cluster 2 being the lowest (and). Cluster 3 has the highest mean values for the close price, linear model intercept, and peak average magnitude features (,, and, respectively), while cluster 2 has the lowest (0.06 for all three features). Overall, these differences among clusters for the Pepecoin market are driven mainly by close price values, which is more evident than for the Bitcoin Market.

The more explicit differences for Nasdaq clusters are the buy and sell proportions, which increase from clusterto cluster, and the price-related features (close price, linear model intercept, and peaks average magnitude), which decrease from clusterto cluster. Our findings suggest an inverse relationship between trading activity and price levels among estimated Nasdaq clusters.

SECTION: Trading decision classification with ML

Figure3shows the performance of the learning algorithms in classifying trading decisions for all markets. The figure also shows the performance metric variation based on the different testing percentages used (,, and) as shown by the error bar computed using the standard error of these metrics for all testing percentages. Overall, the only algorithms that produced higher performance than thepercentile random algorithm threshold were the Random Forests and KNN algorithms. The DNN and polynomial SVM algorithms produced higher average performances when using the standardised data in most scenarios.

None of the learning algorithms achieved higher performance metrics for the Bitcoin market than thepercentile of the random algorithm. However, XGBoost and KNN consistently achieved higher average performance. Also, the polynomial SVM with its parameters estimated using the standardised data obtained higher performance when using the proposed features than the commonly used ones. Furthermore, the Random Forests and KNN obtained higher average performances than thepercentile of the random algorithm for the Nasdaq market. Our results also showed that the Random Forests algorithm trained with the standardised proposed features obtained higher performance than the commonly used features. Finally, the polynomial SVM and Random Forests also obtained higher performances when compared to the random algorithm for the Pepecoin market.

Figure4shows the average of individual accuracies of the learning algorithms for the GMM-filtered markets based on the proposed features. Overall, the KNN, polynomial SVM, Random Forests and XGBoost algorithms achieved higher average performance than thepercentile of the random algorithm. Also, the DNN and polynomial SVM algorithms increased their average performance when training with the standardised data for most clusters and markets. Our findings showed no apparent increase in the average performance after applying the filtering strategy based on the GMM. However, the number of algorithms that produced higher performance than the random algorithm increased after applying the filtering technique. The Bitcoin market time series filtered with the first and third clusters achieved higher performance according to the average of individual accuracies when using the Random Forests and XGBoost algorithms. The polynomial SVM algorithm only achieved higher performance using the Nasdaq market time series filtered with the third cluster. Finally, the Random Forests algorithm produced higher performance on the Pepecoin market time series filtered with the second cluster.

Figure5shows the Accumulated Percentage of Change (APC) when using the classified decision by the learning algorithms using,, andof the observations for testing. Overall, none of the algorithms produced a higher average performance than thepercentile of the metrics obtained based on the random algorithm for all markets. The KNN algorithm only achieved the closest value to this threshold when including the variation based on the different testing sets. Our results highlight a benefit of using the standardised data for the Bitcoin market, which increases the APC in most of the algorithms. The highest APC obtained was with the Random Forests algorithm based on the proposed features. On the other hand, the standardisation of the features did not increase the overall APC of the studied algorithms for the Nasdaq market. The highest APC obtained was with the KNN algorithm, which also used the proposed features. The KNN algorithm trained with the proposed features produced the highest APC for the Pepecoin market, and we did not find any clear improvement when standardising the features.

Figure6shows the APC of the learning algorithms for the GMM-filtered markets based on the proposed features. Overall, the number of algorithms that obtained higher APC values than thepercentile of the random algorithm increased, with the KNN, Random Forests and XGBoost highlighting this finding. The highest APC was obtained by the KNN algorithm using the original proposed features filtered by cluster. The XGBoost algorithm produced the better average APC based on the original proposed features filtered by cluster 1 for the Bitcoin market, while the KNN algorithm produced higher APC values based on the standardised proposed features filtered by clusterfor the Nasdaq market. Finally, the KNN algorithm produced higher APC values based on the original proposed features filtered by clusterfor the Pepecoin market.

Our results highlight the competitive nature of the proposed features compared to ones commonly used to predict market movements, with APC values higher than the random algorithm. The potential of the GMM-filtering approach is highlighted by the finding that the number of algorithms which produced better performance in terms of mean individual accuracies and APC values increased after the application of the procedure. The reported algorithms that produced these superior performances (KNN, Random Forests and XGBoost) were already mentioned in previous work showing promising results(Gerlein et al.,,2016; Hasan et al.,,2020; Prasad and Seetharaman,,2021; Jaquart et al.,,2021; Parente et al.,,2024; Bouteska et al.,,2024).

The use of the Gaussian mixture model is a common practice in financial data analysis(Eirola and Lendasse,,2013; Bai and Dang,,2014), and this method has already been used as a pre-processing step for improving classification in different research areas(Fan et al.,,2022). Other techniques have also been proposed as a pre-processing step, such as the principal component analysis and association metrics based clustering(Palma et al., 2023a,; Fan et al.,,2024). Our results illustrate the feasibility of applying GMM filtering to make trading decisions(Buczynski et al.,,2021; Sokolovsky et al.,,2023). This work can serve as the basis for the future development of feature engineering tools with application to financial markets(Long et al.,,2019; Dami and Esterabi,,2021; Cerqueira et al.,,2021; Mantilla and Dormido-Canto,,2023; Verdonck et al.,,2021; Zhang et al.,,2024).

SECTION: 4   Conclusion

We explored the capabilities of classic machine learning methods to make trading decisions in emergent and well-established markets using a new set of features based on a linear model of close prices and their curvatures. We also proposed applying Gaussian mixture models to filter these markets to better explore the capabilities of these learning algorithms in finding profit opportunities. Our results revealed the potential of the proposed features, showing that filtering the time series enhances average performance over a naive algorithm that assigns equal probability for each trading decision. When applying the proposed filtering technique with GMM to the Pepecoin market, we found that the KNN and Random Forests algorithms produced significantly higher average returns than the random algorithm.

SECTION: 5   Acknowledgments

This publication has resulted from research conducted with the financial support of DLT Capital and Science Foundation Ireland under Grant 18/CRT/6049. The opinions, findings and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the funding agencies.

SECTION: 6   Declarations

Ethical ApprovalNot applicable.

Competing interestsNot applicable.

Authors’ contributionsG.R.P. conceived and designed the research. P.M. and M.S. collected the data and provided insights into the discussion of results. G.R.P. created the approach and analysed the data. G.R.P. led the writing of the manuscript. All authors contributed to the overall writing.

FundingScience Foundation Ireland under Grant 18/CRT/6049 and DLT Capital.

SECTION: Literature Cited