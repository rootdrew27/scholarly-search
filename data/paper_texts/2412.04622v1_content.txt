SECTION: Mixed Delay/Nondelay Embeddings Based Neuromorphic Computing withPatterned Nanomagnet Arrays

Patterned nanomagnet arrays (PNAs) have been shown to exhibit a strong geometrically frustrated dipole interaction. Some PNAs have also shown emergent domain wall dynamics. Previous works have demonstrated methods to physically probe these magnetization dynamics of PNAs to realize neuromorphic reservoir systems that exhibit chaotic dynamical behavior and high-dimensional nonlinearity. These PNA reservoir systems from prior works leverage echo state properties and linear/nonlinear short-term memory of component reservoir nodes to map and preserve the dynamical information of the input time-series data into nondelay spatial embeddings. Such mappings enable these PNA reservoir systems to imitate and predict/forecast the input time series data. However, these prior PNA reservoir systems are based solely on the nondelay spatial embeddings obtained at component reservoir nodes. As a result, they require a massive number of component reservoir nodes, or a very large spatial embedding (i.e., high-dimensional spatial embedding) per reservoir node, or both, to achieve acceptable imitation and prediction accuracy. These requirements reduce the practical feasibility of such PNA reservoir systems. To address this shortcoming, we present a mixed delay/nondelay embeddings-based PNA reservoir system. Our system uses a single PNA reservoir node with the ability to obtain a mixture of delay/nondelay embeddings of the dynamical information of the time-series data applied at the input of a single PNA reservoir node. Our analysis shows that when these mixed delay/nondelay embeddings are used to train a perceptron at the output layer, our reservoir system outperforms existing PNA-based reservoir systems for the imitation of NARMA 2, NARMA 5, NARMA 7, and NARMA 10 time series data, and for the short-term and long-term prediction of the Mackey Glass time series data.

SECTION: IIntroduction

Patterned nanomagnet arrays (PNAs) are typically fabricated by etching nanomagnets in ferromagnetic thin films (e.g., permalloy films) in the desired geometric arrangement using lithography[1]. Each nanomagnet in a PNA behaves as a microscopic Ising spin whose dipole interaction with the neighboring spins is geometrically frustrated[2]. Such frustrated interactions often lead to numerous nearly degenerated energy states in the PNA because of which not all spins in the PNA attain the ground-energy state when the PNA is subjected to an external magnetic field perturbation[3]. The lingering of nanomagnet spins in the degenerated energy states gives rise to richly nonlinear magnetization dynamics in PNAs[3].

The nonlinear magnetization dynamics give rise to the echo-state property and nonlinear/linear short-term memory in PNAs. These properties enable PNAs to memorize and adaptively learn spatio-temporal features and hidden patterns in complex time series data when the time series data are encoded and applied to PNAs as a sequence of perturbing external magnetic fields[3,4]. These capabilities of PNAs make them very attractive for realizing neuromorphic reservoir systems that can be used to imitate and predict time series data[5,6,7,8,9,10,2,11,12,13,14].

Designing a quality reservoir system using PNAs requires probing the magnetization dynamics and the nearly degenerated spin energy states of PNAs so that the spatial embeddings of the dynamical information of the input time series data, preserved in the magnetization states of PNAs, can be extracted for postprocessing[2,15]. Such spatial embeddings are referred to as nondelay spatial embeddings as they provide the preserved dynamical information at a particular time step of the input time-series data[16,17]. To extract nondelay spatial embeddings of PNA-based reservoir systems, the orientations of nanomagnet spins in PNAs can be probed by direct magnetic imaging of PNAs[3]. In addition to magnetic imaging, other common tools for probing PNAs and extracting nondelay spatial embeddings include ferromagnetic resonance[4,13,14], resonant soft X-ray scattering, X-ray photon correlation spectroscopy, and magnetoresistance transport measurement (using giant magnetoresistance (GMR) or anisotropic magnetoresistance (AMR) or tunneling magnetoresistance (TMR))[2]. Several prior works have used these tools to demonstrate PNA-based reservoir computing capabilities[5,6,7,8,9,10,2,11,12,13,14].

Unfortunately, however, these tools face several shortcomings that diminish their use in practical reservoir computing systems and applications. For instance, the ferromagnetic resonance and X-ray based tools are powerful for (i) distinguishing the nearly degenerated spin energy states, (ii) understanding the physics of PNAs, and (iii) extracting the nondelay spatial embeddings of reservoir states that are rich in the spatially separable dynamical information of the input data, but they are not practical for co-packaged hardware-based implementations of reservoir computing applications. On the other hand, the TMR/GMR/AMR-based transport measurements are amenable to hardware-based implementations of practical reservoir computing applications, but they provide nondelay spatial embeddings of reservoir states that are scarce in the spatially separable dynamical information of input data. This scarcity of spatially separable dynamical information results in poor accuracy for imitation and prediction tasks.

To address these shortcomings, we propose a mixed delay/nondelay spatial embeddings-based PNA reservoir system. Our system extracts the nondelay spatial embeddings of PNA reservoir states using TMR-based probing of PNA spins and augments the extracted nondelay spatial embeddings with delayed spatial embeddings from a total of past h=50 time steps. The combination of delay and nondelay-based spatial embeddings dramatically increases the richness of the spatially separable dynamical information readily available to our reservoir system, increasing the imitation and prediction accuracy of our system compared to the TMR/GMR/AMR-based PNA reservoir systems from prior works. In addition, the TMR-based probing increases the practicality of our reservoir system compared to the ferromagnetic resonance and X-ray probing-based PNA reservoir systems from prior works.

This paper makes the following key contributions.

We propose a TMR probing-based PNA reservoir system that combines delay and nondelay spatial embeddings to improve the practicality and accuracy of reservoir computing;

We evaluate our proposed PNA reservoir system for imitation of the NARMA 2, NARMA 5, NARMA 7, and NARMA 10 time series data;

We evaluate our proposed PNA reservoir system for short-term and long-term prediction of the Mackey-Glass time series data;

We explore the accuracy impacts of using a single-layer versus multilayer perceptron at the output layer of our PNA reservoir system;

We compare the imitation and precision accuracy results for our system with the results for five different reservoir systems from prior works.

SECTION: IIPreliminaries

SECTION: II-ANeuromorphic Reservoir Computing: Overview

The core idea of the neuromorphic reservoir computing is to use a neuromorphic dynamical system as a physical reservoir to adaptively learn spatio-temporal features and hidden patterns in complex time series[15,18](see Fig.1). A perspective on emerging challenges and opportunities for reservoir computing is available in[15]. As described in[15], the basic process of reservoir computing involves preprocessing the external input signal, mapping the input signal onto interacting physical nodes within the reservoir to transform it into complex spatiotemporal patterns in a high-dimensional space, probing the physical reservoir state, and finally postprocessing the reservoir state to generate output data. Various physical devices and systems with disparate physical phenomena can be used to realize a reservoir[18,19,20,21,15](see Fig.1).

The computational flow of reservoir computing comprises three layers, namely the input, reservoir, and output layers (see Fig.1). At the input layer, the raw inputs are encoded into temporal sequences of physical perturbations that can directly excite the dynamics of the nonlinear physical nodes of the reservoir. The complex interaction dynamics of the physical nodes of the reservoir, governed by predefined physical rules, determine the reservoir state. This reservoir state is then transformed into the reservoir output using a perceptron typically a single-layer linear perceptron. In a standard setup, the input encodings and the physical rules defining the dynamical behavior of the reservoir are fixed, and only the perceptron at the output layer is trained.

To achieve high accuracy from a reservoir system, it is generally desirable to have a very high- dimensional reservoir state. The dimensionality of the reservoir state referes to the number of embeddings of spatio-temporally dynamical information in the reservoir state vector. Typically, there is a one-to-one correspondence between the number of embeddings in the reservoir state vector and the number of physical nodes in the reservoir system; therefore, increasing the dimensionality of the reservoir state often results in a large number of physical nodes in the reservoir, making it less feasible to implement. To make reservoir systems more practical and encourage their wider adoption, it is essential to increase the dimensionality of the reservoir state without proportionally increasing the number of physical nodes. Fortunately, previous studies[16,17,22,23,24]have demonstrated that this can be achieved by introducing time-delayed embeddings in addition to the general nondelay embeddings per physical reservoir node.In this paper, we investigate the use of time-delayed embeddings in PNA-based reservoir systems for the first time.

SECTION: II-BComputing with Patterned Nanomagnet Arrays (PNAs)

PNAs can be manufactured using standard lithography techniques in various geometric topologies and structures (e.g., square[25], pinwheel[26], kagome[27]topologies and various other structures[28,29,30,31,32,33,1]). Realizing any arbitrary more exotic PNA topologies is also possible, e.g., artificial quasicrystals[34,35], distorted topologies[36,37], and connected nanomagnet networks where domain walls can travel through the network[8]. Individual nanomagnets of a PNA system can be realized in various shapes, e.g., elongated[26,27]and circular[11].

In a PNA, the nanomagnets are typically arranged in a way that not all dipole interactions among the nanomagnets can be satisfied simultaneously. This gives rise to collective dynamical magnetization behavior, which can be driven by an external magnetic field. In Fig.2, we demonstrate an experimentally probed trigger of such dynamical magnetization behavior in an electron-beam lithography-fabricated sample of a square PNA.

The collective dynamical behavior of the nanomagnets gives rise to a variety of emergent phenomena including magnetic monopoles, vertex-based frustration, phase transition, and chiral dynamics[38,39,40,41,42,43,44]. This collective dynamical behavior of PNAs has been shown to give rise to the echo state property and nonlinear/linear memory capacity in the PNAs. Due to these properties, PNAs have been used as high-quality neuromorphic reservoirs in several prior works[5,6,7,8,9,10,2,11,12,13].

SECTION: II-CInput Encoding and Readout for PNA Reservoirs

Spin-wave spectral fingerprinting has been a common method to investigate the physics and computing capabilities of PNAs[45,9,13]. This is typically enabled by flip-chip integration of the PNA chip with an RF coplanar waveguide[45]. The coplanar waveguide can be connected to a microwave generator to enable the coupling of an external RF magnetic field with the PNA sample, constituting a method for applying the input signal to the PNA-based reservoir[13]. The coplanar waveguide can also be used to probe the ferromagnetic resonance spectra of the PNA sample, constituting a method for reservoir state readout. Apart from applying an external magnetic field via the coplanar waveguide, the input signal can also be applied through spin-orbit torque (SOT) or magnetic tunnel junction (MTJ)-based switching of the actuating nanomagnets in the PNA[11,6]. Similarly, alternative methods also exist for the state readout of PNA-based reservoirs. These include magnetization probing using TMR[11]or GMR/AMR[2]. An analysis of the energy consumption of the SOT-based input application and the MTJ-based readout enabled by TMR has been carried out in[11], and evidently, the TMR-based readout and SOT-based input application can be substantially more energy efficient than the coplanar waveguide-based input and readout methods.

SECTION: IIIProposed Delay/Nondelay Embeddings Based PNA Reservoir System

SECTION: III-ADesign

Our proposed PNA reservoir system, illustrated in Fig.3, takes as input the time-series data(a sequence of sampled signal amplitudes). At each time step,is encoded intocycles of global external magnetic field amplitude pairs,. The magnetic field amplitudes of the field cycles corresponding toare linearly proportional to the amplitude of. This method of encodingas cycles of magnetic field amplitudes is inspired from[13,12]. We set N=5 for our PNA reservoir system, though other values may also be valid. Determining the optimal value of N is beyond the scope of this work.

Our system consists of a single PNA reservoir node with configurable parameters such as geometric topology, dimensions, and magnetic properties. We have used square and pinwheel topologies[25]in this work, though other geometric topologies could also be explored (e.g., kagome[46,27]). When the input-encoded magnetic field cycles are applied sequentially to the PNA reservoir node, they induce hysteretic and dynamical magnetization interactions among the constituent nanomagnets of the PNA. After the magnetization interactions in the PNA node stabilize, the magnetization status at each nanomagnet is probed. The physical probing of the magnetization of each nanomagnet can be achieved by using the Tunneling Magnetoresistance (TMR) effect[11]or the Giant/Anisotropic Magnetoresistance (GMR/AMR) effects[2].
The magnetization values of all the nanomagnets in the PNA node are then combined into the reservoir node’s state vector, denoted as the nondelay embedding. This nondelay embedding represents the response of the reservoir system at the current time step. This embedding preserves the dynamical information of multiple past time steps of sequence.
This preservation of dynamical information is due to the echo state property and linear/nonlinear short-term memory capacity of the PNA reservoir node, as expected.

In addition to this nondelay embedding, our system incorporates a delay embedding to explicitly capture historical information on the input signal dynamics for imitation and prediction. This delay embedding at timeis formed by concatenating the reservoir’s nondelay embeddings from pasttime steps, denoted aswhere.
The final reservoir state at timeis the combination of delay and nondelay embeddings, represented by the concatenated state vector.
This concatenated state vector spatially encapsulates the dynamical behavior of the system up to the current time step, and is used for subsequent tasks such as signal imitation and prediction.

For the training process, a perceptron (either single-layer or multilayer) is used to transform the augmented state vectorinto a target signal (sequence of sampled signal amplitudes). In the case of the imitation task, the output is trained to reproduce the target signal. For prediction tasks, the output forecasts a time-advanced input signal, whereis the prediction horizon. Designating the target output signal (sequence) asand the output signal (sequence) generated by the PNA reservoir system as, we train the perceptron employing a linear combination of mean square error (MSE) and inverted Pearson correlation coefficient (CC) as the loss function:

Here, we take= 0.15. Our approach allows the system to effectively capture temporal dependencies in the input signal, thereby enhancing its ability to imitate and predict time-series data with high accuracy.

SECTION: III-BSimulation and Implementation

For the implementation and evaluation of our PNA reservoir system, we model a PNA with sizeand square topology (containing a total ofnanomagnets) using flatspin[25].
The size of the PNA represents a hyperparameter for controlling the reservoir quality. It directly influences the expressivity and computational complexity of the reservoir[47]. Increasing the PNA size is theoretically favorable for higher expressivity; however, in practice, realizing high-quality reservoirs (i.e., with high echo state property, memory capacity, and stability) with large PNAs requires exploration and co-optimization of several physical properties of PNAs, including the
shape, size,
and interspacing of the individual nanomagnets. We leave such exploration and co-optimization for future work and select the PNA size offor this work because this size has been accepted as one of the standard PNA sizes in prior work[25].
We simulate the magnetization dynamics of this PNA from our flatspin-based model[25]to extract the delay and nondelay spatial embeddings. We incorporate this flatspin-based PNA modeling environment with a PyTorch-based framework for input data pre-processing, perceptron training, testing, data analysis, and accuracy evaluation.
Flatspin[25]does not
impose
a hard limit on the PNA size; however, its main drawback is the
rapidly increasing simulation time as the array size grows.
In the future, we plan to explore more efficient simulation platforms such as HotSpice[48,49]in studying the effect of scaling the PNA size to thousands of nanomagnets.

SECTION: IVTime Series Imitation

SECTION: IV-AMethod

In the Non-linear Autoregressive Moving Average (NARMA) imitation task, we aim to replicate the behavior of NARMAwhere, where higher values of N represent systems with increased temporal complexity and nonlinear dependencies. The sequencesare generated using the nonlinear difference equation from[50]with the same parameters:and. The input signalis randomly generated by uniformly sampling between 0 and 0.5. Sequences generated from NARMA systems exhibit a noisy, cyclical behavior where increasing the order leads to more complex dependencies on past values. We set the history length to, meaning that the mixed delay/nondelay embeddings include the current reservoir state as well as the reservoir states from the previous 50 time steps. The perceptron used for training consists of a single hidden layer with a SeLU activation function.

The goal is to estimate the target signalwhereis generated according to the NARMA equation, using the mixed delay/nondelay embeddingderived from the PNA reservoir system. The training is performed by minimizing a loss function combining the mean squared error (MSE) and the inverted Pearson correlation coefficient, as described in Eq.1. We use data sequences of length, withof the input-output pairs randomly selected for testing and the remaining for training.

SECTION: IV-BResults and Discussion

TableIshows the MSE, normalized mean square error (NRMSE), and Pearson Correlation Coefficient (CC) betweenandfor the square ICE and Pinwheel ICE configurations. The correlation decreases for both the training and testing data as the NARMA order increases for both topologies, with the square configuration yielding marginally better results. On the testing data, MSE and NRMSE increase as the order rises, reflecting the increasing complexity in the relationship between the target and input signals. However, both metrics show a slight decrease when moving from NARMA7 to NARMA10. This behavior can be attributed to the skewed nature of the loss function, where 85% of the weight is assigned to the inverted Pearson correlation coefficient, and only 15% to the MSE. As a result, the best loss value does not necessarily align with the lowest MSE, which explains the non-intuitive decrease in MSE for higher NARMA orders during training. Overall, the imitation performance remains strong as we progress from NARMA2 to NARMA10, with the CC consistently above 99%.

Figure4shows a visual comparison betweenand, demonstrating that our method successfully reproduces the NARMA signals across all four orders. By explicitly incorporating past reservoir states, the delay embeddings enhance the reservoir node’s memory capacity, allowing for better extraction of dynamical information from the input. This makes it possible to achieve high performance using relatively simple learning architectures such as a multilayer perceptron (MLP).

TableIIpresents a comparison of the NRMSE results from the proposed method with two other reservoir computing systems[51,18]on NARMA prediction tasks. For both the NARMA5 and NARMA10 series, our proposed mixed embeddings method, which uses 51 embeddings in the reservoir state vector, outperforms both the unconnected and connected versions of[51], which use 100-dimensional state vectors. This advantage is because[51]relies on hierarchical echo state network (ESN) reservoirs, which depend solely on internal recurrence for temporal memory, whereas our method explicitly captures both past and current states using mixed delay/nondelay embeddings.

However,[18]slightly outperforms our method on NARMA10. This is due to its use of feedback mechanisms introduced by silicon microrings, which enhance the system’s ability to handle long-term memory tasks. On the other hand, their approach involves both input signal masking and encoding, adding complexity to the pre-processing stage.