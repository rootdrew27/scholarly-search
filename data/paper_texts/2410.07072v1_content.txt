SECTION: Towards xAI: Configuring RNN Weights using Domain Knowledge for MIMO Receive Processing

Deep learning is making a profound impact in the physical layer of wireless communications. Despite exhibiting outstanding empirical performance in tasks such as MIMO receive processing, the reasons behind the demonstrated superior performance improvement remain largely unclear.
In this work, we advance the field of Explainable AI (xAI) in the physical layer of wireless communications utilizing signal processing principles.
Specifically, we focus on the task of MIMO-OFDM receive processing (e.g., symbol detection) using reservoir computing (RC), a framework within recurrent neural networks (RNNs), which outperforms both conventional and other learning-based MIMO detectors.
Our analysis provides a signal processing-based, first-principles understanding of the corresponding operation of the RC.
Building on this fundamental understanding, we are able to systematically incorporate the domain knowledge of wireless systems (e.g., channel statistics) into the design of the underlying RNN by directly configuring the untrained RNN weights for MIMO-OFDM symbol detection.
The introduced RNN weight configuration has been validated through extensive simulations demonstrating significant performance improvements.
This establishes a foundation for explainable RC-based architectures in MIMO-OFDM receive processing and provides a roadmap for incorporating domain knowledge into the design of neural networks for NextG systems.

SECTION: IIntroduction

The recent surge in deep learning has been extraordinary, largely due to its great empirical success across a broad range of applications.
Wireless communications have also embraced machine learning (ML) and neural network (NN) techniques at a rapid pace.
Artificial intelligence (AI)-aided networks have been foreseen to play a crucial role in addressing the stringent requirements and challenges posed by next-generation wireless networks (NextG)[2,3].
Specifically, NextG brings forth the challenges[2]ofnetwork complexity,model deficitandalgorithm deficit, thereby limiting the feasibility of traditional model-based approaches for physical layer (PHY) processing, including MIMO receive processing.
Meanwhile, AI-enabled methods for PHY processing can offer an attractive solution to overcome these challenges[3].
Most prevailing deep learning approaches entail training large NN models “offline” with large datasets before deploying them for inference, which may not be practical for many wireless operations, particularly at the PHY where over-the-air (OTA) training data is scarce.
Another formidable challenge in the application of learning-based methods at the PHY is theuncertainty in generalization[2], caused primarily due to mismatch between offline training and online deployment environments in terms of system configurations, channel environments, and operational adaptations[3].
This makes the direct application of purely offline learning methods infeasible for training data-starved low-latency PHY applications.
Alternatively, online learning and hybrid learning approaches have been viewed as pathways towards addressing the above mentioned challenges.
Toward this end, the reservoir computing (RC) paradigm[4]enables online real-time learning strategies owing to its low-complexity training methodology, making it ideal for complexity-constrained and latency-aware PHY operations such as MIMO-OFDM receive processing[5,6,7]and dynamic spectrum access[8,9], demonstrating superior performance compared to conventional model-based methods and other offline learning approaches[10,11].

Deep neural network (DNN)-based MIMO symbol detection methods have gained large traction recently, leading to significant progress.
Multi-layer perceptron (MLP)-based detection techniques have been introduced in works such asDetNet[12],MMNet[10],OAMPNet[13], andHyperMIMO[14], where each approach integrates trainable parameters from traditional iterative algorithms.
While these methods show promising performance, they often require large amounts of training data, making them difficult to implement in modern cellular networks such as 5G NR and 5G-Advanced, where the available training data in the form of OTA reference signals (RS) is extremely limited.
Moreover, they typically rely on perfect channel state information (CSI), which is challenging, if not impossible, to obtain in practice.
Given the lightweight training requirements of reservoir computing (RC)-based techniques, they offer a promising alternative.
Within the RC framework, echo state networks (ESNs) were first applied for symbol detection in MIMO-OFDM systems in[15]. Enhancements to the ESN architecture, such as the ability to process ‘windowed’ inputs and additional output skip and delay connections, were introduced in[5].
The new architecture is calledWESN, demonstrating significant performance gains over vanilla ESN.
Further advancements include the introduction of the deep RC structureRCNet[6], andRC-Struct[7], which leverages the time-frequency structure of OFDM waveforms.
Both approaches showed substantial improvements over traditional signal processing methods and other learning-based approaches.
A key advantage of such RC-based methods over other established NN-based MIMO detectors is that their training is fully online and can be done in a slot-basis with significantly lower computational complexity. This makes RC-based approaches more resilient to slot-based dynamic transmission mode adaptation in modern cellular networks since the detector is retrained in real-time within each new slot using the limited OTA RSs.
Despite the empirical evidence, a systematic and theoretical analysis of the general effectiveness of RC-based methods and the explainability of their superior performance in PHY receive processing have not been fully developed yet.

In parallel with the rise of deep learning methods, there has been a steady growth in the need for explainability of such methods, leading to the rise of the field of explainable artificial intelligence (xAI) and explainable machine learning (xML)[16].
One of the first works that explore the theoretical underpinnings of the success of RC in time-series problems is[17], which introduces a functional space approximation framework.
Another noteworthy recent work[18]shows that an ESN with linear activation is equivalent to performing vector autoregression (VAR).
The ability of RC to predict complex nonlinear dynamical systems, including the Lorenz and Rössler systems, was examined in[19], whereas[20]explored the tuning and optimization of the fading memory length in RC systems.
In our earlier work[21], we established an upper bound on the Empirical Rademacher Complexity for single-reservoir ESNs, demonstrating that ESNs offer tighter generalization compared to traditional RNNs. Additionally, we highlighted the practical value of the derived bound in optimizing an ESN-based symbol detector for MIMO-OFDM systems.
Other works grounded in statistical learning theory, such as[22], also derive bounds for the generalization error of RC by utilizing modified versions of Rademacher-type complexity measures.
In our prior work[23], we provided a signal processing analysis of the ESN and offered a comprehensive analytical characterization of the optimal untrained recurrent weight for a single-neuron ESN under the task of channel equalization.
Although existing literature offers some valuable insights, a clear signal processing perspective combined with comprehensive analytical characterizations for RC-based techniques has yet to be fully developed.
Our current work aims to bridge this gap in the context of RC-based symbol detection for MIMO-OFDM systems, building on and extending our previous works in this domain.
The insights gained from this work can be potentially utilized to enhance the explainability of general NN-based approaches for various engineering applications.

Our contributions in this work are summarized below:

Building on our previous work[1], we introduce a new “time-domain” approach for configuring the untrained weights of the ESN for strictly minimum-phase channels, extending the frequency-domain approach of untrained weight configuration introduced in[1].

We provide a theoretical explanation of the linkage between symbol detection over a non-minimum-phase wireless channel and the WESN structure introduced in our earlier work[5]. This theoretically justifies the previously introduced WESN architecture and introduces the explainability of the architecture which is at the heart of RC-based detectors adopted in our subsequent works.

We extend the frequency and time-domain approaches for untrained weight configuration of the WESN for both OFDM and MIMO-OFDM symbol detection utilizing the parametric MIMO channel representation.

We validate the OFDM and MIMO-OFDM WESN weight configuration procedures through extensive simulations under 5G/5G-Advanced scenarios.

Notation:Zero-based indexing is used in this paper.denotes the linear convolution operation.denotes a column vector.anddenote matrices.denotes the submatrix containing columnsthroughof.denotes horizontal concatenation anddenotes vertical concatenation respectively of scalars, vectors or matrices.denotes the complex conjugate.denotes theall-zeros matrix.denotes theidentity matrix.denotes the matrix conjugate transpose.denotes the Moore-Penrose matrix pseudoinverse.denotes the matrix trace.produces a lower triangular Toeplitz matrix withas its first column.denotes a diagonal matrix formed by scalar arguments;denotes a block diagonal matrix formed by matrix/vector arguments.
We use the abbreviations ‘MP’ for ‘minimum-phase’ and ‘NMP’ for ‘non-minimum-phase’.

The rest of the paper is organized as follows.
Sec.IIprovides preliminaries on RC and introduces the time-domain weight configuration formulation for OFDM symbol detection.
Sec.IIIprovides a systematic way of configuring the RNN weights of RC using the domain knowledge.
Sec.IVsets up the theoretical foundation to analyze NMP channels and its connection to the WESN, providing a theoretical justification for its architecture.
Sec.Vextends the introduced analysis and approach to MIMO-OFDM symbol detection utilizing the parametric MIMO channel representation. Sec.VIvalidates the introduced theoretical analysis and weight configuration strategies via extensive simulations. Finally, Sec.VIIconcludes the paper.

SECTION: IIRC-based OFDM Symbol Detection

SECTION: II-AThe Vanilla Echo State Network

ESN, a popular architecture within the RC paradigm, comprises a “reservoir”/RNN containingrandomly inter-connected neurons, along with an input weights layer and an output (readout) weights layer with the following parameters:

: Input to ESN at time index.

: Reservoir state vector at time index.

: Input weights matrix.

: Reservoir weights matrix.

: Output weights matrix.

: Output of ESN at time index.

Here,/is the input/output dimension of the ESN representing the number of features in the input/output.
With a nonlinear activation function(e.g., ReLU, tanh, etc.), the state update and the output equations can be expressed as:

A vanilla ESN with a single reservoir is shown in Fig.1.

For analytical tractability, we consider the “linear” ESN withbeing the identity function.
This allows analyzing the effectiveness of RC architectures in a tractable manner, similar to[18].
In the RC convention, onlyis trained using a least-square approach, whereasandare randomly generated from a particular pre-determined distribution (e.g., uniform distribution) and then kept fixed throughout the training and the test (inference) stages.
Specifically for the vanilla ESN,is found as, where,is the concatenated reservoir states matrix for input and output sequences of lengthandis the training label.
Our hypothesis is that the impact of nonlinear activation in the reservoir and the configuration ofandare either orthogonal or at least separable, as evidenced empirically in our recent works[23,1].

SECTION: II-BSignal Processing Preliminaries for the Vanilla ESN

Based on our previous work[23], we know that the vanilla ESN with a single recurrent neuron and linear activation is modeled as a first-order (single-pole) infinite impulse response (IIR) filter.
The block diagram for this structure is shown in Fig.2.

The system response (transfer functions) of this filter is given by.
In general, the ESN reservoir withrecurrent neurons can be modeled as an IIR filter whose transfer function is written as, where.
For a given realization of a wireless channel with system response, the objective of the ESN-based equalizer is to learn the inverse mappingfrom the available training data while minimizing the residual error, so that.
In the OFDM context, the ESN applied as a time-domain equalizer aims to recover the transmitted time-domain OFDM symbol directly using embedded training data (e.g., RS), thus completely bypassing traditional channel estimation.
For a strictly MP channel, the direct inverse given byis stable and the ESN-based equalizer can attempt to learn either the corresponding frequency-domain inverseor the time-domain equalizer impulse responsesuch that, whereis the time-domain impulse response of the channel with the system function.
We extend this analysis to NMP and mixed-phase channels in Sec.IV, where the role of feedforward taps of a finite impulse response (FIR) filter is highlighted.

SECTION: II-CGeometric Interpretation of the Vanilla ESN

Our previous works[1,24]have introduced the “geometric interpretation” of the vanilla ESN.
In this framework, we consider an ESN with a reservoir consisting ofparallel recurrent neurons that arenotconnected to each other.
Given that the transfer function of theneuron is, the constituent neurons in the reservoir span a subspacesuch that.
For a target function, the approximation ofgenerated by the ESN is a linear combination of the basis functions, in general with an approximation error of.
Considering-norm as the loss function used to train the combining weights represented by the output weights matrix, the ESN’s approximation tobecomes an orthogonal projection ofonto, which can be denoted as.
This orthogonal projection achieves an approximation error of, the minimum possible-loss.
In addition, the choice of the-norm as the loss function transforms the training ofinto a simple least-square problem.
Since this training methodology does not require backpropagation-based training, it greatly reduces the training computational complexity of the ESN, thereby admitting real-time PHY operations such as symbol detection.
Here, the target functioncan be completely arbitrary and its knowledge is obtained only through the training samples.Therefore, the geometric interpretation of the ESN is applicable to a wide range of learning problems in engineering applications.In the context of symbol detection,can be the frequency-domain response of the channel inverse or the impulse response of the time-domain equalizer.
The geometric interpretation of the vanilla ESN described above is visualized in Fig.3.

SECTION: II-DFrequency-Domain View of RC-based Equalization

In our previous work[1], we considered the case of configuring the untrained weights of the vanilla ESN for the symbol detection task, given the statistics of the underlying wireless channel.
To this end, a ‘frequency-domain’ approach was introduced.
The overall OFDM symbol detection task was divided into ESN-based time-domain equalization of the received signal, followed by classification in the frequency domain.
Furthermore, we had considered strictly MP channels, i.e., if the channel impulse response in the transform domain (-domain) is denoted by, then the roots oflie strictly inside the unit circle in the complex plane.
To summarize, a systematic procedure was introduced to obtain the configured weightsandof the vanilla ESN.
Specifically, we described a method that uses the empirically collected channel statistics in the frequency-domain followed by principal component analysis (PCA), and a rational polynomial (RP) approximation of the basis vectors to obtain the configured weights.
A complete description of this procedure together with performance evaluation in strictly MP channels was provided in[1].
A summary of the frequency-domain configuration procedure is illustrated in Fig.4.
In this work, we build on the frequency-domain approach and introduce a time-domain perspective as well as a systematic procedure for configuring the untrained weights of the vanilla ESN which also extends to the WESN introduced in[5].

SECTION: II-ETime-Domain View of RC-based Equalization

Consider a discrete-time representation of a wireless channel with an impulse response given by.
The corresponding system response is given by.
Consider an input sequencetransmitted through the channel with the above impulse response.
The received sequence obtained via linear convolution is given by,
whereis the additive white Gaussian noise (AWGN) with variance.
This operation is equivalently represented as,
whereis a lower triangular Toeplitz convolution matrix given by.
The objective of a learning-based equalizer is to find an inverse mappingsuch thatis minimized, whereandis also a lower triangular Toeplitz matrix and can be written as, wheredenotes the impulse response of the ideal zero-forcing (ZF) equalizer for the channel.
The above formulation serves as the foundation for the time-domain weight configuration procedure described next in Sec.II-Fand Sec.II-G.

SECTION: II-FOptimum Orthogonal Basis Set in the Time-Domain

Given a time-domain impulse responsewith the corresponding convolution matrixfor a particular channel realization, the Toeplitz form of the corresponding ZF equalizer is.
Thus, for thestrictly MP channel realization denoted as, the impulse response of its equalizer is, where.
In order to find the optimum basis set for the subspace spanned by, we employ PCA, similar to the approach adopted in[1].
Forrealizations of such equalizer impulse responses, the empirical covariance matrix can be computed as, whose eigen-decomposition is obtained as, where the columns ofcontain the eigenvectors andcontains the corresponding eigenvalues.
Finally, the set ofoptimum basis vectors for the subspace spanned bycan be collected in the columns ofas simply the set of the firstcolumns of, i.e.,.
It can be seen that except the nature of the inverse function (frequency response versus impulse response), the procedure to find the optimum basis matrixis identical in the time-domain method compared to the frequency-domain method introduced in[1].

Minimum-Phase Basis:Despite the similarity between the frequency-domain and the time-domain procedures of finding the optimum basis matrix, there is an important distinction: The basis functions in the time-domain method represent impulse responses, as opposed to general functions in the frequency-domain method in[1].
Thus,computed via the time-domain method can be written as,
wheredenotes thecolumn ofand represents a time-domain impulse response.
Since it is not guaranteed that a specificrepresents a strictly MP impulse response, we adopt a strategy to transform them into strictly MP impulse responses by adjusting the first tap[25].
This is an important step towards constructing stable basis vectors, which is a requirement in the construction of a stable ESN reservoir representing the effective equalizer IIR filter.
Here, we define a ‘compensation matrix’as, whereis the-th column of,
such that the fixed valuesare chosen to ensure[25,26]

The above choice forensures that the original basis matrixcan be decomposed as, where, with.
This strategy decomposes potentially mixed-phase impulse responses inas a sum of strictly MP impulse responses inand a collection of-th order feedforward terms (i.e., ‘skip’ connections corresponding to theterm) in.

SECTION: II-GFrom Optimum Basis Set to Configured RNN Weights

Having obtained the modified strictly MP basis set in, the next step is to obtain the corresponding weightsandto configure the reservoir/RNN of the ESN.
Denoteas thecolumn ofandas its Toeplitz form.
Then, defining,, i.e., the first column ofcontains the coefficients of the IIR filter whose impulse response is.
In a similar vein, we define.

Note that whilereturns the filter coefficients for an-tap IIR filter, we would ideally like to restrict the order of this IIR filter to onlycoefficients such that.
This is to ensure that the number of configured weights of the ESN do not scale prohibitively with.
Thus,represents the cut-off point such that the effective ‘reduced-order’ IIR filter is now represented by the truncated filter coefficients.
The impulse response of the reduced-order filter denoted byapproximates the impulse responseof the original-tap filter,
where a reasonable choice ofensures that the approximation erroris small.
The transfer function of this reduced order IIR filter corresponding to theeigenvector is given by

Similarly, the transfer function of the skip connection corresponding to theeigenvector can be denoted as, where
these skip connection weights can be collapsed into a single skip connection in the final ESN implementation.
This results ininstead ofwith Eq. (2) modified accordingly.

Since the configured reservoir weights of the ESN correspond to parallel non-interconnected neurons,
Eq. (4) can be decomposed into a sum of first-order IIR transfer functions as.
Thus, the-th eigenvector is decomposed intofirst-order poleswith corresponding weights.
Foreigenvectors, we get a total ofneurons in the reservoir withandforand.
Thus, the above development completely describes the time-domain approach to obtain the configured weights of the ESN starting with knowledge of the channel statistics.
The time-domain configuration procedure is summarized in the flowchart of Fig.5.

Block Form of the ESN:The configured reservoir/RNN weights of the ESN either via the time-domain method or the frequency-domain now admits a clean “block form” interpretation of the ESN with a reservoir consisting ofparallel recurrent neurons, where.
Letdenote the set of configured RNN weights found via either method, then a Vandermonde matrixcan be defined aswhere.
The-th column ofrepresents the time-domain impulse response of the-th first-order IIR filter with pole.
Thus,denotes the time-domain dynamics of the constructed reservoir in its atomic form and allows for easier subsequent development.
As an example, assuming linear activation and, ifdenotes the received time-domain sequence with corresponding Toeplitz formthen the reservoir states matrixcan be compactly written in a single step as.
Compared to the iterative construction ofshown in Eq. (1), the single-step construction makes the analysis more tractable.
This atomic form of the ESN and its associated notation will be adopted in Sec.III.

SECTION: IIIConfiguring Reservoir/RNN Weights for RC-based OFDM Detector

SECTION: III-ARC Configuration Problem Formulation - Atomic Form

In this section, we focus on the reservoir/RNN weight configuration problem for RC-based OFDM symbol detector.
Under the symbol detection task, we distinguish between the ‘configuring’ stage and the ‘training’ stage of the ESN.
Specifically, the configuration stage involves computing the untrained input and reservoir/RNN weights of the ESN based on domain knowledge.
Thus, the configuration stage only uses domain knowledge (channel statistics in our case) to directly setand, while the training stage involves learningusing only the OTA RSs.
In the following analysis, we assume the ESN to have unit input weights.
In Sec.VI, we will show empirically that the insight gained through this analysis still holds even when the ESN employs nonlinear activation.

We proceed to formulate the reservoir/RNN configuration problem as follows.
Denote the transmitted time-domain sequence aswith its corresponding Toeplitz form denoted by.
Letdenote the received time-domain sequence over the channel with impulse response, so that, whereand.
Here,also contains the effect of path loss and large-scale shadowing.
In practical receivers, automatic gain control (AGC) is employed to ensure that the average received signal power is maintained at a constant level at the input of the analog-to-digital converter (ADC), thereby effectively compensating for large-scale fading effects such as path loss and shadowing.
This is equivalent to performing the operation, where the approximation is valid for largeand for[27].
Thus, the effective input-output relationship is, whereis the ‘normalized’ Toeplitz channel matrix, resulting inwhen a per-realization normalizationis enforced via the AGC.
Therefore, in the following development, we assume that the channel has been normalized as per above and that the weight configuration procedure utilizes the small-scale fading statistics obtained from such normalized channel realizations.

Ignoring additive noise for the subsequent analysis and denoting the time-domain impulse response of the equalizer as, the objective is to find the ‘configured’ poles or reservoir/RNN weightswith the corresponding impulse response matrixsuch that the objective functionis minimized,
whereis the equalized time-domain sequence.
Without additive noise, the equalized sequence is given by.
The corresponding optimization problem becomes

Using the impulse response representation admitted by, we have. Substituting this in Eq. (5) and solving forgives the least-square solution as.
Thus, the impulse responseof the equalizer is given by

Substituting Eq. (6) in Eq. (5) and using, we reach the problem formulation, defined asP, of the reservoir/RNN weight configuration.
It can be expressed as

ProblemPin Eq. (7) targets to characterize the reservoir/RNN weights for the set of parallel (non-interconnected) recurrent neurons,, of the ESN.

SECTION: III-BPCA-based Weight Configuration:

While ProblemPattempts to directly identify the parallel recurrent neuron weights, it is generally more tractable to solve for a basis matrixgiven the domain knowledge (e.g., the statistics) of the target function, which can be decomposed into parallel recurrent neuron weights.
Recall thatrepresents the optimum basis matrix for the subspace spanned by the target function under consideration, e.g., the impulse responseof the time-domain equalizer, as discussed in Sec.II-F.
Furthermore, depending on the nature of the target function and the exact problem formulation,can admit multiple solutions.
Therefore, instead of solving ProblemPdirectly, we adopt the strategy of solving the optimization problem in terms ofand decomposing its solution, following the procedures outlined in Sec.II-Fand Sec.II-Gto obtain.

To establish the linkage between ProblemPand the optimization problem in terms of, consider the transmitted vectorto be the unit sample function, i.e.,, leading to.
Substituting it in the argument of the expectation in ProblemP, we have

wherefollows from the Cauchy-Schwarz inequality and the fact thatfor this analysis.
Recall from Sec.II-Fand Sec.II-Gthat the basis matrixcan be decomposed into first-order IIR filter poles, whose impulse responses form the Vandermonde matrix.
Thus, any orthogonal basis matrixcan be expressed as, whererepresents a mixing matrix that constructs every column ofas a linear combination of the impulse responses of the decomposed poles in.
Then, it follows that, wheredenotes the linear subspace spanned by the columns ofanddenotes the linear subspace spanned by the columns of.
Therefore, the original ProblemPgiven by Eq. (7) in terms ofis first transformed into Eq. (9), and can be further related to a problem formulation in terms ofas follows:

wherefollows fromandfollows from the Cauchy-Schwarz inequality and the fact thatfor any orthogonal basis matrix.
The transformed problem in terms of, defined as ProblemP1, can be expressed as

with its corresponding solution denoted as.
Furthermore, it follows that for “normalized” channel realizations adhering toas argued in Sec.III-A,
minimizing overin ProblemP1is approximately equivalent to minimizing over.
Therefore, ProblemP1can be transformed to the equivalent ProblemP2defined as

with its corresponding solution denoted as.
Recognizing that, ProblemP2can be equivalently written as

Accordingly, the original ProblemPin terms ofhas been transformed to the formulation of ProblemP2in terms of.
We can further link ProblemP2to the standard dimensionality reduction formulation by setting the target function as.
In this way, the problem of finding the optimum basis matrix for the linear subspace spanned by, defined as ProblemP*, can be expressed as

Note that the solution of ProblemP*can be obtained through PCA denoted as.
It is orthogonal satisfying.
Through this process we have achieved the objective of linking ProblemPin terms ofto ProblemP*in terms ofvia the chainPP1P2P*.
In this way, we will be able to solve ProblemP*which has a well-established solutiongiven by PCA, and utilize the solution to configure the reservoir/RNN weights of the ESN following the procedure outlined in Sec.II-Fand Sec.II-G.

Furthermore, we are interested in analytically characterizing the approximation error of the ESN achieved by utilizingin the objective function of ProblemP2.
To this end, we first introduce the following lemma.

The minimum approximation error achieved byin the objective of ProblemP*(13) is

whereis the-th eigenvalue of.

Proof.
See AppendixA.

Accordingly, the approximation error achieved by utilizingto solve ProblemP2can be characterized in Theorem1.

The approximation errorachieved byin the objective of ProblemP2in Eq. (12) is

whereanddenotes the shift matrix.

Proof.
See AppendixB.

From the problem chainPP1P2P*we know that the approximation error characterized in Theorem1is an upper-bound of the minimum achievable approximation error of ProblemP.
Therefore, Theorem1provides theoretical performance guarantees on the approximation error of utilizing the introduced reservoir/RNN weight configuration procedure for the ESN.
Meanwhile, Fig.6validates Theorem1through numerical evaluation for sequence lengthwithstrictly MP realizations of the 3GPP clustered delay
line-D (CDL-D) channel.
Denotingas the Toeplitz form of the equalizer impulse response for the-th channel realization, we plotand compare it against, whereis the empirical covariance matrix.
We can observe from Fig.6that the normalized numerically evaluated value based on Eq. (11) matches well with the normalized theoretical expression characterized in Theorem1across, the number of most significant eigenvectors used in PCA.
Furthermore, both normalized values monotonically decrease withwhile satisfyingfor, as expected.
Sinceand the reduced filter orderdetermine the number of reservoir/RNN neurons in both frequency/time-domain weight configuration methods, Theorem1shows a clear trade-off between the achieved approximation error and the number of neurons in the reservoir/RNN, thus providing operational guidance on setting the size of reservoir/RNN for RC-based approaches.

SECTION: IVModel Explainability for WESN

SECTION: IV-AApproximate Stable Inverse for Mixed-phase Systems

A general-tap mixed-phase channel with transfer functioncomprises both strictly MP and strictly NMP factors, i.e., it can be factorized as, wheredenotes the strictly MP factor ofanddenotes its strictly NMP factor, implying that the roots oflie strictly inside the unit circle and those oflie strictly outside the unit circle.
Then, astableinverse for this mixed-phase channel is approximated in the transform domain as[28]:,
where the feedforward termsrepresent an FIR filter component of order.
This results in, implying that the equalized output incurs a delay ofsamples.
To summarize, a strictly MP channel (FIR filter) can be perfectly equalized by an all-pole IIR filter if the channel is perfectly known.
Such an all-pole IIR filter can be decomposed as a sum of first-order IIR filters.
Therefore, perfect knowledge of the channel FIR filter results in a perfect equalizer that suffices to only use the IIR filter forms.
However, the channel impulse response (CIR) cannot be perfectly known in practice.
In such a scenario, the equalizer performance can be greatly improved by including feedforward taps whose weights are trained using the available training data[28].
This is also confirmed from the fact that the transfer function of an all-pole IIR filter can be approximated as an expansion of feedforward terms of the formvia long division[28,26].
Furthermore, for strictly NMP or mixed-phase channels, astableequalizer must include both an IIR filter component as well as an FIR filter component for good equalization performance with modest filter orders[28], even with perfect channel knowledge.

SECTION: IV-BExplainability and Weight Configuration for WESN

As noted earlier, the stable inverse filter that equalizes a mixed-phase channel generally consists of both an IIR filter component (all-pole form) as well as an FIR filter component (all-zero form)[28].
This foundational fact can be immediately tied to the introduced WESN architecture[5], where it was observed that the WESN significantly outperforms the vanilla ESN in symbol detection performance using randomly generated weightsand.
For explainability, the WESN architecture can be divided into two major components: i) Input windowing, and ii) Output skip and delayed connections.
Input windowing, which was shown to improve the short-term memory of the WESN[5], also has an implicit FIR filtering effect via the moving input window.
On the other hand, the output skip and delayed connections have an explicit FIR filtering effect, and thus have greater impacts in improving equalization performance and subsequent symbol detection metrics such as bit error rate (BER).
Therefore, the symbol detection performance improvement of the WESN over the vanilla ESN is primarily due to output skip and delayed connections.
For the WESN architecture with the output skip and delayed connections, the output weights matrix changes as, wheredenotes the ‘window’ length.
Consequently, the output equation for the WESN changes according to.
Note that the elements incorresponding to thereservoir/RNN neurons linearly combine the reservoir’s IIR filter output, while the elements incorresponding tolinearly combine the current and delayed versions of the input directly, thereby applying a weighted tap delay line given byto the input and performing anexplicitFIR filtering operation.
Finally, the WESN architecture of[5]also implements ‘delay learning’ using the training data to iteratively find the optimum delaythat minimizes, thus aligning well with the delay incurred in the stable inverse of a mixed-phase wireless channel[28], for which.
Thus, both attributes of the WESN[5]architecture namely, output skip and delayed connections and delay learning, closely match signal processing fundamentals.
In Sec.VI, we will consider the WESN architecture with the output skip and delay connections instead of the vanilla ESN discussed in Sec.II-A.

The reservoir/RNN weight configuration procedure of WESN for a general mixed-phase channel can be described as the following.
Recall that a general mixed-phase channel can be factorized as.
Since the strictly MP factorcan be equalized by an all-pole IIR filterand due to this direct inverse equalizer being stable, the untrained weightsandcan be configured using the statistics ofalone, using either the frequency-domain method of[1]or the time-domain method introduced in Sec.II-Fand Sec.II-G.
The output weights corresponding to the additional skip and delayed feedforward taps in the WESN can be trained using the training data (e.g., OTA RSs) in each slot to equalize the strictly NMP factor.
In this manner, the equalization capability of the WESN architecture can be attributed to each of its constituent components.
This clearly explains why, for a general mixed-phase wireless channels (e.g., non-line-of-sight channels), WESN-based approaches significantly outperforms vanilla ESN-based approaches.
This clearly attributable explainability as well as the ability to configure (rather than train) certain components of an NN-based architecture using domain knowledge is especially important for NextG PHY receive processing.

SECTION: VConfiguring Weights for RC-based MIMO-OFDM Symbol Detectors

In this section, we extend the reservoir/RNN weight configuration analysis to MIMO-OFDM systems.
Consider a MIMO system withtransmit antennas andreceive antennas.
For a frequency-selective MIMO channel withdelay taps, the MIMO coefficient matrix for the-th delay tap is denoted as.
The corresponding transfer function for the MIMO channel is given by.
Thus, for the MIMO channel which is represented as a MIMO FIR filter, the WESN architecture provides a systematic way of incorporating both a MIMO IIR component as well as a MIMO FIR component, which are both instrumental in its equalization process of the MIMO channel[26]to achieve good MIMO-OFDM symbol detection performance.
To develop a weight configuration procedure for the WESN in the MIMO setting, we start with the case study of a simplistic MIMO channel in Sec.V-Ato lay the foundation of the overall configuration procedure.
General MIMO channels are considered in Sec.V-Busing the parametric channel representation.

SECTION: V-AFactorizable MIMO Channel: A Simple Case Study

The simplistic MIMO channel considered in this case study can be written as,
whereis a single input single output (SISO) channel impulse response and hence its description as being ‘factorizable’.
We assume thatis strictly MP in the following development.
The same analysis also holds by replacingwith its strictly MP factorifis mixed-phase.
Continuing with the strictly MP assumption, the transfer function of the ideal inverse of the channel is given by.
To better elucidate the details of the weight configuration procedure, we consider the example of aMIMO channel, i.e.,.
Letbe defined as.
Assuming thatis invertible, define its inverse as.
Then, for the transmitted symbol vector, the received symbol vector, ignoring AWGN, is given by.

The equalizer architecture that perfectly equalizesis depicted in Fig.7a.
Here, we make the following important observations.
First, the weights into invert the effect ofare in the front of the processing chain.
Second, the two streams are completely decoupled after acted upon by.
Finally, due to the factorizable nature of the MIMO channel considered, the SISO equalizers for each stream are the same, i.e.,.
Next, due to linearity of the operations involved and since the equalizer in each path is the same, the equalizer structure can be modified as shown in Fig.7b.
The main motivation to perform this transformation is to move the channel-specific equalizer weights inclosest to the output, thereby aligning with the architecture of the vanilla ESN and the WESN where the output weights are trained with online training data (e.g., OTA RSs).

With this transformed architecture of theMIMO equalizer, each SISO equalizercan be implemented as a ‘SISO ESN’.
The untrained weightsandof each SISO ESN can be configured using the empirical statistics ofvia the frequency-domain or time-domain methods.
Denoting the respective weights for theSISO WESN withreservoir/RNN neurons as,,and the state vector as, the combined state update equation for the two SISO ESNs in parallel can be written as.
The associated output equation can then be written as.
Thus, the ‘effective’ output matrixbecomes.
Since the two SISO ESNs equalize the same channelwith a single unique PDP and thereby single unique channel statistics, the configured weights obeyand.
The two SISO ESNs withreservoir/RNN neurons each can be collapsed into a single MIMO ESN withreservoir/RNN neurons with its configured weights given byand.
These steps are illustrated in Fig.8aand Fig.8b.
Finally, input windowing and output skip and delayed connections with window lengthare added to obtain the configured WESN for the MIMO system.

SECTION: V-BSymbol Detection for General MIMO-OFDM

In this section, we consider general MIMO systems based on the parametric channel representation.
Specifically, we consider the point-to-point MIMO communication scenario with uniform linear arrays (ULAs) deployed at both the transmitter and the receiver.
For a ULA withantenna elements, its array steering vector is given by,
whereis the spacing between antenna elements,is the carrier wavelength anddenotes the azimuth angle of arrival (AoA) or angle of departure (AoD), measured relative to the axis of the ULA.
For a frequency-selective channel withdelay taps, the MIMO coefficient matrix for thetap under the parametric MIMO channel representation can be written as,
whereandare the array steering vectors for the receive and transmit ULAs.
Here,denotes the number of propagation paths through which signals corresponding to thedelay tap travel from the transmitter antenna array to the receiver antenna array.anddenote the AoA and AoD respectively for thepath.denotes the complex channel gain for thepath that falls onto thedelay tap.
The MIMO channel transfer function can be written as,
where.
In this work, we assume, so thatis full-rank with probability.
This condition is generally satisfied in the FR1 band (sub-6 GHz), whereas in the FR2 (mmWave) and FR3 bands, we may have, especially with massive MIMO systems.

For subsequent analysis, we consider the simplification thatfor.
This adheres to the modeling of MIMO channels in 3GPP standards, e.g., Spatial Channel Model (SCM)[29], for whichand.
Using the shorthand notation,and,can be expanded as[30]

Defining,andto be antransfer function matrix,can be compactly written as[30].
This compact representation is useful to develop the weight configuration strategy for the WESN.

Consider the scenario.
The transfer function of the equalizer of the MIMO channel can be expressed as.
Similar to the analysis of Sec.V-A, letand also let.
First, we consider the most general case where thepaths represent twodistinctpower delay profiles (PDPs) and thus, two distinct SISO channel statistics induced byand.
The equalizer structure represented byforis depicted in Fig.9.
Since the motivation is to move all the trainable weights to the output, the weights matrix corresponding tocan be moved to the right of the parallel branches represented by the SISO ESN equalizersand.
However, unlike the case in Sec.V-A, there is a repetition due to the movement ofto the right, whenandhave distinct PDPs with distinct channel statistics.
This results in the transfer functions of each of thedistinct SISO ESN equalizers being repeatedtimes, whileis absorbed into the effective output weights along with.
This sequence of steps is depicted visually in Fig.10aand Fig.10b.
Similar to Sec.V-A, the MIMO ESN equalizer can be decomposed as two separate SISO ESNs.
The configured weightsandcan be written asand, wherefor theSISO ESN are configured using the statistics offor.
The addition of input windowing as well as output skip and delayed connections with window lengthwill result in the WESN weight configuration architecture for MIMO systems.
If the number of reservoir/RNN neurons in each SISO ESN isand each of thepaths obey distinct statistics, the number of reservoir/RNN neurons in the configured WESN scales asfor MIMO systems.
This architecture and scaling are primarily due to the statistically distinct PDPs.

In 3GPP/ITU MIMO channels such as the SCM[29], the combination of thepaths results in an average PDP that is tailored to a specific environment, e.g., suburban macro, urban micro, etc.
For example, Section 5.4 in[29]specifies MIMO channels through the PDP and the AoA/AoD-related information for various environments.
The environment-specific average PDP together with the AoAs/AoD-related information can be estimated[30]allowing us to empirically obtain the statistics for the underlying SISO channel to conduct reservoir/RNN weight configuration following the procedure outlined in Sec.V-A.
Accordingly, the architecture of the configured WESN for general MIMO systems can be simplified, resulting in.

SECTION: VIPerformance Evaluation

SECTION: VI-AExperimental Settings

The effectiveness of reservoir/RNN weight configuration procedures for WESN are verified through extensive simulations for both OFDM andMIMO-OFDM systems.
The number of subcarriers of the underlying OFDM system is chosen to beand the cyclic prefix (CP) length to be.
We consider the clustered delay line (CDL) channel model[31], specifically CDL-D and CDL-E, as well as the SCM[29]in our evaluations.
The user speed is set tokm/hr with carrier frequencyGHz, corresponding to band nin 5G NR.
In addition, the scattered (comb) RS pattern is adopted, as specified in 3GPP 5G New Radio (NR) standards[32,33].
The comb RS pattern adopted for theMIMO-OFDM system is shown in Fig.11, where the RS resource elements (REs) are indicated in yellow and the data REs are indicated in blue.
The white REs with cross markers indicate empty RS REs.
The baseline symbol detection approach considered for comparison is linear minimum mean square error (LMMSE)-based symbol detection using estimated channel state information (CSI) that is first computed at the RS RE locations and then interpolated to all RE locations via two-dimensional LMMSE interpolation (2D-LMMSE interpolation)[34].
Furthermore, we consider line-of-sight (LOS) channels in the evaluations, encompassing individual realizations that may be strictly MP or mixed-phase.
Consideration of non-line-of-sight (NLOS) channels, including those with a dominant strictly NMP factor, potentially requires configuring or fine-tuning the feedforward output weights of the WESN in addition to online OTA RS-based training, which will be considered in future work.
The WESN implementations employ the hyperbolic tangent (tanh) activation.
For the randomly generated WESN, the spectral radius is set toand the reservoir sparsity to.
Delay learning[5], which is theoretically justified in Sec.IV-B, is also implemented.

SECTION: VI-BOFDM Symbol Detection: Strictly MP Channel

In this section, we validate the effectiveness of the frequency/time-domain reservoir/RNN weight configuration procedures for WESN under strictly MP channels, where the CDL-D channel[31]is used for this evaluation.
The WESN configured using the frequency-domain method uses a total ofreservoir neurons withsignificant eigenvectors and denominator orderin the rational polynomial approximation, resulting in a total ofreservoir/RNN neurons.
Similarly, for the WESN configured using the time-domain method, we usesignificant eigenvectors and cut-off pointfor the reduced-order IIR filter, also resulting inreservoir/RNN recurrent neurons.
For the WESN with randomly generated weights as well as the configured WESNs, a window length ofis used, resulting infeedforward taps in the WESN, following the description in Sec.IV-B.
From Fig.12, we can see that for the strictly MP CDL-D channel, both the frequency/time-domain configuration methods provide near identical level of BER performance improvement compared to randomly generated input and reservoir/RNN weights, thus validating the time-domain configuration procedure.
Also, the WESN with randomly generated weights exhibits an error floor behavior in the high signal-to-noise ratio (SNR) regime, while weight configuration can effectively mitigate this issue.

SECTION: VI-COFDM Symbol Detection: Mixed-Phase Channel

This section validates the effectiveness of reservoir/RNN weight configuration procedures for WESN under mixed-phase channels.
Specifically, we utilize the CDL-D PDP in the 3GPP SCM[29], resulting in individual channel realizations that are mixed-phase.
A total ofreservoir/RNN neurons are employed corresponding toand(time-domain method) and(frequency-domain method) and a window length of.
The BER performance with configured weights using both procedures is shown in Fig.13.
We can see that for mixed-phase channels both frequency/time-domain configuration methods utilizing the strictly MP factor lead to similar performance improvement compared to randomly generated weights.
Furthermore, the performance improvement with configured weights is smaller compared to that for strictly MP channels shown in Sec.VI-B.
This points towards a potential requirement of configuration or fine-tuning of the feedforward weights in the WESN to further assist equalization of the underlying strictly NMP component of the mixed-phase channel.

SECTION: VI-DMIMO-OFDM Symbol Detection

We consider aMIMO system with ULA antenna geometry at both the transmitter and
the receiver under the 3GPP SCM[29].
We use the suburban macro scenario within the SCM channel model, where the distribution parameters for the AoAs and AoDs of the individual paths at each delay tap are set following Tables 5.1, 5.2 and 5.3 in[29].
In order to emphasize LOS scenarios, we consider the CDL-D and CDL-E LOS PDPs in this evaluation.
The symbol detection performance forMIMO under the CDL-D and CDL-E PDPs are shown in Fig.14and Fig.15respectively, where the frequency-domain method is used to configureandof each SISO ESN.
For each SISO ESN, we useeigenvectors and-rd order rational polynomial resulting inneurons.
The SISO ESN is replicatedtimes, resulting in a total ofreservoir/RNN recurrent neurons in the MIMO ESN.
A window length ofis used to reach the final WESN architecture.
Fig.14and Fig.15demonstrate that configured weights greatly aid in mitigating the error floor issue at high SNR that is characteristic of the WESN with randomly generated input and reservoir/RNN weights, especially in the MIMO setting.

SECTION: VIIConclusion

In this work, we present a principled understanding of the ESN, a popular architecture in the RC paradigm.
Building on prior work, a fundamental theoretical analysis of the vanilla ESN as well as the WESN architecture is developed grounded in signal processing ideas.
It provides valuable insights into the reasons behind their effectiveness in the symbol detection task for both OFDM and MIMO-OFDM systems.
Furthermore, systematic approaches are developed to establish a foundational linkage between available domain knowledge in the form of channel statistics and direct configuration of the untrained reservoir/RNN weights of the WESN.
The introduced weight configuration procedures are validated under both OFDM and MIMO-OFDM symbol detection tasks through extensive simulations, demonstrating significant performance improvement.
This paves the path for explainable AI/xAI in wireless applications, especially in real-time PHY processing.
We believe this is an important step towards systematically incorporating domain knowledge into the design of neural networks for engineering applications.

SECTION: Acknowledgment

This material is based upon work supported by the National Science Foundation under grants 2002908, 2003059, 2148212 and is supported in part by funds from federal agency and industry partners as specified in the Resilient & Intelligent NextG Systems (RINGS) program.
The authors would also like to thank Dr. Robert Calderbank and Ibraheem Alturki for insightful discussions.

SECTION: Appendix AProof of Lemma1

Letdenote the impulse response of the time-domain equalizer for the channel impulse response represented by.
Analyzing the objective of Eq. (13):

Denote bythe covariance matrix of, i.e.,.
Its eigen-decomposition is obtained as, where the eigenvectors are contained in the columns ofandcontains the corresponding eigenvalues.
Substituting forin Eq. (15),

Next, the first three terms inside the trace in Eq. (16) can be simplified as, whereis the truncated matrix containing only the firstmost significant eigenvalues.
Combining the simplified terms, we get, thus concluding the proof of Lemma1.

SECTION: Appendix BProof of Theorem1

Define the lower shift matrixas,
resulting in.
We use the notation.
Defining,
the objective ofP2(10) evaluated atis

Next, we closely examine the term:

whereholds due to the application of the trace and its cyclic shift property.
It follows that

Therefore, the final approximation error is given by

Note thatandare not strict principal submatrices of.
Therefore, exact expressions or upper bounds on their traces in terms of the eigenvalues ofare difficult to derive using the eigenvalue interlacing theorem.
This concludes the proof of Theorem1.

SECTION: References