SECTION: Methodology for Online Estimation of Rheological Parameters in Polymer Melts Using Deep Learning and Microfluidics

SECTION: ABSTRACT

Microfluidic devices are increasingly used in biological and chemical experiments due to their cost-effectiveness for rheological estimation in fluids. However, these devices often face challenges in terms of accuracy, size, and cost. This study presents a methodology, integrating deep learning, modeling and simulation to enhance the design of microfluidic systems, used to develop an innovative approach for viscosity measurement of polymer melts. We use synthetic data generated from the simulations to train a deep learning model, which then identifies rheological parameters of polymer melts from pressure drop and flow rate measurements in a microfluidic circuit, enabling online estimation of fluid properties. By improving the accuracy and flexibility of microfluidic rheological estimation, our methodology accelerates the design and testing of microfluidic devices, reducing reliance on physical prototypes, and offering significant contributions to the field.

SECTION: 1Introduction and related work

Rheology is the science that studies how materials flow and deform. Among these rheological properties, viscosity is of special interest as it defines how much the fluid will flow when a force is applied. Viscosity estimation is crucial across various applications, from industrial processes like mold injection and 3D printing to medical diagnostics involving bodily fluids\shortciteshaw:polyrheo,Meek2014,Zhao2023. The behavior of non-Newtonian fluids, such as polymer melts or gelled propellants, under different pressure gradient presents significant challenges due to the complex dynamics of their viscosities\shortcitedlrgel2016.

Traditional methods for measuring viscosity, such as rolling ball, rotational or capillary viscometers, while accurate, are often not suitable for inline measurement and real-time monitoring[Shaw (2011)]. These standardized methods such as those in[ASTM (2020)]typically require discrete liquid samples and are impractical for processes involving continuous or semi-continuous flow of changing fluid compositions. The objective of this study is to develop a methodology that integrates deep learning with microfluidic technology to enable online, real-time estimation of rheological parameters in polymer melts. This approach aims to overcome the limitations of traditional methods by providing a cost-effective, accurate, and flexible solution for continuous monitoring and adjustment of fluid properties.

Recent developments in microfluidic devices are becoming a promising alternative. These devices require minimal fluid volumes and can be directly integrated into larger systems, facilitating real-time rheological estimation[Del Giudice (2022)]. Various microfluidic designs have already been explored, ranging from devices measuring the deformation of flowing polymers\shortciteLee_2005,DelGiudice2020 to systems using embedded sensors to measure pressure changes after a particular flow-path\shortciteBie_2019.

Moreover, in recent years deep learning has been successfully used to model many complex processes in fluid dynamics\shortcitedlfluids2021 and in microfluidics\shortciteMcIntyre_2022, as well as in the intersection of rheology and microfluidics to perform parameters identification of non-Newtonian fluids\shortcitemlvisc2023,Jarujareet_2023. Nonetheless, estimating the viscosity’s parameters from just pressure and flow signals could be convenient for their integration in microfluidic circuits, since these magnitudes are commonly measured.\shortciteNleastsq2022 do so by combining least squares for the fittings. Their approach requires nevertheless of a particular stepped input signal, not being adequate for online estimation. The use of deep learning could help reducing the dependency of this restricted input sequences, allowing for estimating rheological properties, online, from pressure and flow rate signals.

One aspect that makes difficult the development of these systems is the fact that deep learning models requires of large training datasets. Simulating Newtonian and non-Newtonian fluids is often a computationally expensive and time-consuming task, which requires both expertise and resources because it is commonly done by means of Computational Fluid Dynamics (CFD,\shortciteNPGalindoRosales2010). For microfluidics, the simulations might be performed applying a finite-volume method\shortciteKeslerov_2010,ferziger2019cfd or the Lattice-Boltzmann method\shortcitekruger2017lattice. Higher levels of abstraction are possible, using the geometry of the systems and their symmetries to approximate the microfluidic system as two-dimensional\shortciteBoulais_2023 or one-dimensional\shortciteelecanalog2012 problems. This allows to trade off the accuracy and complexity of the simulations. In this regard,\shortciteNTakken_2024 have recently proposed a hybrid simulation framework in which high levels of abstraction are used to speed-up the simulations through analytic expressions (where the flow path is abstracted to 1D), using CFD only in cases where this expressions are not available (e.g. junctions of fluidic paths).

Our methodology employs these principles of microfluidics to reduce the complexity of simulating generalized non-Newtonian fluids behaviors approximating the system as one-dimensional. By modeling the microfluidic system as a network of hydraulic resistances and capacitances, we can emulate the flow characteristics of various fluids under different conditions with reduced computational overhead. This model generates synthetic data used to train a deep neural network, an architecture containing Recurrent Neural Networks (RNN), which allows to discover time dependencies on the input data. This deep learning model is trained to predict the fluid’s rheological parameters based on observed pressure changes and flow rates.

The main contributions of this work are: a methodology which can be applied to model, simulate and develop microfluidic systems flowing non-Newtonian fluids and integrated with deep learning, and an innovative approach to viscosity estimation for generalized Newtonian fluids, and more concretely, polymer melts, from commonly measured magnitudes such as pressure and flow signals. By providing a robust simulation framework, this work contributes to the broader field of fluid simulation and modeling, offering a practical tool for researchers and engineers working with complex fluid systems.

Examples of potential applications might range from the development of deep neural networks for the estimation of viscosity’s parameters (shown in this paper), to chemical process AI-based control in microfluidics, passing through cell-culture anomaly detection within complex fluids.

This paper is organized as follows. Section2describes the theoretical microfluidic background underpinning our methodology. Section3details our methodology, including the exposition of our microfluidic circuit design, of the physical model used for simulation, and of the architecture of the neural network model used to estimate parameters of the viscosity model. Section4presents the conducted experiments and the obtained results. Finally, Section5draws the conclusions and presents some future lines of research.

SECTION: 2BACKGROUND

This section introduces the required background on two areas supporting our work: generalized Newtonian fluid models, and microfluidics systems modeling.

The viscosity of a fluid relates its rate of displacement or shear rate, usually denoted, for an imposed shear stress. This shear stress depends of how the material reacts to an applied force under some conditions. For Newtonian fluids, the ratio between these two magnitudes is independent of the applied shear stress, while in non-Newtonian fluids this does not always hold. Many different models have been proposed, although the most commonly used is the power-law fluid model\shortciteshaw:polyrheo,

where,stands for the zero shear rate viscosity,for the aforementioned shear rate, andfor its power index. For, shear rate and viscosity are perfectly independent, which is the behavior of an ideal Newtonian fluid. This model is used by\shortciteNSrivastava2006 to semi-analytically approximate the solution to the flow of a non-Newtonian fluid through a hydraulic resistance of rectangular cross-section.

Analytic and semi-analytic expressions have been derived for the streamlined capillary geometries commonly used in microfluidics. These expressions are obtained by considering one-dimensional or two-dimensional approximations to the problem\shortcitemortensen2004. They are used to speed up the simulations of these systems, accelerating the design process, for example, by simulating the system as analogous electrical problems, i.e., 1D approximation of the microfluidic circuits\shortciteelecanalog2012.

In these analogous electrical problems, an equivalent Ohm’s law\shortcitetipler2004 is defined for Newtonian fluids under laminar flow. The equations of Hagen-Poiseuille[Anna (2013)]allows for solving microfluidic circuits in an analogous manner to electrical circuits. In particular, the flow rate,, through a hydraulic resistance can be estimated as

whereis thehydraulic resistancevalue, andis the pressure drop over it. Here, the subscriptofis used to denote that the flow is governed by viscous forces. If the circuit has only one branch with multiple hydraulic resistances interconnected in series, then the total resistance of the circuit can be estimated as. The total flow rate passing through the branch can be calculated using equation (2) over the total resistance.

Lastly, and continuing with the analogy, a hydrauliccircuit can be defined by adding a hydraulic capacitance,, to the circuit. Its transient response will be then governed by a time constant. The relation between volume,, and capacitanceis simply, wheredepends on the fluid, beingfor air.

SECTION: 3METHODOLOGY

Figure1shows the overall work-flow of the designed and implemented methodology, which is explained in this section. The aim of the methodology is to generate data for training a RNN model to estimate the rheological properties of a fluid.

First, a set of values of the viscosity model’s parameters is sampled from random uniform distributions within defined ranges. For this set, a random sequence of pressure signals is generated to be used as input to the microfluidic circuit simulator together with the sampled parameters, outputting signals of pressure drop along the resistances, as well as input and output flows to the capacitance. Simulations that do not contain significant information for the corresponding parameters are rejected, requiring the generation of a new random sequence of signals for the same set of parameters. This way, for each simulation, four output signals and one set of parameters of the viscosity model are collected.

Second, the generated dataset is used to perform a supervised training of the RNN model with the purpose of identifying the viscosity’s parameters corresponding to each fluid from the signals produced by the simulator. This way, the model is trained for a number of epochs using mini-batches where each mini-batch is composed of sixteen simulations. Each simulation is made up of the four signals (two pressure drop signals, and two flow-rate signals) associated to the set of viscosity model’s parameters that have been used to produce them. The RNN model receives these four signals, sample by sample, four values in parallel (one by input signal), outputting one prediction once the whole simulation has passed through.

Last, the simulator is again used to verify the operation of the trained artificial neural network. The input signals from the test dataset are used to test the prediction quality of the RNN model. For each simulation, the RNN will predict the corresponding set of parameters. These estimated parameters are then simulated and the output four signals of pressure drop and flow rate are compared to the ones produced with the correct set of parameters of viscosity. The difference is evaluated to verify that, for each simulation, if the predicted parameters are different, the output of the simulation is different as well. This indicator is used as guide for the discovery of the right setup to estimate the parameters of the viscosity model.

In the following subsections, the proposed microfluidic circuit design is described along with the corresponding physical model. The simulation process is then introduced, followed by the description of the proposed artificial neural network architecture. Lastly, the used verification process is detailed.

SECTION: 3.1Design and Modeling of the Microfluidic Circuit

Microfluidic systems development is pursued for many reasons (e.g. increased surface-volume ratio or low-waste applications,\citeNPtabeling2005introduction), however, the most interesting feature of microfluidics related to this work is the reduction of complexity of the system under laminar flow. According to Hagen-Poiseuille’s equations[Anna (2013)], the laminar flow of a Newtonian liquid passing through a capillary can also be analytically characterized for simple cross-sectional geometries. The expression depends of the geometry and dimensions of the capillary, the dynamic viscosity of the fluid,, and the applied pressure drop along the capillary[Tabeling (2005)]. In particular, for a microfluidic resistance of rectangular cross-section of width,, height,, and length,(when, and) becomes

wherestands for the contribution of all the purely geometrical terms to thehydraulic resistance (i.e.). The subscripts,, in termsandhave been omitted for simplicity in equation (3).

Figure2shows the equivalence between the designed microfluidic circuit and the corresponding ideal electrical circuit, which can be modeled by one resistance in series connected to another resistance with a capacitor in parallel, with. For Newtonian fluids, the rate at which the capacitance changes its internal pressure is given by a time constant,, so resolving by applying the Thevenin’s theorem:. In this model, the hydraulic resistance corresponding to the tubing which connects the elements (i.e., from the reservoir to the, and fromto the waste) and the connectors (hydraulic interfaces between elements) have been neglected since the characteristic dimensions of the cross-section of the capillary are usually around two orders of magnitude above, and the hydraulic resistance decreases with the power of three over these dimension.

In this hydrauliccircuit in which a Newtonian fluid flows, if the values ofand, are known, the viscosity can straightaway calculated asafter measuring the circuit time constant. The introduced capacitance is thus important because it allows to extract information of the fluid from the transient response.

As it can be observed in Figure2, an extra resistance (calledhereafter) is included before the capacitance in the hydraulic circuit, or before thein the electrical analogy. This input resistance has the purpose of limiting the maximum flow rate to the capacitance. Following with the electrical analogy, it will short-circuit for fast changes in the input signal, leading to high flow-rates that could move the regime out of laminar flow. The value of this new resistance, although arbitrary, is set to be equal to the resistance of thepart (calledhereafter) for simplicity. Estimates of their values can be calculated from commercially available microfluidic resistance chips with,, and, which leads to.

In polymer melts and other polymeric dissolutions, equation (3) holds while the polymer chains recovery time is smaller than the characteristic time of the flow, because the elastic forces do not have a significant influence over the dynamics of the fluid. The dimensionless Deborah number can be used to estimate when these elastic forces must be taken into account[Anna (2013)]and are computed according to

whereis the relaxation time of the fluid, andthe shear rate. Being the rightmost part of the equation the corresponding solution at the wall of thecapillary of rectangular cross-section.

For, the chains are elongated with the flow and the elasticity of the fluid plays a significant role on the overall observed behavior which cannot be neglected. In this case, semi-analytic equation (5) obtained by\shortciteNSrivastava2006 can be used to approximate the flow rate through the givenrectangular hydraulic resistance,

wherestands for the zero-shear-rate viscosity (which corresponds toin Newtonian regime) andfor the power-law index. The subscriptinis used to denote the flow under influence of elastic forces.

In order to produce a set of equations that allow smooth transitions between the Newtonian and non-Newtonian behavior, the set of expressions is complemented with a generalized logistic function that receives as input the value ofand produces as output the value of, which is used to weight equation (3) and equation (5) during the transition according to:

The flow rate,, through each resistance,and, might be different during the transient response, while the capacitance,, charges or discharges fluid. Lastly, the only state variable considered in our microfluidic simulator is the charging of the capacitance,. Modeled as a capacitance of the compressed air, the evolution of the volume can be calculated as the balance of fluid flow experienced by the capacitor:

whereis the flow going into the capacitance,, andis the flow going out of it. Each of these flows will be calculated according to equation (6).

The rate of change of volume from equation (7), integrated, can be related to the pressure by means of Boyle-Mariotte formula[Tipler and Mosca (2004)]. For the first hydraulic resistance, the expression will become:

whereis the maximum volume of air stored in the capacitance,is its initial internal pressure, andis the volume of air stored inside, calculated by integrating, and,are the pressures at the input and the output of the first hydraulic resistance,. Equivalently, the pressure drop alongis calculated as.

SECTION: 3.2Simulation

To generate the training and testing datasets for the RNN, simulations are run following the scheme presented in Figure3. The first block generates a set of random values for the parameters,and, from their corresponding uniform distributions within the ranges defined in Table1. These ranges has been selected according to the selected commercially-available hydraulic resistances to be able to observe Newtonian and non-Newtonian behaviors within experiments of 12.5 seconds. The timescale of the tool can be tuned by changing the time duration of the experiments, the values of the hydraulic resistances or the capacitance of the microfluidic circuit in order to study fluids of different degree of viscosity with this setup.

As Table1shows, shear-thinning (which happens when) and shear-thickening (when) are allowed behaviors for the fluid. Nevertheless the range ofremains close to 1.0, because the tubing and connections have been neglected in the current equivalent circuit. This is, high shear-thinning fluids, like xanthan solutions\shortciteMrokowska_2019 or gelled propellants with\shortciteCaldas_Pinto_2019, will be less accurately simulated under non-Newtonian regime the smaller their behavior exponent is, because higher viscosities will be observed at the tubing, increasing their resistance to flow. And, oppositely, shear-thickening fluids simulations will be more accurate the higheris.

After the random values of the parameters are generated, a second block generates random sequences of sines, steps and ramps. The reason behind the randomness of the input signals is to increase the variance in the dataset to avoid having to impose patterns in the input signals for estimating the parameters, minimizing the interference with the user’s work in a real setup.

Next, in order to generate datasets with valid information, a type of rejection sampling scheme is applied. The process starts using the sampled values of the parameters and of the reference inputs to run the simulations, and continues checking if the simulations output signal fulfill the conditions required by theconditions checkblock.

The simulation is performed such that, at each instant,,is imposed from the input pressure signal, then equation (8) is used to calculate the pressure drop over. This is used in equation (3) to calculate the Newtonian flow-rate,, and in equation (5), to calculate the non-Newtonian flow rate,, through., is then used as input to calculate. From this number, the parameteris obtained and used to weightandfor the finalcalculation. The process is repeated for, obtaining the corresponding. Finally, the variation rate of the volume at the capacitance is calculated as the difference betweenand.

The condition block checks if the output signal contains information of Newtonian and non-Newtonian behavior of the fluid. In particular, ifis the sequence of values ofthat establishes the regime of the flow at equation (6) at different instant, the condition block checks if

wheredenotes the size of a subset,andare thresholds to ensure predominant Newtonian and predominant non-Newtonian regimes for some corresponding percentages,and, of the total samples of the experiment,. The conditions are nevertheless checked for a maximum number of iterations to ensure that, if the conditions are too difficult to match for a given parameters set, the simulator will not remain blocked in an endless loop.

The input pressure signals are non-overlapping, randomly composed sequence of sine, ramp and step functions of different values generated according to a uniform distribution within the configured values. Each randomly generated pressure signal has a duration ofwith a resolution of, orpoints at 20Hz. This pressure signal, which corresponds within Figure2, remains constant while the dynamics of the rest of the system are calculated. Runge-Kutta\shortciterk1986 is used to integrate the state variable equation (7). The used implementation assumes accuracy of order fourth to control the error, while steps are taken using the order five formulation. The generated dataset is composed of 5500 experiments of 12.5s (250 samples) each one. Figure5shows some of the main output signals from an example simulation.

SECTION: 3.3Artificial Neural Network

The proposed architecture is composed of five layers, has four inputs (namely,,,) and three outputs (consisting of the estimated values of parameters,and).

The two first layers of the model constitute the recurrent part, where different implementations were tested. Namely unidirectional Long Short-Term Memory (LSTM,\citeNPlstm1997), unidirectional Gated Recurrent Unit (GRU,\shortciteNPgru2014) and bidirectional GRU (BGRU,\shortciteNPbgru2017). In unidirectional RNN, information can only flow from past instants to the last instant, whereas in bidirectional RNN the signals are analyzed in both (time) directions\shortcitebrnn1997. These BGRU layers were both implemented with twenty hidden units, Rectified Linear Units (RELU) as activation layers, leaky RELU for their recurrent activation, and a recurrent dropout of probability 10%.

After the two RNN layers, two fully connected (i.e. dense) layers are sequentially connected, separated by a dropout layer. The first input layer is implemented with twenty hidden units, followed by a leaky RELU activation layer. The dropout layer is set with probability 10%. The output fully connected layer is composed by three units, one unit for each estimated parameter, with linear activation. The final model version has a total of 11.5k tunable parameters. Its architecture can be observed in Figure4.

The inputs to the system are two signals of pressure drop and two signal of flow-rate. Each signal is individually normalized in range, with a length of 250 samples per signal, 1000 samples in total. This configuration allows for its operation in real-time by implementing an input sliding window with the previous setup. The model produces only one estimate of each parameter, i.e.,, and, after inserting the 250 samples of each signal. The outputs are also in rangeand must be denormalized. The model was trained from zero. Adam optimizer is used with learning rate, no weight-decay, for 25 epochs, and Mean Squared Error (MSE) is used as loss function.

SECTION: 3.4Verification

In order to verify the operation of the simulation, training, and estimation methodology, the following three steps procedure is performed: first, a K-fold cross validation method is applied to ensure the independence between the training and testing dataset. Thirty three percent of the generated dataset is used for the testing, and the remaining sixty seven percent is used for training. Thus, it is chosen, performing a complete rotation over the dataset after three iterations of the method. Since the generation of the parameters is uniformly performed within the defined range and the dataset is shuffled before the execution of the K-fold cross validation, the performance is expected to be similar for the three iterations. To evaluate it, an accuracy normal distribution curve is fitted of each model.

Afterwards, for each model, simulations are performed using the estimated parameters for each sample of the dataset. The Mean Square Error (MSE) between the curves simulated with the reference parameters and the curves simulated with the estimated parameters is calculated.

Finally, the Pearson correlation coefficients are calculated between the parameters estimation error and the simulated curves error.
Correlation coefficients close to the unit imply a high correlation between these two error evaluation. This potentially indicates that the mapping between the parameters and the simulated curves is injective, and thus, the experiments are properly set for the training of the RNN. Otherwise, a correlation coefficient for a particular estimated parameter closer to one half mean that the performed experiments might not be suitable for the RNN to discover the original values.

SECTION: 4EXPERIMENTS AND RESULTS

In this section we explain how we have used the proposed methodology to explore the optimization of the simulation setup towards the inference of complex parameters, such as the rheological properties of a fluid, from pressure and flow-rate signals that do not have a straightforward linkage.

In order to define the ranges over which the current setup could be useful, the proposed framework can be used to perform a heuristic analysis. For the given resistances, capacitance, and maximum input pressure (arbitrarily set to 600mbar or 60e3 Pa), the objective is to find out what are the ranges for the parameters of the viscosity model for which both Newtonian and non-Newtonian regimes can be observed. The most influential parameter in this regard is the relaxation time,, because it regulates the threshold flow-rate at which the fluid will behave in one or the other way. A higher zero-shear viscosity,, will decrease the observed flow-rate,, for a given applied pressure,, making it harder to reach the non-Newtonian regime. Figure5shows two example simulations with same random input signal. Non-Newtonian regime is only achieved in one of them. The resulting parameters’ ranges from this analysis are found in Table1.

As a first step, an exploration of different RNN-based model designs was performed aiming to reduce the possibilities of having a performance bottleneck at the model architecture. Three RNN implementations were tested: unidirectional LSTM, unidirectional GRU and BGRU. While the benchmark was equivalent for all of them, the unidirectional LSTM often turned unstable, showing more sensitivity to the training hyper-parameters. Unidirectional GRU and BGRU implementations were both stable, being BGRU chosen since it was observed to be faster converging towards the same results for both same and different hyper-parameters.

After that, an exploration of the simulation setup is performed. Among the different parameters that can be configured are the properties of the randomized generation of pressure input signals: ranges for maximum and minimum values, ranges for the random frequency, the duration of each sequence inside the 10s experiment, etc. Figure6shows the fitted error distributions for the estimation of each parameter of the viscosity model during the exploration process.
Each distribution set of three distributions corresponds to a different deep learning model. The error distribution is normalized to ease their comparison. Each of these models has been trained with a dataset generated with a different configuration. In the first dataset, corresponding to Figure6.a, the input pressure signal,, is a sequence made out of 8-10 sinusoidal signals. In the second set, Figure6.b,is a 8-10 segments sequence of steps, ramps, and sinusoidal signals. In the third one, Figure6.c, 3-4 segments of steps, ramps and signals are combined. The reduction of error can be observed, being the behavior exponent,, the easiest parameter for the models to learn to estimate.

The Pearson correlation coefficients are lastly calculated to be used as an indicator of sensitivity between the used input signals to the deep learning model and the parameters that it is asked to estimate. This is, if the chosen input signals to the model,, are good candidates to estimate the parameters,, simulating the inaccurate values of the parameters,, should produce wrong values of these input signals,. The error can be defined as. In Table2the correlation coefficients are showed for the model whose results are displayed at Figure6.c. The correlation shows that it is, indeed, the behavior index,, the parameter with a higher correlation over the simulated signals, potentially making it the easiest parameter of viscosity model to be estimated.

SECTION: 5CONCLUSIONS AND FUTURE WORK

In this study, we developed a one-dimensional model for a hydrauliccircuit to simulate generalized Newtonian fluids. This model was crucial for generating synthetic data to train deep learning models. We used bidirectional GRUs in our methodology, which effectively predicted rheological parameters from the dynamic responses of microfluidic systems. Our findings show that the behavior indexof the fluid correlates strongly with the output signals, making it the most reliably estimated parameter.

For future work, we plan to improve the simulation setup by automating the exploration process to optimize input signal configurations and model parameters systematically. We also aim to build a physical prototype to validate our simulations and refine model assumptions. This step is essential for practical applications in industrial and medical diagnostics. Additionally, we will explore incorporating more complex fluid dynamic models and advanced neural network architectures to handle a wider range of fluids and flow conditions, expanding the applicability of our methodology to various industrial uses.

SECTION: ACKNOWLEDGMENTS

This work has been supported by the Research Projects IA-GESBLOOM-CM (Y2020/TCS-6420) funded by the Synergic program of the Comunidad Autónoma de Madrid (CAM), SMART-BLOOMS (TED2021-130123B-I00) by MCIN/AEI/10.13039/501100011033 and the European Union by NextGenerationEU/PRTR, and the MSCA-ITN-H2020 Project LasIonDef (GA n.956387).

SECTION: References

SECTION: AUTHOR BIOGRAPHIES

JUAN SANDUBETE-LÓPEZis an industrial PhD candidate by Universidad Complutense de Madrid, and at Microfluidic Innovation Center, Paris. He holds a masters degree in Systems and Control Engineering from the same university. His research interests include autonomous systems, instrumentation, deep learning, and simulation. His email address is .

JOSé L. RISCO-MARTíNreceived his Ph.D. from UCM, where he currently is Full Professor in the Department of Computer Architecture and Automation. His research interests include systems modeling, simulation, and optimization. His email address is .

ALEXANDER MCMILLANis an R&D project leader at the Microfluidics Innovation Center, where he oversees a team that develops new microfluidic tools through academia-industry collaborations. He earned his PhD from KU Leuven School of Bioscience Engineering, focusing on new polymers for microfluidic devices and their applications in flow chemistry and cell culture. His email address is .

EVA BESADA-PORTASis an Associate Professor of Systems Engineering and Automation at UCM. She also holds a PhD in Computer Systems from UCM. Her research interests include uncertainty modeling and simulation, optimal control and planning of unmanned vehicles. Her email address is .